.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.3
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PDF::API2::Basic::TTF::OS_2 3"
.TH PDF::API2::Basic::TTF::OS_2 3 "2014-04-08" "perl v5.8.7" "User Contributed Perl Documentation"
.SH "NAME"
PDF::API2::Basic::TTF::OS_2 \- the OS/2 table in a TTF font
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \s-1OS/2\s0 table has two versions and forms, one an extension of the other. This
module supports both forms and the switching between them.
.SH "INSTANCE VARIABLES"
.IX Header "INSTANCE VARIABLES"
No other variables than those in table and those in the standard:
.PP
.Vb 46
\&    Version
\&    xAvgCharWidth
\&    usWeightClass
\&    usWidthClass
\&    fsType
\&    ySubscriptXSize
\&    ySubScriptYSize
\&    ySubscriptXOffset
\&    ySubscriptYOffset
\&    ySuperscriptXSize
\&    ySuperscriptYSize
\&    ySuperscriptXOffset
\&    ySuperscriptYOffset
\&    yStrikeoutSize
\&    yStrikeoutPosition
\&    sFamilyClass
\&    bFamilyType
\&    bSerifStyle
\&    bWeight
\&    bProportion
\&    bContrast
\&    bStrokeVariation
\&    bArmStyle
\&    bLetterform
\&    bMidline
\&    bXheight
\&    ulUnicodeRange1
\&    ulUnicodeRange2
\&    ulUnicodeRange3
\&    ulUnicodeRange4
\&    achVendID
\&    fsSelection
\&    usFirstCharIndex
\&    usLastCharIndex
\&    sTypoAscender
\&    sTypoDescender
\&    sTypoLineGap
\&    usWinAscent
\&    usWinDescent
\&    ulCodePageRange1
\&    ulCodePageRange2
\&    xHeight
\&    CapHeight
\&    defaultChar
\&    breakChar
\&    maxLookups
.Ve
.PP
Notice that versions 0, 1 & 2 of the table are supported. Notice also that the
Panose variable has been broken down into its elements.
.SH "METHODS"
.IX Header "METHODS"
.Sh "$t\->read"
.IX Subsection "$t->read"
Reads in the various values from disk (see details of \s-1OS/2\s0 table)
.Sh "$t\->out($fh)"
.IX Subsection "$t->out($fh)"
Writes the table to a file either from memory or by copying.
.ie n .Sh "$t\->XML_element($context, $depth\fP, \f(CW$key\fP, \f(CW$value)"
.el .Sh "$t\->XML_element($context, \f(CW$depth\fP, \f(CW$key\fP, \f(CW$value\fP)"
.IX Subsection "$t->XML_element($context, $depth, $key, $value)"
Tidies up the hex values to output them in hex
.ie n .Sh "$t\->XML_end($context, $tag\fP, \f(CW%attrs)"
.el .Sh "$t\->XML_end($context, \f(CW$tag\fP, \f(CW%attrs\fP)"
.IX Subsection "$t->XML_end($context, $tag, %attrs)"
Now handle them on the way back in
.Sh "$t\->update"
.IX Subsection "$t->update"
Updates the \s-1OS/2\s0 table by getting information from other sources:
.PP
Updates the \f(CW\*(C`firstChar\*(C'\fR and \f(CW\*(C`lastChar\*(C'\fR values based on the \s-1MS\s0 table in the
cmap.
.PP
Updates the sTypoAscender, sTypoDescender & sTypoLineGap to be the same values
as Ascender, Descender and Linegap from the hhea table (assuming it is dirty)
and also sets usWinAscent to be the sum of Ascender+Linegap and usWinDescent to
be the negative of Descender.
.SH "BUGS"
.IX Header "BUGS"
None known
.SH "AUTHOR"
.IX Header "AUTHOR"
Martin Hosken Martin_Hosken@sil.org. See PDF::API2::Basic::TTF::Font for copyright and
licensing.
