.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.3
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PDF::API2::Resource::Font::CoreFont 3"
.TH PDF::API2::Resource::Font::CoreFont 3 "2014-04-08" "perl v5.8.7" "User Contributed Perl Documentation"
.SH "NAME"
PDF::API2::Resource::Font::CoreFont \- Module for using the 14 PDF built\-in Fonts.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 6
\&    #
\&    use PDF::API2;
\&    #
\&    $pdf = PDF::API2->new;
\&    $cft = $pdf->corefont('Times-Roman');
\&    #
.Ve
.SH "METHODS"
.IX Header "METHODS"
.ie n .IP "$font = PDF::API2::Resource::Font::CoreFont\->new $pdf\fR, \f(CW$fontname\fR, \f(CW%options" 4
.el .IP "$font = PDF::API2::Resource::Font::CoreFont\->new \f(CW$pdf\fR, \f(CW$fontname\fR, \f(CW%options\fR" 4
.IX Item "$font = PDF::API2::Resource::Font::CoreFont->new $pdf, $fontname, %options"
Returns a corefont object.
.Sp
Valid \f(CW%options\fR are:
.Sp
\&\fI\-encode\fR
\&... changes the encoding of the font from its default.
See \fIperl's Encode\fR for the supported values.
.Sp
\&\fI\-pdfname\fR ... changes the reference-name of the font from its default.
The reference-name is normally generated automatically and can be
retrived via \f(CW$pdfname\fR=$font\->name.
.ie n .IP "$font = PDF::API2::Resource::Font::CoreFont\->new_api $api\fR, \f(CW$fontname\fR, \f(CW%options" 4
.el .IP "$font = PDF::API2::Resource::Font::CoreFont\->new_api \f(CW$api\fR, \f(CW$fontname\fR, \f(CW%options\fR" 4
.IX Item "$font = PDF::API2::Resource::Font::CoreFont->new_api $api, $fontname, %options"
Returns a corefont object. This method is different from 'new' that
it needs an PDF::API2\-object rather than a PDF::API2::PDF::File\-object.
.IP "PDF::API2::Resource::Font::CoreFont\->\fIloadallfonts()\fR" 4
.IX Item "PDF::API2::Resource::Font::CoreFont->loadallfonts()"
\&\*(L"Requires in\*(R" all fonts available as corefonts.
.SH "SUPPORTED FONTS"
.IX Header "SUPPORTED FONTS"
.RE
.IP "PDF::API::CoreFont supports the following 'Adobe Core Fonts':"
.IX Item "PDF::API::CoreFont supports the following 'Adobe Core Fonts':"
.Vb 14
\&  Courier
\&  Courier-Bold
\&  Courier-BoldOblique
\&  Courier-Oblique
\&  Helvetica
\&  Helvetica-Bold
\&  Helvetica-BoldOblique
\&  Helvetica-Oblique
\&  Symbol
\&  Times-Bold
\&  Times-BoldItalic
\&  Times-Italic
\&  Times-Roman
\&  ZapfDingbats
.Ve
.RE
.IP "PDF::API::CoreFont supports the following 'Windows Fonts':"
.IX Item "PDF::API::CoreFont supports the following 'Windows Fonts':"
.Vb 10
\&  Georgia
\&  Georgia,Bold
\&  Georgia,BoldItalic
\&  Georgia,Italic
\&  Verdana
\&  Verdana,Bold
\&  Verdana,BoldItalic
\&  Verdana,Italic
\&  Webdings
\&  Wingdings
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
alfred reibenschuh
.SH "HISTORY"
.IX Header "HISTORY"
.Vb 3
\&    $Log: CoreFont.pm,v $
\&    Revision 1.10  2005/03/14 22:01:27  fredo
\&    upd 2005
.Ve
.PP
.Vb 2
\&    Revision 1.9  2005/01/21 10:04:15  fredo
\&    rewrite fontproxy comment
.Ve
.PP
.Vb 2
\&    Revision 1.8  2004/12/16 00:30:54  fredo
\&    added no warn for recursion
.Ve
.PP
.Vb 2
\&    Revision 1.7  2004/11/22 02:08:42  fredo
\&    aaa
.Ve
.PP
.Vb 2
\&    Revision 1.6  2004/06/21 22:25:44  fredo
\&    added custom corefont handling
.Ve
.PP
.Vb 2
\&    Revision 1.5  2004/06/15 09:14:53  fredo
\&    removed cr+lf
.Ve
.PP
.Vb 2
\&    Revision 1.4  2004/06/07 19:44:43  fredo
\&    cleaned out cr+lf for lf
.Ve
.PP
.Vb 2
\&    Revision 1.3  2003/12/08 13:06:01  Administrator
\&    corrected to proper licencing statement
.Ve
.PP
.Vb 2
\&    Revision 1.2  2003/11/30 17:32:48  Administrator
\&    merged into default
.Ve
.PP
.Vb 2
\&    Revision 1.1.1.1.2.2  2003/11/30 16:57:05  Administrator
\&    merged into default
.Ve
.PP
.Vb 2
\&    Revision 1.1.1.1.2.1  2003/11/30 14:45:22  Administrator
\&    added CVS id/log
.Ve
