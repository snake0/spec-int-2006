
#           Document Title:  example-simple.cfg
#                  Subject:  SPEC CPU2006 Simple Example Config file
#              Last Update:  12 Jul 2006 dls/jh/cds

# -------------------------------------------------------------

# This is an example of a very simple CPU2006 config file.
# IMPORTANT: This is an example configuration file for illustration
# purposes.   It is not suitable for use in an actual submission: the
# computer allegedly measured is a work of fiction, and the tuning is
# far from optimal.

# It is intended to cover the features sufficiently to show you how you
# could do a CPU2006 baseline run.  Please see 
#   http://www.spec.org/cpu2006/Docs/config.html 
# (also available in the Docs directory of your SPEC tree) for details
# on config file setup.

# You'll also find some examples in the config directory.

# And, best of all, you'll find complete, working config files with
# published results at www.spec.org/cpu2006

# As you've probably noticed by now, comments to the config file are
# found in lines that begin with the "#" character.

# The first step in creating a configuration file is to document your
# configuration.  The example below contains illustrations of some of 
# the fields that are needed for documenting your measurements.  
# config.html has a list of all of the fields required for a full 
# publication ofresults.

#####################################################################
# System Under Test (SUT) Section

# If it affects performance, you need to describe it, either in the
# pre-defined fields or by adding it to the notes section.  Replace the
# setting below with the ones that match your machine.

#######################################################################

# System Description
hw_model           = TurboBlaster Server 9000
hw_memory          = 512 GB
hw_disk            = 1 180GB Brand X SCSI disk 10K rpm
hw_vendor          = TurboBlaster Incorporated
hw_other           = None

# CPU description
# See http://www.spec.org/cpu2006/Docs/runrules.html#cpucount
# for a discussion of these fields

hw_cpu_name        = TurboBlaster Chip Model 2
hw_cpu_mhz         = 9999
hw_nchips          = 9999
hw_ncores          = 9999
hw_ncoresperchip   = 9999
hw_nthreadspercore = 9999
hw_ncpuorder       = 1 to 9999 chips

# Cache description

hw_pcache          = 9999 MB I + 9999 MB D on chip per chip
hw_scache          = 9999 MB I+D on chip per chip
hw_tcache          = 9999 MB I+D off chip per chip
hw_ocache          = None

# Tester description 

test_date       = Dec-9999
license_num     = 9999

# Operating system, file system

sw_os           = Computer System Unix Version YYY
sw_file         = TurboLogging File System
sw_state        = Multi-user
sw_other        = None

#######################################################################
# End of SUT section
# If this config file were to be applied to several SUTs, edits would
# be needed only ABOVE this point.
######################################################################


######################################################################
# The header section of the config file.  Must appear
# before any instances of "section markers" (see below)
#
# ext = how the binaries you generated will be identified
# tune = specify "base" or "peak" or "all"

ext           = compsys
tune          = base
output_format = text

######################################################################
# Compiler selection, versions, and dates.
# C and C++ are used in both CINT2006 and CFP2006, so their information 
# appears under
#         default=default=default=default:
# whereas Fortran is used only for floating point and is described 
# only under
#         fp=default=default=default:
#
# sw_compiler<xx> = additional information describing the compiler
# CC              = how the C Compiler is invoked
# CXX             = how the C++ compile ris invoked
# FC              = how the FORTRAN compiler is invoked

# Here is our first section marker.  It says that the following applies
# to all compiles:
default=default=default=default:
CC           = pathcc
CXX          = pathCC
sw_compiler  = PathScale C version x.y
sw_compiler2 = PathScale C++ version y.z

hw_avail     = Dec-9999
sw_avail     = Dec-9999

# And here is the second section marker; it says to apply the next part
# only to floating point runs:
fp=default=default=default:
sw_compiler3 = PathScale F95 version z.x
FC           = pathf95

#######################################################################
# Integer Baseline Optimization

int=base=default=default:

# Note that SPEC baseline rules require that all uses of a given compiler 
# use the same flags in the same order. See the SPEC CPU2006 Run Rules
# for more details 
#      http://www.spec.org/cpu2006/Docs/runrules.html
#
# OPTIMIZE    = flags applicable to all compilers
# COPTIMIZE   = flags appliable to the C compiler
# CXXOPTIMIZE = flags appliable to the C++ compiler
# 
# See your compiler manual for information on the flags available
# for your compiler

OPTIMIZE     = -O3
COPTIMIZE    = -OPT:Ofast
CXXOPTIMIZE  = -O2

# These are informational items, but as they are most likely affected by
# the options above, they are presented here for ease of adjustment.

sw_auto_parallel = No
sw_base_ptrsize = 32-bit
sw_peak_ptrsize = Not Applicable

#######################################################################
# Integer Portability

# Here we have the portability flags that are needed to get some of the
# programs to compile. While SPEC has made efforts to reduce the need
# for these types of flags, some platform differences do require such
# flags.

# Note that we apply the "data model" flag to all benchmarks, using
# PORTABILITY; if additional flags are needed by individual benchmarks, we
# add those using <lang>PORTABILITY 

default=default=default=default:
PORTABILITY = -DSPEC_CPU_LP64

400.perlbench=default=default=default:
CPORTABILITY = -DSPEC_CPU_LINUX_X64 

462.libquantum=default=default=default:
CPORTABILITY = -DSPEC_CPU_LINUX

483.xalancbmk=default=default=default:
CXXPORTABILITY = -DSPEC_CPU_LINUX

#######################################################################
# Floating point Baseline Optimization

fp=base=default=default:
 
OPTIMIZE     = -O3
COPTIMIZE    = -OPT:Ofast
CXXOPTIMIZE  = -OPT:Ofast
FOPTIMIZE    = -OPT:Ofast

# These are informational items, but as they are most likely affected by
# the options above, they are presented here for ease of adjustment.

sw_auto_parallel = No
sw_base_ptrsize  = 32-bit
sw_peak_ptrsize  = Not Applicable

#######################################################################
# Floating point Portability

fp=default=default=default:
PORTABILITY = -DSPEC_CPU_LP64

436.cactusADM=default=default=default:
FPORTABILITY = -fno-second-underscore 

447.dealII=default=default=default:
CXXPORTABILITY = -DSPEC_CPU_TABLE_WORKAROUND

481.wrf=default=default=default:
FPORTABILITY= -fno-second-underscore
CPORTABILITY= -DSPEC_CPU_LINUX

#############################################################################
# Copyright (C) 1999-2006 Standard Performance Evaluation Corporation
# All Rights Reserved
#############################################################################
