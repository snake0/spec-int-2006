	.file	"cp-decl.i"
.globl language_string
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC0:
	.string	"GNU C++"
	.data
	.align 8
	.type	language_string,@object
	.size	language_string,8
language_string:
	.quad	.LC0
.globl no_print_functions
	.align 4
	.type	no_print_functions,@object
	.size	no_print_functions,4
no_print_functions:
	.long	0
.globl no_print_builtins
	.align 4
	.type	no_print_builtins,@object
	.size	no_print_builtins,4
no_print_builtins:
	.long	0
	.align 4
	.type	anon_cnt,@object
	.size	anon_cnt,4
anon_cnt:
	.long	0
	.section	.rodata.str1.1
.LC26:
	.string	"redeclaration of `%s'"
.LC23:
	.string	"redefinition of `%s'"
	.section	.rodata.str1.32,"aMS",@progbits,1
	.align 32
.LC25:
	.string	"conflicting declarations of `%s'"
	.section	.rodata.str1.1
.LC24:
	.string	"`%s' not declared in class"
	.text
	.align 2
	.p2align 4,,15
	.type	redeclaration_error_message,@function
redeclaration_error_message:
.LFB1:
	movzbl	16(%rdi), %eax
	cmpb	$32, %al
	je	.L169
	cmpb	$29, %al
	je	.L170
	movq	global_binding_level(%rip), %r8
	cmpq	%r8, current_binding_level(%rip)
	je	.L171
	testb	$1, 53(%rdi)
	je	.L166
	testb	$1, 53(%rsi)
	jne	.L165
.L166:
	movl	$.LC26, %ecx
.L147:
	movq	%rcx, %rax
	ret
	.p2align 6,,7
.L165:
	xorl	%ecx, %ecx
	jmp	.L147
	.p2align 6,,7
.L171:
	testb	$1, 53(%rdi)
	jne	.L165
	testb	$1, 53(%rsi)
	jne	.L165
	cmpq	$0, 88(%rsi)
	je	.L162
	cmpq	$0, 88(%rdi)
	je	.L162
	movl	$.LC23, %ecx
	jmp	.L147
.L162:
	movzbl	18(%rsi), %r9d
	xorl	%ecx, %ecx
	movl	$.LC25, %eax
	movzbl	18(%rdi), %esi
	shrb	$3, %r9b
	shrb	$3, %sil
	andl	$1, %r9d
	andl	$1, %esi
	cmpl	%esi, %r9d
	.p2align 4,,7
.L167:
	cmovne	%rax, %rcx
	jmp	.L147
	.p2align 6,,7
.L170:
	movq	152(%rsi), %rax
	testq	%rax, %rax
	je	.L153
	testb	$1, 2(%rax)
	jne	.L165
.L153:
	cmpq	$0, 88(%rsi)
	je	.L165
	cmpq	$0, 88(%rdi)
	je	.L165
	movzbl	53(%rsi), %edx
	andb	$9, %dl
	cmpb	$9, %dl
	je	.L172
.L155:
	movl	$.LC24, %ecx
	cmpq	$0, 56(%rsi)
	.p2align 4,,7
.L168:
	movl	$.LC23, %eax
	jmp	.L167
.L172:
	movzbl	53(%rdi), %ecx
	andb	$9, %cl
	cmpb	$9, %cl
	jne	.L165
	jmp	.L155
	.p2align 6,,7
.L169:
	xorl	%ecx, %ecx
	movq	8(%rdi), %rdx
	cmpq	%rdx, 8(%rsi)
	jmp	.L168
.LFE1:
.Lfe1:
	.size	redeclaration_error_message,.Lfe1-redeclaration_error_message
	.section	.rodata.str1.1
.LC27:
	.string	"C++"
.LC28:
	.string	"C"
.LC29:
	.string	"this"
.LC30:
	.string	"__in$chrg"
.LC45:
	.string	"char"
.LC46:
	.string	"long int"
.LC47:
	.string	"unsigned int"
.LC48:
	.string	"long unsigned int"
.LC49:
	.string	"unsigned long"
.LC50:
	.string	"short int"
.LC51:
	.string	"long long int"
.LC52:
	.string	"short unsigned int"
.LC53:
	.string	"unsigned short"
.LC54:
	.string	"long long unsigned int"
.LC55:
	.string	"long long unsigned"
.LC56:
	.string	"signed char"
.LC57:
	.string	"unsigned char"
.LC58:
	.string	"long double"
.LC59:
	.string	"__builtin_constant_p"
.LC61:
	.string	"alloca"
.LC60:
	.string	"__builtin_alloca"
.LC62:
	.string	"__builtin_abs"
.LC63:
	.string	"__builtin_fabs"
.LC64:
	.string	"__builtin_labs"
.LC65:
	.string	"__builtin_ffs"
.LC66:
	.string	"__builtin_fsqrt"
.LC67:
	.string	"__builtin_sin"
.LC68:
	.string	"__builtin_cos"
.LC69:
	.string	"__builtin_saveregs"
.LC70:
	.string	"__builtin_classify_type"
.LC71:
	.string	"__builtin_next_arg"
.LC73:
	.string	"memcpy"
.LC72:
	.string	"__builtin_memcpy"
.LC75:
	.string	"memcmp"
.LC74:
	.string	"__builtin_memcmp"
.LC77:
	.string	"strcmp"
.LC76:
	.string	"__builtin_strcmp"
.LC79:
	.string	"strcpy"
.LC78:
	.string	"__builtin_strcpy"
.LC81:
	.string	"strlen"
.LC80:
	.string	"__builtin_strlen"
.LC82:
	.string	"unknown type"
.LC83:
	.string	"__wchar_t"
.LC88:
	.string	"$vtbl_ptr_type"
.LC85:
	.string	"delta"
.LC86:
	.string	"index"
.LC87:
	.string	"pfn"
.LC89:
	.string	"delta2"
.LC113:
	.string	"abort"
.LC114:
	.string	"__unhandled_exception"
.LC90:
	.string	"name"
.LC91:
	.string	"size"
.LC92:
	.string	"bits"
.LC93:
	.string	"points_to"
.LC94:
	.string	"ivars_count"
.LC95:
	.string	"meths_count"
.LC96:
	.string	"ivars"
.LC97:
	.string	"meths"
.LC98:
	.string	"parents"
.LC99:
	.string	"vbases"
.LC100:
	.string	"offsets"
.LC101:
	.string	"__t_desc"
.LC102:
	.string	"offset"
.LC103:
	.string	"type"
.LC104:
	.string	"__i_desc"
.LC105:
	.string	"vindex"
.LC106:
	.string	"vcontext"
.LC107:
	.string	"return_type"
.LC108:
	.string	"address"
.LC109:
	.string	"parm_count"
.LC110:
	.string	"required_parms"
.LC111:
	.string	"parm_types"
.LC112:
	.string	"__m_desc"
	.section	.rodata.str1.32
	.align 32
.LC41:
	.string	"declaration of `%s' shadows a member of `this'"
	.section	.rodata.str1.1
.LC35:
	.string	"%s::%s"
	.section	.rodata.str1.32
	.align 32
.LC44:
	.string	"too many incomplete variables at this point"
	.align 32
.LC42:
	.string	"declaration of `%s' shadows previous local"
	.align 32
.LC43:
	.string	"declaration of `%s' shadows global declaration"
	.align 32
.LC40:
	.string	"declaration of `%s' shadows a parameter"
	.align 32
.LC39:
	.string	"extern declaration of `%s' doesn't match global one"
	.align 32
.LC38:
	.string	"`%s' was previously implicitly declared to return `int'"
	.align 32
.LC34:
	.string	"`%s' was declared `extern' and later `static'"
	.align 32
.LC33:
	.string	"`%s' was declared implicitly `extern' and later `static'"
	.align 32
.LC36:
	.string	"type mismatch with previous external decl"
	.align 32
.LC37:
	.string	"previous external decl of `%s'"
	.section	.rodata.str1.1
.LC6:
	.string	"previous declaration of `%s'"
	.section	.rodata.str1.32
	.align 32
.LC32:
	.string	"parse errors have confused me too much"
	.align 32
.LC31:
	.string	"`%s' used prior to declaration"
	.section	.rodata.str1.1
.LC84:
	.string	"__gc_main"
	.text
	.align 2
	.p2align 4,,15
.globl init_decl_processing
	.type	init_decl_processing,@function
init_decl_processing:
.LFB2:
	pushq	%rbp
.LCFI0:
	movl	$.LC27, %edi
	xorl	%eax, %eax
	movq	%rsp, %rbp
.LCFI1:
	pushq	%r15
.LCFI2:
	pushq	%r14
.LCFI3:
	pushq	%r13
.LCFI4:
	pushq	%r12
.LCFI5:
	pushq	%rbx
.LCFI6:
	subq	$2776, %rsp
.LCFI7:
	call	get_identifier
	movl	$.LC28, %edi
	movq	%rax, lang_name_cplusplus(%rip)
	xorl	%eax, %eax
	call	get_identifier
	movl	$sigsegv, %esi
	movl	$11, %edi
	movq	%rax, lang_name_c(%rip)
	movq	%rax, current_lang_name(%rip)
	movq	$0, current_function_decl(%rip)
	xorl	%eax, %eax
	movq	$0, named_labels(%rip)
	movq	$0, named_label_uses(%rip)
	movq	$0, current_binding_level(%rip)
	movq	$0, free_binding_level(%rip)
	call	signal
	xorl	%eax, %eax
	movl	$decl_obstack, %edi
	call	gcc_obstack_init
	movl	flag_dossier(%rip), %eax
	testl	%eax, %eax
	jne	.L11251
.L174:
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	make_node
	movq	%rax, error_mark_node(%rip)
	orb	$4, 17(%rax)
	xorl	%eax, %eax
	movq	error_mark_node(%rip), %rsi
	movq	%rsi, 8(%rsi)
	movq	%rsi, %rdi
	call	build_tree_list
	movq	global_binding_level(%rip), %rdx
	movq	error_mark_node(%rip), %rcx
	cmpq	%rdx, current_binding_level(%rip)
	movq	%rax, error_mark_list(%rip)
	movq	%rcx, 8(%rax)
	je	.L11252
.L175:
	movq	free_binding_level(%rip), %rdi
	testq	%rdi, %rdi
	je	.L176
	movq	56(%rdi), %rbx
	movq	%rbx, free_binding_level(%rip)
.L177:
	movq	clear_binding_level(%rip), %rdx
	movq	class_binding_level(%rip), %rax
	movl	keep_next_level_flag(%rip), %ecx
	movq	%rdx, (%rdi)
	testq	%rax, %rax
	movq	clear_binding_level+8(%rip), %r15
	movq	%r15, 8(%rdi)
	movq	clear_binding_level+16(%rip), %r13
	movq	%r13, 16(%rdi)
	movq	clear_binding_level+24(%rip), %r12
	movq	%r12, 24(%rdi)
	movq	clear_binding_level+32(%rip), %r11
	movq	%r11, 32(%rdi)
	movq	clear_binding_level+40(%rip), %r10
	movq	%r10, 40(%rdi)
	movq	clear_binding_level+48(%rip), %r9
	movq	%r9, 48(%rdi)
	movq	clear_binding_level+56(%rip), %r8
	movq	%r8, 56(%rdi)
	movq	clear_binding_level+64(%rip), %rsi
	movq	%rsi, 64(%rdi)
	je	.L178
	movq	%rax, 56(%rdi)
	movq	$0, class_binding_level(%rip)
.L179:
.L438:
.L453:
	movzbl	66(%rdi), %esi
	movl	%ecx, %r8d
	movq	%rdi, current_binding_level(%rip)
	andb	$7, %r8b
	orb	$5, 67(%rdi)
	xorl	%eax, %eax
	salb	$4, %r8b
	andb	$15, %sil
	orb	%r8b, %sil
	movb	%sil, 66(%rdi)
	call	GNU_xref_start_scope
	movq	current_binding_level(%rip), %rdi
	xorl	%eax, %eax
	movl	$0, keep_next_level_flag(%rip)
	movq	%rdi, global_binding_level(%rip)
	movl	$.LC29, %edi
	call	get_identifier
	movl	$.LC30, %edi
	movq	%rax, this_identifier(%rip)
	xorl	%eax, %eax
	call	get_identifier
	movl	$32, %edi
	movq	%rax, in_charge_identifier(%rip)
	xorl	%eax, %eax
	call	make_signed_type
	movq	ridpointers+8(%rip), %r12
	movq	%rax, %r13
	movq	%rax, integer_type_node(%rip)
	testq	%r12, %r12
	je	.L466
	xorl	%eax, %eax
	testq	%rax, %rax
	je	.L467
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L468
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
.L10924:
	call	tree_cons
	movq	%rax, 32(%rbx)
.L469:
	movq	$0, 8(%r12)
	movq	%r14, 40(%r12)
.L466:
	movl	flag_dossier(%rip), %r14d
	testl	%r14d, %r14d
	je	.L481
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %r9d
	cmpl	%ecx, %r9d
	jge	.L11253
.L478:
	movslq	%edx,%rcx
	incl	%edx
	salq	$3, %rcx
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%r13, (%rcx)
	movzbl	16(%r13), %eax
	cmpb	$13, %al
	je	.L479
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %ebx
	movslq	%ebx,%rdi
	leal	1(%rbx), %r15d
	salq	$3, %rdi
	movl	%r15d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rdi
	movq	%rax, (%rdi)
	xorl	%eax, %eax
	movq	56(%r13), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r11d
	movslq	%r11d,%r12
	leal	1(%r11), %r10d
	salq	$3, %r12
	movl	%r10d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r12
	movq	%rax, (%r12)
	movzbl	16(%r13), %eax
.L479:
	cmpb	$6, %al
	je	.L481
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r9d
	movslq	%r9d,%rcx
	leal	1(%r9), %r14d
	salq	$3, %rcx
	movl	%r14d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rax, (%rcx)
	xorl	%eax, %eax
	movq	64(%r13), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %esi
	movslq	%esi,%r8
	leal	1(%rsi), %r13d
	salq	$3, %r8
	movl	%r13d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r8
	movq	%rax, (%r8)
.L481:
	movl	flag_signed_char(%rip), %edx
	testl	%edx, %edx
	je	.L482
	movl	$8, %edi
	xorl	%eax, %eax
	call	make_signed_type
.L483:
	movl	$.LC45, %r10d
	movq	%rax, char_type_node(%rip)
	movq	%rax, -216(%rbp)
	testq	%r10, %r10
	movq	$0, -1664(%rbp)
	movq	ridpointers+16(%rip), %r15
	je	.L485
	movl	$.LC45, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	%rax, -1664(%rbp)
.L485:
	cmpq	$0, -1664(%rbp)
	jne	.L11254
.L486:
	testq	%r15, %r15
	je	.L768
	cmpq	$0, -1664(%rbp)
	je	.L769
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11255
.L10936:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L771:
	movq	$0, 8(%r15)
	movq	-1704(%rbp), %r11
	movq	%r11, 40(%r15)
.L768:
	movl	flag_dossier(%rip), %eax
	testl	%eax, %eax
	je	.L783
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %r15d
	cmpl	%ecx, %r15d
	jge	.L11256
.L780:
	movslq	%edx,%rcx
	movq	-216(%rbp), %rsi
	incl	%edx
	salq	$3, %rcx
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rsi, (%rcx)
	movzbl	16(%rsi), %eax
	cmpb	$13, %al
	je	.L781
	movq	%rsi, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %edi
	movq	-216(%rbp), %r14
	movslq	%edi,%r13
	leal	1(%rdi), %ebx
	salq	$3, %r13
	movl	%ebx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r13
	movq	%rax, (%r13)
	xorl	%eax, %eax
	movq	56(%r14), %rdi
	call	build_type_variant
	movq	-216(%rbp), %rsi
	movl	builtin_type_tdescs_len(%rip), %r8d
	movslq	%r8d,%r9
	salq	$3, %r9
	addq	builtin_type_tdescs_arr(%rip), %r9
	movq	%rax, (%r9)
	leal	1(%r8), %eax
	movl	%eax, builtin_type_tdescs_len(%rip)
	movzbl	16(%rsi), %eax
.L781:
	cmpb	$6, %al
	je	.L783
	movq	-216(%rbp), %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movq	-216(%rbp), %r15
	movl	builtin_type_tdescs_len(%rip), %r8d
	movslq	%r8d,%rcx
	leal	1(%r8), %esi
	salq	$3, %rcx
	movl	%esi, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movl	$1, %esi
	movq	%rax, (%rcx)
	xorl	%eax, %eax
	movq	64(%r15), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r12d
	movslq	%r12d,%r11
	leal	1(%r12), %r10d
	salq	$3, %r11
	movl	%r10d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r11
	movq	%rax, (%r11)
.L783:
	xorl	%eax, %eax
	movl	$64, %edi
	call	make_signed_type
	movl	$.LC46, %edx
	movq	$0, -1720(%rbp)
	movq	%rax, %r14
	movq	%rax, long_integer_type_node(%rip)
	testq	%rdx, %rdx
	movq	ridpointers+112(%rip), %rax
	movq	%rax, -1712(%rbp)
	je	.L785
	movl	$.LC46, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	%rax, -1720(%rbp)
.L785:
	cmpq	$0, -1720(%rbp)
	jne	.L11257
.L786:
	cmpq	$0, -1712(%rbp)
	je	.L1068
	cmpq	$0, -1720(%rbp)
	je	.L1069
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L1070
	movq	-1712(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
.L10948:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1071:
	movq	-1712(%rbp), %rdx
	movq	$0, 8(%rdx)
	movq	-1760(%rbp), %rsi
	movq	%rsi, 40(%rdx)
.L1068:
	movl	flag_dossier(%rip), %r15d
	testl	%r15d, %r15d
	je	.L1083
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %r9d
	cmpl	%ecx, %r9d
	jge	.L11258
.L1080:
	movslq	%edx,%r13
	incl	%edx
	salq	$3, %r13
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r13
	movq	%r14, (%r13)
	movzbl	16(%r14), %eax
	cmpb	$13, %al
	je	.L1081
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	builtin_type_tdescs_len(%rip), %esi
	movslq	%esi,%r8
	salq	$3, %r8
	addq	builtin_type_tdescs_arr(%rip), %r8
	movq	%rax, (%r8)
	movq	56(%r14), %rdi
	leal	1(%rsi), %eax
	movl	%eax, builtin_type_tdescs_len(%rip)
	movl	$1, %esi
	xorl	%eax, %eax
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r12d
	movslq	%r12d,%rcx
	leal	1(%r12), %r10d
	salq	$3, %rcx
	movl	%r10d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rax, (%rcx)
	movzbl	16(%r14), %eax
.L1081:
	cmpb	$6, %al
	je	.L1083
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r9d
	movslq	%r9d,%rdi
	leal	1(%r9), %r15d
	salq	$3, %rdi
	movl	%r15d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rdi
	movq	%rax, (%rdi)
	xorl	%eax, %eax
	movq	64(%r14), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r11d
	movslq	%r11d,%rbx
	leal	1(%r11), %r14d
	salq	$3, %rbx
	movl	%r14d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rbx
	movq	%rax, (%rbx)
.L1083:
	xorl	%eax, %eax
	movl	$32, %edi
	call	make_unsigned_type
	movl	$.LC47, %edx
	movq	ridpointers+96(%rip), %r13
	testq	%rdx, %rdx
	movq	%rax, %r14
	movq	%rax, unsigned_type_node(%rip)
	movq	$0, -1776(%rbp)
	movq	%r13, -1768(%rbp)
	je	.L1085
	movl	$.LC47, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	%rax, -1776(%rbp)
.L1085:
	cmpq	$0, -1776(%rbp)
	jne	.L11259
.L1086:
	cmpq	$0, -1768(%rbp)
	je	.L1368
	cmpq	$0, -1776(%rbp)
	je	.L1369
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L1370
	movq	-1768(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
.L10960:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1371:
	movq	-1768(%rbp), %rdi
	movq	$0, 8(%rdi)
	movq	-1816(%rbp), %rsi
	movq	%rsi, 40(%rdi)
.L1368:
	movl	flag_dossier(%rip), %eax
	testl	%eax, %eax
	je	.L1383
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %r15d
	cmpl	%ecx, %r15d
	jge	.L11260
.L1380:
	movslq	%edx,%r10
	incl	%edx
	salq	$3, %r10
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r10
	movq	%r14, (%r10)
	movzbl	16(%r14), %eax
	cmpb	$13, %al
	je	.L1381
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	builtin_type_tdescs_len(%rip), %edi
	movslq	%edi,%rsi
	leal	1(%rdi), %r11d
	salq	$3, %rsi
	movl	%r11d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rsi
	movq	%rax, (%rsi)
	xorl	%eax, %eax
	movl	$1, %esi
	movq	56(%r14), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r12d
	movslq	%r12d,%rcx
	leal	1(%r12), %r13d
	salq	$3, %rcx
	movl	%r13d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rax, (%rcx)
	movzbl	16(%r14), %eax
.L1381:
	cmpb	$6, %al
	je	.L1383
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r15d
	movslq	%r15d,%rbx
	salq	$3, %rbx
	addq	builtin_type_tdescs_arr(%rip), %rbx
	movq	%rax, (%rbx)
	movq	64(%r14), %rdi
	leal	1(%r15), %eax
	movl	%eax, builtin_type_tdescs_len(%rip)
	xorl	%eax, %eax
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r8d
	movslq	%r8d,%r9
	leal	1(%r8), %r14d
	salq	$3, %r9
	movl	%r14d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r9
	movq	%rax, (%r9)
.L1383:
	xorl	%eax, %eax
	movl	$64, %edi
	call	make_unsigned_type
	movl	$.LC48, %edx
	movq	$0, -1824(%rbp)
	testq	%rdx, %rdx
	movq	%rax, %r14
	movq	%rax, long_unsigned_type_node(%rip)
	je	.L1385
	movl	$.LC48, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	%rax, -1824(%rbp)
.L1385:
	cmpq	$0, -1824(%rbp)
	jne	.L11261
.L1386:
	xorl	%eax, %eax
	testq	%rax, %rax
	je	.L1668
	cmpq	$0, -1824(%rbp)
	je	.L1669
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L1670
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
.L10972:
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1671:
	movq	$0, 8
	movq	-1864(%rbp), %rdi
	movq	%rdi, 40
.L1668:
	movl	flag_dossier(%rip), %r11d
	testl	%r11d, %r11d
	je	.L1683
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %r9d
	cmpl	%ecx, %r9d
	jge	.L11262
.L1680:
	movslq	%edx,%rsi
	incl	%edx
	salq	$3, %rsi
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rsi
	movq	%r14, (%rsi)
	movzbl	16(%r14), %eax
	cmpb	$13, %al
	je	.L1681
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r10d
	movslq	%r10d,%r13
	leal	1(%r10), %ebx
	salq	$3, %r13
	movl	%ebx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r13
	movq	%rax, (%r13)
	xorl	%eax, %eax
	movq	56(%r14), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r15d
	movslq	%r15d,%rcx
	leal	1(%r15), %r8d
	salq	$3, %rcx
	movl	%r8d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rax, (%rcx)
	movzbl	16(%r14), %eax
.L1681:
	cmpb	$6, %al
	je	.L1683
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	builtin_type_tdescs_len(%rip), %r9d
	movslq	%r9d,%rsi
	leal	1(%r9), %r11d
	salq	$3, %rsi
	movl	%r11d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rsi
	movq	%rax, (%rsi)
	xorl	%eax, %eax
	movl	$1, %esi
	movq	64(%r14), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r12d
	movslq	%r12d,%rdi
	leal	1(%r12), %r14d
	salq	$3, %rdi
	movl	%r14d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rdi
	movq	%rax, (%rdi)
.L1683:
	movl	$.LC49, %edx
	movq	long_unsigned_type_node(%rip), %r15
	movq	$0, -1872(%rbp)
	testq	%rdx, %rdx
	je	.L1685
	movl	$.LC49, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	%rax, -1872(%rbp)
.L1685:
	cmpq	$0, -1872(%rbp)
	jne	.L11263
.L1686:
	xorl	%eax, %eax
	testq	%rax, %rax
	je	.L1968
	cmpq	$0, -1872(%rbp)
	je	.L1969
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L1970
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
.L10984:
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1971:
	movq	$0, 8
	movq	-1912(%rbp), %rcx
	movq	%rcx, 40
.L1968:
	movl	flag_dossier(%rip), %eax
	testl	%eax, %eax
	je	.L1983
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %ebx
	cmpl	%ecx, %ebx
	jge	.L11264
.L1980:
	movslq	%edx,%rsi
	incl	%edx
	salq	$3, %rsi
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rsi
	movq	%r15, (%rsi)
	movzbl	16(%r15), %eax
	cmpb	$13, %al
	je	.L1981
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r9d
	movslq	%r9d,%rdi
	leal	1(%r9), %r14d
	salq	$3, %rdi
	movl	%r14d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rdi
	movq	%rax, (%rdi)
	xorl	%eax, %eax
	movq	56(%r15), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r8d
	movslq	%r8d,%r11
	salq	$3, %r11
	addq	builtin_type_tdescs_arr(%rip), %r11
	movq	%rax, (%r11)
	leal	1(%r8), %eax
	movl	%eax, builtin_type_tdescs_len(%rip)
	movzbl	16(%r15), %eax
.L1981:
	cmpb	$6, %al
	je	.L1983
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %ebx
	movslq	%ebx,%rcx
	leal	1(%rbx), %r12d
	salq	$3, %rcx
	movl	%r12d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rax, (%rcx)
	xorl	%eax, %eax
	movq	64(%r15), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r13d
	movslq	%r13d,%r10
	leal	1(%r13), %r15d
	salq	$3, %r10
	movl	%r15d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r10
	movq	%rax, (%r10)
.L1983:
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	je	.L1984
	movq	long_integer_type_node(%rip), %rax
.L10986:
	movq	%rax, sizetype(%rip)
	movl	$.LC46, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	long_integer_type_node(%rip), %r14
	movq	long_unsigned_type_node(%rip), %rdi
	movq	40(%rax), %rsi
	movq	integer_type_node(%rip), %rcx
	xorl	%eax, %eax
	movq	sizetype(%rip), %r11
	movq	char_type_node(%rip), %r12
	movq	unsigned_type_node(%rip), %r13
	movq	8(%rsi), %rdx
	movq	32(%rcx), %rbx
	movq	%rdx, ptrdiff_type_node(%rip)
	movq	%r11, 8(%rbx)
	movq	32(%r12), %r10
	movq	%r11, 8(%r10)
	movq	32(%r13), %r15
	movq	%r11, 8(%r15)
	movq	32(%rdi), %r9
	movl	$16, %edi
	movq	%r11, 8(%r9)
	movq	32(%r14), %r8
	movq	%r11, 8(%r8)
	call	make_signed_type
	movl	$.LC50, %esi
	movq	$0, -1928(%rbp)
	movq	%rax, %r14
	movq	%rax, short_integer_type_node(%rip)
	testq	%rsi, %rsi
	movq	ridpointers+104(%rip), %rax
	movq	%rax, -1920(%rbp)
	je	.L1987
	movl	$.LC50, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	%rax, -1928(%rbp)
.L1987:
	cmpq	$0, -1928(%rbp)
	jne	.L11265
.L1988:
	cmpq	$0, -1920(%rbp)
	je	.L2270
	cmpq	$0, -1928(%rbp)
	je	.L2271
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L2272
	movq	-1920(%rbp), %r10
	movq	8(%r10), %rsi
	movq	%r10, %rdi
.L10997:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L2273:
	movq	-1920(%rbp), %rsi
	movq	$0, 8(%rsi)
	movq	-1968(%rbp), %rdx
	movq	%rdx, 40(%rsi)
.L2270:
	movl	flag_dossier(%rip), %r15d
	testl	%r15d, %r15d
	je	.L2285
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %ebx
	cmpl	%ecx, %ebx
	jge	.L11266
.L2282:
	movslq	%edx,%r13
	incl	%edx
	salq	$3, %r13
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r13
	movq	%r14, (%r13)
	movzbl	16(%r14), %eax
	cmpb	$13, %al
	je	.L2283
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	builtin_type_tdescs_len(%rip), %r8d
	movslq	%r8d,%rcx
	leal	1(%r8), %esi
	salq	$3, %rcx
	movl	%esi, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movl	$1, %esi
	movq	%rax, (%rcx)
	xorl	%eax, %eax
	movq	56(%r14), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r12d
	movslq	%r12d,%r10
	leal	1(%r12), %r9d
	salq	$3, %r10
	movl	%r9d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r10
	movq	%rax, (%r10)
	movzbl	16(%r14), %eax
.L2283:
	cmpb	$6, %al
	je	.L2285
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %ebx
	movslq	%ebx,%rdi
	salq	$3, %rdi
	addq	builtin_type_tdescs_arr(%rip), %rdi
	movq	%rax, (%rdi)
	movq	64(%r14), %rdi
	leal	1(%rbx), %eax
	movl	%eax, builtin_type_tdescs_len(%rip)
	xorl	%eax, %eax
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r11d
	movslq	%r11d,%r15
	leal	1(%r11), %r14d
	salq	$3, %r15
	movl	%r14d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r15
	movq	%rax, (%r15)
.L2285:
	xorl	%eax, %eax
	movl	$64, %edi
	call	make_signed_type
	movl	$.LC51, %edx
	movq	$0, -1976(%rbp)
	testq	%rdx, %rdx
	movq	%rax, %r14
	movq	%rax, long_long_integer_type_node(%rip)
	je	.L2287
	movl	$.LC51, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	%rax, -1976(%rbp)
.L2287:
	cmpq	$0, -1976(%rbp)
	jne	.L11267
.L2288:
	xorl	%eax, %eax
	testq	%rax, %rax
	je	.L2570
	cmpq	$0, -1976(%rbp)
	je	.L2571
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L2572
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
.L11009:
	call	tree_cons
	movq	%rax, 32(%rbx)
.L2573:
	movq	$0, 8
	movq	-2016(%rbp), %r11
	movq	%r11, 40
.L2570:
	movl	flag_dossier(%rip), %eax
	testl	%eax, %eax
	je	.L2585
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %esi
	cmpl	%ecx, %esi
	jge	.L11268
.L2582:
	movslq	%edx,%rcx
	incl	%edx
	salq	$3, %rcx
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%r14, (%rcx)
	movzbl	16(%r14), %eax
	cmpb	$13, %al
	je	.L2583
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r9d
	movslq	%r9d,%r13
	leal	1(%r9), %ebx
	salq	$3, %r13
	movl	%ebx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r13
	movq	%rax, (%r13)
	xorl	%eax, %eax
	movq	56(%r14), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r8d
	movslq	%r8d,%r15
	salq	$3, %r15
	addq	builtin_type_tdescs_arr(%rip), %r15
	movq	%rax, (%r15)
	leal	1(%r8), %eax
	movl	%eax, builtin_type_tdescs_len(%rip)
	movzbl	16(%r14), %eax
.L2583:
	cmpb	$6, %al
	je	.L2585
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	builtin_type_tdescs_len(%rip), %esi
	movslq	%esi,%rdi
	leal	1(%rsi), %r11d
	movl	$1, %esi
	salq	$3, %rdi
	movl	%r11d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rdi
	movq	%rax, (%rdi)
	xorl	%eax, %eax
	movq	64(%r14), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r10d
	movslq	%r10d,%r12
	leal	1(%r10), %r14d
	salq	$3, %r12
	movl	%r14d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r12
	movq	%rax, (%r12)
.L2585:
	xorl	%eax, %eax
	movl	$16, %edi
	call	make_unsigned_type
	movl	$.LC52, %edx
	movq	$0, -2024(%rbp)
	testq	%rdx, %rdx
	movq	%rax, %r14
	movq	%rax, short_unsigned_type_node(%rip)
	je	.L2587
	movl	$.LC52, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	%rax, -2024(%rbp)
.L2587:
	cmpq	$0, -2024(%rbp)
	jne	.L11269
.L2588:
	xorl	%eax, %eax
	testq	%rax, %rax
	je	.L2870
	cmpq	$0, -2024(%rbp)
	je	.L2871
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L2872
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
.L11021:
	call	tree_cons
	movq	%rax, 32(%rbx)
.L2873:
	movq	$0, 8
	movq	-2064(%rbp), %rcx
	movq	%rcx, 40
.L2870:
	movl	flag_dossier(%rip), %edi
	testl	%edi, %edi
	je	.L2885
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %r10d
	cmpl	%ecx, %r10d
	jge	.L11270
.L2882:
	movslq	%edx,%r8
	incl	%edx
	salq	$3, %r8
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r8
	movq	%r14, (%r8)
	movzbl	16(%r14), %eax
	cmpb	$13, %al
	je	.L2883
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r11d
	movslq	%r11d,%r13
	leal	1(%r11), %ebx
	salq	$3, %r13
	movl	%ebx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r13
	movq	%rax, (%r13)
	xorl	%eax, %eax
	movq	56(%r14), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %esi
	movslq	%esi,%r15
	salq	$3, %r15
	addq	builtin_type_tdescs_arr(%rip), %r15
	movq	%rax, (%r15)
	leal	1(%rsi), %eax
	movl	%eax, builtin_type_tdescs_len(%rip)
	movzbl	16(%r14), %eax
.L2883:
	cmpb	$6, %al
	je	.L2885
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r10d
	movslq	%r10d,%rcx
	leal	1(%r10), %edi
	salq	$3, %rcx
	movl	%edi, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rax, (%rcx)
	xorl	%eax, %eax
	movq	64(%r14), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r9d
	movslq	%r9d,%r12
	leal	1(%r9), %r14d
	salq	$3, %r12
	movl	%r14d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r12
	movq	%rax, (%r12)
.L2885:
	movl	$.LC53, %edx
	movq	short_unsigned_type_node(%rip), %r15
	movq	$0, -2072(%rbp)
	testq	%rdx, %rdx
	je	.L2887
	movl	$.LC53, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	%rax, -2072(%rbp)
.L2887:
	cmpq	$0, -2072(%rbp)
	jne	.L11271
.L2888:
	xorl	%eax, %eax
	testq	%rax, %rax
	je	.L3170
	cmpq	$0, -2072(%rbp)
	je	.L3171
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L3172
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
.L11033:
	call	tree_cons
	movq	%rax, 32(%rbx)
.L3173:
	movq	$0, 8
	movq	-2112(%rbp), %r9
	movq	%r9, 40
.L3170:
	movl	flag_dossier(%rip), %eax
	testl	%eax, %eax
	je	.L3185
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %esi
	cmpl	%ecx, %esi
	jge	.L11272
.L3182:
	movslq	%edx,%rcx
	incl	%edx
	salq	$3, %rcx
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%r15, (%rcx)
	movzbl	16(%r15), %eax
	cmpb	$13, %al
	je	.L3183
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %ebx
	movslq	%ebx,%rdi
	leal	1(%rbx), %r14d
	salq	$3, %rdi
	movl	%r14d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rdi
	movq	%rax, (%rdi)
	xorl	%eax, %eax
	movq	56(%r15), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r8d
	movslq	%r8d,%r10
	salq	$3, %r10
	addq	builtin_type_tdescs_arr(%rip), %r10
	movq	%rax, (%r10)
	leal	1(%r8), %eax
	movl	%eax, builtin_type_tdescs_len(%rip)
	movzbl	16(%r15), %eax
.L3183:
	cmpb	$6, %al
	je	.L3185
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	builtin_type_tdescs_len(%rip), %r9d
	movslq	%r9d,%rsi
	leal	1(%r9), %r12d
	salq	$3, %rsi
	movl	%r12d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rsi
	movq	%rax, (%rsi)
	xorl	%eax, %eax
	movl	$1, %esi
	movq	64(%r15), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r13d
	movslq	%r13d,%r11
	leal	1(%r13), %r15d
	salq	$3, %r11
	movl	%r15d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r11
	movq	%rax, (%r11)
.L3185:
	xorl	%eax, %eax
	movl	$64, %edi
	call	make_unsigned_type
	movl	$.LC54, %edx
	movq	$0, -2120(%rbp)
	testq	%rdx, %rdx
	movq	%rax, %r14
	movq	%rax, long_long_unsigned_type_node(%rip)
	je	.L3187
	movl	$.LC54, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	%rax, -2120(%rbp)
.L3187:
	cmpq	$0, -2120(%rbp)
	jne	.L11273
.L3188:
	xorl	%eax, %eax
	testq	%rax, %rax
	je	.L3470
	cmpq	$0, -2120(%rbp)
	je	.L3471
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L3472
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
.L11045:
	call	tree_cons
	movq	%rax, 32(%rbx)
.L3473:
	movq	$0, 8
	movq	-2160(%rbp), %r10
	movq	%r10, 40
.L3470:
	movl	flag_dossier(%rip), %r11d
	testl	%r11d, %r11d
	je	.L3485
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %esi
	cmpl	%ecx, %esi
	jge	.L11274
.L3482:
	movslq	%edx,%r8
	incl	%edx
	salq	$3, %r8
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r8
	movq	%r14, (%r8)
	movzbl	16(%r14), %eax
	cmpb	$13, %al
	je	.L3483
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %edi
	movslq	%edi,%r13
	leal	1(%rdi), %ebx
	salq	$3, %r13
	movl	%ebx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r13
	movq	%rax, (%r13)
	xorl	%eax, %eax
	movq	56(%r14), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r15d
	movslq	%r15d,%rcx
	salq	$3, %rcx
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rax, (%rcx)
	leal	1(%r15), %eax
	movl	%eax, builtin_type_tdescs_len(%rip)
	movzbl	16(%r14), %eax
.L3483:
	cmpb	$6, %al
	je	.L3485
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	builtin_type_tdescs_len(%rip), %r11d
	movslq	%r11d,%rsi
	leal	1(%r11), %r10d
	salq	$3, %rsi
	movl	%r10d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rsi
	movq	%rax, (%rsi)
	xorl	%eax, %eax
	movl	$1, %esi
	movq	64(%r14), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r9d
	movslq	%r9d,%r12
	leal	1(%r9), %r14d
	salq	$3, %r12
	movl	%r14d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r12
	movq	%rax, (%r12)
.L3485:
	movl	$.LC55, %edx
	movq	long_long_unsigned_type_node(%rip), %r15
	movq	$0, -2168(%rbp)
	testq	%rdx, %rdx
	je	.L3487
	movl	$.LC55, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	%rax, -2168(%rbp)
.L3487:
	cmpq	$0, -2168(%rbp)
	jne	.L11275
.L3488:
	xorl	%eax, %eax
	testq	%rax, %rax
	je	.L3770
	cmpq	$0, -2168(%rbp)
	je	.L3771
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L3772
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
.L11057:
	call	tree_cons
	movq	%rax, 32(%rbx)
.L3773:
	movq	$0, 8
	movq	-2208(%rbp), %rdi
	movq	%rdi, 40
.L3770:
	movl	flag_dossier(%rip), %eax
	testl	%eax, %eax
	je	.L3785
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %r9d
	cmpl	%ecx, %r9d
	jge	.L11276
.L3782:
	movslq	%edx,%r11
	incl	%edx
	salq	$3, %r11
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r11
	movq	%r15, (%r11)
	movzbl	16(%r15), %eax
	cmpb	$13, %al
	je	.L3783
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %ebx
	movslq	%ebx,%rcx
	leal	1(%rbx), %r14d
	salq	$3, %rcx
	movl	%r14d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rax, (%rcx)
	xorl	%eax, %eax
	movq	56(%r15), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r8d
	movslq	%r8d,%rsi
	salq	$3, %rsi
	addq	builtin_type_tdescs_arr(%rip), %rsi
	movq	%rax, (%rsi)
	leal	1(%r8), %eax
	movl	%eax, builtin_type_tdescs_len(%rip)
	movzbl	16(%r15), %eax
.L3783:
	cmpb	$6, %al
	je	.L3785
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r9d
	movslq	%r9d,%r10
	leal	1(%r9), %edi
	salq	$3, %r10
	movl	%edi, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r10
	movq	%rax, (%r10)
	xorl	%eax, %eax
	movq	64(%r15), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r13d
	movslq	%r13d,%r12
	leal	1(%r13), %r15d
	salq	$3, %r12
	movl	%r15d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r12
	movq	%rax, (%r12)
.L3785:
	xorl	%eax, %eax
	movl	$8, %edi
	call	make_signed_type
	movl	$.LC56, %edx
	movq	$0, -2216(%rbp)
	testq	%rdx, %rdx
	movq	%rax, %r14
	movq	%rax, signed_char_type_node(%rip)
	je	.L3787
	movl	$.LC56, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	%rax, -2216(%rbp)
.L3787:
	cmpq	$0, -2216(%rbp)
	jne	.L11277
.L3788:
	xorl	%eax, %eax
	testq	%rax, %rax
	je	.L4070
	cmpq	$0, -2216(%rbp)
	je	.L4071
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L4072
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
.L11069:
	call	tree_cons
	movq	%rax, 32(%rbx)
.L4073:
	movq	$0, 8
	movq	-2256(%rbp), %rdi
	movq	%rdi, 40
.L4070:
	movl	flag_dossier(%rip), %ebx
	testl	%ebx, %ebx
	je	.L4085
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %r10d
	cmpl	%ecx, %r10d
	jge	.L11278
.L4082:
	movslq	%edx,%rcx
	incl	%edx
	salq	$3, %rcx
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%r14, (%rcx)
	movzbl	16(%r14), %eax
	cmpb	$13, %al
	je	.L4083
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r13d
	movslq	%r13d,%r9
	leal	1(%r13), %r11d
	salq	$3, %r9
	movl	%r11d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r9
	movq	%rax, (%r9)
	xorl	%eax, %eax
	movq	56(%r14), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %esi
	movslq	%esi,%r15
	leal	1(%rsi), %r8d
	salq	$3, %r15
	movl	%r8d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r15
	movq	%rax, (%r15)
	movzbl	16(%r14), %eax
.L4083:
	cmpb	$6, %al
	je	.L4085
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r10d
	movslq	%r10d,%rcx
	leal	1(%r10), %ebx
	salq	$3, %rcx
	movl	%ebx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rax, (%rcx)
	xorl	%eax, %eax
	movq	64(%r14), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r12d
	movslq	%r12d,%rdi
	leal	1(%r12), %r14d
	salq	$3, %rdi
	movl	%r14d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rdi
	movq	%rax, (%rdi)
.L4085:
	xorl	%eax, %eax
	movl	$8, %edi
	call	make_unsigned_type
	movl	$.LC57, %edx
	movq	$0, -2264(%rbp)
	testq	%rdx, %rdx
	movq	%rax, %r14
	movq	%rax, unsigned_char_type_node(%rip)
	je	.L4087
	movl	$.LC57, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	%rax, -2264(%rbp)
.L4087:
	cmpq	$0, -2264(%rbp)
	jne	.L11279
.L4088:
	xorl	%eax, %eax
	testq	%rax, %rax
	je	.L4370
	cmpq	$0, -2264(%rbp)
	je	.L4371
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L4372
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
.L11081:
	call	tree_cons
	movq	%rax, 32(%rbx)
.L4373:
	movq	$0, 8
	movq	-2304(%rbp), %r9
	movq	%r9, 40
.L4370:
	movl	flag_dossier(%rip), %ecx
	testl	%ecx, %ecx
	je	.L4385
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %ebx
	cmpl	%ecx, %ebx
	jge	.L11280
.L4382:
	movslq	%edx,%r8
	incl	%edx
	salq	$3, %r8
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r8
	movq	%r14, (%r8)
	movzbl	16(%r14), %eax
	cmpb	$13, %al
	je	.L4383
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r13d
	movslq	%r13d,%r11
	leal	1(%r13), %edi
	salq	$3, %r11
	movl	%edi, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r11
	movq	%rax, (%r11)
	xorl	%eax, %eax
	movq	56(%r14), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %esi
	movslq	%esi,%r15
	salq	$3, %r15
	addq	builtin_type_tdescs_arr(%rip), %r15
	movq	%rax, (%r15)
	leal	1(%rsi), %eax
	movl	%eax, builtin_type_tdescs_len(%rip)
	movzbl	16(%r14), %eax
.L4383:
	cmpb	$6, %al
	je	.L4385
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r10d
	movslq	%r10d,%rcx
	leal	1(%r10), %ebx
	salq	$3, %rcx
	movl	%ebx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rax, (%rcx)
	xorl	%eax, %eax
	movq	64(%r14), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r12d
	movslq	%r12d,%r9
	leal	1(%r12), %r14d
	salq	$3, %r9
	movl	%r14d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r9
	movq	%rax, (%r9)
.L4385:
	movl	mode_size+4(%rip), %edi
	xorl	%eax, %eax
	sall	$3, %edi
	call	make_signed_type
	xorl	%esi, %esi
	movl	$32, %edi
	movq	%rax, %rdx
	movq	%rax, intQI_type_node(%rip)
	xorl	%eax, %eax
	call	build_decl
	movq	current_binding_level(%rip), %rdx
	movq	%rax, %r13
	movq	112(%rax), %r14
	movq	current_function_decl(%rip), %rax
	movq	%rdx, -2336(%rbp)
	cmpq	%rax, %r13
	je	.L10549
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L11281
.L4387:
	movq	%rax, 64(%r13)
.L4386:
	cmpb	$32, %dl
	je	.L11282
.L4388:
	testq	%r14, %r14
	je	.L4389
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L11283
	cmpq	$0, 48(%r14)
	jne	.L4392
	movq	$0, -2312(%rbp)
.L4391:
	cmpq	$0, -2312(%rbp)
	je	.L4409
	movq	-2312(%rbp), %rax
	cmpq	error_mark_node(%rip), %rax
	je	.L11284
.L4399:
	cmpq	$0, -2312(%rbp)
	je	.L10553
	movq	-2312(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L11285
.L4401:
	movq	-2312(%rbp), %r15
	testq	%r15, %r15
	movq	24(%r15), %r12
	movq	%r15, %rsi
	movl	32(%r15), %ebx
	je	.L10553
	movzbl	16(%r15), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L4403
	cmpb	$32, %al
	je	.L4409
	cmpb	$32, %dl
	je	.L10911
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10553
	.p2align 4,,7
.L4408:
	movl	mode_size+8(%rip), %edi
	xorl	%eax, %eax
	sall	$3, %edi
	call	make_signed_type
	xorl	%esi, %esi
	movl	$32, %edi
	movq	%rax, intHI_type_node(%rip)
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	current_binding_level(%rip), %r9
	movq	%rax, %r13
	movq	112(%rax), %r14
	movq	current_function_decl(%rip), %rax
	movq	%r9, -2368(%rbp)
	cmpq	%rax, %r13
	je	.L10564
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L11286
.L4663:
	movq	%rax, 64(%r13)
.L4662:
	cmpb	$32, %dl
	je	.L11287
.L4664:
	testq	%r14, %r14
	je	.L4665
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L11288
	cmpq	$0, 48(%r14)
	jne	.L4668
	movq	$0, -2344(%rbp)
.L4667:
	cmpq	$0, -2344(%rbp)
	je	.L4685
	movq	-2344(%rbp), %r10
	cmpq	error_mark_node(%rip), %r10
	je	.L11289
.L4675:
	cmpq	$0, -2344(%rbp)
	je	.L10568
	movq	-2344(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L11290
.L4677:
	movq	-2344(%rbp), %r8
	testq	%r8, %r8
	movq	24(%r8), %r12
	movq	%r8, %rsi
	movl	32(%r8), %ebx
	je	.L10568
	movzbl	16(%r8), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L4679
	cmpb	$32, %al
	je	.L4685
	cmpb	$32, %dl
	je	.L10912
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10568
	.p2align 4,,7
.L4684:
	movl	mode_size+16(%rip), %edi
	xorl	%eax, %eax
	sall	$3, %edi
	call	make_signed_type
	xorl	%esi, %esi
	movl	$32, %edi
	movq	%rax, intSI_type_node(%rip)
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	current_binding_level(%rip), %r11
	movq	%rax, %r13
	movq	112(%rax), %r14
	movq	current_function_decl(%rip), %rax
	movq	%r11, -2400(%rbp)
	cmpq	%rax, %r13
	je	.L10579
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L11291
.L4939:
	movq	%rax, 64(%r13)
.L4938:
	cmpb	$32, %dl
	je	.L11292
.L4940:
	testq	%r14, %r14
	je	.L4941
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L11293
	cmpq	$0, 48(%r14)
	jne	.L4944
	movq	$0, -2376(%rbp)
.L4943:
	cmpq	$0, -2376(%rbp)
	je	.L4961
	movq	-2376(%rbp), %r9
	cmpq	error_mark_node(%rip), %r9
	je	.L11294
.L4951:
	cmpq	$0, -2376(%rbp)
	je	.L10583
	movq	-2376(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L11295
.L4953:
	movq	-2376(%rbp), %rdx
	testq	%rdx, %rdx
	movq	24(%rdx), %r12
	movq	%rdx, %rsi
	movl	32(%rdx), %ebx
	je	.L10583
	movzbl	16(%rdx), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L4955
	cmpb	$32, %al
	je	.L4961
	cmpb	$32, %dl
	je	.L10913
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10583
	.p2align 4,,7
.L4960:
	movl	mode_size+24(%rip), %edi
	xorl	%eax, %eax
	sall	$3, %edi
	call	make_signed_type
	xorl	%esi, %esi
	movl	$32, %edi
	movq	%rax, intDI_type_node(%rip)
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	current_binding_level(%rip), %rbx
	movq	%rax, %r13
	movq	112(%rax), %r14
	movq	current_function_decl(%rip), %rax
	movq	%rbx, -2432(%rbp)
	cmpq	%rax, %r13
	je	.L10594
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L11296
.L5215:
	movq	%rax, 64(%r13)
.L5214:
	cmpb	$32, %dl
	je	.L11297
.L5216:
	testq	%r14, %r14
	je	.L5217
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L11298
	cmpq	$0, 48(%r14)
	jne	.L5220
	movq	$0, -2408(%rbp)
.L5219:
	cmpq	$0, -2408(%rbp)
	je	.L5237
	movq	-2408(%rbp), %r10
	cmpq	error_mark_node(%rip), %r10
	je	.L11299
.L5227:
	cmpq	$0, -2408(%rbp)
	je	.L10598
	movq	-2408(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L11300
.L5229:
	movq	-2408(%rbp), %rdx
	testq	%rdx, %rdx
	movq	24(%rdx), %r12
	movq	%rdx, %rsi
	movl	32(%rdx), %ebx
	je	.L10598
	movzbl	16(%rdx), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L5231
	cmpb	$32, %al
	je	.L5237
	cmpb	$32, %dl
	je	.L10914
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10598
	.p2align 4,,7
.L5236:
	movl	mode_size+4(%rip), %edi
	xorl	%eax, %eax
	sall	$3, %edi
	call	make_unsigned_type
	xorl	%esi, %esi
	movl	$32, %edi
	movq	%rax, unsigned_intQI_type_node(%rip)
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	current_binding_level(%rip), %r11
	movq	%rax, %r13
	movq	112(%rax), %r14
	movq	current_function_decl(%rip), %rax
	movq	%r11, -2464(%rbp)
	cmpq	%rax, %r13
	je	.L10609
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L11301
.L5491:
	movq	%rax, 64(%r13)
.L5490:
	cmpb	$32, %dl
	je	.L11302
.L5492:
	testq	%r14, %r14
	je	.L5493
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L11303
	cmpq	$0, 48(%r14)
	jne	.L5496
	movq	$0, -2440(%rbp)
.L5495:
	cmpq	$0, -2440(%rbp)
	je	.L5513
	movq	-2440(%rbp), %r9
	cmpq	error_mark_node(%rip), %r9
	je	.L11304
.L5503:
	cmpq	$0, -2440(%rbp)
	je	.L10613
	movq	-2440(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L11305
.L5505:
	movq	-2440(%rbp), %rdx
	testq	%rdx, %rdx
	movq	24(%rdx), %r12
	movq	%rdx, %rsi
	movl	32(%rdx), %ebx
	je	.L10613
	movzbl	16(%rdx), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L5507
	cmpb	$32, %al
	je	.L5513
	cmpb	$32, %dl
	je	.L10915
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10613
	.p2align 4,,7
.L5512:
	movl	mode_size+8(%rip), %edi
	xorl	%eax, %eax
	sall	$3, %edi
	call	make_unsigned_type
	xorl	%esi, %esi
	movl	$32, %edi
	movq	%rax, unsigned_intHI_type_node(%rip)
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	current_binding_level(%rip), %r10
	movq	%rax, %r13
	movq	112(%rax), %r14
	movq	current_function_decl(%rip), %rax
	movq	%r10, -2496(%rbp)
	cmpq	%rax, %r13
	je	.L10624
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L11306
.L5767:
	movq	%rax, 64(%r13)
.L5766:
	cmpb	$32, %dl
	je	.L11307
.L5768:
	testq	%r14, %r14
	je	.L5769
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L11308
	cmpq	$0, 48(%r14)
	jne	.L5772
	movq	$0, -2472(%rbp)
.L5771:
	cmpq	$0, -2472(%rbp)
	je	.L5789
	movq	-2472(%rbp), %r8
	cmpq	error_mark_node(%rip), %r8
	je	.L11309
.L5779:
	cmpq	$0, -2472(%rbp)
	je	.L10628
	movq	-2472(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L11310
.L5781:
	movq	-2472(%rbp), %r11
	testq	%r11, %r11
	movq	24(%r11), %r12
	movq	%r11, %rsi
	movl	32(%r11), %ebx
	je	.L10628
	movzbl	16(%r11), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L5783
	cmpb	$32, %al
	je	.L5789
	cmpb	$32, %dl
	je	.L10916
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10628
	.p2align 4,,7
.L5788:
	movl	mode_size+16(%rip), %edi
	xorl	%eax, %eax
	sall	$3, %edi
	call	make_unsigned_type
	xorl	%esi, %esi
	movl	$32, %edi
	movq	%rax, unsigned_intSI_type_node(%rip)
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	current_binding_level(%rip), %r9
	movq	%rax, %r13
	movq	112(%rax), %r14
	movq	current_function_decl(%rip), %rax
	movq	%r9, -2528(%rbp)
	cmpq	%rax, %r13
	je	.L10639
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L11311
.L6043:
	movq	%rax, 64(%r13)
.L6042:
	cmpb	$32, %dl
	je	.L11312
.L6044:
	testq	%r14, %r14
	je	.L6045
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L11313
	cmpq	$0, 48(%r14)
	jne	.L6048
	movq	$0, -2504(%rbp)
.L6047:
	cmpq	$0, -2504(%rbp)
	je	.L6065
	movq	-2504(%rbp), %r10
	cmpq	error_mark_node(%rip), %r10
	je	.L11314
.L6055:
	cmpq	$0, -2504(%rbp)
	je	.L10643
	movq	-2504(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L11315
.L6057:
	movq	-2504(%rbp), %rdx
	testq	%rdx, %rdx
	movq	24(%rdx), %r12
	movq	%rdx, %rsi
	movl	32(%rdx), %ebx
	je	.L10643
	movzbl	16(%rdx), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L6059
	cmpb	$32, %al
	je	.L6065
	cmpb	$32, %dl
	je	.L10917
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10643
	.p2align 4,,7
.L6064:
	movl	mode_size+24(%rip), %edi
	xorl	%eax, %eax
	sall	$3, %edi
	call	make_unsigned_type
	xorl	%esi, %esi
	movl	$32, %edi
	movq	%rax, unsigned_intDI_type_node(%rip)
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	current_binding_level(%rip), %rbx
	movq	%rax, %r13
	movq	112(%rax), %r14
	movq	current_function_decl(%rip), %rax
	movq	%rbx, -2560(%rbp)
	cmpq	%rax, %r13
	je	.L10654
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L11316
.L6319:
	movq	%rax, 64(%r13)
.L6318:
	cmpb	$32, %dl
	je	.L11317
.L6320:
	testq	%r14, %r14
	je	.L6321
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L11318
	cmpq	$0, 48(%r14)
	jne	.L6324
	movq	$0, -2536(%rbp)
.L6323:
	cmpq	$0, -2536(%rbp)
	je	.L6341
	movq	-2536(%rbp), %r8
	cmpq	error_mark_node(%rip), %r8
	je	.L11319
.L6331:
	cmpq	$0, -2536(%rbp)
	je	.L10658
	movq	-2536(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L11320
.L6333:
	movq	-2536(%rbp), %rdx
	testq	%rdx, %rdx
	movq	24(%rdx), %r12
	movq	%rdx, %rsi
	movl	32(%rdx), %ebx
	je	.L10658
	movzbl	16(%rdx), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L6335
	cmpb	$32, %al
	je	.L6341
	cmpb	$32, %dl
	je	.L10918
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10658
	.p2align 4,,7
.L6340:
.L6850:
.L6865:
	movl	$8, %edi
	xorl	%eax, %eax
	call	make_node
	movq	%rax, float_type_node(%rip)
	movb	$32, 45(%rax)
	movq	ridpointers+24(%rip), %r12
	movq	float_type_node(%rip), %r13
	testq	%r12, %r12
	je	.L6878
	xorl	%eax, %eax
	testq	%rax, %rax
	je	.L6879
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L6880
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
.L11163:
	call	tree_cons
	movq	%rax, 32(%rbx)
.L6881:
	movq	$0, 8(%r12)
	movq	-2568(%rbp), %r9
	movq	%r9, 40(%r12)
.L6878:
	movl	flag_dossier(%rip), %ebx
	testl	%ebx, %ebx
	je	.L6893
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %r10d
	cmpl	%ecx, %r10d
	jge	.L11321
.L6890:
	movslq	%edx,%rsi
	incl	%edx
	salq	$3, %rsi
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rsi
	movq	%r13, (%rsi)
	movzbl	16(%r13), %eax
	cmpb	$13, %al
	je	.L6891
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r14d
	movslq	%r14d,%rcx
	salq	$3, %rcx
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rax, (%rcx)
	movq	56(%r13), %rdi
	leal	1(%r14), %eax
	movl	%eax, builtin_type_tdescs_len(%rip)
	xorl	%eax, %eax
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r12d
	movslq	%r12d,%r8
	leal	1(%r12), %r15d
	salq	$3, %r8
	movl	%r15d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r8
	movq	%rax, (%r8)
	movzbl	16(%r13), %eax
.L6891:
	cmpb	$6, %al
	je	.L6893
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %ebx
	movslq	%ebx,%r10
	leal	1(%rbx), %r9d
	salq	$3, %r10
	movl	%r9d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r10
	movq	%rax, (%r10)
	xorl	%eax, %eax
	movq	64(%r13), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %edi
	movslq	%edi,%r11
	leal	1(%rdi), %r13d
	salq	$3, %r11
	movl	%r13d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r11
	movq	%rax, (%r11)
.L6893:
	movq	float_type_node(%rip), %rdi
	xorl	%eax, %eax
	call	layout_type
	xorl	%eax, %eax
	movl	$8, %edi
	call	make_node
	movl	flag_short_double(%rip), %edx
	movq	%rax, double_type_node(%rip)
	testl	%edx, %edx
	je	.L6894
	movb	$32, 45(%rax)
.L6895:
.L7152:
.L7167:
	movq	double_type_node(%rip), %r13
	movq	ridpointers+32(%rip), %r12
	testq	%r12, %r12
	je	.L7180
	xorl	%eax, %eax
	testq	%rax, %rax
	je	.L7181
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L7182
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
.L11165:
	call	tree_cons
	movq	%rax, 32(%rbx)
.L7183:
	movq	$0, 8(%r12)
	movq	-2576(%rbp), %rsi
	movq	%rsi, 40(%r12)
.L7180:
	movl	flag_dossier(%rip), %r15d
	testl	%r15d, %r15d
	je	.L7195
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %r12d
	cmpl	%ecx, %r12d
	jge	.L11322
.L7192:
	movslq	%edx,%r14
	incl	%edx
	salq	$3, %r14
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r14
	movq	%r13, (%r14)
	movzbl	16(%r13), %eax
	cmpb	$13, %al
	je	.L7193
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r9d
	movslq	%r9d,%rbx
	leal	1(%r9), %r11d
	salq	$3, %rbx
	movl	%r11d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rbx
	movq	%rax, (%rbx)
	xorl	%eax, %eax
	movq	56(%r13), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %edi
	movslq	%edi,%rcx
	salq	$3, %rcx
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rax, (%rcx)
	leal	1(%rdi), %eax
	movl	%eax, builtin_type_tdescs_len(%rip)
	movzbl	16(%r13), %eax
.L7193:
	cmpb	$6, %al
	je	.L7195
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r12d
	movslq	%r12d,%r8
	leal	1(%r12), %r15d
	salq	$3, %r8
	movl	%r15d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r8
	movq	%rax, (%r8)
	xorl	%eax, %eax
	movq	64(%r13), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r10d
	movslq	%r10d,%rsi
	leal	1(%r10), %r13d
	salq	$3, %rsi
	movl	%r13d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rsi
	movq	%rax, (%rsi)
.L7195:
	movq	double_type_node(%rip), %rdi
	xorl	%eax, %eax
	call	layout_type
	xorl	%eax, %eax
	movl	$8, %edi
	call	make_node
	movl	$.LC58, %edx
	testq	%rdx, %rdx
	movq	%rax, long_double_type_node(%rip)
	movb	$64, 45(%rax)
	movq	$0, -2584(%rbp)
	movq	long_double_type_node(%rip), %r15
	je	.L7197
	movl	$.LC58, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	%rax, -2584(%rbp)
.L7197:
	cmpq	$0, -2584(%rbp)
	jne	.L11323
.L7198:
	xorl	%eax, %eax
	testq	%rax, %rax
	je	.L7480
	cmpq	$0, -2584(%rbp)
	je	.L7481
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L7482
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
.L11177:
	call	tree_cons
	movq	%rax, 32(%rbx)
.L7483:
	movq	$0, 8
	movq	-2624(%rbp), %rcx
	movq	%rcx, 40
.L7480:
	movl	flag_dossier(%rip), %eax
	testl	%eax, %eax
	je	.L7495
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %ebx
	cmpl	%ecx, %ebx
	jge	.L11324
.L7492:
	movslq	%edx,%rsi
	incl	%edx
	salq	$3, %rsi
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rsi
	movq	%r15, (%rsi)
	movzbl	16(%r15), %eax
	cmpb	$13, %al
	je	.L7493
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r11d
	movslq	%r11d,%rdi
	leal	1(%r11), %r14d
	salq	$3, %rdi
	movl	%r14d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rdi
	movq	%rax, (%rdi)
	xorl	%eax, %eax
	movq	56(%r15), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r8d
	movslq	%r8d,%r10
	salq	$3, %r10
	addq	builtin_type_tdescs_arr(%rip), %r10
	movq	%rax, (%r10)
	leal	1(%r8), %eax
	movl	%eax, builtin_type_tdescs_len(%rip)
	movzbl	16(%r15), %eax
.L7493:
	cmpb	$6, %al
	je	.L7495
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %ebx
	movslq	%ebx,%rcx
	leal	1(%rbx), %r12d
	salq	$3, %rcx
	movl	%r12d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rax, (%rcx)
	xorl	%eax, %eax
	movq	64(%r15), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r13d
	movslq	%r13d,%r9
	leal	1(%r13), %r15d
	salq	$3, %r9
	movl	%r15d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r9
	movq	%rax, (%r9)
.L7495:
.L7752:
.L7767:
	movq	long_double_type_node(%rip), %rdi
	xorl	%eax, %eax
	call	layout_type
	xorl	%edi, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_int_2_wide
	xorl	%esi, %esi
	movl	$1, %edi
	movq	integer_type_node(%rip), %r14
	movq	%rax, integer_zero_node(%rip)
	movq	%r14, 8(%rax)
	xorl	%eax, %eax
	call	build_int_2_wide
	xorl	%esi, %esi
	movl	$2, %edi
	movq	integer_type_node(%rip), %r10
	movq	%rax, integer_one_node(%rip)
	movq	%r10, 8(%rax)
	xorl	%eax, %eax
	call	build_int_2_wide
	xorl	%esi, %esi
	movl	$3, %edi
	movq	integer_type_node(%rip), %r8
	movq	%rax, integer_two_node(%rip)
	movq	%r8, 8(%rax)
	xorl	%eax, %eax
	call	build_int_2_wide
	xorl	%edx, %edx
	movl	$43, %edi
	movq	integer_type_node(%rip), %rsi
	movq	%rax, integer_three_node(%rip)
	movq	%rsi, 8(%rax)
	xorl	%eax, %eax
	xorl	%esi, %esi
	call	build_nt
	xorl	%edi, %edi
	movq	%rax, empty_init_node(%rip)
	xorl	%eax, %eax
	call	size_int
	movl	$1, %edi
	movq	%rax, size_zero_node(%rip)
	xorl	%eax, %eax
	call	size_int
	movl	$6, %edi
	movq	%rax, size_one_node(%rip)
	xorl	%eax, %eax
	call	make_node
	movq	ridpointers+40(%rip), %r12
	movq	%rax, %r13
	movq	%rax, void_type_node(%rip)
	testq	%r12, %r12
	je	.L7780
	xorl	%eax, %eax
	testq	%rax, %rax
	je	.L7781
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L7782
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
.L11179:
	call	tree_cons
	movq	%rax, 32(%rbx)
.L7783:
	movq	$0, 8(%r12)
	movq	-2632(%rbp), %rdx
	movq	%rdx, 40(%r12)
.L7780:
	movl	flag_dossier(%rip), %eax
	testl	%eax, %eax
	je	.L7795
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %r11d
	cmpl	%ecx, %r11d
	jge	.L11325
.L7792:
	movslq	%edx,%rdi
	incl	%edx
	salq	$3, %rdi
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rdi
	movq	%r13, (%rdi)
	movzbl	16(%r13), %eax
	cmpb	$13, %al
	je	.L7793
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	builtin_type_tdescs_len(%rip), %esi
	movslq	%esi,%rcx
	leal	1(%rsi), %ebx
	movl	$1, %esi
	salq	$3, %rcx
	movl	%ebx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rax, (%rcx)
	xorl	%eax, %eax
	movq	56(%r13), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r9d
	movslq	%r9d,%r12
	leal	1(%r9), %r15d
	salq	$3, %r12
	movl	%r15d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r12
	movq	%rax, (%r12)
	movzbl	16(%r13), %eax
.L7793:
	cmpb	$6, %al
	je	.L7795
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r11d
	movslq	%r11d,%rdi
	leal	1(%r11), %r14d
	salq	$3, %rdi
	movl	%r14d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rdi
	movq	%rax, (%rdi)
	xorl	%eax, %eax
	movq	64(%r13), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r8d
	movslq	%r8d,%r10
	leal	1(%r8), %r13d
	salq	$3, %r10
	movl	%r13d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r10
	movq	%rax, (%r10)
.L7795:
.L8052:
.L8067:
	movq	void_type_node(%rip), %rdi
	xorl	%eax, %eax
	call	layout_type
	movq	void_type_node(%rip), %rsi
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	build_tree_list
	xorl	%esi, %esi
	xorl	%edi, %edi
	movq	%rax, void_list_node(%rip)
	orb	$64, 17(%rax)
	xorl	%eax, %eax
	call	build_int_2_wide
	movq	void_type_node(%rip), %rdi
	movq	%rax, %r12
	movq	%rax, null_pointer_node(%rip)
	xorl	%eax, %eax
	call	build_pointer_type
	movq	null_pointer_node(%rip), %rdx
	movq	%rax, 8(%r12)
	xorl	%eax, %eax
	movq	8(%rdx), %rdi
	call	layout_type
	xorl	%esi, %esi
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	build_int_2_wide
	movq	char_type_node(%rip), %rdi
	movq	void_type_node(%rip), %r15
	movq	%rax, void_zero_node(%rip)
	movq	%r15, 8(%rax)
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	$1, %esi
	movq	char_type_node(%rip), %rdi
	movq	%rax, string_type_node(%rip)
	xorl	%eax, %eax
	call	build_type_variant
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	movq	string_type_node(%rip), %rbx
	movq	%rax, const_string_type_node(%rip)
	movl	flag_dossier(%rip), %eax
	testl	%eax, %eax
	je	.L8095
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %r9d
	cmpl	%ecx, %r9d
	jge	.L11326
.L8092:
	movslq	%edx,%rsi
	incl	%edx
	salq	$3, %rsi
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rsi
	movq	%rbx, (%rsi)
	movzbl	16(%rbx), %eax
	cmpb	$13, %al
	je	.L8093
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r14d
	movslq	%r14d,%r11
	leal	1(%r14), %r10d
	salq	$3, %r11
	movl	%r10d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r11
	movq	%rax, (%r11)
	xorl	%eax, %eax
	movq	56(%rbx), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r8d
	movslq	%r8d,%rcx
	leal	1(%r8), %r13d
	salq	$3, %rcx
	movl	%r13d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rax, (%rcx)
	movzbl	16(%rbx), %eax
.L8093:
	cmpb	$6, %al
	je	.L8095
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	builtin_type_tdescs_len(%rip), %r9d
	movslq	%r9d,%rsi
	leal	1(%r9), %r12d
	salq	$3, %rsi
	movl	%r12d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rsi
	movq	%rax, (%rsi)
	xorl	%eax, %eax
	movl	$1, %esi
	movq	64(%rbx), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %edi
	movslq	%edi,%r15
	leal	1(%rdi), %ebx
	salq	$3, %r15
	movl	%ebx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r15
	movq	%rax, (%r15)
.L8095:
.L8352:
.L8367:
	movq	char_type_node(%rip), %rdi
	movq	unsigned_char_type_node(%rip), %rsi
	xorl	%eax, %eax
	call	build_array_type
	movq	unsigned_char_type_node(%rip), %rsi
	movq	integer_type_node(%rip), %rdi
	movq	%rax, char_array_type_node(%rip)
	xorl	%eax, %eax
	call	build_array_type
	movl	$21, %edi
	movq	%rax, int_array_type_node(%rip)
	xorl	%eax, %eax
	call	make_lang_type
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%esi, %esi
	movq	integer_type_node(%rip), %rdi
	movq	%rax, class_star_type_node(%rip)
	xorl	%eax, %eax
	call	build_function_type
	movq	%rax, %rdi
	movq	%rax, default_function_type(%rip)
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%eax, %eax
	movq	void_type_node(%rip), %rdi
	call	build_pointer_type
	xorl	%edx, %edx
	movl	$1, %esi
	movq	void_type_node(%rip), %rdi
	movq	%rax, ptr_type_node(%rip)
	xorl	%eax, %eax
	call	build_type_variant
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	movq	ptr_type_node(%rip), %rbx
	movq	%rax, const_ptr_type_node(%rip)
	movl	flag_dossier(%rip), %eax
	testl	%eax, %eax
	je	.L8395
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %r13d
	cmpl	%ecx, %r13d
	jge	.L11327
.L8392:
	movslq	%edx,%r8
	incl	%edx
	salq	$3, %r8
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r8
	movq	%rbx, (%r8)
	movzbl	16(%rbx), %eax
	cmpb	$13, %al
	je	.L8393
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r11d
	movslq	%r11d,%rdi
	leal	1(%r11), %r14d
	salq	$3, %rdi
	movl	%r14d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rdi
	movq	%rax, (%rdi)
	xorl	%eax, %eax
	movq	56(%rbx), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r10d
	movslq	%r10d,%rcx
	salq	$3, %rcx
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rax, (%rcx)
	leal	1(%r10), %eax
	movl	%eax, builtin_type_tdescs_len(%rip)
	movzbl	16(%rbx), %eax
.L8393:
	cmpb	$6, %al
	je	.L8395
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	builtin_type_tdescs_len(%rip), %esi
	movslq	%esi,%r13
	leal	1(%rsi), %r9d
	movl	$1, %esi
	salq	$3, %r13
	movl	%r9d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r13
	movq	%rax, (%r13)
	xorl	%eax, %eax
	movq	64(%rbx), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r15d
	movslq	%r15d,%r12
	leal	1(%r15), %ebx
	salq	$3, %r12
	movl	%ebx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r12
	movq	%rax, (%r12)
.L8395:
	movq	void_list_node(%rip), %r13
	movq	integer_type_node(%rip), %rsi
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%r13, %rdx
	call	tree_cons
	movq	%r13, %rdx
	movq	double_type_node(%rip), %rsi
	movq	%rax, %r14
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	tree_cons
	movq	%r13, %rdx
	movq	ptr_type_node(%rip), %rsi
	movq	%rax, %r15
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	tree_cons
	xorl	%eax, %eax
	movq	%r15, %rsi
	movq	double_type_node(%rip), %rdi
	call	build_function_type
	movq	%r15, %rdx
	movq	double_type_node(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, double_ftype_double(%rip)
	xorl	%eax, %eax
	call	tree_cons
	movq	double_type_node(%rip), %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_function_type
	movq	%r14, %rsi
	movq	integer_type_node(%rip), %rdi
	movq	%rax, double_ftype_double_double(%rip)
	xorl	%eax, %eax
	call	build_function_type
	movq	%r13, %rdx
	movq	long_integer_type_node(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, int_ftype_int(%rip)
	xorl	%eax, %eax
	call	tree_cons
	movq	long_integer_type_node(%rip), %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_function_type
	movq	%r14, %rdx
	movq	ptr_type_node(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, long_ftype_long(%rip)
	xorl	%eax, %eax
	call	tree_cons
	movq	ptr_type_node(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	void_type_node(%rip), %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_function_type
	movq	%r13, %rdx
	movq	sizetype(%rip), %rsi
	movq	%rax, void_ftype_ptr_ptr_int(%rip)
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	tree_cons
	movq	const_ptr_type_node(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	const_ptr_type_node(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	integer_type_node(%rip), %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_function_type
	movq	%r14, %rdx
	movq	integer_type_node(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, int_ftype_cptr_cptr_sizet(%rip)
	xorl	%eax, %eax
	call	tree_cons
	movq	ptr_type_node(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	void_type_node(%rip), %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_function_type
	movq	%r13, %rdx
	movq	const_string_type_node(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, void_ftype_ptr_int_int(%rip)
	xorl	%eax, %eax
	call	tree_cons
	movq	string_type_node(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	string_type_node(%rip), %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_function_type
	movq	%r13, %rdx
	movq	const_string_type_node(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, string_ftype_ptr_ptr(%rip)
	xorl	%eax, %eax
	call	tree_cons
	movq	const_string_type_node(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	integer_type_node(%rip), %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_function_type
	movq	%r13, %rdx
	movq	const_string_type_node(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, int_ftype_string_string(%rip)
	xorl	%eax, %eax
	call	tree_cons
	movq	sizetype(%rip), %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_function_type
	movl	flag_traditional(%rip), %edx
	movq	%rax, sizet_ftype_string(%rip)
	testl	%edx, %edx
	je	.L8396
	movq	string_type_node(%rip), %rbx
.L8397:
.L8654:
.L8669:
	movq	sizetype(%rip), %rsi
	xorl	%edi, %edi
	movq	%r13, %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	const_ptr_type_node(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	ptr_type_node(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rbx, %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_function_type
	xorl	%esi, %esi
	movq	ptr_type_node(%rip), %rdi
	movq	%rax, %r12
	xorl	%eax, %eax
	call	build_array_type
	movq	%rax, %rdi
	movq	%rax, vtbl_type_node(%rip)
	xorl	%eax, %eax
	call	layout_type
	movq	vtbl_type_node(%rip), %rdi
	movl	$1, %esi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	build_type_variant
	movq	%rax, %rbx
	movq	%rax, vtbl_type_node(%rip)
	movl	flag_dossier(%rip), %r8d
	testl	%r8d, %r8d
	je	.L8697
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %r10d
	cmpl	%ecx, %r10d
	jge	.L11328
.L8694:
	movslq	%edx,%rcx
	incl	%edx
	salq	$3, %rcx
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rbx, (%rcx)
	movzbl	16(%rbx), %eax
	cmpb	$13, %al
	je	.L8695
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	builtin_type_tdescs_len(%rip), %r14d
	movslq	%r14d,%r15
	leal	1(%r14), %esi
	salq	$3, %r15
	movl	%esi, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r15
	movl	$1, %esi
	movq	%rax, (%r15)
	xorl	%eax, %eax
	movq	56(%rbx), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %edi
	movslq	%edi,%r9
	leal	1(%rdi), %r11d
	salq	$3, %r9
	movl	%r11d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r9
	movq	%rax, (%r9)
	movzbl	16(%rbx), %eax
.L8695:
	cmpb	$6, %al
	je	.L8697
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r11d
	movslq	%r11d,%rcx
	salq	$3, %rcx
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rax, (%rcx)
	movq	64(%rbx), %rdi
	leal	1(%r11), %eax
	movl	%eax, builtin_type_tdescs_len(%rip)
	xorl	%eax, %eax
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r8d
	movslq	%r8d,%r10
	leal	1(%r8), %ebx
	salq	$3, %r10
	movl	%ebx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r10
	movq	%rax, (%r10)
.L8697:
	movq	int_ftype_int(%rip), %rsi
	xorl	%r8d, %r8d
	movl	$pushdecl, %ecx
	movl	$.LC59, %edi
	movl	$27, %edx
	xorl	%eax, %eax
	call	define_function
	xorl	%eax, %eax
	movq	%r13, %rdx
	movq	sizetype(%rip), %rsi
	xorl	%edi, %edi
	call	tree_cons
	movq	ptr_type_node(%rip), %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_function_type
	movl	$.LC61, %r8d
	movl	$pushdecl, %ecx
	movq	%rax, %rsi
	movl	$.LC60, %edi
	movl	$1, %edx
	xorl	%eax, %eax
	call	define_function
	xorl	%eax, %eax
	xorl	%r8d, %r8d
	movq	int_ftype_int(%rip), %rsi
	movl	$.LC62, %edi
	movl	$2, %edx
	movl	$pushdecl, %ecx
	call	define_function
	xorl	%eax, %eax
	xorl	%r8d, %r8d
	movq	double_ftype_double(%rip), %rsi
	movl	$.LC63, %edi
	movl	$3, %edx
	movl	$pushdecl, %ecx
	call	define_function
	xorl	%eax, %eax
	xorl	%r8d, %r8d
	movq	long_ftype_long(%rip), %rsi
	movl	$.LC64, %edi
	movl	$4, %edx
	movl	$pushdecl, %ecx
	call	define_function
	xorl	%eax, %eax
	xorl	%r8d, %r8d
	movq	int_ftype_int(%rip), %rsi
	movl	$.LC65, %edi
	movl	$5, %edx
	movl	$pushdecl, %ecx
	call	define_function
	xorl	%eax, %eax
	xorl	%r8d, %r8d
	movq	double_ftype_double(%rip), %rsi
	movl	$.LC66, %edi
	movl	$18, %edx
	movl	$pushdecl, %ecx
	call	define_function
	xorl	%eax, %eax
	xorl	%r8d, %r8d
	movq	double_ftype_double(%rip), %rsi
	movl	$.LC67, %edi
	movl	$19, %edx
	movl	$pushdecl, %ecx
	call	define_function
	xorl	%eax, %eax
	xorl	%r8d, %r8d
	movq	double_ftype_double(%rip), %rsi
	movl	$20, %edx
	movl	$pushdecl, %ecx
	movl	$.LC68, %edi
	call	define_function
	xorl	%eax, %eax
	xorl	%esi, %esi
	movq	ptr_type_node(%rip), %rdi
	call	build_function_type
	xorl	%r8d, %r8d
	movl	$pushdecl, %ecx
	movq	%rax, %rsi
	movl	$.LC69, %edi
	movl	$23, %edx
	xorl	%eax, %eax
	call	define_function
	xorl	%eax, %eax
	xorl	%r8d, %r8d
	movq	default_function_type(%rip), %rsi
	movl	$24, %edx
	movl	$pushdecl, %ecx
	movl	$.LC70, %edi
	call	define_function
	xorl	%eax, %eax
	movq	%r13, %rsi
	movq	ptr_type_node(%rip), %rdi
	call	build_function_type
	xorl	%r8d, %r8d
	movl	$pushdecl, %ecx
	movq	%rax, %rsi
	movl	$.LC71, %edi
	movl	$25, %edx
	xorl	%eax, %eax
	call	define_function
	xorl	%eax, %eax
	movl	$.LC73, %r8d
	movq	%r12, %rsi
	movl	$.LC72, %edi
	movl	$12, %edx
	movl	$pushdecl, %ecx
	call	define_function
	xorl	%eax, %eax
	movl	$.LC75, %r8d
	movq	int_ftype_cptr_cptr_sizet(%rip), %rsi
	movl	$.LC74, %edi
	movl	$13, %edx
	movl	$pushdecl, %ecx
	call	define_function
	xorl	%eax, %eax
	movl	$.LC77, %r8d
	movq	int_ftype_string_string(%rip), %rsi
	movl	$.LC76, %edi
	movl	$16, %edx
	movl	$pushdecl, %ecx
	call	define_function
	xorl	%eax, %eax
	movl	$.LC79, %r8d
	movq	string_ftype_ptr_ptr(%rip), %rsi
	movl	$.LC78, %edi
	movl	$15, %edx
	movl	$pushdecl, %ecx
	call	define_function
	xorl	%eax, %eax
	movl	$.LC81, %r8d
	movq	sizet_ftype_string(%rip), %rsi
	movl	$.LC80, %edi
	movl	$17, %edx
	movl	$pushdecl, %ecx
	call	define_function
	xorl	%eax, %eax
	xorl	%r8d, %r8d
	movq	%r12, %rsi
	movl	$.LC73, %edi
	movl	$12, %edx
	movl	$pushdecl, %ecx
	call	define_function
	xorl	%eax, %eax
	xorl	%r8d, %r8d
	movq	int_ftype_cptr_cptr_sizet(%rip), %rsi
	movl	$.LC75, %edi
	movl	$13, %edx
	movl	$pushdecl, %ecx
	call	define_function
	xorl	%eax, %eax
	xorl	%r8d, %r8d
	movq	int_ftype_string_string(%rip), %rsi
	movl	$.LC77, %edi
	movl	$16, %edx
	movl	$pushdecl, %ecx
	call	define_function
	xorl	%eax, %eax
	xorl	%r8d, %r8d
	movq	string_ftype_ptr_ptr(%rip), %rsi
	movl	$.LC79, %edi
	movl	$15, %edx
	movl	$pushdecl, %ecx
	call	define_function
	xorl	%eax, %eax
	xorl	%r8d, %r8d
	movq	sizet_ftype_string(%rip), %rsi
	movl	$17, %edx
	movl	$pushdecl, %ecx
	movl	$.LC81, %edi
	call	define_function
	xorl	%eax, %eax
	movl	$24, %edi
	call	make_node
	movl	$.LC82, %edi
	movq	%rax, unknown_type_node(%rip)
	xorl	%eax, %eax
	call	get_identifier
	movq	unknown_type_node(%rip), %rdx
	movl	$32, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_decl
	movq	current_binding_level(%rip), %r12
	movq	%rax, %r13
	movq	112(%rax), %r14
	movq	current_function_decl(%rip), %rax
	movq	%r12, -2664(%rbp)
	cmpq	%rax, %r13
	je	.L10802
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L11329
.L8699:
	movq	%rax, 64(%r13)
.L8698:
	cmpb	$32, %dl
	je	.L11330
.L8700:
	testq	%r14, %r14
	je	.L8701
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L11331
	cmpq	$0, 48(%r14)
	jne	.L8704
	movq	$0, -2640(%rbp)
.L8703:
	cmpq	$0, -2640(%rbp)
	je	.L8721
	movq	-2640(%rbp), %rdx
	cmpq	error_mark_node(%rip), %rdx
	je	.L11332
.L8711:
	cmpq	$0, -2640(%rbp)
	je	.L10806
	movq	-2640(%rbp), %rsi
	cmpb	$34, 16(%rsi)
	je	.L11333
.L8713:
	movq	-2640(%rbp), %rax
	testq	%rax, %rax
	movq	24(%rax), %r12
	movl	32(%rax), %ebx
	je	.L10806
	movzbl	16(%rax), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L8715
	cmpb	$32, %al
	je	.L8721
	cmpb	$32, %dl
	je	.L10920
	movq	-2640(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10806
	.p2align 4,,7
.L8720:
	movq	void_type_node(%rip), %r12
	movq	unknown_type_node(%rip), %r10
	movl	$.LC52, %edi
	xorl	%eax, %eax
	movq	32(%r12), %rsi
	movl	$1, 48(%r10)
	movq	%rsi, 32(%r10)
	movzbl	44(%r12), %edx
	movb	%dl, 44(%r10)
	movq	unknown_type_node(%rip), %r8
	movq	%r8, 8(%r8)
	movq	%r8, 56(%r8)
	movq	%r8, 64(%r8)
	call	get_identifier
	movq	40(%rax), %rdi
	xorl	%eax, %eax
	movq	8(%rdi), %rbx
	movzbl	45(%rbx), %r15d
	movq	%rbx, wchar_type_node(%rip)
	movl	%r15d, %edi
	call	make_signed_type
	movl	%r15d, %edi
	movq	%rax, signed_wchar_type_node(%rip)
	xorl	%eax, %eax
	call	make_unsigned_type
	movq	wchar_type_node(%rip), %r13
	movq	%rax, unsigned_wchar_type_node(%rip)
	testb	$64, 17(%r13)
	jne	.L8975
	movq	signed_wchar_type_node(%rip), %rax
.L8975:
	movl	$.LC83, %r11d
	movq	%rax, wchar_type_node(%rip)
	movq	%rax, -1512(%rbp)
	testq	%r11, %r11
	movq	$0, -2672(%rbp)
	movq	ridpointers+192(%rip), %r15
	je	.L8977
	movl	$.LC83, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	%rax, -2672(%rbp)
.L8977:
	cmpq	$0, -2672(%rbp)
	jne	.L11334
.L8978:
	testq	%r15, %r15
	je	.L9260
	cmpq	$0, -2672(%rbp)
	je	.L9261
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11335
.L11201:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L9263:
	movq	$0, 8(%r15)
	movq	-2712(%rbp), %rdi
	movq	%rdi, 40(%r15)
.L9260:
	movl	flag_dossier(%rip), %eax
	testl	%eax, %eax
	je	.L9275
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %r15d
	cmpl	%ecx, %r15d
	jge	.L11336
.L9272:
	movslq	%edx,%rcx
	movq	-1512(%rbp), %rsi
	incl	%edx
	salq	$3, %rcx
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rsi, (%rcx)
	movzbl	16(%rsi), %eax
	cmpb	$13, %al
	je	.L9273
	movq	%rsi, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %r9d
	movq	-1512(%rbp), %r14
	movslq	%r9d,%r13
	leal	1(%r9), %r11d
	salq	$3, %r13
	movl	%r11d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r13
	movq	%rax, (%r13)
	xorl	%eax, %eax
	movq	56(%r14), %rdi
	call	build_type_variant
	movq	-1512(%rbp), %rsi
	movl	builtin_type_tdescs_len(%rip), %r8d
	movslq	%r8d,%r10
	salq	$3, %r10
	addq	builtin_type_tdescs_arr(%rip), %r10
	movq	%rax, (%r10)
	leal	1(%r8), %eax
	movl	%eax, builtin_type_tdescs_len(%rip)
	movzbl	16(%rsi), %eax
.L9273:
	cmpb	$6, %al
	je	.L9275
	movq	-1512(%rbp), %rdi
	xorl	%eax, %eax
	call	build_reference_type
	movq	-1512(%rbp), %rdx
	movl	builtin_type_tdescs_len(%rip), %esi
	movslq	%esi,%rcx
	leal	1(%rsi), %ebx
	movl	$1, %esi
	salq	$3, %rcx
	movl	%ebx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%rax, (%rcx)
	xorl	%eax, %eax
	movq	64(%rdx), %rdi
	xorl	%edx, %edx
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %edi
	movslq	%edi,%r15
	leal	1(%rdi), %r12d
	salq	$3, %r15
	movl	%r12d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r15
	movq	%rax, (%r15)
.L9275:
	movq	wchar_type_node(%rip), %rdi
	movq	unsigned_char_type_node(%rip), %rsi
	xorl	%eax, %eax
	call	build_array_type
	movq	%rax, wchar_array_type_node(%rip)
	movl	flag_gc(%rip), %eax
	testl	%eax, %eax
	jne	.L11337
.L9276:
	movl	$21, %edi
	xorl	%eax, %eax
	movl	$.LC88, %r13d
	call	make_lang_type
	movl	$.LC85, %edi
	movq	%rax, vtable_entry_type(%rip)
	xorl	%eax, %eax
	call	get_identifier
	movq	short_integer_type_node(%rip), %rdx
	movl	$36, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_lang_field_decl
	movl	$.LC86, %edi
	movq	%rax, -208(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	movq	short_integer_type_node(%rip), %rdx
	movl	$36, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_lang_field_decl
	movl	$.LC87, %edi
	movq	%rax, -200(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	movq	ptr_type_node(%rip), %rdx
	movl	$36, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_lang_field_decl
	movq	double_type_node(%rip), %r8
	movl	$2, %ecx
	movq	vtable_entry_type(%rip), %rdi
	movl	$.LC88, %esi
	leaq	-208(%rbp), %rdx
	movq	%rax, -192(%rbp)
	xorl	%eax, %eax
	call	finish_builtin_type
	movq	-192(%rbp), %rdi
	xorl	%eax, %eax
	call	copy_node
	movl	$.LC89, %edi
	movq	short_integer_type_node(%rip), %r11
	movq	%rax, -184(%rbp)
	movq	%r11, 8(%rax)
	xorl	%eax, %eax
	movq	-184(%rbp), %r14
	call	get_identifier
	movq	short_integer_type_node(%rip), %rdx
	movq	%rax, 56(%r14)
	xorl	%eax, %eax
	movq	-184(%rbp), %r12
	movzbl	44(%rdx), %r10d
	xorl	%edx, %edx
	movb	%r10b, 52(%r12)
	movq	-184(%rbp), %rsi
	movq	short_integer_type_node(%rip), %r15
	movq	32(%r15), %rcx
	movq	%rcx, 40(%rsi)
	movl	$1, %esi
	movq	-184(%rbp), %r8
	andb	$-65, 17(%r8)
	movq	-184(%rbp), %rdi
	movq	-192(%rbp), %rbx
	movq	%rdi, (%rbx)
	movq	vtable_entry_type(%rip), %rdi
	call	build_type_variant
	testq	%r13, %r13
	movq	$0, -2760(%rbp)
	movq	%rax, %r14
	movq	%rax, vtable_entry_type(%rip)
	je	.L9572
	movl	$.LC88, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	%rax, -2760(%rbp)
.L9572:
	cmpq	$0, -2760(%rbp)
	jne	.L11338
.L9573:
	xorl	%eax, %eax
	testq	%rax, %rax
	je	.L9855
	cmpq	$0, -2760(%rbp)
	je	.L9856
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L9857
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
.L11222:
	call	tree_cons
	movq	%rax, 32(%rbx)
.L9858:
	movq	$0, 8
	movq	-2800(%rbp), %rsi
	movq	%rsi, 40
.L9855:
	movl	flag_dossier(%rip), %edx
	testl	%edx, %edx
	je	.L9871
	movl	builtin_type_tdescs_len(%rip), %edx
	movl	builtin_type_tdescs_max(%rip), %ecx
	leal	5(%rdx), %r10d
	cmpl	%ecx, %r10d
	jge	.L11339
.L9867:
	movslq	%edx,%rcx
	incl	%edx
	salq	$3, %rcx
	movl	%edx, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	%r14, (%rcx)
	movzbl	16(%r14), %eax
	cmpb	$13, %al
	je	.L9868
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	xorl	%edx, %edx
	movl	$1, %esi
	movl	builtin_type_tdescs_len(%rip), %ebx
	movslq	%ebx,%rdi
	leal	1(%rbx), %r15d
	salq	$3, %rdi
	movl	%r15d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %rdi
	movq	%rax, (%rdi)
	xorl	%eax, %eax
	movq	56(%r14), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r8d
	movslq	%r8d,%r11
	salq	$3, %r11
	addq	builtin_type_tdescs_arr(%rip), %r11
	movq	%rax, (%r11)
	leal	1(%r8), %eax
	movl	%eax, builtin_type_tdescs_len(%rip)
	movzbl	16(%r14), %eax
.L9868:
	cmpb	$6, %al
	je	.L10871
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_reference_type
	xorl	%edx, %edx
	movl	builtin_type_tdescs_len(%rip), %esi
	movslq	%esi,%r10
	leal	1(%rsi), %r12d
	movl	$1, %esi
	salq	$3, %r10
	movl	%r12d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r10
	movq	%rax, (%r10)
	xorl	%eax, %eax
	movq	64(%r14), %rdi
	call	build_type_variant
	movl	builtin_type_tdescs_len(%rip), %r13d
	movslq	%r13d,%r9
	leal	1(%r13), %r14d
	salq	$3, %r9
	movl	%r14d, builtin_type_tdescs_len(%rip)
	addq	builtin_type_tdescs_arr(%rip), %r9
	movq	%rax, (%r9)
.L10871:
	movl	flag_dossier(%rip), %edx
	testl	%edx, %edx
	jne	.L11340
.L9871:
	movq	lang_name_cplusplus(%rip), %rdi
	testl	%edx, %edx
	movq	%rdi, current_lang_name(%rip)
	je	.L9872
	movl	builtin_type_tdescs_len(%rip), %ebx
	testl	%ebx, %ebx
	jle	.L9872
	.p2align 4,,7
.L9876:
	decl	%ebx
	xorl	%esi, %esi
	xorl	%eax, %eax
	movslq	%ebx,%rcx
	salq	$3, %rcx
	addq	builtin_type_tdescs_arr(%rip), %rcx
	movq	(%rcx), %rdi
	call	build_t_desc
	movq	32(%rax), %rdx
	orb	$-128, 17(%rax)
	orb	$8, 18(%rdx)
	testl	%ebx, %ebx
	jg	.L9876
.L9872:
	movq	void_list_node(%rip), %rdx
	movq	sizetype(%rip), %rsi
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	ansi_opname+1016(%rip), %rbx
	call	tree_cons
	movq	ptr_type_node(%rip), %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_function_type
	xorl	%edx, %edx
	movq	%rbx, %rdi
	movq	24(%rax), %rsi
	movq	%rax, %r13
	xorl	%eax, %eax
	call	build_decl_overload
	movl	$push_overloaded_decl_1, %ecx
	xorl	%edx, %edx
	movq	32(%rax), %r8
	movq	32(%rbx), %rdi
	movq	%r13, %rsi
	xorl	%eax, %eax
	call	define_function
	xorl	%eax, %eax
	movq	void_list_node(%rip), %rdx
	movq	ptr_type_node(%rip), %rsi
	xorl	%edi, %edi
	movq	ansi_opname+984(%rip), %r14
	call	tree_cons
	movq	void_type_node(%rip), %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_function_type
	xorl	%edx, %edx
	movq	%r14, %rdi
	movq	24(%rax), %rsi
	movq	%rax, %r15
	xorl	%eax, %eax
	call	build_decl_overload
	movl	$push_overloaded_decl_1, %ecx
	xorl	%edx, %edx
	movq	32(%rax), %r8
	movq	32(%r14), %rdi
	movq	%r15, %rsi
	xorl	%eax, %eax
	call	define_function
	xorl	%eax, %eax
	movq	void_list_node(%rip), %rsi
	movq	void_type_node(%rip), %rdi
	call	build_function_type
	xorl	%r8d, %r8d
	xorl	%ecx, %ecx
	xorl	%edx, %edx
	movq	%rax, %rsi
	movl	$.LC113, %edi
	xorl	%eax, %eax
	call	define_function
	xorl	%esi, %esi
	movq	void_type_node(%rip), %rdi
	movq	%rax, abort_fndecl(%rip)
	xorl	%eax, %eax
	call	build_function_type
	xorl	%r8d, %r8d
	xorl	%edx, %edx
	movq	%rax, %rsi
	movl	$.LC114, %edi
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	define_function
	movq	%rax, unhandled_exception_fndecl(%rip)
	xorl	%eax, %eax
	call	init_class_processing
	xorl	%eax, %eax
	call	init_init_processing
	xorl	%eax, %eax
	call	init_search_processing
	movl	flag_handle_exceptions(%rip), %eax
	testl	%eax, %eax
	je	.L9879
	cmpl	$2, %eax
	je	.L11341
.L9880:
	xorl	%eax, %eax
	call	init_exception_processing
.L9879:
	movl	flag_gc(%rip), %eax
	testl	%eax, %eax
	jne	.L11342
.L9881:
	movl	flag_no_inline(%rip), %r8d
	testl	%r8d, %r8d
	je	.L9882
	movl	$0, flag_inline_functions(%rip)
	movl	$0, flag_default_inline(%rip)
.L9882:
	movl	flag_cadillac(%rip), %eax
	testl	%eax, %eax
	jne	.L11343
.L9883:
	xorl	%eax, %eax
	call	declare_function_name
	movl	$1, warn_return_type(%rip)
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	leave
	ret
.L11343:
	xorl	%eax, %eax
	call	init_cadillac
	jmp	.L9883
.L11342:
	xorl	%eax, %eax
	call	init_gc_processing
	jmp	.L9881
.L11341:
	movl	$2, flag_this_is_variable(%rip)
	jmp	.L9880
.L11340:
	movl	$21, %edi
	xorl	%eax, %eax
	call	make_lang_type
	movl	$21, %edi
	movq	%rax, __t_desc_type_node(%rip)
	xorl	%eax, %eax
	call	make_lang_type
	movl	$21, %edi
	movq	%rax, __i_desc_type_node(%rip)
	xorl	%eax, %eax
	call	make_lang_type
	xorl	%esi, %esi
	movq	__t_desc_type_node(%rip), %r10
	movq	%rax, __m_desc_type_node(%rip)
	xorl	%eax, %eax
	movq	56(%r10), %rdi
	call	build_array_type
	movq	__i_desc_type_node(%rip), %rsi
	movq	%rax, __t_desc_array_type(%rip)
	xorl	%eax, %eax
	movq	56(%rsi), %rdi
	xorl	%esi, %esi
	call	build_array_type
	xorl	%esi, %esi
	movq	__m_desc_type_node(%rip), %r9
	movq	%rax, __i_desc_array_type(%rip)
	xorl	%eax, %eax
	movq	56(%r9), %rdi
	call	build_array_type
	movl	$.LC90, %edi
	movq	%rax, __m_desc_array_type(%rip)
	xorl	%eax, %eax
	call	get_identifier
	movq	string_type_node(%rip), %rdx
	movl	$36, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_lang_field_decl
	movl	$.LC91, %edi
	movq	%rax, -208(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	movq	unsigned_type_node(%rip), %rdx
	movl	$36, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_lang_field_decl
	movl	$.LC92, %edi
	movq	%rax, -200(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	movq	unsigned_type_node(%rip), %rdx
	movl	$36, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_lang_field_decl
	movl	$.LC93, %edi
	movq	%rax, -192(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	movq	__t_desc_type_node(%rip), %rbx
	movl	$36, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	movq	56(%rbx), %rdx
	call	build_lang_field_decl
	movl	$.LC94, %edi
	movq	%rax, -184(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	movq	integer_type_node(%rip), %rdx
	movl	$36, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_lang_field_decl
	movl	$.LC95, %edi
	movq	%rax, -176(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	movq	integer_type_node(%rip), %rdx
	movl	$36, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_lang_field_decl
	movl	$.LC96, %edi
	movq	%rax, -168(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	movq	__i_desc_array_type(%rip), %rdi
	movq	%rax, %r13
	xorl	%eax, %eax
	call	build_pointer_type
	movq	%r13, %rsi
	movl	$36, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	build_lang_field_decl
	movl	$.LC97, %edi
	movq	%rax, -160(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	movq	__m_desc_array_type(%rip), %rdi
	movq	%rax, %r14
	xorl	%eax, %eax
	call	build_pointer_type
	movq	%r14, %rsi
	movl	$36, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	build_lang_field_decl
	movl	$.LC98, %edi
	movq	%rax, -152(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	movq	__t_desc_array_type(%rip), %rdi
	movq	%rax, %r15
	xorl	%eax, %eax
	call	build_pointer_type
	movq	%r15, %rsi
	movl	$36, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	build_lang_field_decl
	movl	$.LC99, %edi
	movq	%rax, -144(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	movq	__t_desc_array_type(%rip), %rdi
	movq	%rax, %r12
	xorl	%eax, %eax
	call	build_pointer_type
	movq	%r12, %rsi
	movl	$36, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	build_lang_field_decl
	movl	$.LC100, %edi
	movq	%rax, -136(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	movq	integer_type_node(%rip), %rdi
	movq	%rax, %r13
	xorl	%eax, %eax
	call	build_pointer_type
	movq	%r13, %rsi
	movl	$36, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	build_lang_field_decl
	movq	integer_type_node(%rip), %r8
	movl	$10, %ecx
	movq	__t_desc_type_node(%rip), %rdi
	movl	$.LC101, %esi
	leaq	-208(%rbp), %rdx
	movq	%rax, -128(%rbp)
	xorl	%eax, %eax
	call	finish_builtin_type
	movl	$.LC90, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	string_type_node(%rip), %rdx
	movl	$36, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_lang_field_decl
	movl	$.LC102, %edi
	movq	%rax, -208(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	movq	integer_type_node(%rip), %rdx
	movl	$36, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_lang_field_decl
	movl	$.LC103, %edi
	movq	%rax, -200(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	movq	__t_desc_type_node(%rip), %r11
	movl	$36, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	movq	56(%r11), %rdx
	call	build_lang_field_decl
	movq	integer_type_node(%rip), %r8
	movl	$2, %ecx
	movq	__i_desc_type_node(%rip), %rdi
	movl	$.LC104, %esi
	leaq	-208(%rbp), %rdx
	movq	%rax, -192(%rbp)
	xorl	%eax, %eax
	call	finish_builtin_type
	movl	$.LC90, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	string_type_node(%rip), %rdx
	movl	$36, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_lang_field_decl
	movl	$.LC105, %edi
	movq	%rax, -208(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	movq	integer_type_node(%rip), %rdx
	movl	$36, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_lang_field_decl
	movl	$.LC106, %edi
	movq	%rax, -200(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	movq	__t_desc_type_node(%rip), %r8
	movl	$36, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	movq	56(%r8), %rdx
	call	build_lang_field_decl
	movl	$.LC107, %edi
	movq	%rax, -192(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	movq	__t_desc_type_node(%rip), %rcx
	movl	$36, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	movq	56(%rcx), %rdx
	call	build_lang_field_decl
	movl	$.LC108, %edi
	movq	%rax, -184(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	movq	default_function_type(%rip), %rdi
	movq	%rax, %r14
	xorl	%eax, %eax
	call	build_pointer_type
	movq	%r14, %rsi
	movl	$36, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	build_lang_field_decl
	movl	$.LC109, %edi
	movq	%rax, -176(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	movq	short_integer_type_node(%rip), %rdx
	movl	$36, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_lang_field_decl
	movl	$.LC110, %edi
	movq	%rax, -168(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	movq	short_integer_type_node(%rip), %rdx
	movl	$36, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_lang_field_decl
	movl	$.LC111, %edi
	movq	%rax, -160(%rbp)
	xorl	%eax, %eax
	call	get_identifier
	xorl	%esi, %esi
	movq	__t_desc_type_node(%rip), %rdx
	movq	%rax, %r15
	xorl	%eax, %eax
	movq	56(%rdx), %rdi
	call	build_array_type
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	movq	%r15, %rsi
	movl	$36, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	build_lang_field_decl
	movq	integer_type_node(%rip), %r8
	movl	$7, %ecx
	movq	__m_desc_type_node(%rip), %rdi
	movq	%rax, -152(%rbp)
	leaq	-208(%rbp), %rdx
	movl	$.LC112, %esi
	xorl	%eax, %eax
	call	finish_builtin_type
	movl	flag_dossier(%rip), %edx
	jmp	.L9871
.L11339:
	leal	(%rcx,%rcx), %edx
	movq	builtin_type_tdescs_arr(%rip), %rdi
	xorl	%eax, %eax
	movslq	%edx,%rsi
	movl	%edx, builtin_type_tdescs_max(%rip)
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L9867
.L9857:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9858
	movq	8, %rsi
	xorl	%edi, %edi
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	jmp	.L11222
.L9856:
	xorl	%esi, %esi
	movl	$32, %edi
	movq	%r14, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11344
.L11223:
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L9863:
	movq	$0, 8
	jmp	.L9855
.L11344:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9863
	jmp	.L11223
	.p2align 6,,7
.L11338:
	movq	-2760(%rbp), %rsi
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r14, %rdx
	call	build_decl
	movq	%rax, %r13
	movq	112(%rax), %r15
	movq	current_binding_level(%rip), %rax
	movq	%rax, -2792(%rbp)
	movq	current_function_decl(%rip), %rax
	cmpq	%rax, %r13
	je	.L10852
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L11345
.L9575:
	movq	%rax, 64(%r13)
.L9574:
	cmpb	$32, %dl
	je	.L11346
.L9576:
	testq	%r15, %r15
	je	.L9577
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L11347
	cmpq	$0, 48(%r15)
	jne	.L9580
	movq	$0, -2800(%rbp)
.L9579:
	cmpq	$0, -2800(%rbp)
	je	.L9597
	movq	-2800(%rbp), %r9
	cmpq	error_mark_node(%rip), %r9
	je	.L11348
.L9587:
	cmpq	$0, -2800(%rbp)
	je	.L10856
	movq	-2800(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L11349
.L9589:
	movq	-2800(%rbp), %rdi
	testq	%rdi, %rdi
	movq	24(%rdi), %r12
	movq	%rdi, %rsi
	movl	32(%rdi), %ebx
	je	.L10856
	movzbl	16(%rdi), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L9591
	cmpb	$32, %al
	je	.L9597
	cmpb	$32, %dl
	je	.L10923
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10856
.L10860:
	movq	global_binding_level(%rip), %rax
.L9596:
	movq	current_binding_level(%rip), %rbx
	cmpq	%rax, %rbx
	je	.L9850
	movq	-2760(%rbp), %r13
	movq	8(%r13), %rsi
	movq	%r13, %rdi
.L11221:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L9851:
	movq	-2760(%rbp), %rdx
	movl	$32, %eax
	cmpl	$31, %eax
	movq	$0, 8(%rdx)
	jg	.L9573
	movq	-2800(%rbp), %r12
	movq	%r12, 40(%rdx)
	jmp	.L9573
.L9850:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9851
	movq	-2760(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
	jmp	.L11221
.L10856:
	movzbl	16(%r13), %edx
.L9597:
	cmpb	$32, %dl
	je	.L10923
.L9605:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L9743
	movq	40(%r15), %rax
	testq	%rax, %rax
	je	.L9743
	testb	$1, 53(%rax)
	jne	.L9744
	testb	$8, 18(%rax)
	je	.L9743
.L9744:
	andb	$8, %dl
	je	.L11350
.L9743:
	movl	flag_traditional(%rip), %ecx
	testl	%ecx, %ecx
	je	.L10868
	testb	$1, 53(%r13)
	je	.L10868
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L9747
	movq	48(%r15), %r10
	testq	%r10, %r10
	movq	%r10, %rcx
	jne	.L9748
.L9747:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L9749
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L10215
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L9750
	movq	144(%rdi), %r11
	testb	$1, 3(%r11)
	jne	.L11351
.L9750:
	testq	%rcx, %rcx
	jne	.L10215
.L10216:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10215
.L9749:
	movq	40(%r15), %rcx
.L9748:
	testq	%rcx, %rcx
	je	.L10282
.L10215:
	cmpb	$32, 16(%rcx)
	je	.L9752
	movl	looking_for_typename(%rip), %esi
	testl	%esi, %esi
	js	.L9752
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L9760
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11218
	testl	%ebx, %ebx
	jle	.L11352
.L11218:
	movq	%rax, %rcx
.L9752:
	testq	%rcx, %rcx
	jne	.L10868
.L10282:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -2792(%rbp)
.L9746:
	cmpq	%rax, -2792(%rbp)
	je	.L11353
	movq	current_binding_level(%rip), %rbx
	movq	48(%r15), %r12
	movq	40(%r15), %r8
	cmpq	%rax, %rbx
	je	.L11354
.L11219:
	movq	16(%rbx), %rdx
	movq	%r15, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	movq	%r8, -2808(%rbp)
	call	tree_cons
	movq	-2808(%rbp), %r8
	movq	%rax, 16(%rbx)
.L9791:
	testq	%r12, %r12
	movq	%r13, 48(%r15)
	je	.L11355
.L9802:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L9804
	testq	%r12, %r12
	je	.L9805
	testb	$1, 53(%r13)
	jne	.L9805
	cmpb	$34, 16(%r12)
	je	.L11356
.L9805:
	movl	warn_shadow(%rip), %ebx
	testl	%ebx, %ebx
	je	.L9804
	testb	$1, 53(%r13)
	jne	.L9804
	movl	32(%r13), %edi
	testl	%edi, %edi
	je	.L9804
	testq	%rax, %rax
	jne	.L9804
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L9810
	cmpb	$34, 16(%r12)
	je	.L11357
.L9810:
	cmpq	$0, 56(%r15)
	je	.L9812
	movl	$.LC41, %edi
.L9811:
	testq	%rdi, %rdi
	jne	.L11220
.L9804:
	testq	%r12, %r12
	je	.L10869
	movq	%r12, %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	-2792(%rbp), %r12
	movq	16(%r12), %rdx
	call	tree_cons
	movq	%rax, 16(%r12)
.L10869:
	movzbl	16(%r13), %edx
.L9789:
	leal	-128(%rdx), %esi
	cmpb	$1, %sil
	jbe	.L9577
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L9577
	cmpb	$18, 16(%rcx)
	je	.L11358
.L9821:
	testb	$64, 46(%rcx)
	je	.L9577
.L9820:
	movq	-2792(%rbp), %rdx
	movzwl	64(%rdx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rdx)
	je	.L11359
.L10870:
	movzbl	16(%r13), %edx
.L9577:
	cmpb	$32, %dl
	je	.L11360
.L9823:
	movq	-2792(%rbp), %rbx
	movq	global_binding_level(%rip), %rax
	movq	(%rbx), %rdi
	cmpq	%rax, %rbx
	movq	%rdi, (%r13)
	movq	%r13, (%rbx)
	je	.L11361
.L9849:
	movq	%r13, -2800(%rbp)
	jmp	.L9596
.L11361:
	testb	$4, 17(%r13)
	jne	.L9849
	xorl	%eax, %eax
	movl	$124, %edi
	call	my_friendly_abort
	movq	global_binding_level(%rip), %rax
	jmp	.L9849
.L11360:
	testq	%r15, %r15
	je	.L9823
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L9824
	cmpq	class_binding_level(%rip), %rax
	je	.L9825
	movq	48(%r15), %rax
	testq	%rax, %rax
	je	.L9829
	cmpb	$32, 16(%rax)
	je	.L9827
.L9829:
	cmpq	$0, current_class_type(%rip)
	je	.L9824
	movq	56(%r15), %rax
	testq	%rax, %rax
	je	.L9824
	cmpb	$32, 16(%rax)
	je	.L9827
.L9824:
	movq	40(%r15), %rax
	testq	%rax, %rax
	je	.L9828
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L9827
	cmpb	$-127, %dl
	je	.L11362
.L9828:
	movq	current_class_name(%rip), %r15
	testq	%r15, %r15
	je	.L9823
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L11363
.L9835:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L9839
	cmpq	class_binding_level(%rip), %rax
	je	.L9840
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L9844
	cmpb	$32, 16(%rax)
	je	.L9842
.L9844:
	cmpq	$0, current_class_type(%rip)
	je	.L9839
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L9839
	cmpb	$32, 16(%rax)
	je	.L9842
.L9839:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L9823
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L9842
	cmpb	$-127, %dl
	jne	.L9823
	movq	$0, 8(%rbx)
	jmp	.L9823
.L9842:
	movq	8(%rax), %r15
	movq	%r15, 8(%rbx)
	jmp	.L9823
.L9840:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L9844
.L11363:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %rbx
	sete	%r11b
	movq	8(%r13), %r12
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r15)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r15), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r15), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r12, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L9835
.L11362:
	movq	$0, 8(%r15)
	jmp	.L9828
.L9827:
	movq	8(%rax), %rcx
	movq	%rcx, 8(%r15)
	jmp	.L9828
.L9825:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L9829
.L11359:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10870
.L11358:
	movq	8(%rcx), %r10
	testb	$64, 46(%r10)
	jne	.L9820
	jmp	.L9821
.L11220:
	movq	32(%r15), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L9804
.L9812:
	testq	%r12, %r12
	je	.L9814
	movl	$.LC42, %edi
	jmp	.L9811
.L9814:
	testq	%r8, %r8
	movl	$.LC43, %r9d
	cmovne	%r9, %rdi
	jmp	.L9811
.L11357:
	movl	$.LC40, %edi
	jmp	.L9811
.L11356:
	cmpb	$34, 16(%r13)
	je	.L9805
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r8
	movq	56(%r8), %rax
	je	.L9806
	movq	56(%rax), %rax
.L9806:
	movzbl	66(%rax), %r11d
	andl	$15, %r11d
	decl	%r11d
	jne	.L9804
	movl	$.LC40, %edi
	jmp	.L11220
	.p2align 6,,7
.L11355:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L11364
.L9794:
	testq	%r12, %r12
	jne	.L9802
	testq	%r8, %r8
	jne	.L9802
	testb	$1, 53(%r13)
	je	.L9802
	testb	$8, 18(%r13)
	je	.L9802
	orb	$8, 18(%r15)
	jmp	.L9802
	.p2align 6,,7
.L11364:
	testq	%r8, %r8
	je	.L9794
	cmpb	$29, 16(%r13)
	jne	.L9794
	cmpb	$29, 16(%r8)
	jne	.L9794
	movq	8(%r8), %rsi
	movq	8(%r13), %rdi
	xorl	%eax, %eax
	movl	$1, %edx
	movq	%r8, -2808(%rbp)
	call	comptypes
	movq	-2808(%rbp), %r8
	testl	%eax, %eax
	je	.L11365
	movzbl	53(%r8), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L9797
	movzbl	53(%r13), %esi
	leal	0(,%rax,8), %ecx
	leaq	88(%r13), %rdx
	andb	$-9, %sil
	orb	%cl, %sil
	movb	%sil, 53(%r13)
	cmpq	%r8, current_function_decl(%rip)
	je	.L9798
	movq	88(%r8), %rax
.L9799:
	movq	%rax, (%rdx)
	movq	136(%r8), %rsi
	movq	80(%r8), %r9
	movq	72(%r8), %rdx
	movzbl	17(%r13), %r10d
	movq	%rsi, 136(%r13)
	movq	%r9, 80(%r13)
	movq	%rdx, 72(%r13)
	movzbl	17(%r8), %edi
	movq	%r8, 96(%r13)
	andb	$127, %r10b
	shrb	$7, %dil
	movzbl	%dil, %ebx
	movl	%ebx, %r11d
	salb	$7, %r11b
	orb	%r11b, %r10b
	movb	%r10b, 17(%r13)
	movzbl	53(%r8), %ecx
.L9797:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L9800
	movzbl	53(%r13), %ecx
	salb	$4, %al
	andb	$-17, %cl
	orb	%al, %cl
	movb	%cl, 53(%r13)
	movl	128(%r8), %eax
	movl	%eax, 128(%r13)
.L9800:
	movq	8(%r8), %rdx
	cmpq	$0, 24(%rdx)
	je	.L9794
	cmpq	$0, 88(%r8)
	je	.L9794
	movq	8(%r13), %r10
	cmpq	$0, 24(%r10)
	jne	.L9794
	movq	%rdx, 8(%r13)
	jmp	.L9794
.L9798:
	xorl	%eax, %eax
	jmp	.L9799
.L11365:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	movq	-2808(%rbp), %r8
	jmp	.L9794
	.p2align 6,,7
.L11354:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9791
	jmp	.L11219
.L11353:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L11366
.L9766:
	cmpq	$0, 40(%r15)
	jne	.L9767
	testb	$8, 18(%r13)
	je	.L9767
	orb	$8, 18(%r15)
.L9767:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L11367
.L9769:
	movq	%r13, 40(%r15)
	movzbl	16(%r13), %edx
.L9768:
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L9780
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L9770
	testb	$1, 18(%rcx)
	je	.L9770
	orb	$1, 18(%r13)
	movq	72(%r15), %rax
.L9770:
	testq	%rax, %rax
	je	.L9780
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L9775
	testb	$8, 17(%rcx)
	je	.L9775
	orb	$8, 17(%r13)
	movq	72(%r15), %rax
.L9775:
	testq	%rax, %rax
	je	.L9780
	cmpq	$0, 8(%rax)
	je	.L9780
	cmpb	$29, %dl
	je	.L11368
.L9783:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L9780:
	testb	$8, 18(%r15)
	je	.L9789
	cmpb	$32, %dl
	je	.L9789
	testb	$8, 18(%r13)
	jne	.L9789
	testb	$1, 53(%r13)
	jne	.L9789
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L9785
	cmpq	$0, 8(%rax)
	jne	.L11369
.L9785:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11250:
	xorl	%eax, %eax
	call	warning
	jmp	.L10869
.L11369:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11250
.L11368:
	movq	8(%r13), %r9
	movq	integer_type_node(%rip), %rdi
	cmpq	%rdi, 8(%r9)
	jne	.L9783
	jmp	.L9780
	.p2align 6,,7
.L11367:
	cmpq	$0, -2800(%rbp)
	je	.L9769
	movq	-2800(%rbp), %r12
	cmpb	$32, 16(%r12)
	jne	.L9768
	jmp	.L9769
.L11366:
	testb	$8, 54(%r13)
	jne	.L9766
	andb	$-9, 18(%r13)
	jmp	.L9766
	.p2align 6,,7
.L10868:
	movq	global_binding_level(%rip), %rax
	jmp	.L9746
.L11352:
	testl	%esi, %esi
	jg	.L11218
	testl	%ebx, %ebx
	je	.L9752
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11218
	.p2align 6,,7
.L9760:
	movq	8(%rcx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rcx
	jmp	.L9752
.L11351:
	xorl	%ecx, %ecx
	movq	%r15, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L9752
	testq	%rax, %rax
	je	.L10216
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L9750
	.p2align 6,,7
.L11350:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L9743
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r15), %rdi
	call	warning_with_decl
	jmp	.L9743
	.p2align 6,,7
.L10923:
	movq	8(%r13), %rdx
	movq	80(%rdx), %rcx
	testq	%rcx, %rcx
	movq	%rcx, -2784(%rbp)
	je	.L9607
	movzbl	16(%rcx), %eax
	cmpb	$32, %al
	je	.L9606
.L9607:
	movq	global_binding_level(%rip), %rsi
	movq	%r13, -2784(%rbp)
	cmpq	%rsi, current_binding_level(%rip)
	jne	.L10861
	movq	%r13, 80(%rdx)
.L10861:
	movzbl	16(%r13), %eax
.L9610:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%bl
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	movq	-2784(%rbp), %rax
	movq	56(%rax), %rbx
	testq	%rbx, %rbx
	je	.L9734
	cmpq	$0, 72(%rax)
	je	.L11370
.L9734:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L9605
	cmpq	$0, 56(%rax)
	je	.L9605
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %rdi
	cmpq	global_binding_level(%rip), %rbx
	movq	%rdi, -1656(%rbp)
	je	.L9739
	movq	-1656(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
.L11217:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L9740:
	movq	-1656(%rbp), %rsi
	movq	%r12, 8(%rsi)
	jmp	.L9605
.L9739:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9740
	movq	-1656(%rbp), %r8
	movq	8(%r8), %rsi
	movq	%r8, %rdi
	jmp	.L11217
.L11370:
	movq	8(%r13), %r10
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	movq	%r10, -1648(%rbp)
	cmpb	$32, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L9735
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	-1648(%rbp), %r12
	movq	%r12, 8(%rax)
	jmp	.L9734
.L9735:
	movq	%rbx, 72(%r13)
	jmp	.L9734
.L9606:
	movq	-2784(%rbp), %rcx
	movq	current_binding_level(%rip), %rsi
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%rcx), %rbx
	movq	%rbx, -1608(%rbp)
	jne	.L9610
	movq	-1608(%rbp), %r12
	movq	32(%r12), %rcx
	cmpb	$36, (%rcx)
	jne	.L9610
	cmpb	$95, 1(%rcx)
	jne	.L9610
	movq	class_binding_level(%rip), %r10
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rdx
	testq	%r10, %r10
	movq	%r10, -2768(%rbp)
	movq	%rdx, -1616(%rbp)
	jne	.L9614
	testb	$-128, 66(%rsi)
	movq	%rsi, -2768(%rbp)
	je	.L9614
.L9618:
	movq	-2768(%rbp), %rax
	movq	56(%rax), %r11
	testb	$-128, 66(%r11)
	movq	%r11, -2768(%rbp)
	jne	.L9618
.L9614:
	movq	-2768(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11371
	movq	-2768(%rbp), %r8
	movq	-1608(%rbp), %rdi
	xorl	%eax, %eax
	movq	-1616(%rbp), %rsi
	movq	8(%r8), %rdx
	call	saveable_tree_cons
	movq	-2768(%rbp), %r9
	movq	%rax, 8(%r9)
.L9620:
	cmpq	$0, -1608(%rbp)
	je	.L9621
	movq	-1616(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L9622
	movq	-1608(%rbp), %rdi
	movq	%rdi, 80(%rcx)
.L9622:
	movq	-1608(%rbp), %rbx
	movq	-1616(%rbp), %rax
	cmpq	%rax, 8(%rbx)
	je	.L9623
	cmpb	$21, 16(%rax)
	je	.L11372
.L9624:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L9626
	cmpq	$0, 32(%rax)
	je	.L9625
.L9626:
	movq	lang_name_cplusplus(%rip), %r12
	cmpq	%r12, current_lang_name(%rip)
	je	.L11373
.L9627:
	xorl	%ecx, %ecx
.L9662:
	testq	%rcx, %rcx
	jne	.L9663
.L10281:
	movq	-1608(%rbp), %rsi
	movq	-1616(%rbp), %rdx
	movl	$32, %edi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-1616(%rbp), %rdi
	movq	%rax, -2776(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-2776(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L9664
	movq	-1608(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
.L11214:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L9665:
	movq	-1616(%rbp), %r11
	movq	-1608(%rbp), %rdx
	movq	%r11, 8(%rdx)
.L9668:
	movq	-1608(%rbp), %r9
	movq	32(%r9), %rax
	cmpb	$36, (%rax)
	je	.L11374
.L9670:
	movq	-1616(%rbp), %r8
	movq	80(%r8), %rdx
	testq	%rdx, %rdx
	je	.L9701
	cmpb	$32, 16(%rdx)
	je	.L11375
.L9671:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9690
	movq	-2776(%rbp), %rcx
	movq	56(%rcx), %r12
	testq	%r12, %r12
	je	.L10863
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L9692
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L9692:
	movq	decl_obstack+24(%rip), %rdx
	movq	-2776(%rbp), %rdi
	leaq	8(%rdx), %rsi
	movq	%rdi, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rsi
	ja	.L11376
.L9694:
	movq	-2776(%rbp), %rbx
	movq	%rdx, %r10
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%r10)
	cmpb	$32, 16(%rbx)
	je	.L11377
.L10864:
	movq	-1608(%rbp), %rbx
	movq	32(%rbx), %rax
.L9701:
	cmpb	$36, (%rax)
	je	.L11378
.L9715:
	movq	current_class_type(%rip), %rdx
	movq	-2776(%rbp), %rcx
	movq	-1616(%rbp), %r8
	testq	%rdx, %rdx
	movq	%rcx, 80(%r8)
	jne	.L9718
	cmpq	$0, current_function_decl(%rip)
	je	.L9717
.L9718:
	movq	lang_name_cplusplus(%rip), %r10
	cmpq	%r10, current_lang_name(%rip)
	je	.L9716
.L9717:
	movq	-1608(%rbp), %r12
	movq	-2776(%rbp), %rdi
	movq	%r12, 72(%rdi)
.L9623:
	movq	-2768(%rbp), %rax
	movzbl	66(%rax), %ecx
	andl	$15, %ecx
	cmpl	$2, %ecx
	je	.L11379
.L9621:
	movq	-1616(%rbp), %rdx
	movq	80(%rdx), %rax
	cmpb	$32, 16(%rax)
	je	.L11380
	movq	-1616(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-1616(%rbp), %rcx
	movq	%rax, (%rcx)
	movq	-2784(%rbp), %r8
	movzbl	16(%r8), %eax
	jmp	.L9610
.L11380:
	movq	%rax, (%rdx)
	movq	-2784(%rbp), %rsi
	movzbl	16(%rsi), %eax
	jmp	.L9610
.L11379:
	movq	-1616(%rbp), %rdi
	orb	$64, 18(%rdi)
	movq	80(%rdi), %r12
	movq	-1608(%rbp), %r10
	movq	current_class_type(%rip), %rax
	movq	%r12, 56(%r10)
	cmpq	$0, 32(%rax)
	jne	.L9621
	movq	-2768(%rbp), %r9
	movq	144(%rax), %r11
	movq	8(%r9), %rdx
	movq	%rdx, 72(%r11)
	jmp	.L9621
.L9716:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L11381
	cmpq	$0, 32(%rdx)
	jne	.L9623
	movq	-2776(%rbp), %r9
	movq	80(%rdx), %r8
	movl	$136, %esi
	cmpb	$32, 16(%r9)
	movq	72(%r8), %rbx
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L9726
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-1608(%rbp), %rdi
	cmpb	$1, 16(%rdi)
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-1608(%rbp), %r10
	movl	24(%r10), %eax
	movq	32(%r10), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2776(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1616(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L9728:
	movq	-2776(%rbp), %rbx
	movq	current_class_type(%rip), %r8
	movq	152(%rbx), %r9
	movq	%r8, 64(%rbx)
	movq	%r8, 16(%r9)
	jmp	.L9623
.L9726:
	movq	-1608(%rbp), %r11
	movq	-2776(%rbp), %rsi
	movq	%r11, 72(%rsi)
	jmp	.L9728
.L11381:
	movq	-2776(%rbp), %rdx
	movq	112(%rax), %rbx
	cmpb	$32, 16(%rdx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$136, %esi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L9721
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-1608(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-1608(%rbp), %r8
	movl	24(%r8), %eax
	movq	32(%r8), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2776(%rbp), %rbx
	movq	%rax, 72(%rbx)
	movq	-1616(%rbp), %r11
	movq	%r11, 8(%rax)
.L9723:
	movq	current_function_decl(%rip), %rsi
	movq	-2776(%rbp), %rdx
	movq	%rsi, 64(%rdx)
	jmp	.L9623
.L9721:
	movq	-1608(%rbp), %r12
	movq	-2776(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L9723
.L11378:
	cmpb	$95, 1(%rax)
	jne	.L9715
	movq	-2776(%rbp), %rax
	orb	$64, 53(%rax)
	jmp	.L9715
.L11377:
	cmpq	$0, 72(%rbx)
	je	.L11382
.L10865:
	movq	-1608(%rbp), %r9
	movq	32(%r9), %rax
	jmp	.L9701
.L11382:
	movq	-2776(%rbp), %r11
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%r11), %rdx
	movq	%rdx, -1624(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L9696
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2776(%rbp), %r9
	movq	%rax, 72(%r9)
	movq	-1624(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L10862:
	movq	-1608(%rbp), %rdx
	movq	32(%rdx), %rax
	jmp	.L9701
.L9696:
	movq	-2776(%rbp), %rcx
	movq	%r12, 72(%rcx)
	jmp	.L10864
.L11376:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L9694
.L10863:
	movq	-1608(%rbp), %r11
	movq	32(%r11), %rax
	jmp	.L9701
.L9690:
	movq	-2776(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -2776(%rbp)
	jmp	.L10865
.L11375:
	movq	global_binding_level(%rip), %rsi
	movl	$1, %r12d
	cmpq	%rsi, current_binding_level(%rip)
	je	.L9672
	movq	-1608(%rbp), %rbx
	movq	48(%rbx), %rdi
	testq	%rdi, %rdi
	movq	%rdi, %rcx
	jne	.L9673
.L9672:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L9674
	movq	-1608(%rbp), %r10
	movq	56(%r10), %rcx
	testq	%rcx, %rcx
	jne	.L10213
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L9675
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L11383
.L9675:
	testq	%rcx, %rcx
	jne	.L10213
.L10214:
	movq	-1608(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10213
	movq	-1608(%rbp), %r11
	movq	40(%r11), %rcx
.L9673:
	testq	%rcx, %rcx
	je	.L9677
.L10213:
	cmpb	$32, 16(%rcx)
	je	.L9677
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L9677
	movq	-1608(%rbp), %r9
	movq	8(%r9), %rax
	testq	%rax, %rax
	je	.L9685
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11215
	testl	%r12d, %r12d
	jle	.L11384
.L11215:
	movq	%rax, %rcx
.L9677:
	movq	-1616(%rbp), %r8
	cmpq	80(%r8), %rcx
	jne	.L9671
	jmp	.L10862
.L11384:
	testl	%edx, %edx
	jg	.L11215
	testl	%r12d, %r12d
	je	.L9677
	movq	-1608(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11215
.L9685:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L9677
.L11383:
	xorl	%ecx, %ecx
	movq	-1608(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L9677
	testq	%rax, %rax
	je	.L10214
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L9675
.L9674:
	movq	-1608(%rbp), %rax
	movq	40(%rax), %rcx
	jmp	.L9673
.L11374:
	cmpb	$95, 1(%rax)
	jne	.L9670
	jmp	.L9701
.L9664:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9665
	movq	-1608(%rbp), %r10
	movq	8(%r10), %rsi
	movq	%r10, %rdi
	jmp	.L11214
.L9663:
	movq	80(%rcx), %rax
	movq	%rax, -2776(%rbp)
	jmp	.L9668
.L11373:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L9629
	movq	80(%rax), %rbx
.L9629:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L9662
.L9661:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L9638
	cmpl	$32, %eax
	je	.L11385
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L9632:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L9662
	jmp	.L9661
.L11385:
	movq	8(%rbx), %rdx
	movq	-1616(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%rdx), %r10
	movq	72(%r10), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10897
	movq	64(%rbx), %rbx
	jmp	.L9632
.L10897:
	movq	32(%rax), %rcx
	jmp	.L9662
.L9638:
	movq	-1616(%rbp), %rax
	movq	80(%rax), %r11
	movq	56(%r11), %rbx
	testq	%rbx, %rbx
	je	.L9627
	movq	global_binding_level(%rip), %r9
	cmpq	%r9, current_binding_level(%rip)
	je	.L9641
	movq	48(%rbx), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L9642
.L9641:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L9643
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10211
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L9644
	movq	144(%rdi), %rsi
	testb	$1, 3(%rsi)
	jne	.L11386
.L9644:
	testq	%rcx, %rcx
	jne	.L10211
.L10212:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10211
.L9643:
	movq	40(%rbx), %rcx
.L9642:
	testq	%rcx, %rcx
	je	.L10281
.L10211:
	cmpb	$32, 16(%rcx)
	je	.L9662
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L9662
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L9654
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11213
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L11387
.L11213:
	movq	%rax, %rcx
	jmp	.L9662
.L11387:
	testl	%edx, %edx
	jg	.L11213
	movl	$1, %r12d
	testl	%r12d, %r12d
	je	.L9662
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11213
.L9654:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L9662
	jmp	.L11213
.L11386:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L9662
	testq	%rax, %rax
	je	.L10212
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L9644
.L9625:
	movq	-1608(%rbp), %rsi
	movq	-1616(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -1632(%rbp)
	je	.L9702
	movq	-1608(%rbp), %r12
	movq	8(%r12), %rsi
	movq	%r12, %rdi
.L11216:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L9703:
	movq	-1616(%rbp), %rdx
	movq	-1608(%rbp), %rsi
	movq	%rdx, 8(%rsi)
	movq	-1632(%rbp), %rdi
	movq	56(%rdi), %r12
	testq	%r12, %r12
	je	.L9706
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L9707
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L9707:
	movq	decl_obstack+24(%rip), %rdx
	movq	-1632(%rbp), %rbx
	leaq	8(%rdx), %r11
	movq	%rbx, 56(%r12)
	cmpq	decl_obstack+32(%rip), %r11
	ja	.L11388
.L9709:
	movq	%rdx, %r9
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	-1632(%rbp), %rdx
	movq	%rdx, (%r9)
	cmpb	$32, 16(%rdx)
	je	.L11389
.L9706:
	movq	-1632(%rbp), %r12
	movq	%r12, -2776(%rbp)
	jmp	.L10865
.L11389:
	cmpq	$0, 72(%rdx)
	jne	.L9706
	movq	8(%rdx), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	%rax, -1640(%rbp)
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L9711
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1632(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1640(%rbp), %r8
	movq	%r8, 8(%rax)
	jmp	.L9706
.L9711:
	movq	-1632(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L9706
.L11388:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L9709
.L9702:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9703
	movq	-1608(%rbp), %r10
	movq	8(%r10), %rsi
	movq	%r10, %rdi
	jmp	.L11216
.L11372:
	cmpq	$0, class_binding_level(%rip)
	je	.L9624
	movq	144(%rax), %rsi
	testb	$16, 3(%rsi)
	jne	.L9623
	jmp	.L9624
.L11371:
	movq	-1608(%rbp), %rdi
	movq	-1616(%rbp), %rsi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%rbx)
	jmp	.L9620
	.p2align 6,,7
.L9591:
	movq	-2800(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10856
	movl	flag_traditional(%rip), %r8d
	testl	%r8d, %r8d
	jne	.L10860
	testb	$8, 18(%r15)
	je	.L10860
	testb	$8, 18(%r13)
	jne	.L10860
	testb	$9, 53(%r13)
	jne	.L10860
	cmpq	%r13, current_function_decl(%rip)
	je	.L11390
.L9600:
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L9601
	cmpq	$0, 8(%rax)
	jne	.L11391
.L9601:
	movq	-2800(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11212:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-2800(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L10860
.L11391:
	movq	-2800(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11212
.L11390:
	movq	-2800(%rbp), %r13
	movq	%r13, current_function_decl(%rip)
	jmp	.L9600
	.p2align 6,,7
.L11349:
	cmpq	$0, 64(%rcx)
	jne	.L9589
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L9589
.L11348:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -2800(%rbp)
	call	error_with_decl
	jmp	.L9587
.L9580:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L9582
.L9586:
	cmpq	%r15, 56(%rax)
	je	.L9582
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L9586
.L9582:
	movq	%rax, -2800(%rbp)
	jmp	.L9579
.L11347:
	movq	40(%r15), %rax
	jmp	.L9582
.L11346:
	movq	56(%r13), %r15
	jmp	.L9576
.L11345:
	testb	$32, 53(%r13)
	jne	.L9574
	jmp	.L9575
.L10852:
	movzbl	16(%r13), %edx
	jmp	.L9574
.L11337:
	movq	default_function_type(%rip), %rsi
	xorl	%edx, %edx
	xorl	%r8d, %r8d
	movl	$.LC84, %edi
	movl	$pushdecl, %ecx
	xorl	%eax, %eax
	xorl	%r12d, %r12d
	call	define_function
	xorl	%eax, %eax
	movl	$.LC84, %edi
	call	get_identifier
	movq	%rax, %rbx
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L9277
	movq	48(%rbx), %r8
	testq	%r8, %r8
	movq	%r8, %r13
	jne	.L9278
.L9277:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L9279
	movq	56(%rbx), %r13
	testq	%r13, %r13
	jne	.L10203
	movq	32(%rdi), %r14
	testq	%r14, %r14
	jne	.L9280
	movq	144(%rdi), %r10
	testb	$1, 3(%r10)
	jne	.L11392
.L9280:
	testq	%r13, %r13
	jne	.L10203
.L10204:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %r13
	jne	.L10203
.L9279:
	movq	40(%rbx), %r13
.L9278:
	testq	%r13, %r13
	je	.L10837
.L10203:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L9282
	movl	looking_for_typename(%rip), %ecx
	testl	%ecx, %ecx
	js	.L9282
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L9290
	movq	80(%rax), %rax
	cmpq	%rax, %r13
	je	.L11248
	testl	%r12d, %r12d
	jle	.L11393
.L11248:
	movq	%rax, %r13
.L10836:
	movzbl	16(%r13), %edx
.L9282:
	movq	current_function_decl(%rip), %rax
	movq	current_binding_level(%rip), %r11
	movq	112(%r13), %r14
	cmpq	%rax, %r13
	movq	%r11, -2752(%rbp)
	je	.L9295
	cmpb	$29, %dl
	je	.L11394
.L9296:
	movq	%rax, 64(%r13)
.L9295:
	cmpb	$32, %dl
	je	.L11395
.L9297:
	testq	%r14, %r14
	je	.L9298
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L11396
	cmpq	$0, 48(%r14)
	jne	.L9301
	movq	$0, -2720(%rbp)
.L9300:
	cmpq	$0, -2720(%rbp)
	je	.L9318
	movq	-2720(%rbp), %r12
	cmpq	error_mark_node(%rip), %r12
	je	.L11397
.L9308:
	cmpq	$0, -2720(%rbp)
	je	.L10841
	movq	-2720(%rbp), %rsi
	cmpb	$34, 16(%rsi)
	je	.L11398
.L9310:
	movq	-2720(%rbp), %rax
	testq	%rax, %rax
	movq	24(%rax), %r12
	movl	32(%rax), %ebx
	je	.L10841
	movzbl	16(%rax), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L9312
	cmpb	$32, %al
	je	.L9318
	cmpb	$32, %dl
	je	.L10922
	movq	-2720(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	jne	.L9276
.L10841:
	movzbl	16(%r13), %edx
.L9318:
	cmpb	$32, %dl
	je	.L10922
.L9326:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L9464
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L9464
	testb	$1, 53(%rax)
	jne	.L9465
	testb	$8, 18(%rax)
	je	.L9464
.L9465:
	andb	$8, %dl
	je	.L11399
.L9464:
	movl	flag_traditional(%rip), %r12d
	testl	%r12d, %r12d
	je	.L10849
	testb	$1, 53(%r13)
	je	.L10849
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rsi
	cmpq	%rsi, current_binding_level(%rip)
	je	.L9468
	movq	48(%r14), %r15
	testq	%r15, %r15
	movq	%r15, %rcx
	jne	.L9469
.L9468:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L9470
	movq	56(%r14), %rcx
	testq	%rcx, %rcx
	jne	.L10209
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L9471
	movq	144(%rdi), %r10
	testb	$1, 3(%r10)
	jne	.L11400
.L9471:
	testq	%rcx, %rcx
	jne	.L10209
.L10210:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10209
.L9470:
	movq	40(%r14), %rcx
.L9469:
	testq	%rcx, %rcx
	je	.L10280
.L10209:
	cmpb	$32, 16(%rcx)
	je	.L9473
	movl	looking_for_typename(%rip), %esi
	testl	%esi, %esi
	js	.L9473
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L9481
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11209
	testl	%ebx, %ebx
	jle	.L11401
.L11209:
	movq	%rax, %rcx
.L9473:
	testq	%rcx, %rcx
	jne	.L10849
.L10280:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -2752(%rbp)
.L9467:
	cmpq	%rax, -2752(%rbp)
	je	.L11402
	movq	current_binding_level(%rip), %rbx
	movq	48(%r14), %r12
	movq	40(%r14), %r15
	cmpq	%rax, %rbx
	je	.L11403
.L11210:
	movq	16(%rbx), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%rbx)
.L9512:
	testq	%r12, %r12
	movq	%r13, 48(%r14)
	je	.L11404
.L9523:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L9525
	testq	%r12, %r12
	je	.L9526
	testb	$1, 53(%r13)
	jne	.L9526
	cmpb	$34, 16(%r12)
	je	.L11405
.L9526:
	movl	warn_shadow(%rip), %edx
	testl	%edx, %edx
	je	.L9525
	testb	$1, 53(%r13)
	jne	.L9525
	movl	32(%r13), %r11d
	testl	%r11d, %r11d
	je	.L9525
	testq	%rax, %rax
	jne	.L9525
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L9531
	cmpb	$34, 16(%r12)
	je	.L11406
.L9531:
	cmpq	$0, 56(%r14)
	je	.L9533
	movl	$.LC41, %edi
.L9532:
	testq	%rdi, %rdi
	jne	.L11211
.L9525:
	testq	%r12, %r12
	je	.L10850
	movq	-2752(%rbp), %rbx
	movq	%r12, %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	16(%rbx), %rdx
	call	tree_cons
	movq	-2752(%rbp), %r12
	movq	%rax, 16(%r12)
.L10850:
	movzbl	16(%r13), %edx
.L9510:
	leal	-128(%rdx), %edi
	cmpb	$1, %dil
	jbe	.L9298
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L9298
	cmpb	$18, 16(%rcx)
	je	.L11407
.L9542:
	testb	$64, 46(%rcx)
	je	.L9298
.L9541:
	movq	-2752(%rbp), %rsi
	movzwl	64(%rsi), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rsi)
	je	.L11408
.L10851:
	movzbl	16(%r13), %edx
.L9298:
	cmpb	$32, %dl
	je	.L11409
.L9544:
	movq	-2752(%rbp), %r11
	cmpq	global_binding_level(%rip), %r11
	movq	(%r11), %r9
	movq	%r9, (%r13)
	movq	%r13, (%r11)
	jne	.L9276
	testb	$4, 17(%r13)
	jne	.L9276
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L9276
.L11409:
	testq	%r14, %r14
	je	.L9544
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L9545
	cmpq	class_binding_level(%rip), %rax
	je	.L9546
	movq	48(%r14), %rax
	testq	%rax, %rax
	je	.L9550
	cmpb	$32, 16(%rax)
	je	.L9548
.L9550:
	cmpq	$0, current_class_type(%rip)
	je	.L9545
	movq	56(%r14), %rax
	testq	%rax, %rax
	je	.L9545
	cmpb	$32, 16(%rax)
	je	.L9548
.L9545:
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L9549
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L9548
	cmpb	$-127, %dl
	je	.L11410
.L9549:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L9544
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L11411
.L9556:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L9560
	cmpq	class_binding_level(%rip), %rax
	je	.L9561
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L9565
	cmpb	$32, 16(%rax)
	je	.L9563
.L9565:
	cmpq	$0, current_class_type(%rip)
	je	.L9560
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L9560
	cmpb	$32, 16(%rax)
	je	.L9563
.L9560:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L9544
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L9563
	cmpb	$-127, %dl
	jne	.L9544
	movq	$0, 8(%rbx)
	jmp	.L9544
.L9563:
	movq	8(%rax), %r14
	movq	%r14, 8(%rbx)
	jmp	.L9544
.L9561:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L9565
.L11411:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %r12
	sete	%dl
	movq	8(%r13), %r15
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r14)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%r14), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L9556
.L11410:
	movq	$0, 8(%r14)
	jmp	.L9549
.L9548:
	movq	8(%rax), %rcx
	movq	%rcx, 8(%r14)
	jmp	.L9549
.L9546:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L9550
.L11408:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10851
.L11407:
	movq	8(%rcx), %r8
	testb	$64, 46(%r8)
	jne	.L9541
	jmp	.L9542
.L11211:
	movq	32(%r14), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L9525
.L9533:
	testq	%r12, %r12
	je	.L9535
	movl	$.LC42, %edi
	jmp	.L9532
.L9535:
	testq	%r15, %r15
	movl	$.LC43, %r9d
	cmovne	%r9, %rdi
	jmp	.L9532
.L11406:
	movl	$.LC40, %edi
	jmp	.L9532
.L11405:
	cmpb	$34, 16(%r13)
	je	.L9526
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r15
	movq	56(%r15), %rax
	je	.L9527
	movq	56(%rax), %rax
.L9527:
	movzbl	66(%rax), %r10d
	andl	$15, %r10d
	decl	%r10d
	jne	.L9525
	movl	$.LC40, %edi
	jmp	.L11211
	.p2align 6,,7
.L11404:
	movzbl	53(%r13), %r8d
	andb	$9, %r8b
	decb	%r8b
	je	.L11412
.L9515:
	testq	%r12, %r12
	jne	.L9523
	testq	%r15, %r15
	jne	.L9523
	testb	$1, 53(%r13)
	je	.L9523
	testb	$8, 18(%r13)
	je	.L9523
	orb	$8, 18(%r14)
	jmp	.L9523
	.p2align 6,,7
.L11412:
	testq	%r15, %r15
	je	.L9515
	cmpb	$29, 16(%r13)
	jne	.L9515
	cmpb	$29, 16(%r15)
	jne	.L9515
	movq	8(%r13), %rdi
	movq	8(%r15), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L11413
	movzbl	53(%r15), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L9518
	movzbl	53(%r13), %ecx
	leal	0(,%rax,8), %esi
	leaq	88(%r13), %rdx
	andb	$-9, %cl
	orb	%sil, %cl
	movb	%cl, 53(%r13)
	cmpq	%r15, current_function_decl(%rip)
	je	.L9519
	movq	88(%r15), %rax
.L9520:
	movq	136(%r15), %r8
	movq	72(%r15), %rbx
	movq	%rax, (%rdx)
	movq	80(%r15), %rdi
	movzbl	17(%r13), %r10d
	movq	%r8, 136(%r13)
	movq	%rbx, 72(%r13)
	movq	%rdi, 80(%r13)
	movzbl	17(%r15), %r9d
	movq	%r15, 96(%r13)
	andb	$127, %r10b
	shrb	$7, %r9b
	movzbl	%r9b, %edx
	movl	%edx, %r11d
	salb	$7, %r11b
	orb	%r11b, %r10b
	movb	%r10b, 17(%r13)
	movzbl	53(%r15), %ecx
.L9518:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L9521
	movzbl	53(%r13), %ecx
	salb	$4, %al
	andb	$-17, %cl
	orb	%al, %cl
	movb	%cl, 53(%r13)
	movl	128(%r15), %eax
	movl	%eax, 128(%r13)
.L9521:
	movq	8(%r15), %rdx
	cmpq	$0, 24(%rdx)
	je	.L9515
	cmpq	$0, 88(%r15)
	je	.L9515
	movq	8(%r13), %rsi
	cmpq	$0, 24(%rsi)
	jne	.L9515
	movq	%rdx, 8(%r13)
	jmp	.L9515
.L9519:
	xorl	%eax, %eax
	jmp	.L9520
.L11413:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L9515
	.p2align 6,,7
.L11403:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9512
	jmp	.L11210
.L11402:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L11414
.L9487:
	cmpq	$0, 40(%r14)
	jne	.L9488
	testb	$8, 18(%r13)
	je	.L9488
	orb	$8, 18(%r14)
.L9488:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L11415
.L9490:
	movq	%r13, 40(%r14)
	movzbl	16(%r13), %edx
.L9489:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L9501
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L9491
	testb	$1, 18(%rcx)
	je	.L9491
	orb	$1, 18(%r13)
	movq	72(%r14), %rax
.L9491:
	testq	%rax, %rax
	je	.L9501
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L9496
	testb	$8, 17(%rcx)
	je	.L9496
	orb	$8, 17(%r13)
	movq	72(%r14), %rax
.L9496:
	testq	%rax, %rax
	je	.L9501
	cmpq	$0, 8(%rax)
	je	.L9501
	cmpb	$29, %dl
	je	.L11416
.L9504:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L9501:
	testb	$8, 18(%r14)
	je	.L9510
	cmpb	$32, %dl
	je	.L9510
	testb	$8, 18(%r13)
	jne	.L9510
	testb	$1, 53(%r13)
	jne	.L9510
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L9506
	cmpq	$0, 8(%rax)
	jne	.L11417
.L9506:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11249:
	xorl	%eax, %eax
	call	warning
	jmp	.L10850
.L11417:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11249
.L11416:
	movq	8(%r13), %rbx
	movq	integer_type_node(%rip), %rdi
	cmpq	%rdi, 8(%rbx)
	jne	.L9504
	jmp	.L9501
	.p2align 6,,7
.L11415:
	cmpq	$0, -2720(%rbp)
	je	.L9490
	movq	-2720(%rbp), %r9
	cmpb	$32, 16(%r9)
	jne	.L9489
	jmp	.L9490
.L11414:
	testb	$8, 54(%r13)
	jne	.L9487
	andb	$-9, 18(%r13)
	jmp	.L9487
	.p2align 6,,7
.L10849:
	movq	global_binding_level(%rip), %rax
	jmp	.L9467
.L11401:
	testl	%esi, %esi
	jg	.L11209
	testl	%ebx, %ebx
	je	.L9473
	movq	%rax, %rdx
	movq	%r14, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11209
	.p2align 6,,7
.L9481:
	movq	8(%rcx), %r11
	cmpq	error_mark_node(%rip), %r11
	cmove	%r11, %rcx
	jmp	.L9473
.L11400:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L9473
	testq	%rax, %rax
	je	.L10210
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L9471
	.p2align 6,,7
.L11399:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L9464
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r14), %rdi
	call	warning_with_decl
	jmp	.L9464
	.p2align 6,,7
.L10922:
	movq	8(%r13), %rdx
	movq	80(%rdx), %rbx
	testq	%rbx, %rbx
	movq	%rbx, -2744(%rbp)
	je	.L9328
	movzbl	16(%rbx), %eax
	cmpb	$32, %al
	je	.L9327
.L9328:
	movq	global_binding_level(%rip), %r15
	movq	%r13, -2744(%rbp)
	cmpq	%r15, current_binding_level(%rip)
	jne	.L10842
	movq	%r13, 80(%rdx)
.L10842:
	movzbl	16(%r13), %eax
.L9331:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	-2744(%rbp), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L9455
	cmpq	$0, 72(%rsi)
	je	.L11418
.L9455:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L9326
	cmpq	$0, 56(%rax)
	je	.L9326
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %r15
	cmpq	global_binding_level(%rip), %rbx
	je	.L11419
.L11208:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L9461:
	movq	%r12, 8(%r15)
	jmp	.L9326
.L11419:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9461
	jmp	.L11208
.L11418:
	cmpb	$32, 16(%r13)
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	sete	%r8b
	movq	8(%r13), %r15
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L9456
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	jmp	.L9455
.L9456:
	movq	%rbx, 72(%r13)
	jmp	.L9455
.L9327:
	movq	current_binding_level(%rip), %rsi
	movq	-2744(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%rbx), %r15
	jne	.L9331
	movq	32(%r15), %rcx
	cmpb	$36, (%rcx)
	jne	.L9331
	cmpb	$95, 1(%rcx)
	jne	.L9331
	movq	class_binding_level(%rip), %rcx
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rax
	testq	%rcx, %rcx
	movq	%rcx, -2728(%rbp)
	movq	%rax, -1576(%rbp)
	jne	.L9335
	testb	$-128, 66(%rsi)
	movq	%rsi, -2728(%rbp)
	je	.L9335
.L9339:
	movq	-2728(%rbp), %r8
	movq	56(%r8), %rsi
	testb	$-128, 66(%rsi)
	movq	%rsi, -2728(%rbp)
	jne	.L9339
.L9335:
	movq	-2728(%rbp), %rcx
	cmpq	global_binding_level(%rip), %rcx
	je	.L11420
	movq	-2728(%rbp), %r9
	movq	-1576(%rbp), %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	8(%r9), %rdx
	call	saveable_tree_cons
	movq	-2728(%rbp), %r11
	movq	%rax, 8(%r11)
.L9341:
	testq	%r15, %r15
	je	.L9342
	movq	-1576(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L9343
	movq	%r15, 80(%rcx)
.L9343:
	movq	-1576(%rbp), %rbx
	cmpq	%rbx, 8(%r15)
	je	.L9344
	cmpb	$21, 16(%rbx)
	je	.L11421
.L9345:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L9347
	cmpq	$0, 32(%rax)
	je	.L9346
.L9347:
	movq	lang_name_cplusplus(%rip), %rdi
	cmpq	%rdi, current_lang_name(%rip)
	je	.L11422
.L9348:
	xorl	%ecx, %ecx
.L9383:
	testq	%rcx, %rcx
	jne	.L9384
.L10279:
	movq	-1576(%rbp), %rdx
	movl	$32, %edi
	movq	%r15, %rsi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-1576(%rbp), %rdi
	movq	%rax, -2736(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	current_binding_level(%rip), %rbx
	movq	-2736(%rbp), %rdi
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, 112(%rdi)
	movl	$0, 32(%rdi)
	je	.L11423
.L11205:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L9386:
	movq	-1576(%rbp), %rdx
	movq	%rdx, 8(%r15)
.L9389:
	movq	32(%r15), %rax
	cmpb	$36, (%rax)
	je	.L11424
.L9391:
	movq	-1576(%rbp), %rcx
	movq	80(%rcx), %rdx
	testq	%rdx, %rdx
	je	.L9422
	cmpb	$32, 16(%rdx)
	je	.L11425
.L9392:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9411
	movq	-2736(%rbp), %r9
	movq	56(%r9), %r12
	testq	%r12, %r12
	je	.L10846
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L9413
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L9413:
	movq	-2736(%rbp), %rdx
	movq	%rdx, 56(%r12)
	movq	decl_obstack+24(%rip), %rdx
	leaq	8(%rdx), %rdi
	cmpq	decl_obstack+32(%rip), %rdi
	ja	.L11426
.L9415:
	movq	-2736(%rbp), %rsi
	movq	%rdx, %rcx
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rsi, (%rcx)
	cmpb	$32, 16(%rsi)
	je	.L11427
.L10846:
	movq	32(%r15), %rax
.L9422:
	cmpb	$36, (%rax)
	je	.L11428
.L9436:
	movq	current_class_type(%rip), %rdx
	movq	-2736(%rbp), %r8
	movq	-1576(%rbp), %rdi
	testq	%rdx, %rdx
	movq	%r8, 80(%rdi)
	jne	.L9439
	cmpq	$0, current_function_decl(%rip)
	je	.L9438
.L9439:
	movq	lang_name_cplusplus(%rip), %rcx
	cmpq	%rcx, current_lang_name(%rip)
	je	.L9437
.L9438:
	movq	-2736(%rbp), %rdx
	movq	%r15, 72(%rdx)
.L9344:
	movq	-2728(%rbp), %r12
	movzbl	66(%r12), %ecx
	andl	$15, %ecx
	cmpl	$2, %ecx
	je	.L11429
.L9342:
	movq	-1576(%rbp), %rsi
	movq	80(%rsi), %rax
	cmpb	$32, 16(%rax)
	je	.L11430
	movq	-1576(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-1576(%rbp), %rbx
	movq	%rax, (%rbx)
	movq	-2744(%rbp), %rdi
	movzbl	16(%rdi), %eax
	jmp	.L9331
.L11430:
	movq	%rax, (%rsi)
	movq	-2744(%rbp), %r9
	movzbl	16(%r9), %eax
	jmp	.L9331
.L11429:
	movq	-1576(%rbp), %rsi
	orb	$64, 18(%rsi)
	movq	80(%rsi), %rdx
	movq	current_class_type(%rip), %rax
	movq	%rdx, 56(%r15)
	cmpq	$0, 32(%rax)
	jne	.L9342
	movq	-2728(%rbp), %r11
	movq	144(%rax), %r15
	movq	8(%r11), %r10
	movq	%r10, 72(%r15)
	jmp	.L9342
.L9437:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L11431
	cmpq	$0, 32(%rdx)
	jne	.L9344
	movq	80(%rdx), %r12
	movl	$136, %esi
	movq	-2736(%rbp), %rdx
	cmpb	$32, 16(%rdx)
	movq	72(%r12), %rbx
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L9447
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2736(%rbp), %r10
	movq	%rax, 72(%r10)
	movq	-1576(%rbp), %rsi
	movq	%rsi, 8(%rax)
.L9449:
	movq	-2736(%rbp), %r8
	movq	current_class_type(%rip), %rbx
	movq	152(%r8), %rdi
	movq	%rbx, 64(%r8)
	movq	%rbx, 16(%rdi)
	jmp	.L9344
.L9447:
	movq	-2736(%rbp), %r9
	movq	%r15, 72(%r9)
	jmp	.L9449
.L11431:
	movq	-2736(%rbp), %rsi
	movq	112(%rax), %rbx
	cmpb	$32, 16(%rsi)
	movl	$136, %esi
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L9442
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2736(%rbp), %r11
	movq	%rax, 72(%r11)
	movq	-1576(%rbp), %r10
	movq	%r10, 8(%rax)
.L9444:
	movq	current_function_decl(%rip), %r8
	movq	-2736(%rbp), %rbx
	movq	%r8, 64(%rbx)
	jmp	.L9344
.L9442:
	movq	-2736(%rbp), %rdi
	movq	%r15, 72(%rdi)
	jmp	.L9444
.L11428:
	cmpb	$95, 1(%rax)
	jne	.L9436
	movq	-2736(%rbp), %r9
	orb	$64, 53(%r9)
	jmp	.L9436
.L11427:
	cmpq	$0, 72(%rsi)
	jne	.L10846
	movq	8(%rsi), %r8
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%r8, -1584(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L9417
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2736(%rbp), %rsi
	movq	%rax, 72(%rsi)
	movq	-1584(%rbp), %r12
	movq	%r12, 8(%rax)
	jmp	.L10846
.L9417:
	movq	-2736(%rbp), %rax
	movq	%r12, 72(%rax)
	jmp	.L10846
.L11426:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L9415
.L9411:
	movq	-2736(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -2736(%rbp)
	jmp	.L10846
.L11425:
	movq	global_binding_level(%rip), %rbx
	movl	$1, %r12d
	cmpq	%rbx, current_binding_level(%rip)
	je	.L9393
	movq	48(%r15), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L9394
.L9393:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L9395
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L10207
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L9396
	movq	144(%rdi), %r10
	testb	$1, 3(%r10)
	jne	.L11432
.L9396:
	testq	%rcx, %rcx
	jne	.L10207
.L10208:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10207
.L9395:
	movq	40(%r15), %rcx
.L9394:
	testq	%rcx, %rcx
	je	.L9398
.L10207:
	cmpb	$32, 16(%rcx)
	je	.L9398
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L9398
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L9406
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11206
	testl	%r12d, %r12d
	jle	.L11433
.L11206:
	movq	%rax, %rcx
.L9398:
	movq	-1576(%rbp), %rax
	cmpq	80(%rax), %rcx
	jne	.L9392
	jmp	.L10846
.L11433:
	testl	%edx, %edx
	jg	.L11206
	testl	%r12d, %r12d
	je	.L9398
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11206
.L9406:
	movq	8(%rcx), %r11
	cmpq	error_mark_node(%rip), %r11
	cmove	%r11, %rcx
	jmp	.L9398
.L11432:
	xorl	%ecx, %ecx
	movq	%r15, %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L9398
	testq	%rax, %rax
	je	.L10208
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L9396
.L11424:
	cmpb	$95, 1(%rax)
	jne	.L9391
	jmp	.L9422
.L11423:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9386
	jmp	.L11205
.L9384:
	movq	80(%rcx), %rsi
	movq	%rsi, -2736(%rbp)
	jmp	.L9389
.L11422:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L9350
	movq	80(%rax), %rbx
.L9350:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L9383
.L9382:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L9359
	cmpl	$32, %eax
	je	.L11434
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L9353:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L9383
	jmp	.L9382
.L11434:
	movq	8(%rbx), %rcx
	movq	-1576(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%rcx), %rdx
	movq	72(%rdx), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10896
	movq	64(%rbx), %rbx
	jmp	.L9353
.L10896:
	movq	32(%rax), %rcx
	jmp	.L9383
.L9359:
	movq	-1576(%rbp), %rbx
	movq	80(%rbx), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L9348
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L9362
	movq	48(%rbx), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L9363
.L9362:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L9364
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10205
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L9365
	movq	144(%rdi), %r10
	testb	$1, 3(%r10)
	jne	.L11435
.L9365:
	testq	%rcx, %rcx
	jne	.L10205
.L10206:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10205
.L9364:
	movq	40(%rbx), %rcx
.L9363:
	testq	%rcx, %rcx
	je	.L10279
.L10205:
	cmpb	$32, 16(%rcx)
	je	.L9383
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L9383
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L9375
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11204
	movl	$1, %r9d
	testl	%r9d, %r9d
	jle	.L11436
.L11204:
	movq	%rax, %rcx
	jmp	.L9383
.L11436:
	testl	%edx, %edx
	jg	.L11204
	movl	$1, %r12d
	testl	%r12d, %r12d
	je	.L9383
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11204
.L9375:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L9383
	jmp	.L11204
.L11435:
	movl	$1, %r11d
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %r11d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L9383
	testq	%rax, %rax
	je	.L10206
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L9365
.L9346:
	movq	-1576(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r15, %rsi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -1592(%rbp)
	je	.L11437
.L11207:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L9424:
	movq	-1576(%rbp), %r9
	movq	%r9, 8(%r15)
	movq	-1592(%rbp), %rbx
	movq	56(%rbx), %r12
	testq	%r12, %r12
	je	.L9427
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L9428
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L9428:
	movq	decl_obstack+24(%rip), %rdx
	movq	-1592(%rbp), %rcx
	leaq	8(%rdx), %rdi
	movq	%rcx, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rdi
	ja	.L11438
.L9430:
	movq	-1592(%rbp), %rcx
	movq	%rdx, %r8
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rcx, (%r8)
	cmpb	$32, 16(%rcx)
	je	.L11439
.L9427:
	movq	-1592(%rbp), %rbx
	movq	%rbx, -2736(%rbp)
	jmp	.L10846
.L11439:
	cmpq	$0, 72(%rcx)
	jne	.L9427
	movq	current_class_name(%rip), %rbx
	movq	8(%rcx), %rdx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%rdx, -1600(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L9432
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1592(%rbp), %rsi
	movq	%rax, 72(%rsi)
	movq	-1600(%rbp), %r12
	movq	%r12, 8(%rax)
	jmp	.L9427
.L9432:
	movq	-1592(%rbp), %rax
	movq	%r12, 72(%rax)
	jmp	.L9427
.L11438:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L9430
.L11437:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9424
	jmp	.L11207
.L11421:
	cmpq	$0, class_binding_level(%rip)
	je	.L9345
	movq	144(%rbx), %r12
	testb	$16, 3(%r12)
	jne	.L9344
	jmp	.L9345
.L11420:
	movq	-1576(%rbp), %rsi
	movq	8(%rcx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	perm_tree_cons
	movq	-2728(%rbp), %r10
	movq	%rax, 8(%r10)
	jmp	.L9341
	.p2align 6,,7
.L9312:
	movq	-2720(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10841
	movl	flag_traditional(%rip), %edx
	testl	%edx, %edx
	jne	.L9276
	testb	$8, 18(%r14)
	je	.L9276
	testb	$8, 18(%r13)
	jne	.L9276
	testb	$9, 53(%r13)
	jne	.L9276
	cmpq	%r13, current_function_decl(%rip)
	je	.L11440
.L9321:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L9322
	cmpq	$0, 8(%rax)
	jne	.L11441
.L9322:
	movq	-2720(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11203:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-2720(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L9276
.L11441:
	movq	-2720(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11203
.L11440:
	movq	-2720(%rbp), %r13
	movq	%r13, current_function_decl(%rip)
	jmp	.L9321
	.p2align 6,,7
.L11398:
	cmpq	$0, 64(%rsi)
	jne	.L9310
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L9310
.L11397:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -2720(%rbp)
	call	error_with_decl
	jmp	.L9308
.L9301:
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.L9303
.L9307:
	cmpq	%r14, 56(%rdi)
	je	.L9303
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L9307
.L9303:
	movq	%rdi, -2720(%rbp)
	jmp	.L9300
.L11396:
	movq	40(%r14), %r9
	movq	%r9, -2720(%rbp)
	jmp	.L9300
.L11395:
	movq	56(%r13), %r14
	jmp	.L9297
.L11394:
	testb	$32, 53(%r13)
	jne	.L9295
	jmp	.L9296
.L11393:
	testl	%ecx, %ecx
	jg	.L11248
	testl	%r12d, %r12d
	je	.L9282
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%r13, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11248
	.p2align 6,,7
.L9290:
	movq	8(%r13), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L9282
	jmp	.L11248
.L10837:
	movzbl	16, %edx
	jmp	.L9282
.L11392:
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %r13
	je	.L10836
	testq	%rax, %rax
	je	.L10204
	cmpb	$32, 16(%rax)
	cmovne	%r14, %r13
	jmp	.L9280
	.p2align 6,,7
.L11336:
	leal	(%rcx,%rcx), %ebx
	movq	builtin_type_tdescs_arr(%rip), %rdi
	xorl	%eax, %eax
	movslq	%ebx,%rsi
	movl	%ebx, builtin_type_tdescs_max(%rip)
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L9272
.L11335:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9263
	jmp	.L11201
.L9261:
	movq	-1512(%rbp), %rdx
	movl	$32, %edi
	movq	%r15, %rsi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11442
.L11202:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L9268:
	movq	$0, 8(%r15)
	jmp	.L9260
.L11442:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9268
	jmp	.L11202
	.p2align 6,,7
.L11334:
	movq	-2672(%rbp), %rsi
	movq	-1512(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_decl
	movq	%rax, %r13
	movq	112(%rax), %r14
	movq	current_binding_level(%rip), %rax
	movq	%rax, -2704(%rbp)
	movq	current_function_decl(%rip), %rax
	cmpq	%rax, %r13
	je	.L10817
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L11443
.L8980:
	movq	%rax, 64(%r13)
.L8979:
	cmpb	$32, %dl
	je	.L11444
.L8981:
	testq	%r14, %r14
	je	.L8982
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L11445
	cmpq	$0, 48(%r14)
	jne	.L8985
	movq	$0, -2712(%rbp)
.L8984:
	cmpq	$0, -2712(%rbp)
	je	.L9002
	movq	-2712(%rbp), %r9
	cmpq	error_mark_node(%rip), %r9
	je	.L11446
.L8992:
	cmpq	$0, -2712(%rbp)
	je	.L10821
	movq	-2712(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L11447
.L8994:
	movq	-2712(%rbp), %rcx
	testq	%rcx, %rcx
	movq	24(%rcx), %r12
	movq	%rcx, %rsi
	movl	32(%rcx), %ebx
	je	.L10821
	movzbl	16(%rcx), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L8996
	cmpb	$32, %al
	je	.L9002
	cmpb	$32, %dl
	je	.L10921
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10821
.L10825:
	movq	global_binding_level(%rip), %rax
.L9001:
	movq	current_binding_level(%rip), %rbx
	cmpq	%rax, %rbx
	je	.L9255
	movq	-2672(%rbp), %r13
	movq	8(%r13), %rsi
	movq	%r13, %rdi
.L11200:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L9256:
	movq	-2672(%rbp), %rdx
	movl	$24, %eax
	cmpl	$31, %eax
	movq	$0, 8(%rdx)
	jg	.L8978
	movq	-2712(%rbp), %r12
	movq	%r12, 40(%rdx)
	jmp	.L8978
.L9255:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9256
	movq	-2672(%rbp), %rdx
	movq	8(%rdx), %rsi
	movq	%rdx, %rdi
	jmp	.L11200
.L10821:
	movzbl	16(%r13), %edx
.L9002:
	cmpb	$32, %dl
	je	.L10921
.L9010:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L9148
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L9148
	testb	$1, 53(%rax)
	jne	.L9149
	testb	$8, 18(%rax)
	je	.L9148
.L9149:
	andb	$8, %dl
	je	.L11448
.L9148:
	movl	flag_traditional(%rip), %r12d
	testl	%r12d, %r12d
	je	.L10833
	testb	$1, 53(%r13)
	je	.L10833
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L9152
	movq	48(%r14), %rsi
	testq	%rsi, %rsi
	movq	%rsi, %rcx
	jne	.L9153
.L9152:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L9154
	movq	56(%r14), %rcx
	testq	%rcx, %rcx
	jne	.L10201
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L9155
	movq	144(%rdi), %r10
	testb	$1, 3(%r10)
	jne	.L11449
.L9155:
	testq	%rcx, %rcx
	jne	.L10201
.L10202:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10201
.L9154:
	movq	40(%r14), %rcx
.L9153:
	testq	%rcx, %rcx
	je	.L10278
.L10201:
	cmpb	$32, 16(%rcx)
	je	.L9157
	movl	looking_for_typename(%rip), %esi
	testl	%esi, %esi
	js	.L9157
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L9165
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11197
	testl	%ebx, %ebx
	jle	.L11450
.L11197:
	movq	%rax, %rcx
.L9157:
	testq	%rcx, %rcx
	jne	.L10833
.L10278:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -2704(%rbp)
.L9151:
	cmpq	%rax, -2704(%rbp)
	je	.L11451
	movq	current_binding_level(%rip), %rbx
	movq	48(%r14), %r12
	movq	40(%r14), %r8
	cmpq	%rax, %rbx
	je	.L11452
.L11198:
	movq	16(%rbx), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	movq	%r8, -2808(%rbp)
	call	tree_cons
	movq	-2808(%rbp), %r8
	movq	%rax, 16(%rbx)
.L9196:
	testq	%r12, %r12
	movq	%r13, 48(%r14)
	je	.L11453
.L9207:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L9209
	testq	%r12, %r12
	je	.L9210
	testb	$1, 53(%r13)
	jne	.L9210
	cmpb	$34, 16(%r12)
	je	.L11454
.L9210:
	movl	warn_shadow(%rip), %r11d
	testl	%r11d, %r11d
	je	.L9209
	testb	$1, 53(%r13)
	jne	.L9209
	movl	32(%r13), %r9d
	testl	%r9d, %r9d
	je	.L9209
	testq	%rax, %rax
	jne	.L9209
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L9215
	cmpb	$34, 16(%r12)
	je	.L11455
.L9215:
	cmpq	$0, 56(%r14)
	je	.L9217
	movl	$.LC41, %edi
.L9216:
	testq	%rdi, %rdi
	jne	.L11199
.L9209:
	testq	%r12, %r12
	je	.L10834
	movq	%r12, %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	-2704(%rbp), %r12
	movq	16(%r12), %rdx
	call	tree_cons
	movq	%rax, 16(%r12)
.L10834:
	movzbl	16(%r13), %edx
.L9194:
	leal	-128(%rdx), %edi
	cmpb	$1, %dil
	jbe	.L8982
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L8982
	cmpb	$18, 16(%rcx)
	je	.L11456
.L9226:
	testb	$64, 46(%rcx)
	je	.L8982
.L9225:
	movq	-2704(%rbp), %rcx
	movzwl	64(%rcx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rcx)
	je	.L11457
.L10835:
	movzbl	16(%r13), %edx
.L8982:
	cmpb	$32, %dl
	je	.L11458
.L9228:
	movq	-2704(%rbp), %r11
	movq	global_binding_level(%rip), %rax
	movq	(%r11), %r9
	cmpq	%rax, %r11
	movq	%r9, (%r13)
	movq	%r13, (%r11)
	je	.L11459
.L9254:
	movq	%r13, -2712(%rbp)
	jmp	.L9001
.L11459:
	testb	$4, 17(%r13)
	jne	.L9254
	xorl	%eax, %eax
	movl	$124, %edi
	call	my_friendly_abort
	movq	global_binding_level(%rip), %rax
	jmp	.L9254
.L11458:
	testq	%r14, %r14
	je	.L9228
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L9229
	cmpq	class_binding_level(%rip), %rax
	je	.L9230
	movq	48(%r14), %rax
	testq	%rax, %rax
	je	.L9234
	cmpb	$32, 16(%rax)
	je	.L9232
.L9234:
	cmpq	$0, current_class_type(%rip)
	je	.L9229
	movq	56(%r14), %rax
	testq	%rax, %rax
	je	.L9229
	cmpb	$32, 16(%rax)
	je	.L9232
.L9229:
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L9233
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L9232
	cmpb	$-127, %dl
	je	.L11460
.L9233:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L9228
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L11461
.L9240:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L9244
	cmpq	class_binding_level(%rip), %rax
	je	.L9245
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L9249
	cmpb	$32, 16(%rax)
	je	.L9247
.L9249:
	cmpq	$0, current_class_type(%rip)
	je	.L9244
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L9244
	cmpb	$32, 16(%rax)
	je	.L9247
.L9244:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L9228
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L9247
	cmpb	$-127, %dl
	jne	.L9228
	movq	$0, 8(%rbx)
	jmp	.L9228
.L9247:
	movq	8(%rax), %r14
	movq	%r14, 8(%rbx)
	jmp	.L9228
.L9245:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L9249
.L11461:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %rbx
	sete	%r10b
	movq	8(%r13), %r12
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r14)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r14), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r12, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L9240
.L11460:
	movq	$0, 8(%r14)
	jmp	.L9233
.L9232:
	movq	8(%rax), %rsi
	movq	%rsi, 8(%r14)
	jmp	.L9233
.L9230:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L9234
.L11457:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10835
.L11456:
	movq	8(%rcx), %rbx
	testb	$64, 46(%rbx)
	jne	.L9225
	jmp	.L9226
.L11199:
	movq	32(%r14), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L9209
.L9217:
	testq	%r12, %r12
	je	.L9219
	movl	$.LC42, %edi
	jmp	.L9216
.L9219:
	testq	%r8, %r8
	movl	$.LC43, %edx
	cmovne	%rdx, %rdi
	jmp	.L9216
.L11455:
	movl	$.LC40, %edi
	jmp	.L9216
.L11454:
	cmpb	$34, 16(%r13)
	je	.L9210
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r8
	movq	56(%r8), %rax
	je	.L9211
	movq	56(%rax), %rax
.L9211:
	movzbl	66(%rax), %r10d
	andl	$15, %r10d
	decl	%r10d
	jne	.L9209
	movl	$.LC40, %edi
	jmp	.L11199
	.p2align 6,,7
.L11453:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L11462
.L9199:
	testq	%r12, %r12
	jne	.L9207
	testq	%r8, %r8
	jne	.L9207
	testb	$1, 53(%r13)
	je	.L9207
	testb	$8, 18(%r13)
	je	.L9207
	orb	$8, 18(%r14)
	jmp	.L9207
	.p2align 6,,7
.L11462:
	testq	%r8, %r8
	je	.L9199
	cmpb	$29, 16(%r13)
	jne	.L9199
	cmpb	$29, 16(%r8)
	jne	.L9199
	movq	8(%r8), %rsi
	movq	8(%r13), %rdi
	xorl	%eax, %eax
	movl	$1, %edx
	movq	%r8, -2808(%rbp)
	call	comptypes
	movq	-2808(%rbp), %r8
	testl	%eax, %eax
	je	.L11463
	movzbl	53(%r8), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L9202
	movzbl	53(%r13), %ecx
	leal	0(,%rax,8), %ebx
	leaq	88(%r13), %rdx
	andb	$-9, %cl
	orb	%bl, %cl
	movb	%cl, 53(%r13)
	cmpq	%r8, current_function_decl(%rip)
	je	.L9203
	movq	88(%r8), %rax
.L9204:
	movq	%rax, (%rdx)
	movq	136(%r8), %rcx
	movq	80(%r8), %rdi
	movq	72(%r8), %rdx
	movzbl	17(%r13), %esi
	movq	%rcx, 136(%r13)
	movq	%rdi, 80(%r13)
	movq	%rdx, 72(%r13)
	movzbl	17(%r8), %r9d
	movq	%r8, 96(%r13)
	andb	$127, %sil
	shrb	$7, %r9b
	movzbl	%r9b, %r11d
	movl	%r11d, %r10d
	salb	$7, %r10b
	orb	%r10b, %sil
	movb	%sil, 17(%r13)
	movzbl	53(%r8), %ecx
.L9202:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L9205
	movzbl	53(%r13), %ebx
	salb	$4, %al
	andb	$-17, %bl
	orb	%al, %bl
	movb	%bl, 53(%r13)
	movl	128(%r8), %eax
	movl	%eax, 128(%r13)
.L9205:
	movq	8(%r8), %rdx
	cmpq	$0, 24(%rdx)
	je	.L9199
	cmpq	$0, 88(%r8)
	je	.L9199
	movq	8(%r13), %rsi
	cmpq	$0, 24(%rsi)
	jne	.L9199
	movq	%rdx, 8(%r13)
	jmp	.L9199
.L9203:
	xorl	%eax, %eax
	jmp	.L9204
.L11463:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	movq	-2808(%rbp), %r8
	jmp	.L9199
	.p2align 6,,7
.L11452:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9196
	jmp	.L11198
.L11451:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L11464
.L9171:
	cmpq	$0, 40(%r14)
	jne	.L9172
	testb	$8, 18(%r13)
	je	.L9172
	orb	$8, 18(%r14)
.L9172:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L11465
.L9174:
	movq	%r13, 40(%r14)
	movzbl	16(%r13), %edx
.L9173:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L9185
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L9175
	testb	$1, 18(%rcx)
	je	.L9175
	orb	$1, 18(%r13)
	movq	72(%r14), %rax
.L9175:
	testq	%rax, %rax
	je	.L9185
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L9180
	testb	$8, 17(%rcx)
	je	.L9180
	orb	$8, 17(%r13)
	movq	72(%r14), %rax
.L9180:
	testq	%rax, %rax
	je	.L9185
	cmpq	$0, 8(%rax)
	je	.L9185
	cmpb	$29, %dl
	je	.L11466
.L9188:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L9185:
	testb	$8, 18(%r14)
	je	.L9194
	cmpb	$32, %dl
	je	.L9194
	testb	$8, 18(%r13)
	jne	.L9194
	testb	$1, 53(%r13)
	jne	.L9194
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L9190
	cmpq	$0, 8(%rax)
	jne	.L11467
.L9190:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11247:
	xorl	%eax, %eax
	call	warning
	jmp	.L10834
.L11467:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11247
.L11466:
	movq	8(%r13), %r8
	movq	integer_type_node(%rip), %rdi
	cmpq	%rdi, 8(%r8)
	jne	.L9188
	jmp	.L9185
	.p2align 6,,7
.L11465:
	cmpq	$0, -2712(%rbp)
	je	.L9174
	movq	-2712(%rbp), %r9
	cmpb	$32, 16(%r9)
	jne	.L9173
	jmp	.L9174
.L11464:
	testb	$8, 54(%r13)
	jne	.L9171
	andb	$-9, 18(%r13)
	jmp	.L9171
	.p2align 6,,7
.L10833:
	movq	global_binding_level(%rip), %rax
	jmp	.L9151
.L11450:
	testl	%esi, %esi
	jg	.L11197
	testl	%ebx, %ebx
	je	.L9157
	movq	%rax, %rdx
	movq	%r14, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11197
	.p2align 6,,7
.L9165:
	movq	8(%rcx), %r11
	cmpq	error_mark_node(%rip), %r11
	cmove	%r11, %rcx
	jmp	.L9157
.L11449:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L9157
	testq	%rax, %rax
	je	.L10202
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L9155
	.p2align 6,,7
.L11448:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L9148
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r14), %rdi
	call	warning_with_decl
	jmp	.L9148
	.p2align 6,,7
.L10921:
	movq	8(%r13), %rdx
	movq	80(%rdx), %rcx
	testq	%rcx, %rcx
	movq	%rcx, -2696(%rbp)
	je	.L9012
	movzbl	16(%rcx), %eax
	cmpb	$32, %al
	je	.L9011
.L9012:
	movq	global_binding_level(%rip), %rdi
	movq	%r13, -2696(%rbp)
	cmpq	%rdi, current_binding_level(%rip)
	jne	.L10826
	movq	%r13, 80(%rdx)
.L10826:
	movzbl	16(%r13), %eax
.L9015:
	cmpb	$32, %al
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$140, %esi
	call	my_friendly_assert
	movq	-2696(%rbp), %rax
	movq	56(%rax), %rbx
	testq	%rbx, %rbx
	je	.L9139
	cmpq	$0, 72(%rax)
	je	.L11468
.L9139:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L9010
	cmpq	$0, 56(%rax)
	je	.L9010
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %rdi
	cmpq	global_binding_level(%rip), %rbx
	movq	%rdi, -1568(%rbp)
	je	.L9144
	movq	-1568(%rbp), %r8
	movq	8(%r8), %rsi
	movq	%r8, %rdi
.L11196:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L9145:
	movq	-1568(%rbp), %rbx
	movq	%r12, 8(%rbx)
	jmp	.L9010
.L9144:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9145
	movq	-1568(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
	jmp	.L11196
.L11468:
	movq	8(%r13), %r10
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	movq	%r10, -1560(%rbp)
	cmpb	$32, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L9140
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	-1560(%rbp), %r11
	movq	%r11, 8(%rax)
	jmp	.L9139
.L9140:
	movq	%rbx, 72(%r13)
	jmp	.L9139
.L9011:
	movq	-2696(%rbp), %r10
	movq	current_binding_level(%rip), %rsi
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%r10), %rbx
	movq	%rbx, -1520(%rbp)
	jne	.L9015
	movq	-1520(%rbp), %r12
	movq	32(%r12), %rcx
	cmpb	$36, (%rcx)
	jne	.L9015
	cmpb	$95, 1(%rcx)
	jne	.L9015
	movq	class_binding_level(%rip), %r11
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rdx
	testq	%r11, %r11
	movq	%r11, -2680(%rbp)
	movq	%rdx, -1528(%rbp)
	jne	.L9019
	testb	$-128, 66(%rsi)
	movq	%rsi, -2680(%rbp)
	je	.L9019
.L9023:
	movq	-2680(%rbp), %rax
	movq	56(%rax), %rsi
	testb	$-128, 66(%rsi)
	movq	%rsi, -2680(%rbp)
	jne	.L9023
.L9019:
	movq	-2680(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11469
	movq	-2680(%rbp), %rcx
	movq	-1520(%rbp), %rdi
	xorl	%eax, %eax
	movq	-1528(%rbp), %rsi
	movq	8(%rcx), %rdx
	call	saveable_tree_cons
	movq	-2680(%rbp), %r9
	movq	%rax, 8(%r9)
.L9025:
	cmpq	$0, -1520(%rbp)
	je	.L9026
	movq	-1528(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L9027
	movq	-1520(%rbp), %r8
	movq	%r8, 80(%rcx)
.L9027:
	movq	-1520(%rbp), %rdi
	movq	-1528(%rbp), %rax
	cmpq	%rax, 8(%rdi)
	je	.L9028
	cmpb	$21, 16(%rax)
	je	.L11470
.L9029:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L9031
	cmpq	$0, 32(%rax)
	je	.L9030
.L9031:
	movq	lang_name_cplusplus(%rip), %r12
	cmpq	%r12, current_lang_name(%rip)
	je	.L11471
.L9032:
	xorl	%ecx, %ecx
.L9067:
	testq	%rcx, %rcx
	jne	.L9068
.L10277:
	movq	-1520(%rbp), %rsi
	movq	-1528(%rbp), %rdx
	movl	$32, %edi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-1528(%rbp), %rdi
	movq	%rax, -2688(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-2688(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L9069
	movq	-1520(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
.L11193:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L9070:
	movq	-1528(%rbp), %rsi
	movq	-1520(%rbp), %rdx
	movq	%rsi, 8(%rdx)
.L9073:
	movq	-1520(%rbp), %r9
	movq	32(%r9), %rax
	cmpb	$36, (%rax)
	je	.L11472
.L9075:
	movq	-1528(%rbp), %r8
	movq	80(%r8), %rdx
	testq	%rdx, %rdx
	je	.L9106
	cmpb	$32, 16(%rdx)
	je	.L11473
.L9076:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9095
	movq	-2688(%rbp), %rcx
	movq	56(%rcx), %r12
	testq	%r12, %r12
	je	.L10828
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L9097
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L9097:
	movq	decl_obstack+24(%rip), %rdx
	movq	-2688(%rbp), %rdi
	leaq	8(%rdx), %r10
	movq	%rdi, 56(%r12)
	cmpq	decl_obstack+32(%rip), %r10
	ja	.L11474
.L9099:
	movq	-2688(%rbp), %rbx
	movq	%rdx, %r11
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%r11)
	cmpb	$32, 16(%rbx)
	je	.L11475
.L10829:
	movq	-1520(%rbp), %rsi
	movq	32(%rsi), %rax
.L9106:
	cmpb	$36, (%rax)
	je	.L11476
.L9120:
	movq	current_class_type(%rip), %rdx
	movq	-2688(%rbp), %rcx
	movq	-1528(%rbp), %r8
	testq	%rdx, %rdx
	movq	%rcx, 80(%r8)
	jne	.L9123
	cmpq	$0, current_function_decl(%rip)
	je	.L9122
.L9123:
	movq	lang_name_cplusplus(%rip), %r10
	cmpq	%r10, current_lang_name(%rip)
	je	.L9121
.L9122:
	movq	-1520(%rbp), %rdi
	movq	-2688(%rbp), %r11
	movq	%rdi, 72(%r11)
.L9028:
	movq	-2680(%rbp), %rax
	movzbl	66(%rax), %esi
	andl	$15, %esi
	cmpl	$2, %esi
	je	.L11477
.L9026:
	movq	-1528(%rbp), %rdx
	movq	80(%rdx), %rax
	cmpb	$32, 16(%rax)
	je	.L11478
	movq	-1528(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-1528(%rbp), %rcx
	movq	%rax, (%rcx)
	movq	-2696(%rbp), %rbx
	movzbl	16(%rbx), %eax
	jmp	.L9015
.L11478:
	movq	%rax, (%rdx)
	movq	-2696(%rbp), %r8
	movzbl	16(%r8), %eax
	jmp	.L9015
.L11477:
	movq	-1528(%rbp), %rdi
	orb	$64, 18(%rdi)
	movq	80(%rdi), %r11
	movq	-1520(%rbp), %r10
	movq	current_class_type(%rip), %rax
	movq	%r11, 56(%r10)
	cmpq	$0, 32(%rax)
	jne	.L9026
	movq	-2680(%rbp), %r9
	movq	144(%rax), %r12
	movq	8(%r9), %rdx
	movq	%rdx, 72(%r12)
	jmp	.L9026
.L9121:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L11479
	cmpq	$0, 32(%rdx)
	jne	.L9028
	movq	-2688(%rbp), %r8
	movq	80(%rdx), %rsi
	cmpb	$32, 16(%r8)
	movq	72(%rsi), %rbx
	movl	$136, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L9131
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-1520(%rbp), %rdi
	cmpb	$1, 16(%rdi)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-1520(%rbp), %r10
	movl	24(%r10), %eax
	movq	32(%r10), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2688(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1528(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L9133:
	movq	-2688(%rbp), %rcx
	movq	current_class_type(%rip), %rbx
	movq	152(%rcx), %r8
	movq	%rbx, 64(%rcx)
	movq	%rbx, 16(%r8)
	jmp	.L9028
.L9131:
	movq	-1520(%rbp), %r9
	movq	-2688(%rbp), %rdx
	movq	%r9, 72(%rdx)
	jmp	.L9133
.L11479:
	movq	-2688(%rbp), %rdx
	movq	112(%rax), %rbx
	movl	$136, %esi
	cmpb	$32, 16(%rdx)
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L9126
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movq	-1520(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-1520(%rbp), %r8
	movl	24(%r8), %eax
	movq	32(%r8), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2688(%rbp), %r9
	movq	%rax, 72(%r9)
	movq	-1528(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L9128:
	movq	current_function_decl(%rip), %rdx
	movq	-2688(%rbp), %r12
	movq	%rdx, 64(%r12)
	jmp	.L9028
.L9126:
	movq	-1520(%rbp), %rdi
	movq	-2688(%rbp), %r11
	movq	%rdi, 72(%r11)
	jmp	.L9128
.L11476:
	cmpb	$95, 1(%rax)
	jne	.L9120
	movq	-2688(%rbp), %rax
	orb	$64, 53(%rax)
	jmp	.L9120
.L11475:
	cmpq	$0, 72(%rbx)
	je	.L11480
.L10830:
	movq	-1520(%rbp), %r9
	movq	32(%r9), %rax
	jmp	.L9106
.L11480:
	movq	-2688(%rbp), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%rax), %rdx
	xorl	%eax, %eax
	movq	%rdx, -1536(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L9101
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2688(%rbp), %rsi
	movq	%rax, 72(%rsi)
	movq	-1536(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L10827:
	movq	-1520(%rbp), %rdx
	movq	32(%rdx), %rax
	jmp	.L9106
.L9101:
	movq	-2688(%rbp), %rcx
	movq	%r12, 72(%rcx)
	jmp	.L10829
.L11474:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L9099
.L10828:
	movq	-1520(%rbp), %rbx
	movq	32(%rbx), %rax
	jmp	.L9106
.L9095:
	movq	-2688(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -2688(%rbp)
	jmp	.L10830
.L11473:
	movq	global_binding_level(%rip), %r10
	movl	$1, %r12d
	cmpq	%r10, current_binding_level(%rip)
	je	.L9077
	movq	-1520(%rbp), %rbx
	movq	48(%rbx), %rdi
	testq	%rdi, %rdi
	movq	%rdi, %rcx
	jne	.L9078
.L9077:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L9079
	movq	-1520(%rbp), %r11
	movq	56(%r11), %rcx
	testq	%rcx, %rcx
	jne	.L10199
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L9080
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L11481
.L9080:
	testq	%rcx, %rcx
	jne	.L10199
.L10200:
	movq	-1520(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10199
	movq	-1520(%rbp), %rsi
	movq	40(%rsi), %rcx
.L9078:
	testq	%rcx, %rcx
	je	.L9082
.L10199:
	cmpb	$32, 16(%rcx)
	je	.L9082
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L9082
	movq	-1520(%rbp), %r9
	movq	8(%r9), %rax
	testq	%rax, %rax
	je	.L9090
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11194
	testl	%r12d, %r12d
	jle	.L11482
.L11194:
	movq	%rax, %rcx
.L9082:
	movq	-1528(%rbp), %r8
	cmpq	80(%r8), %rcx
	jne	.L9076
	jmp	.L10827
.L11482:
	testl	%edx, %edx
	jg	.L11194
	testl	%r12d, %r12d
	je	.L9082
	movq	-1520(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11194
.L9090:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L9082
.L11481:
	xorl	%ecx, %ecx
	movq	-1520(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L9082
	testq	%rax, %rax
	je	.L10200
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L9080
.L9079:
	movq	-1520(%rbp), %rax
	movq	40(%rax), %rcx
	jmp	.L9078
.L11472:
	cmpb	$95, 1(%rax)
	jne	.L9075
	jmp	.L9106
.L9069:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9070
	movq	-1520(%rbp), %r11
	movq	8(%r11), %rsi
	movq	%r11, %rdi
	jmp	.L11193
.L9068:
	movq	80(%rcx), %rax
	movq	%rax, -2688(%rbp)
	jmp	.L9073
.L11471:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L9034
	movq	80(%rax), %rbx
.L9034:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L9067
.L9066:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L9043
	cmpl	$32, %eax
	je	.L11483
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L9037:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L9067
	jmp	.L9066
.L11483:
	movq	8(%rbx), %rdx
	movq	-1528(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%rdx), %r11
	movq	72(%r11), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10895
	movq	64(%rbx), %rbx
	jmp	.L9037
.L10895:
	movq	32(%rax), %rcx
	jmp	.L9067
.L9043:
	movq	-1528(%rbp), %rax
	movq	80(%rax), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L9032
	movq	global_binding_level(%rip), %r9
	cmpq	%r9, current_binding_level(%rip)
	je	.L9046
	movq	48(%rbx), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L9047
.L9046:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L9048
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10197
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L9049
	movq	144(%rdi), %r10
	testb	$1, 3(%r10)
	jne	.L11484
.L9049:
	testq	%rcx, %rcx
	jne	.L10197
.L10198:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10197
.L9048:
	movq	40(%rbx), %rcx
.L9047:
	testq	%rcx, %rcx
	je	.L10277
.L10197:
	cmpb	$32, 16(%rcx)
	je	.L9067
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L9067
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L9059
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11192
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L11485
.L11192:
	movq	%rax, %rcx
	jmp	.L9067
.L11485:
	testl	%edx, %edx
	jg	.L11192
	movl	$1, %r12d
	testl	%r12d, %r12d
	je	.L9067
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11192
.L9059:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L9067
	jmp	.L11192
.L11484:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L9067
	testq	%rax, %rax
	je	.L10198
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L9049
.L9030:
	movq	-1520(%rbp), %rsi
	movq	-1528(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -1544(%rbp)
	je	.L9107
	movq	-1520(%rbp), %r12
	movq	8(%r12), %rsi
	movq	%r12, %rdi
.L11195:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L9108:
	movq	-1528(%rbp), %rdx
	movq	-1520(%rbp), %r11
	movq	%rdx, 8(%r11)
	movq	-1544(%rbp), %rdi
	movq	56(%rdi), %r12
	testq	%r12, %r12
	je	.L9111
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L9112
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L9112:
	movq	decl_obstack+24(%rip), %rdx
	movq	-1544(%rbp), %rsi
	leaq	8(%rdx), %rbx
	movq	%rsi, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rbx
	ja	.L11486
.L9114:
	movq	%rdx, %r9
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	-1544(%rbp), %rdx
	movq	%rdx, (%r9)
	cmpb	$32, 16(%rdx)
	je	.L11487
.L9111:
	movq	-1544(%rbp), %r12
	movq	%r12, -2688(%rbp)
	jmp	.L10830
.L11487:
	cmpq	$0, 72(%rdx)
	jne	.L9111
	movq	8(%rdx), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	%rax, -1552(%rbp)
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L9116
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1544(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1552(%rbp), %r8
	movq	%r8, 8(%rax)
	jmp	.L9111
.L9116:
	movq	-1544(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L9111
.L11486:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L9114
.L9107:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L9108
	movq	-1520(%rbp), %r10
	movq	8(%r10), %rsi
	movq	%r10, %rdi
	jmp	.L11195
.L11470:
	cmpq	$0, class_binding_level(%rip)
	je	.L9029
	movq	144(%rax), %rbx
	testb	$16, 3(%rbx)
	jne	.L9028
	jmp	.L9029
.L11469:
	movq	-1520(%rbp), %rdi
	movq	-1528(%rbp), %rsi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%rbx)
	jmp	.L9025
	.p2align 6,,7
.L8996:
	movq	-2712(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10821
	movl	flag_traditional(%rip), %r8d
	testl	%r8d, %r8d
	jne	.L10825
	testb	$8, 18(%r14)
	je	.L10825
	testb	$8, 18(%r13)
	jne	.L10825
	testb	$9, 53(%r13)
	jne	.L10825
	cmpq	%r13, current_function_decl(%rip)
	je	.L11488
.L9005:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L9006
	cmpq	$0, 8(%rax)
	jne	.L11489
.L9006:
	movq	-2712(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11191:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-2712(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L10825
.L11489:
	movq	-2712(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11191
.L11488:
	movq	-2712(%rbp), %r13
	movq	%r13, current_function_decl(%rip)
	jmp	.L9005
	.p2align 6,,7
.L11447:
	cmpq	$0, 64(%rcx)
	jne	.L8994
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L8994
.L11446:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -2712(%rbp)
	call	error_with_decl
	jmp	.L8992
.L8985:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L8987
.L8991:
	cmpq	%r14, 56(%rax)
	je	.L8987
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L8991
.L8987:
	movq	%rax, -2712(%rbp)
	jmp	.L8984
.L11445:
	movq	40(%r14), %rax
	jmp	.L8987
.L11444:
	movq	56(%r13), %r14
	jmp	.L8981
.L11443:
	testb	$32, 53(%r13)
	jne	.L8979
	jmp	.L8980
.L10817:
	movzbl	16(%r13), %edx
	jmp	.L8979
.L10806:
	movzbl	16(%r13), %edx
.L8721:
	cmpb	$32, %dl
	je	.L10920
.L8729:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L8867
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L8867
	testb	$1, 53(%rax)
	jne	.L8868
	testb	$8, 18(%rax)
	je	.L8867
.L8868:
	andb	$8, %dl
	je	.L11490
	.p2align 4,,7
.L8867:
	movl	flag_traditional(%rip), %r12d
	testl	%r12d, %r12d
	je	.L10814
	testb	$1, 53(%r13)
	je	.L10814
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rsi
	cmpq	%rsi, current_binding_level(%rip)
	je	.L8871
	movq	48(%r14), %r11
	testq	%r11, %r11
	movq	%r11, %rdx
	jne	.L8872
.L8871:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L8873
	movq	56(%r14), %rdx
	testq	%rdx, %rdx
	jne	.L10195
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L8874
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L11491
.L8874:
	testq	%rdx, %rdx
	jne	.L10195
.L10196:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rdx
	jne	.L10195
.L8873:
	movq	40(%r14), %rdx
.L8872:
	testq	%rdx, %rdx
	je	.L10276
.L10195:
	cmpb	$32, 16(%rdx)
	je	.L8876
	movl	looking_for_typename(%rip), %ecx
	testl	%ecx, %ecx
	js	.L8876
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L8884
	movq	80(%rax), %rax
	cmpq	%rax, %rdx
	je	.L11188
	testl	%ebx, %ebx
	jle	.L11492
.L11188:
	movq	%rax, %rdx
.L8876:
	testq	%rdx, %rdx
	jne	.L10814
.L10276:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -2664(%rbp)
.L8870:
	cmpq	%rax, -2664(%rbp)
	je	.L11493
	movq	current_binding_level(%rip), %rbx
	movq	48(%r14), %r12
	movq	40(%r14), %r15
	cmpq	%rax, %rbx
	je	.L11494
.L11189:
	movq	16(%rbx), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%rbx)
.L8915:
	testq	%r12, %r12
	movq	%r13, 48(%r14)
	je	.L11495
.L8926:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L8928
	testq	%r12, %r12
	je	.L8929
	testb	$1, 53(%r13)
	jne	.L8929
	cmpb	$34, 16(%r12)
	je	.L11496
.L8929:
	movl	warn_shadow(%rip), %r11d
	testl	%r11d, %r11d
	je	.L8928
	testb	$1, 53(%r13)
	jne	.L8928
	movl	32(%r13), %r9d
	testl	%r9d, %r9d
	je	.L8928
	testq	%rax, %rax
	jne	.L8928
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L8934
	cmpb	$34, 16(%r12)
	je	.L11497
.L8934:
	cmpq	$0, 56(%r14)
	je	.L8936
	movl	$.LC41, %edi
.L8935:
	testq	%rdi, %rdi
	jne	.L11190
	.p2align 4,,7
.L8928:
	testq	%r12, %r12
	je	.L10815
	movq	-2664(%rbp), %rbx
	movq	%r12, %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	16(%rbx), %rdx
	call	tree_cons
	movq	-2664(%rbp), %r12
	movq	%rax, 16(%r12)
.L10815:
	movzbl	16(%r13), %edx
.L8913:
	leal	-128(%rdx), %edi
	cmpb	$1, %dil
	jbe	.L8701
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L8701
	cmpb	$18, 16(%rcx)
	je	.L11498
.L8945:
	testb	$64, 46(%rcx)
	je	.L8701
.L8944:
	movq	-2664(%rbp), %rdx
	movzwl	64(%rdx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rdx)
	je	.L11499
.L10816:
	movzbl	16(%r13), %edx
	.p2align 4,,7
.L8701:
	cmpb	$32, %dl
	je	.L11500
.L8947:
	movq	-2664(%rbp), %r9
	cmpq	global_binding_level(%rip), %r9
	movq	(%r9), %rcx
	movq	%rcx, (%r13)
	movq	%r13, (%r9)
	jne	.L8720
	testb	$4, 17(%r13)
	jne	.L8720
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L8720
.L11500:
	testq	%r14, %r14
	je	.L8947
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L8948
	cmpq	class_binding_level(%rip), %rax
	je	.L8949
	movq	48(%r14), %rax
	testq	%rax, %rax
	je	.L8953
	cmpb	$32, 16(%rax)
	je	.L8951
.L8953:
	cmpq	$0, current_class_type(%rip)
	je	.L8948
	movq	56(%r14), %rax
	testq	%rax, %rax
	je	.L8948
	cmpb	$32, 16(%rax)
	je	.L8951
.L8948:
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L8952
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L8951
	cmpb	$-127, %dl
	je	.L11501
.L8952:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L8947
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L11502
.L8959:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L8963
	cmpq	class_binding_level(%rip), %rax
	je	.L8964
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L8968
	cmpb	$32, 16(%rax)
	je	.L8966
.L8968:
	cmpq	$0, current_class_type(%rip)
	je	.L8963
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L8963
	cmpb	$32, 16(%rax)
	je	.L8966
.L8963:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L8947
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L8966
	cmpb	$-127, %dl
	jne	.L8947
	movq	$0, 8(%rbx)
	jmp	.L8947
.L8966:
	movq	8(%rax), %r14
	movq	%r14, 8(%rbx)
	jmp	.L8947
.L8964:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L8968
.L11502:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %r12
	sete	%r11b
	movq	8(%r13), %r15
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	cmpb	$1, 16(%r14)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%r14), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L8959
.L11501:
	movq	$0, 8(%r14)
	jmp	.L8952
.L8951:
	movq	8(%rax), %r10
	movq	%r10, 8(%r14)
	jmp	.L8952
.L8949:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L8953
.L11499:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10816
.L11498:
	movq	8(%rcx), %r8
	testb	$64, 46(%r8)
	jne	.L8944
	jmp	.L8945
.L11190:
	movq	32(%r14), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L8928
.L8936:
	testq	%r12, %r12
	je	.L8938
	movl	$.LC42, %edi
	jmp	.L8935
.L8938:
	testq	%r15, %r15
	movl	$.LC43, %ecx
	cmovne	%rcx, %rdi
	jmp	.L8935
.L11497:
	movl	$.LC40, %edi
	jmp	.L8935
.L11496:
	cmpb	$34, 16(%r13)
	je	.L8929
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r15
	movq	56(%r15), %rax
	je	.L8930
	movq	56(%rax), %rax
.L8930:
	movzbl	66(%rax), %esi
	andl	$15, %esi
	decl	%esi
	jne	.L8928
	movl	$.LC40, %edi
	jmp	.L11190
	.p2align 6,,7
.L11495:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L11503
.L8918:
	testq	%r12, %r12
	jne	.L8926
	testq	%r15, %r15
	jne	.L8926
	testb	$1, 53(%r13)
	je	.L8926
	testb	$8, 18(%r13)
	je	.L8926
	orb	$8, 18(%r14)
	jmp	.L8926
	.p2align 6,,7
.L11503:
	testq	%r15, %r15
	je	.L8918
	cmpb	$29, 16(%r13)
	jne	.L8918
	cmpb	$29, 16(%r15)
	jne	.L8918
	movq	8(%r13), %rdi
	movq	8(%r15), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L11504
	movzbl	53(%r15), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L8921
	movzbl	53(%r13), %r8d
	leal	0(,%rax,8), %r10d
	leaq	88(%r13), %rdx
	andb	$-9, %r8b
	orb	%r10b, %r8b
	movb	%r8b, 53(%r13)
	cmpq	%r15, current_function_decl(%rip)
	je	.L8922
	movq	88(%r15), %rax
.L8923:
	movq	%rax, (%rdx)
	movq	72(%r15), %rbx
	movq	80(%r15), %rdi
	movq	136(%r15), %rdx
	movzbl	17(%r13), %esi
	movq	%rbx, 72(%r13)
	movq	%rdi, 80(%r13)
	movq	%rdx, 136(%r13)
	movzbl	17(%r15), %ecx
	movq	%r15, 96(%r13)
	andb	$127, %sil
	shrb	$7, %cl
	movzbl	%cl, %r9d
	movl	%r9d, %r11d
	salb	$7, %r11b
	orb	%r11b, %sil
	movb	%sil, 17(%r13)
	movzbl	53(%r15), %ecx
.L8921:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L8924
	movzbl	53(%r13), %r8d
	salb	$4, %al
	andb	$-17, %r8b
	orb	%al, %r8b
	movb	%r8b, 53(%r13)
	movl	128(%r15), %eax
	movl	%eax, 128(%r13)
.L8924:
	movq	8(%r15), %rdx
	cmpq	$0, 24(%rdx)
	je	.L8918
	cmpq	$0, 88(%r15)
	je	.L8918
	movq	8(%r13), %r10
	cmpq	$0, 24(%r10)
	jne	.L8918
	movq	%rdx, 8(%r13)
	jmp	.L8918
.L8922:
	xorl	%eax, %eax
	jmp	.L8923
	.p2align 6,,7
.L11504:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L8918
	.p2align 6,,7
.L11494:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L8915
	jmp	.L11189
.L11493:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L11505
.L8890:
	cmpq	$0, 40(%r14)
	jne	.L8891
	testb	$8, 18(%r13)
	je	.L8891
	orb	$8, 18(%r14)
.L8891:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L11506
.L8893:
	movq	%r13, 40(%r14)
	movzbl	16(%r13), %edx
.L8892:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L8904
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L8894
	testb	$1, 18(%rcx)
	je	.L8894
	orb	$1, 18(%r13)
	movq	72(%r14), %rax
.L8894:
	testq	%rax, %rax
	je	.L8904
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L8899
	testb	$8, 17(%rcx)
	je	.L8899
	orb	$8, 17(%r13)
	movq	72(%r14), %rax
.L8899:
	testq	%rax, %rax
	je	.L8904
	cmpq	$0, 8(%rax)
	je	.L8904
	cmpb	$29, %dl
	je	.L11507
.L8907:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L8904:
	testb	$8, 18(%r14)
	je	.L8913
	cmpb	$32, %dl
	je	.L8913
	testb	$8, 18(%r13)
	jne	.L8913
	testb	$1, 53(%r13)
	jne	.L8913
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L8909
	cmpq	$0, 8(%rax)
	jne	.L11508
.L8909:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11246:
	xorl	%eax, %eax
	call	warning
	jmp	.L10815
.L11508:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11246
.L11507:
	movq	8(%r13), %rbx
	movq	integer_type_node(%rip), %rdi
	cmpq	%rdi, 8(%rbx)
	jne	.L8907
	jmp	.L8904
	.p2align 6,,7
.L11506:
	cmpq	$0, -2640(%rbp)
	je	.L8893
	movq	-2640(%rbp), %rcx
	cmpb	$32, 16(%rcx)
	jne	.L8892
	jmp	.L8893
.L11505:
	testb	$8, 54(%r13)
	jne	.L8890
	andb	$-9, 18(%r13)
	jmp	.L8890
	.p2align 6,,7
.L10814:
	movq	global_binding_level(%rip), %rax
	jmp	.L8870
.L11492:
	testl	%ecx, %ecx
	jg	.L11188
	testl	%ebx, %ebx
	je	.L8876
	movq	%rdx, %rsi
	movq	%r14, %rdi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11188
	.p2align 6,,7
.L8884:
	movq	8(%rdx), %r15
	cmpq	error_mark_node(%rip), %r15
	cmove	%r15, %rdx
	jmp	.L8876
.L11491:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rdx
	je	.L8876
	testq	%rax, %rax
	je	.L10196
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rdx
	jmp	.L8874
	.p2align 6,,7
.L11490:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L8867
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r14), %rdi
	call	warning_with_decl
	jmp	.L8867
	.p2align 6,,7
.L10920:
	movq	8(%r13), %rdx
	movq	80(%rdx), %r12
	testq	%r12, %r12
	je	.L8731
	movzbl	16(%r12), %eax
	cmpb	$32, %al
	je	.L8730
.L8731:
	movq	global_binding_level(%rip), %r15
	movq	%r13, %r12
	cmpq	%r15, current_binding_level(%rip)
	jne	.L10807
	movq	%r13, 80(%rdx)
.L10807:
	movzbl	16(%r13), %eax
.L8734:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%bl
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	movq	56(%r12), %rbx
	testq	%rbx, %rbx
	je	.L8858
	cmpq	$0, 72(%r12)
	je	.L11509
.L8858:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L8729
	cmpq	$0, 56(%rax)
	je	.L8729
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %r15
	cmpq	global_binding_level(%rip), %rbx
	je	.L11510
.L11187:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L8864:
	movq	%r12, 8(%r15)
	jmp	.L8729
.L11510:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L8864
	jmp	.L11187
.L11509:
	cmpb	$32, 16(%r13)
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	sete	%r8b
	movq	8(%r13), %r15
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L8859
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	jmp	.L8858
.L8859:
	movq	%rbx, 72(%r13)
	jmp	.L8858
.L8730:
	movq	current_binding_level(%rip), %rsi
	movq	56(%r12), %r15
	cmpq	global_binding_level(%rip), %rsi
	jne	.L8734
	movq	32(%r15), %rcx
	cmpb	$36, (%rcx)
	jne	.L8734
	cmpb	$95, 1(%rcx)
	jne	.L8734
	movq	class_binding_level(%rip), %rbx
	movq	%r13, 80(%rdx)
	movq	8(%r13), %r8
	testq	%rbx, %rbx
	movq	%rbx, -2648(%rbp)
	movq	%r8, -1456(%rbp)
	jne	.L8738
	testb	$-128, 66(%rsi)
	movq	%rsi, -2648(%rbp)
	je	.L8738
.L8742:
	movq	-2648(%rbp), %rax
	movq	56(%rax), %r10
	testb	$-128, 66(%r10)
	movq	%r10, -2648(%rbp)
	jne	.L8742
.L8738:
	movq	-2648(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11511
	movq	-2648(%rbp), %rcx
	movq	-1456(%rbp), %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	8(%rcx), %rdx
	call	saveable_tree_cons
	movq	-2648(%rbp), %r11
	movq	%rax, 8(%r11)
.L8744:
	testq	%r15, %r15
	je	.L8745
	movq	-1456(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L8746
	movq	%r15, 80(%rcx)
.L8746:
	movq	-1456(%rbp), %rbx
	cmpq	%rbx, 8(%r15)
	je	.L8747
	cmpb	$21, 16(%rbx)
	je	.L11512
.L8748:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L8750
	cmpq	$0, 32(%rax)
	je	.L8749
.L8750:
	movq	lang_name_cplusplus(%rip), %rdx
	cmpq	%rdx, current_lang_name(%rip)
	je	.L11513
.L8751:
	xorl	%ecx, %ecx
.L8786:
	testq	%rcx, %rcx
	jne	.L8787
.L10275:
	movq	-1456(%rbp), %rdx
	movl	$32, %edi
	movq	%r15, %rsi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-1456(%rbp), %rdi
	movq	%rax, -2656(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	current_binding_level(%rip), %rbx
	movq	-2656(%rbp), %rsi
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, 112(%rsi)
	movl	$0, 32(%rsi)
	je	.L11514
.L11183:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L8789:
	movq	-1456(%rbp), %rcx
	movq	%rcx, 8(%r15)
.L8792:
	movq	32(%r15), %rax
	cmpb	$36, (%rax)
	je	.L11515
.L8794:
	movq	-1456(%rbp), %rbx
	movq	80(%rbx), %rdx
	testq	%rdx, %rdx
	je	.L8825
	cmpb	$32, 16(%rdx)
	je	.L11516
.L8795:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L8814
	movq	-2656(%rbp), %rcx
	movq	56(%rcx), %rdx
	testq	%rdx, %rdx
	movq	%rdx, -1472(%rbp)
	je	.L10811
	movq	56(%rdx), %rsi
	testq	%rsi, %rsi
	je	.L8816
	movq	%rdx, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L8816:
	movq	decl_obstack+24(%rip), %rdx
	movq	-2656(%rbp), %r11
	movq	-1472(%rbp), %r10
	leaq	8(%rdx), %rbx
	cmpq	decl_obstack+32(%rip), %rbx
	movq	%r11, 56(%r10)
	ja	.L11517
.L8818:
	movq	-2656(%rbp), %rsi
	movq	%rdx, %rdi
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rsi, (%rdi)
	cmpb	$32, 16(%rsi)
	je	.L11518
.L10811:
	movq	32(%r15), %rax
.L8825:
	cmpb	$36, (%rax)
	je	.L11519
.L8839:
	movq	-2656(%rbp), %rdx
	movq	-1456(%rbp), %r9
	movq	%rdx, 80(%r9)
	movq	current_class_type(%rip), %rdx
	testq	%rdx, %rdx
	jne	.L8842
	cmpq	$0, current_function_decl(%rip)
	je	.L8841
.L8842:
	movq	lang_name_cplusplus(%rip), %r8
	cmpq	%r8, current_lang_name(%rip)
	je	.L8840
.L8841:
	movq	-2656(%rbp), %rax
	movq	%r15, 72(%rax)
.L8747:
	movq	-2648(%rbp), %rsi
	movzbl	66(%rsi), %r10d
	andl	$15, %r10d
	cmpl	$2, %r10d
	je	.L11520
.L8745:
	movq	-1456(%rbp), %rsi
	movq	80(%rsi), %rax
	cmpb	$32, 16(%rax)
	je	.L11521
	movq	-1456(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-1456(%rbp), %rdi
	movq	%rax, (%rdi)
.L11186:
	movzbl	16(%r12), %eax
	jmp	.L8734
.L11521:
	movq	%rax, (%rsi)
	jmp	.L11186
.L11520:
	movq	-1456(%rbp), %r9
	orb	$64, 18(%r9)
	movq	80(%r9), %r11
	movq	current_class_type(%rip), %rax
	movq	%r11, 56(%r15)
	cmpq	$0, 32(%rax)
	jne	.L8745
	movq	-2648(%rbp), %rdx
	movq	144(%rax), %r15
	movq	8(%rdx), %rcx
	movq	%rcx, 72(%r15)
	jmp	.L8745
.L8840:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L11522
	cmpq	$0, 32(%rdx)
	jne	.L8747
	movq	-2656(%rbp), %r10
	movq	80(%rdx), %rsi
	cmpb	$32, 16(%r10)
	movq	72(%rsi), %rbx
	movl	$136, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L8850
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2656(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1456(%rbp), %r11
	movq	%r11, 8(%rax)
.L8852:
	movq	-2656(%rbp), %rax
	movq	current_class_type(%rip), %r8
	movq	152(%rax), %rbx
	movq	%r8, 64(%rax)
	movq	%r8, 16(%rbx)
	jmp	.L8747
.L8850:
	movq	-2656(%rbp), %rdi
	movq	%r15, 72(%rdi)
	jmp	.L8852
.L11522:
	movq	-2656(%rbp), %rsi
	movq	112(%rax), %rbx
	cmpb	$32, 16(%rsi)
	movl	$136, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L8845
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2656(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1456(%rbp), %r11
	movq	%r11, 8(%rax)
.L8847:
	movq	current_function_decl(%rip), %r8
	movq	-2656(%rbp), %rbx
	movq	%r8, 64(%rbx)
	jmp	.L8747
.L8845:
	movq	-2656(%rbp), %rdi
	movq	%r15, 72(%rdi)
	jmp	.L8847
.L11519:
	cmpb	$95, 1(%rax)
	jne	.L8839
	movq	-2656(%rbp), %rdi
	orb	$64, 53(%rdi)
	jmp	.L8839
.L11518:
	cmpq	$0, 72(%rsi)
	jne	.L10811
	movq	8(%rsi), %rdx
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%rdx, -1480(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L8820
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	-1472(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-1472(%rbp), %r10
	movl	24(%r10), %eax
	movq	32(%r10), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2656(%rbp), %r8
	movq	%rax, 72(%r8)
	movq	-1480(%rbp), %r9
	movq	%r9, 8(%rax)
	jmp	.L10811
.L8820:
	movq	-1472(%rbp), %rdx
	movq	-2656(%rbp), %rdi
	movq	%rdx, 72(%rdi)
	jmp	.L10811
.L11517:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L8818
.L8814:
	movq	-2656(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -2656(%rbp)
	jmp	.L10811
.L11516:
	movq	global_binding_level(%rip), %r10
	cmpq	%r10, current_binding_level(%rip)
	je	.L8796
	movq	48(%r15), %r11
	testq	%r11, %r11
	movq	%r11, %rcx
	jne	.L8797
.L8796:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L8798
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L10193
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L8799
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L11523
.L8799:
	testq	%rcx, %rcx
	jne	.L10193
.L10194:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10193
.L8798:
	movq	40(%r15), %rcx
.L8797:
	testq	%rcx, %rcx
	je	.L8801
.L10193:
	cmpb	$32, 16(%rcx)
	je	.L8801
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L8801
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L8809
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11184
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L11524
.L11184:
	movq	%rax, %rcx
.L8801:
	movq	-1456(%rbp), %r8
	cmpq	80(%r8), %rcx
	jne	.L8795
	jmp	.L10811
.L11524:
	testl	%edx, %edx
	jg	.L11184
	movl	$1, %r9d
	testl	%r9d, %r9d
	je	.L8801
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11184
.L8809:
	movq	8(%rcx), %rsi
	cmpq	error_mark_node(%rip), %rsi
	cmove	%rsi, %rcx
	jmp	.L8801
.L11523:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%r15, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L8801
	testq	%rax, %rax
	je	.L10194
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L8799
.L11515:
	cmpb	$95, 1(%rax)
	jne	.L8794
	jmp	.L8825
.L11514:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L8789
	jmp	.L11183
	.p2align 6,,7
.L8787:
	movq	80(%rcx), %r8
	movq	%r8, -2656(%rbp)
	jmp	.L8792
.L11513:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L8753
	movq	80(%rax), %rbx
.L8753:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L8786
.L8785:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L8762
	cmpl	$32, %eax
	je	.L11525
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L8756:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L8786
	jmp	.L8785
.L11525:
	movq	8(%rbx), %rsi
	movq	-1456(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%rsi), %r9
	movq	72(%r9), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10894
	movq	64(%rbx), %rbx
	jmp	.L8756
.L10894:
	movq	32(%rax), %rcx
	jmp	.L8786
.L8762:
	movq	-1456(%rbp), %rbx
	movq	80(%rbx), %r8
	movq	56(%r8), %rbx
	testq	%rbx, %rbx
	je	.L8751
	movq	global_binding_level(%rip), %r10
	cmpq	%r10, current_binding_level(%rip)
	je	.L8765
	movq	48(%rbx), %r11
	testq	%r11, %r11
	movq	%r11, %rcx
	jne	.L8766
.L8765:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L8767
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10191
	movq	32(%rdi), %rax
	testq	%rax, %rax
	movq	%rax, -1464(%rbp)
	jne	.L8768
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L11526
.L8768:
	testq	%rcx, %rcx
	jne	.L10191
.L10192:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10191
.L8767:
	movq	40(%rbx), %rcx
.L8766:
	testq	%rcx, %rcx
	je	.L10275
.L10191:
	cmpb	$32, 16(%rcx)
	je	.L8786
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L8786
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L8778
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11182
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L11527
.L11182:
	movq	%rax, %rcx
	jmp	.L8786
.L11527:
	testl	%edx, %edx
	jg	.L11182
	movl	$1, %r9d
	testl	%r9d, %r9d
	je	.L8786
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11182
.L8778:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L8786
	jmp	.L11182
.L11526:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L8786
	testq	%rax, %rax
	je	.L10192
	cmpb	$32, 16(%rax)
	cmovne	-1464(%rbp), %rcx
	jmp	.L8768
.L8749:
	movq	-1456(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r15, %rsi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -1488(%rbp)
	je	.L11528
.L11185:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L8827:
	movq	-1456(%rbp), %r9
	movq	%r9, 8(%r15)
	movq	-1488(%rbp), %rbx
	movq	56(%rbx), %rax
	testq	%rax, %rax
	movq	%rax, -1496(%rbp)
	je	.L8830
	movq	56(%rax), %rsi
	testq	%rsi, %rsi
	je	.L8831
	movq	class_binding_level(%rip), %rbx
	movq	%rax, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L8831:
	movq	decl_obstack+24(%rip), %rdx
	movq	-1488(%rbp), %r10
	movq	-1496(%rbp), %rax
	leaq	8(%rdx), %r8
	cmpq	decl_obstack+32(%rip), %r8
	movq	%r10, 56(%rax)
	ja	.L11529
.L8833:
	movq	-1488(%rbp), %rbx
	movq	%rdx, %rsi
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%rsi)
	cmpb	$32, 16(%rbx)
	je	.L11530
.L8830:
	movq	-1488(%rbp), %rbx
	movq	%rbx, -2656(%rbp)
	jmp	.L10811
.L11530:
	cmpq	$0, 72(%rbx)
	jne	.L8830
	movq	-1488(%rbp), %r11
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%r11), %rcx
	movq	%rcx, -1504(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L8835
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-1496(%rbp), %r10
	cmpb	$1, 16(%r10)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	-1496(%rbp), %r9
	movq	32(%rbx), %rdx
	movq	-1496(%rbp), %r8
	movl	$.LC35, %esi
	movq	32(%r9), %rcx
	movl	24(%r8), %eax
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1488(%rbp), %rdx
	movq	%rax, 72(%rdx)
	movq	-1504(%rbp), %rdi
	movq	%rdi, 8(%rax)
	jmp	.L8830
.L8835:
	movq	-1496(%rbp), %rcx
	movq	-1488(%rbp), %r11
	movq	%rcx, 72(%r11)
	jmp	.L8830
.L11529:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L8833
.L11528:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L8827
	jmp	.L11185
	.p2align 6,,7
.L11512:
	cmpq	$0, class_binding_level(%rip)
	je	.L8748
	movq	144(%rbx), %rdi
	testb	$16, 3(%rdi)
	jne	.L8747
	jmp	.L8748
	.p2align 6,,7
.L11511:
	movq	-1456(%rbp), %rsi
	movq	8(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	perm_tree_cons
	movq	%rax, 8(%rbx)
	jmp	.L8744
	.p2align 6,,7
.L8715:
	movq	-2640(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10806
	movl	flag_traditional(%rip), %esi
	testl	%esi, %esi
	jne	.L8720
	testb	$8, 18(%r14)
	je	.L8720
	testb	$8, 18(%r13)
	jne	.L8720
	testb	$9, 53(%r13)
	jne	.L8720
	cmpq	%r13, current_function_decl(%rip)
	je	.L11531
.L8724:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L8725
	cmpq	$0, 8(%rax)
	jne	.L11532
.L8725:
	movq	-2640(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11181:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-2640(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L8720
.L11532:
	movq	-2640(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11181
.L11531:
	movq	-2640(%rbp), %r13
	movq	%r13, current_function_decl(%rip)
	jmp	.L8724
	.p2align 6,,7
.L11333:
	cmpq	$0, 64(%rsi)
	jne	.L8713
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L8713
.L11332:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -2640(%rbp)
	call	error_with_decl
	jmp	.L8711
.L8704:
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.L8706
	.p2align 4,,7
.L8710:
	cmpq	%r14, 56(%rdi)
	je	.L8706
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L8710
.L8706:
	movq	%rdi, -2640(%rbp)
	jmp	.L8703
.L11331:
	movq	40(%r14), %rdi
	movq	%rdi, -2640(%rbp)
	jmp	.L8703
.L11330:
	movq	56(%r13), %r14
	jmp	.L8700
.L11329:
	testb	$32, 53(%r13)
	jne	.L8698
	jmp	.L8699
.L10802:
	movzbl	16(%r13), %edx
	jmp	.L8698
.L11328:
	leal	(%rcx,%rcx), %eax
	movq	builtin_type_tdescs_arr(%rip), %rdi
	movslq	%eax,%rsi
	movl	%eax, builtin_type_tdescs_max(%rip)
	xorl	%eax, %eax
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L8694
	.p2align 6,,7
.L8396:
	movq	ptr_type_node(%rip), %rbx
	jmp	.L8397
.L11327:
	leal	(%rcx,%rcx), %edx
	movq	builtin_type_tdescs_arr(%rip), %rdi
	xorl	%eax, %eax
	movslq	%edx,%rsi
	movl	%edx, builtin_type_tdescs_max(%rip)
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L8392
.L11326:
	leal	(%rcx,%rcx), %eax
	movq	builtin_type_tdescs_arr(%rip), %rdi
	movslq	%eax,%rsi
	movl	%eax, builtin_type_tdescs_max(%rip)
	xorl	%eax, %eax
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L8092
.L11325:
	leal	(%rcx,%rcx), %eax
	movq	builtin_type_tdescs_arr(%rip), %rdi
	movslq	%eax,%rsi
	movl	%eax, builtin_type_tdescs_max(%rip)
	xorl	%eax, %eax
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L7792
.L7782:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L7783
	movq	8(%r12), %rsi
	movq	%r12, %rdi
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	jmp	.L11179
.L7781:
	movl	$32, %edi
	movq	%r12, %rsi
	movq	%r13, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11533
.L11180:
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L7788:
	movq	$0, 8(%r12)
	jmp	.L7780
.L11533:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L7788
	jmp	.L11180
	.p2align 6,,7
.L11324:
	leal	(%rcx,%rcx), %edx
	movq	builtin_type_tdescs_arr(%rip), %rdi
	xorl	%eax, %eax
	movslq	%edx,%rsi
	movl	%edx, builtin_type_tdescs_max(%rip)
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L7492
.L7482:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L7483
	movq	8, %rsi
	xorl	%edi, %edi
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	jmp	.L11177
.L7481:
	xorl	%esi, %esi
	movl	$32, %edi
	movq	%r15, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11534
.L11178:
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L7488:
	movq	$0, 8
	jmp	.L7480
.L11534:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L7488
	jmp	.L11178
	.p2align 6,,7
.L11323:
	movq	-2584(%rbp), %rsi
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r15, %rdx
	call	build_decl
	movq	%rax, %r13
	movq	112(%rax), %r14
	movq	current_binding_level(%rip), %rax
	movq	%rax, -2616(%rbp)
	movq	current_function_decl(%rip), %rax
	cmpq	%rax, %r13
	je	.L10707
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L11535
.L7200:
	movq	%rax, 64(%r13)
.L7199:
	cmpb	$32, %dl
	je	.L11536
.L7201:
	testq	%r14, %r14
	je	.L7202
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L11537
	cmpq	$0, 48(%r14)
	jne	.L7205
	movq	$0, -2624(%rbp)
.L7204:
	cmpq	$0, -2624(%rbp)
	je	.L7222
	movq	-2624(%rbp), %rcx
	cmpq	error_mark_node(%rip), %rcx
	je	.L11538
.L7212:
	cmpq	$0, -2624(%rbp)
	je	.L10711
	movq	-2624(%rbp), %rsi
	cmpb	$34, 16(%rsi)
	je	.L11539
.L7214:
	movq	-2624(%rbp), %rax
	testq	%rax, %rax
	movq	24(%rax), %r12
	movl	32(%rax), %ebx
	je	.L10711
	movzbl	16(%rax), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L7216
	cmpb	$32, %al
	je	.L7222
	cmpb	$32, %dl
	je	.L10919
	movq	-2624(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10711
.L10715:
	movq	global_binding_level(%rip), %rax
.L7221:
	movq	current_binding_level(%rip), %rbx
	cmpq	%rax, %rbx
	je	.L7475
	movq	-2584(%rbp), %r13
	movq	8(%r13), %rsi
	movq	%r13, %rdi
.L11176:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L7476:
	movq	-2584(%rbp), %rdx
	movl	$32, %eax
	cmpl	$31, %eax
	movq	$0, 8(%rdx)
	jg	.L7198
	movq	-2624(%rbp), %r12
	movq	%r12, 40(%rdx)
	jmp	.L7198
.L7475:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L7476
	movq	-2584(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
	jmp	.L11176
.L10711:
	movzbl	16(%r13), %edx
.L7222:
	cmpb	$32, %dl
	je	.L10919
.L7230:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L7368
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L7368
	testb	$1, 53(%rax)
	jne	.L7369
	testb	$8, 18(%rax)
	je	.L7368
.L7369:
	andb	$8, %dl
	je	.L11540
.L7368:
	movl	flag_traditional(%rip), %r12d
	testl	%r12d, %r12d
	je	.L10723
	testb	$1, 53(%r13)
	je	.L10723
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L7372
	movq	48(%r14), %rsi
	testq	%rsi, %rsi
	movq	%rsi, %rcx
	jne	.L7373
.L7372:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L7374
	movq	56(%r14), %rcx
	testq	%rcx, %rcx
	jne	.L10165
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L7375
	movq	144(%rdi), %r10
	testb	$1, 3(%r10)
	jne	.L11541
.L7375:
	testq	%rcx, %rcx
	jne	.L10165
.L10166:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10165
.L7374:
	movq	40(%r14), %rcx
.L7373:
	testq	%rcx, %rcx
	je	.L10266
.L10165:
	cmpb	$32, 16(%rcx)
	je	.L7377
	movl	looking_for_typename(%rip), %esi
	testl	%esi, %esi
	js	.L7377
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L7385
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11173
	testl	%ebx, %ebx
	jle	.L11542
.L11173:
	movq	%rax, %rcx
.L7377:
	testq	%rcx, %rcx
	jne	.L10723
.L10266:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -2616(%rbp)
.L7371:
	cmpq	%rax, -2616(%rbp)
	je	.L11543
	movq	current_binding_level(%rip), %rbx
	movq	48(%r14), %r12
	movq	40(%r14), %r8
	cmpq	%rax, %rbx
	je	.L11544
.L11174:
	movq	16(%rbx), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	movq	%r8, -2808(%rbp)
	call	tree_cons
	movq	-2808(%rbp), %r8
	movq	%rax, 16(%rbx)
.L7416:
	testq	%r12, %r12
	movq	%r13, 48(%r14)
	je	.L11545
.L7427:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L7429
	testq	%r12, %r12
	je	.L7430
	testb	$1, 53(%r13)
	jne	.L7430
	cmpb	$34, 16(%r12)
	je	.L11546
.L7430:
	movl	warn_shadow(%rip), %r11d
	testl	%r11d, %r11d
	je	.L7429
	testb	$1, 53(%r13)
	jne	.L7429
	movl	32(%r13), %edi
	testl	%edi, %edi
	je	.L7429
	testq	%rax, %rax
	jne	.L7429
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L7435
	cmpb	$34, 16(%r12)
	je	.L11547
.L7435:
	cmpq	$0, 56(%r14)
	je	.L7437
	movl	$.LC41, %edi
.L7436:
	testq	%rdi, %rdi
	jne	.L11175
.L7429:
	testq	%r12, %r12
	je	.L10724
	movq	%r12, %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	-2616(%rbp), %r12
	movq	16(%r12), %rdx
	call	tree_cons
	movq	%rax, 16(%r12)
.L10724:
	movzbl	16(%r13), %edx
.L7414:
	leal	-128(%rdx), %ecx
	cmpb	$1, %cl
	jbe	.L7202
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L7202
	cmpb	$18, 16(%rcx)
	je	.L11548
.L7446:
	testb	$64, 46(%rcx)
	je	.L7202
.L7445:
	movq	-2616(%rbp), %rdx
	movzwl	64(%rdx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rdx)
	je	.L11549
.L10725:
	movzbl	16(%r13), %edx
.L7202:
	cmpb	$32, %dl
	je	.L11550
.L7448:
	movq	-2616(%rbp), %r11
	movq	global_binding_level(%rip), %rax
	movq	(%r11), %rdi
	cmpq	%rax, %r11
	movq	%rdi, (%r13)
	movq	%r13, (%r11)
	je	.L11551
.L7474:
	movq	%r13, -2624(%rbp)
	jmp	.L7221
.L11551:
	testb	$4, 17(%r13)
	jne	.L7474
	xorl	%eax, %eax
	movl	$124, %edi
	call	my_friendly_abort
	movq	global_binding_level(%rip), %rax
	jmp	.L7474
.L11550:
	testq	%r14, %r14
	je	.L7448
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L7449
	cmpq	class_binding_level(%rip), %rax
	je	.L7450
	movq	48(%r14), %rax
	testq	%rax, %rax
	je	.L7454
	cmpb	$32, 16(%rax)
	je	.L7452
.L7454:
	cmpq	$0, current_class_type(%rip)
	je	.L7449
	movq	56(%r14), %rax
	testq	%rax, %rax
	je	.L7449
	cmpb	$32, 16(%rax)
	je	.L7452
.L7449:
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L7453
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L7452
	cmpb	$-127, %dl
	je	.L11552
.L7453:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L7448
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L11553
.L7460:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L7464
	cmpq	class_binding_level(%rip), %rax
	je	.L7465
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L7469
	cmpb	$32, 16(%rax)
	je	.L7467
.L7469:
	cmpq	$0, current_class_type(%rip)
	je	.L7464
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L7464
	cmpb	$32, 16(%rax)
	je	.L7467
.L7464:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L7448
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L7467
	cmpb	$-127, %dl
	jne	.L7448
	movq	$0, 8(%rbx)
	jmp	.L7448
.L7467:
	movq	8(%rax), %r14
	movq	%r14, 8(%rbx)
	jmp	.L7448
.L7465:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L7469
.L11553:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %rbx
	sete	%r10b
	movq	8(%r13), %r12
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r14)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r14), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r12, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L7460
.L11552:
	movq	$0, 8(%r14)
	jmp	.L7453
.L7452:
	movq	8(%rax), %rsi
	movq	%rsi, 8(%r14)
	jmp	.L7453
.L7450:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L7454
.L11549:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10725
.L11548:
	movq	8(%rcx), %rbx
	testb	$64, 46(%rbx)
	jne	.L7445
	jmp	.L7446
.L11175:
	movq	32(%r14), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L7429
.L7437:
	testq	%r12, %r12
	je	.L7439
	movl	$.LC42, %edi
	jmp	.L7436
.L7439:
	testq	%r8, %r8
	movl	$.LC43, %r9d
	cmovne	%r9, %rdi
	jmp	.L7436
.L11547:
	movl	$.LC40, %edi
	jmp	.L7436
.L11546:
	cmpb	$34, 16(%r13)
	je	.L7430
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r8
	movq	56(%r8), %rax
	je	.L7431
	movq	56(%rax), %rax
.L7431:
	movzbl	66(%rax), %r10d
	andl	$15, %r10d
	decl	%r10d
	jne	.L7429
	movl	$.LC40, %edi
	jmp	.L11175
	.p2align 6,,7
.L11545:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L11554
.L7419:
	testq	%r12, %r12
	jne	.L7427
	testq	%r8, %r8
	jne	.L7427
	testb	$1, 53(%r13)
	je	.L7427
	testb	$8, 18(%r13)
	je	.L7427
	orb	$8, 18(%r14)
	jmp	.L7427
	.p2align 6,,7
.L11554:
	testq	%r8, %r8
	je	.L7419
	cmpb	$29, 16(%r13)
	jne	.L7419
	cmpb	$29, 16(%r8)
	jne	.L7419
	movq	8(%r8), %rsi
	movq	8(%r13), %rdi
	xorl	%eax, %eax
	movl	$1, %edx
	movq	%r8, -2808(%rbp)
	call	comptypes
	movq	-2808(%rbp), %r8
	testl	%eax, %eax
	je	.L11555
	movzbl	53(%r8), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L7422
	movzbl	53(%r13), %ecx
	leal	0(,%rax,8), %ebx
	leaq	88(%r13), %rdx
	andb	$-9, %cl
	orb	%bl, %cl
	movb	%cl, 53(%r13)
	cmpq	%r8, current_function_decl(%rip)
	je	.L7423
	movq	88(%r8), %rax
.L7424:
	movq	%rax, (%rdx)
	movq	136(%r8), %rcx
	movq	80(%r8), %r9
	movq	72(%r8), %rdx
	movzbl	17(%r13), %esi
	movq	%rcx, 136(%r13)
	movq	%r9, 80(%r13)
	movq	%rdx, 72(%r13)
	movzbl	17(%r8), %edi
	movq	%r8, 96(%r13)
	andb	$127, %sil
	shrb	$7, %dil
	movzbl	%dil, %r11d
	movl	%r11d, %r10d
	salb	$7, %r10b
	orb	%r10b, %sil
	movb	%sil, 17(%r13)
	movzbl	53(%r8), %ecx
.L7422:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L7425
	movzbl	53(%r13), %ebx
	salb	$4, %al
	andb	$-17, %bl
	orb	%al, %bl
	movb	%bl, 53(%r13)
	movl	128(%r8), %eax
	movl	%eax, 128(%r13)
.L7425:
	movq	8(%r8), %rdx
	cmpq	$0, 24(%rdx)
	je	.L7419
	cmpq	$0, 88(%r8)
	je	.L7419
	movq	8(%r13), %rsi
	cmpq	$0, 24(%rsi)
	jne	.L7419
	movq	%rdx, 8(%r13)
	jmp	.L7419
.L7423:
	xorl	%eax, %eax
	jmp	.L7424
.L11555:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	movq	-2808(%rbp), %r8
	jmp	.L7419
	.p2align 6,,7
.L11544:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L7416
	jmp	.L11174
.L11543:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L11556
.L7391:
	cmpq	$0, 40(%r14)
	jne	.L7392
	testb	$8, 18(%r13)
	je	.L7392
	orb	$8, 18(%r14)
.L7392:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L11557
.L7394:
	movq	%r13, 40(%r14)
	movzbl	16(%r13), %edx
.L7393:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L7405
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L7395
	testb	$1, 18(%rcx)
	je	.L7395
	orb	$1, 18(%r13)
	movq	72(%r14), %rax
.L7395:
	testq	%rax, %rax
	je	.L7405
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L7400
	testb	$8, 17(%rcx)
	je	.L7400
	orb	$8, 17(%r13)
	movq	72(%r14), %rax
.L7400:
	testq	%rax, %rax
	je	.L7405
	cmpq	$0, 8(%rax)
	je	.L7405
	cmpb	$29, %dl
	je	.L11558
.L7408:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L7405:
	testb	$8, 18(%r14)
	je	.L7414
	cmpb	$32, %dl
	je	.L7414
	testb	$8, 18(%r13)
	jne	.L7414
	testb	$1, 53(%r13)
	jne	.L7414
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L7410
	cmpq	$0, 8(%rax)
	jne	.L11559
.L7410:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11245:
	xorl	%eax, %eax
	call	warning
	jmp	.L10724
.L11559:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11245
.L11558:
	movq	8(%r13), %r9
	movq	integer_type_node(%rip), %rdi
	cmpq	%rdi, 8(%r9)
	jne	.L7408
	jmp	.L7405
	.p2align 6,,7
.L11557:
	cmpq	$0, -2624(%rbp)
	je	.L7394
	movq	-2624(%rbp), %r11
	cmpb	$32, 16(%r11)
	jne	.L7393
	jmp	.L7394
.L11556:
	testb	$8, 54(%r13)
	jne	.L7391
	andb	$-9, 18(%r13)
	jmp	.L7391
	.p2align 6,,7
.L10723:
	movq	global_binding_level(%rip), %rax
	jmp	.L7371
.L11542:
	testl	%esi, %esi
	jg	.L11173
	testl	%ebx, %ebx
	je	.L7377
	movq	%rax, %rdx
	movq	%r14, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11173
	.p2align 6,,7
.L7385:
	movq	8(%rcx), %r8
	cmpq	error_mark_node(%rip), %r8
	cmove	%r8, %rcx
	jmp	.L7377
.L11541:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L7377
	testq	%rax, %rax
	je	.L10166
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L7375
	.p2align 6,,7
.L11540:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L7368
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r14), %rdi
	call	warning_with_decl
	jmp	.L7368
	.p2align 6,,7
.L10919:
	movq	8(%r13), %rdx
	movq	80(%rdx), %rbx
	testq	%rbx, %rbx
	movq	%rbx, -2608(%rbp)
	je	.L7232
	movzbl	16(%rbx), %eax
	cmpb	$32, %al
	je	.L7231
.L7232:
	movq	global_binding_level(%rip), %rbx
	movq	%r13, -2608(%rbp)
	cmpq	%rbx, current_binding_level(%rip)
	jne	.L10716
	movq	%r13, 80(%rdx)
.L10716:
	movzbl	16(%r13), %eax
.L7235:
	cmpb	$32, %al
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$140, %esi
	call	my_friendly_assert
	movq	-2608(%rbp), %rax
	movq	56(%rax), %rbx
	testq	%rbx, %rbx
	je	.L7359
	cmpq	$0, 72(%rax)
	je	.L11560
.L7359:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L7230
	cmpq	$0, 56(%rax)
	je	.L7230
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %rdi
	cmpq	global_binding_level(%rip), %rbx
	movq	%rdi, -1448(%rbp)
	je	.L7364
	movq	-1448(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
.L11172:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L7365:
	movq	-1448(%rbp), %rbx
	movq	%r12, 8(%rbx)
	jmp	.L7230
.L7364:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L7365
	movq	-1448(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
	jmp	.L11172
.L11560:
	movq	8(%r13), %r10
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	movq	%r10, -1440(%rbp)
	cmpb	$32, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L7360
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	-1440(%rbp), %r8
	movq	%r8, 8(%rax)
	jmp	.L7359
.L7360:
	movq	%rbx, 72(%r13)
	jmp	.L7359
.L7231:
	movq	-2608(%rbp), %r10
	movq	current_binding_level(%rip), %rsi
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%r10), %rcx
	movq	%rcx, -1400(%rbp)
	jne	.L7235
	movq	32(%rcx), %rcx
	cmpb	$36, (%rcx)
	jne	.L7235
	cmpb	$95, 1(%rcx)
	jne	.L7235
	movq	class_binding_level(%rip), %r8
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rdx
	testq	%r8, %r8
	movq	%r8, -2592(%rbp)
	movq	%rdx, -1408(%rbp)
	jne	.L7239
	testb	$-128, 66(%rsi)
	movq	%rsi, -2592(%rbp)
	je	.L7239
.L7243:
	movq	-2592(%rbp), %rax
	movq	56(%rax), %rsi
	testb	$-128, 66(%rsi)
	movq	%rsi, -2592(%rbp)
	jne	.L7243
.L7239:
	movq	-2592(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11561
	movq	-2592(%rbp), %rcx
	movq	-1400(%rbp), %rdi
	xorl	%eax, %eax
	movq	-1408(%rbp), %rsi
	movq	8(%rcx), %rdx
	call	saveable_tree_cons
	movq	-2592(%rbp), %rdi
	movq	%rax, 8(%rdi)
.L7245:
	cmpq	$0, -1400(%rbp)
	je	.L7246
	movq	-1408(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L7247
	movq	-1400(%rbp), %r11
	movq	%r11, 80(%rcx)
.L7247:
	movq	-1400(%rbp), %r9
	movq	-1408(%rbp), %rax
	cmpq	%rax, 8(%r9)
	je	.L7248
	cmpb	$21, 16(%rax)
	je	.L11562
.L7249:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L7251
	cmpq	$0, 32(%rax)
	je	.L7250
.L7251:
	movq	lang_name_cplusplus(%rip), %r12
	cmpq	%r12, current_lang_name(%rip)
	je	.L11563
.L7252:
	xorl	%ecx, %ecx
.L7287:
	testq	%rcx, %rcx
	jne	.L7288
.L10265:
	movq	-1400(%rbp), %rsi
	movq	-1408(%rbp), %rdx
	movl	$32, %edi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-1408(%rbp), %rdi
	movq	%rax, -2600(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-2600(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L7289
	movq	-1400(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
.L11169:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L7290:
	movq	-1408(%rbp), %rsi
	movq	-1400(%rbp), %rdx
	movq	%rsi, 8(%rdx)
.L7293:
	movq	-1400(%rbp), %rdi
	movq	32(%rdi), %rax
	cmpb	$36, (%rax)
	je	.L11564
.L7295:
	movq	-1408(%rbp), %r11
	movq	80(%r11), %rdx
	testq	%rdx, %rdx
	je	.L7326
	cmpb	$32, 16(%rdx)
	je	.L11565
.L7296:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L7315
	movq	-2600(%rbp), %rcx
	movq	56(%rcx), %r12
	testq	%r12, %r12
	je	.L10718
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L7317
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L7317:
	movq	decl_obstack+24(%rip), %rdx
	movq	-2600(%rbp), %r10
	leaq	8(%rdx), %r9
	movq	%r10, 56(%r12)
	cmpq	decl_obstack+32(%rip), %r9
	ja	.L11566
.L7319:
	movq	-2600(%rbp), %rbx
	movq	%rdx, %r8
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%r8)
	cmpb	$32, 16(%rbx)
	je	.L11567
.L10719:
	movq	-1400(%rbp), %rsi
	movq	32(%rsi), %rax
.L7326:
	cmpb	$36, (%rax)
	je	.L11568
.L7340:
	movq	current_class_type(%rip), %rdx
	movq	-2600(%rbp), %rdi
	movq	-1408(%rbp), %rcx
	testq	%rdx, %rdx
	movq	%rdi, 80(%rcx)
	jne	.L7343
	cmpq	$0, current_function_decl(%rip)
	je	.L7342
.L7343:
	movq	lang_name_cplusplus(%rip), %r9
	cmpq	%r9, current_lang_name(%rip)
	je	.L7341
.L7342:
	movq	-1400(%rbp), %r8
	movq	-2600(%rbp), %r10
	movq	%r8, 72(%r10)
.L7248:
	movq	-2592(%rbp), %rax
	movzbl	66(%rax), %esi
	andl	$15, %esi
	cmpl	$2, %esi
	je	.L11569
.L7246:
	movq	-1408(%rbp), %rdx
	movq	80(%rdx), %rax
	cmpb	$32, 16(%rax)
	je	.L11570
	movq	-1408(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-1408(%rbp), %rcx
	movq	%rax, (%rcx)
	movq	-2608(%rbp), %rbx
	movzbl	16(%rbx), %eax
	jmp	.L7235
.L11570:
	movq	%rax, (%rdx)
	movq	-2608(%rbp), %r9
	movzbl	16(%r9), %eax
	jmp	.L7235
.L11569:
	movq	-1408(%rbp), %rdi
	orb	$64, 18(%rdi)
	movq	80(%rdi), %r8
	movq	-1400(%rbp), %r10
	movq	current_class_type(%rip), %rax
	movq	%r8, 56(%r10)
	cmpq	$0, 32(%rax)
	jne	.L7246
	movq	-2592(%rbp), %r11
	movq	144(%rax), %r12
	movq	8(%r11), %rdx
	movq	%rdx, 72(%r12)
	jmp	.L7246
.L7341:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L11571
	cmpq	$0, 32(%rdx)
	jne	.L7248
	movq	-2600(%rbp), %r9
	movq	80(%rdx), %rsi
	cmpb	$32, 16(%r9)
	movq	72(%rsi), %rbx
	movl	$136, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L7351
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-1400(%rbp), %rdi
	cmpb	$1, 16(%rdi)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-1400(%rbp), %r10
	movl	24(%r10), %eax
	movq	32(%r10), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2600(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1408(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L7353:
	movq	-2600(%rbp), %rcx
	movq	current_class_type(%rip), %rbx
	movq	152(%rcx), %r9
	movq	%rbx, 64(%rcx)
	movq	%rbx, 16(%r9)
	jmp	.L7248
.L7351:
	movq	-1400(%rbp), %r11
	movq	-2600(%rbp), %rdx
	movq	%r11, 72(%rdx)
	jmp	.L7353
.L11571:
	movq	-2600(%rbp), %rdx
	movq	112(%rax), %rbx
	movl	$136, %esi
	cmpb	$32, 16(%rdx)
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L7346
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movq	-1400(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-1400(%rbp), %r9
	movl	24(%r9), %eax
	movq	32(%r9), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2600(%rbp), %r11
	movq	%rax, 72(%r11)
	movq	-1408(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L7348:
	movq	current_function_decl(%rip), %rdx
	movq	-2600(%rbp), %r12
	movq	%rdx, 64(%r12)
	jmp	.L7248
.L7346:
	movq	-1400(%rbp), %r8
	movq	-2600(%rbp), %rdi
	movq	%r8, 72(%rdi)
	jmp	.L7348
.L11568:
	cmpb	$95, 1(%rax)
	jne	.L7340
	movq	-2600(%rbp), %rax
	orb	$64, 53(%rax)
	jmp	.L7340
.L11567:
	cmpq	$0, 72(%rbx)
	je	.L11572
.L10720:
	movq	-1400(%rbp), %r11
	movq	32(%r11), %rax
	jmp	.L7326
.L11572:
	movq	-2600(%rbp), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%rax), %rdx
	xorl	%eax, %eax
	movq	%rdx, -1416(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L7321
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2600(%rbp), %rsi
	movq	%rax, 72(%rsi)
	movq	-1416(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L10717:
	movq	-1400(%rbp), %rdx
	movq	32(%rdx), %rax
	jmp	.L7326
.L7321:
	movq	-2600(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L10719
.L11566:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L7319
.L10718:
	movq	-1400(%rbp), %rbx
	movq	32(%rbx), %rax
	jmp	.L7326
.L7315:
	movq	-2600(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -2600(%rbp)
	jmp	.L10720
.L11565:
	movq	global_binding_level(%rip), %r9
	movl	$1, %r12d
	cmpq	%r9, current_binding_level(%rip)
	je	.L7297
	movq	-1400(%rbp), %rbx
	movq	48(%rbx), %r10
	testq	%r10, %r10
	movq	%r10, %rcx
	jne	.L7298
.L7297:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L7299
	movq	-1400(%rbp), %r8
	movq	56(%r8), %rcx
	testq	%rcx, %rcx
	jne	.L10163
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L7300
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L11573
.L7300:
	testq	%rcx, %rcx
	jne	.L10163
.L10164:
	movq	-1400(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10163
	movq	-1400(%rbp), %rsi
	movq	40(%rsi), %rcx
.L7298:
	testq	%rcx, %rcx
	je	.L7302
.L10163:
	cmpb	$32, 16(%rcx)
	je	.L7302
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L7302
	movq	-1400(%rbp), %rdi
	movq	8(%rdi), %rax
	testq	%rax, %rax
	je	.L7310
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11170
	testl	%r12d, %r12d
	jle	.L11574
.L11170:
	movq	%rax, %rcx
.L7302:
	movq	-1408(%rbp), %r11
	cmpq	80(%r11), %rcx
	jne	.L7296
	jmp	.L10717
.L11574:
	testl	%edx, %edx
	jg	.L11170
	testl	%r12d, %r12d
	je	.L7302
	movq	-1400(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11170
.L7310:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L7302
.L11573:
	xorl	%ecx, %ecx
	movq	-1400(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L7302
	testq	%rax, %rax
	je	.L10164
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L7300
.L7299:
	movq	-1400(%rbp), %rax
	movq	40(%rax), %rcx
	jmp	.L7298
.L11564:
	cmpb	$95, 1(%rax)
	jne	.L7295
	jmp	.L7326
.L7289:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L7290
	movq	-1400(%rbp), %r8
	movq	8(%r8), %rsi
	movq	%r8, %rdi
	jmp	.L11169
.L7288:
	movq	80(%rcx), %rax
	movq	%rax, -2600(%rbp)
	jmp	.L7293
.L11563:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L7254
	movq	80(%rax), %rbx
.L7254:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L7287
.L7286:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L7263
	cmpl	$32, %eax
	je	.L11575
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L7257:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L7287
	jmp	.L7286
.L11575:
	movq	8(%rbx), %rdx
	movq	-1408(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%rdx), %r8
	movq	72(%r8), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10893
	movq	64(%rbx), %rbx
	jmp	.L7257
.L10893:
	movq	32(%rax), %rcx
	jmp	.L7287
.L7263:
	movq	-1408(%rbp), %rax
	movq	80(%rax), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L7252
	movq	global_binding_level(%rip), %rdi
	cmpq	%rdi, current_binding_level(%rip)
	je	.L7266
	movq	48(%rbx), %r11
	testq	%r11, %r11
	movq	%r11, %rcx
	jne	.L7267
.L7266:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L7268
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10161
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L7269
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L11576
.L7269:
	testq	%rcx, %rcx
	jne	.L10161
.L10162:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10161
.L7268:
	movq	40(%rbx), %rcx
.L7267:
	testq	%rcx, %rcx
	je	.L10265
.L10161:
	cmpb	$32, 16(%rcx)
	je	.L7287
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L7287
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L7279
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11168
	movl	$1, %r10d
	testl	%r10d, %r10d
	jle	.L11577
.L11168:
	movq	%rax, %rcx
	jmp	.L7287
.L11577:
	testl	%edx, %edx
	jg	.L11168
	movl	$1, %r12d
	testl	%r12d, %r12d
	je	.L7287
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11168
.L7279:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L7287
	jmp	.L11168
.L11576:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L7287
	testq	%rax, %rax
	je	.L10162
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L7269
.L7250:
	movq	-1400(%rbp), %rsi
	movq	-1408(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -1424(%rbp)
	je	.L7327
	movq	-1400(%rbp), %r12
	movq	8(%r12), %rsi
	movq	%r12, %rdi
.L11171:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L7328:
	movq	-1408(%rbp), %rdx
	movq	-1400(%rbp), %r8
	movq	%rdx, 8(%r8)
	movq	-1424(%rbp), %r10
	movq	56(%r10), %r12
	testq	%r12, %r12
	je	.L7331
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L7332
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L7332:
	movq	decl_obstack+24(%rip), %rdx
	movq	-1424(%rbp), %rsi
	leaq	8(%rdx), %rbx
	movq	%rsi, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rbx
	ja	.L11578
.L7334:
	movq	%rdx, %r11
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	-1424(%rbp), %rdx
	movq	%rdx, (%r11)
	cmpb	$32, 16(%rdx)
	je	.L11579
.L7331:
	movq	-1424(%rbp), %r12
	movq	%r12, -2600(%rbp)
	jmp	.L10720
.L11579:
	cmpq	$0, 72(%rdx)
	jne	.L7331
	movq	8(%rdx), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	%rax, -1432(%rbp)
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L7336
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1424(%rbp), %rdi
	movq	%rax, 72(%rdi)
	movq	-1432(%rbp), %rcx
	movq	%rcx, 8(%rax)
	jmp	.L7331
.L7336:
	movq	-1424(%rbp), %r8
	movq	%r12, 72(%r8)
	jmp	.L7331
.L11578:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L7334
.L7327:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L7328
	movq	-1400(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
	jmp	.L11171
.L11562:
	cmpq	$0, class_binding_level(%rip)
	je	.L7249
	movq	144(%rax), %rbx
	testb	$16, 3(%rbx)
	jne	.L7248
	jmp	.L7249
.L11561:
	movq	-1400(%rbp), %rdi
	movq	-1408(%rbp), %rsi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%rbx)
	jmp	.L7245
	.p2align 6,,7
.L7216:
	movq	-2624(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10711
	movl	flag_traditional(%rip), %r9d
	testl	%r9d, %r9d
	jne	.L10715
	testb	$8, 18(%r14)
	je	.L10715
	testb	$8, 18(%r13)
	jne	.L10715
	testb	$9, 53(%r13)
	jne	.L10715
	cmpq	%r13, current_function_decl(%rip)
	je	.L11580
.L7225:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L7226
	cmpq	$0, 8(%rax)
	jne	.L11581
.L7226:
	movq	-2624(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11167:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-2624(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L10715
.L11581:
	movq	-2624(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11167
.L11580:
	movq	-2624(%rbp), %r13
	movq	%r13, current_function_decl(%rip)
	jmp	.L7225
	.p2align 6,,7
.L11539:
	cmpq	$0, 64(%rsi)
	jne	.L7214
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L7214
.L11538:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -2624(%rbp)
	call	error_with_decl
	jmp	.L7212
.L7205:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L7207
.L7211:
	cmpq	%r14, 56(%rax)
	je	.L7207
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L7211
.L7207:
	movq	%rax, -2624(%rbp)
	jmp	.L7204
.L11537:
	movq	40(%r14), %rdi
	movq	%rdi, -2624(%rbp)
	jmp	.L7204
.L11536:
	movq	56(%r13), %r14
	jmp	.L7201
.L11535:
	testb	$32, 53(%r13)
	jne	.L7199
	jmp	.L7200
.L10707:
	movzbl	16(%r13), %edx
	jmp	.L7199
.L11322:
	leal	(%rcx,%rcx), %r8d
	movq	builtin_type_tdescs_arr(%rip), %rdi
	xorl	%eax, %eax
	movslq	%r8d,%rsi
	movl	%r8d, builtin_type_tdescs_max(%rip)
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L7192
.L7182:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L7183
	movq	8(%r12), %rsi
	movq	%r12, %rdi
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	jmp	.L11165
.L7181:
	movl	$32, %edi
	movq	%r12, %rsi
	movq	%r13, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11582
.L11166:
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L7188:
	movq	$0, 8(%r12)
	jmp	.L7180
.L11582:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L7188
	jmp	.L11166
	.p2align 6,,7
.L6894:
	movb	$64, 45(%rax)
	jmp	.L6895
.L11321:
	leal	(%rcx,%rcx), %edx
	movq	builtin_type_tdescs_arr(%rip), %rdi
	xorl	%eax, %eax
	movslq	%edx,%rsi
	movl	%edx, builtin_type_tdescs_max(%rip)
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L6890
.L6880:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L6881
	movq	8(%r12), %rsi
	movq	%r12, %rdi
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	jmp	.L11163
.L6879:
	movl	$32, %edi
	movq	%r12, %rsi
	movq	%r13, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11583
.L11164:
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L6886:
	movq	$0, 8(%r12)
	jmp	.L6878
.L11583:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L6886
	jmp	.L11164
	.p2align 6,,7
.L10658:
	movzbl	16(%r13), %edx
.L6341:
	cmpb	$32, %dl
	je	.L10918
.L6349:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L6487
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L6487
	testb	$1, 53(%rax)
	jne	.L6488
	testb	$8, 18(%rax)
	je	.L6487
.L6488:
	andb	$8, %dl
	je	.L11584
	.p2align 4,,7
.L6487:
	movl	flag_traditional(%rip), %edi
	testl	%edi, %edi
	je	.L10666
	testb	$1, 53(%r13)
	je	.L10666
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %r12
	cmpq	%r12, current_binding_level(%rip)
	je	.L6491
	movq	48(%r14), %r8
	testq	%r8, %r8
	movq	%r8, %rdx
	jne	.L6492
.L6491:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L6493
	movq	56(%r14), %rdx
	testq	%rdx, %rdx
	jne	.L10147
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L6494
	movq	144(%rdi), %r11
	testb	$1, 3(%r11)
	jne	.L11585
.L6494:
	testq	%rdx, %rdx
	jne	.L10147
.L10148:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rdx
	jne	.L10147
.L6493:
	movq	40(%r14), %rdx
.L6492:
	testq	%rdx, %rdx
	je	.L10260
.L10147:
	cmpb	$32, 16(%rdx)
	je	.L6496
	movl	looking_for_typename(%rip), %ecx
	testl	%ecx, %ecx
	js	.L6496
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L6504
	movq	80(%rax), %rax
	cmpq	%rax, %rdx
	je	.L11160
	testl	%ebx, %ebx
	jle	.L11586
.L11160:
	movq	%rax, %rdx
.L6496:
	testq	%rdx, %rdx
	jne	.L10666
.L10260:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -2560(%rbp)
.L6490:
	cmpq	%rax, -2560(%rbp)
	je	.L11587
	movq	current_binding_level(%rip), %rbx
	movq	48(%r14), %r12
	movq	40(%r14), %r15
	cmpq	%rax, %rbx
	je	.L11588
.L11161:
	movq	16(%rbx), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%rbx)
.L6535:
	testq	%r12, %r12
	movq	%r13, 48(%r14)
	je	.L11589
.L6546:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L6548
	testq	%r12, %r12
	je	.L6549
	testb	$1, 53(%r13)
	jne	.L6549
	cmpb	$34, 16(%r12)
	je	.L11590
.L6549:
	movl	warn_shadow(%rip), %r8d
	testl	%r8d, %r8d
	je	.L6548
	testb	$1, 53(%r13)
	jne	.L6548
	movl	32(%r13), %ecx
	testl	%ecx, %ecx
	je	.L6548
	testq	%rax, %rax
	jne	.L6548
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L6554
	cmpb	$34, 16(%r12)
	je	.L11591
.L6554:
	cmpq	$0, 56(%r14)
	je	.L6556
	movl	$.LC41, %edi
.L6555:
	testq	%rdi, %rdi
	jne	.L11162
	.p2align 4,,7
.L6548:
	testq	%r12, %r12
	je	.L10667
	movq	-2560(%rbp), %r9
	movq	%r12, %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	16(%r9), %rdx
	call	tree_cons
	movq	-2560(%rbp), %r12
	movq	%rax, 16(%r12)
.L10667:
	movzbl	16(%r13), %edx
.L6533:
	leal	-128(%rdx), %ebx
	cmpb	$1, %bl
	jbe	.L6321
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L6321
	cmpb	$18, 16(%rcx)
	je	.L11592
.L6565:
	testb	$64, 46(%rcx)
	je	.L6321
.L6564:
	movq	-2560(%rbp), %rdx
	movzwl	64(%rdx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rdx)
	je	.L11593
.L10668:
	movzbl	16(%r13), %edx
	.p2align 4,,7
.L6321:
	cmpb	$32, %dl
	je	.L11594
.L6567:
	movq	-2560(%rbp), %rdi
	cmpq	global_binding_level(%rip), %rdi
	movq	(%rdi), %r11
	movq	%r11, (%r13)
	movq	%r13, (%rdi)
	jne	.L6340
	testb	$4, 17(%r13)
	jne	.L6340
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L6340
.L11594:
	testq	%r14, %r14
	je	.L6567
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L6568
	cmpq	class_binding_level(%rip), %rax
	je	.L6569
	movq	48(%r14), %rax
	testq	%rax, %rax
	je	.L6573
	cmpb	$32, 16(%rax)
	je	.L6571
.L6573:
	cmpq	$0, current_class_type(%rip)
	je	.L6568
	movq	56(%r14), %rax
	testq	%rax, %rax
	je	.L6568
	cmpb	$32, 16(%rax)
	je	.L6571
.L6568:
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L6572
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L6571
	cmpb	$-127, %dl
	je	.L11595
.L6572:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L6567
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L11596
.L6579:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L6583
	cmpq	class_binding_level(%rip), %rax
	je	.L6584
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L6588
	cmpb	$32, 16(%rax)
	je	.L6586
.L6588:
	cmpq	$0, current_class_type(%rip)
	je	.L6583
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L6583
	cmpb	$32, 16(%rax)
	je	.L6586
.L6583:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L6567
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L6586
	cmpb	$-127, %dl
	jne	.L6567
	movq	$0, 8(%rbx)
	jmp	.L6567
.L6586:
	movq	8(%rax), %r14
	movq	%r14, 8(%rbx)
	jmp	.L6567
.L6584:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L6588
.L11596:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %r12
	sete	%cl
	movq	8(%r13), %r15
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r14)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%r14), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L6579
.L11595:
	movq	$0, 8(%r14)
	jmp	.L6572
.L6571:
	movq	8(%rax), %rsi
	movq	%rsi, 8(%r14)
	jmp	.L6572
.L6569:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L6573
.L11593:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10668
.L11592:
	movq	8(%rcx), %r10
	testb	$64, 46(%r10)
	jne	.L6564
	jmp	.L6565
.L11162:
	movq	32(%r14), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L6548
.L6556:
	testq	%r12, %r12
	je	.L6558
	movl	$.LC42, %edi
	jmp	.L6555
.L6558:
	testq	%r15, %r15
	movl	$.LC43, %r11d
	cmovne	%r11, %rdi
	jmp	.L6555
.L11591:
	movl	$.LC40, %edi
	jmp	.L6555
.L11590:
	cmpb	$34, 16(%r13)
	je	.L6549
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r15
	movq	56(%r15), %rax
	je	.L6550
	movq	56(%rax), %rax
.L6550:
	movzbl	66(%rax), %edi
	andl	$15, %edi
	decl	%edi
	jne	.L6548
	movl	$.LC40, %edi
	jmp	.L11162
	.p2align 6,,7
.L11589:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L11597
.L6538:
	testq	%r12, %r12
	jne	.L6546
	testq	%r15, %r15
	jne	.L6546
	testb	$1, 53(%r13)
	je	.L6546
	testb	$8, 18(%r13)
	je	.L6546
	orb	$8, 18(%r14)
	jmp	.L6546
	.p2align 6,,7
.L11597:
	testq	%r15, %r15
	je	.L6538
	cmpb	$29, 16(%r13)
	jne	.L6538
	cmpb	$29, 16(%r15)
	jne	.L6538
	movq	8(%r13), %rdi
	movq	8(%r15), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L11598
	movzbl	53(%r15), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L6541
	movzbl	53(%r13), %r10d
	leal	0(,%rax,8), %esi
	leaq	88(%r13), %rdx
	andb	$-9, %r10b
	orb	%sil, %r10b
	movb	%r10b, 53(%r13)
	cmpq	%r15, current_function_decl(%rip)
	je	.L6542
	movq	88(%r15), %rax
.L6543:
	movq	%rax, (%rdx)
	movq	72(%r15), %rbx
	movq	80(%r15), %r9
	movq	136(%r15), %rdx
	movzbl	17(%r13), %edi
	movq	%rbx, 72(%r13)
	movq	%r9, 80(%r13)
	movq	%rdx, 136(%r13)
	movzbl	17(%r15), %ecx
	movq	%r15, 96(%r13)
	andb	$127, %dil
	shrb	$7, %cl
	movzbl	%cl, %r11d
	movl	%r11d, %r8d
	salb	$7, %r8b
	orb	%r8b, %dil
	movb	%dil, 17(%r13)
	movzbl	53(%r15), %ecx
.L6541:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L6544
	movzbl	53(%r13), %r10d
	salb	$4, %al
	andb	$-17, %r10b
	orb	%al, %r10b
	movb	%r10b, 53(%r13)
	movl	128(%r15), %eax
	movl	%eax, 128(%r13)
.L6544:
	movq	8(%r15), %rdx
	cmpq	$0, 24(%rdx)
	je	.L6538
	cmpq	$0, 88(%r15)
	je	.L6538
	movq	8(%r13), %rsi
	cmpq	$0, 24(%rsi)
	jne	.L6538
	movq	%rdx, 8(%r13)
	jmp	.L6538
.L6542:
	xorl	%eax, %eax
	jmp	.L6543
	.p2align 6,,7
.L11598:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L6538
	.p2align 6,,7
.L11588:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L6535
	jmp	.L11161
.L11587:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L11599
.L6510:
	cmpq	$0, 40(%r14)
	jne	.L6511
	testb	$8, 18(%r13)
	je	.L6511
	orb	$8, 18(%r14)
.L6511:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L11600
.L6513:
	movq	%r13, 40(%r14)
	movzbl	16(%r13), %edx
.L6512:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L6524
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L6514
	testb	$1, 18(%rcx)
	je	.L6514
	orb	$1, 18(%r13)
	movq	72(%r14), %rax
.L6514:
	testq	%rax, %rax
	je	.L6524
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L6519
	testb	$8, 17(%rcx)
	je	.L6519
	orb	$8, 17(%r13)
	movq	72(%r14), %rax
.L6519:
	testq	%rax, %rax
	je	.L6524
	cmpq	$0, 8(%rax)
	je	.L6524
	cmpb	$29, %dl
	je	.L11601
.L6527:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L6524:
	testb	$8, 18(%r14)
	je	.L6533
	cmpb	$32, %dl
	je	.L6533
	testb	$8, 18(%r13)
	jne	.L6533
	testb	$1, 53(%r13)
	jne	.L6533
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L6529
	cmpq	$0, 8(%rax)
	jne	.L11602
.L6529:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11244:
	xorl	%eax, %eax
	call	warning
	jmp	.L10667
.L11602:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11244
.L11601:
	movq	8(%r13), %rbx
	movq	integer_type_node(%rip), %r9
	cmpq	%r9, 8(%rbx)
	jne	.L6527
	jmp	.L6524
	.p2align 6,,7
.L11600:
	cmpq	$0, -2536(%rbp)
	je	.L6513
	movq	-2536(%rbp), %rcx
	cmpb	$32, 16(%rcx)
	jne	.L6512
	jmp	.L6513
.L11599:
	testb	$8, 54(%r13)
	jne	.L6510
	andb	$-9, 18(%r13)
	jmp	.L6510
	.p2align 6,,7
.L10666:
	movq	global_binding_level(%rip), %rax
	jmp	.L6490
.L11586:
	testl	%ecx, %ecx
	jg	.L11160
	testl	%ebx, %ebx
	je	.L6496
	movq	%rdx, %rsi
	movq	%r14, %rdi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11160
	.p2align 6,,7
.L6504:
	movq	8(%rdx), %r15
	cmpq	error_mark_node(%rip), %r15
	cmove	%r15, %rdx
	jmp	.L6496
.L11585:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rdx
	je	.L6496
	testq	%rax, %rax
	je	.L10148
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rdx
	jmp	.L6494
	.p2align 6,,7
.L11584:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L6487
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r14), %rdi
	call	warning_with_decl
	jmp	.L6487
	.p2align 6,,7
.L10918:
	movq	8(%r13), %rdx
	movq	80(%rdx), %r12
	testq	%r12, %r12
	je	.L6351
	movzbl	16(%r12), %eax
	cmpb	$32, %al
	je	.L6350
.L6351:
	movq	global_binding_level(%rip), %r15
	movq	%r13, %r12
	cmpq	%r15, current_binding_level(%rip)
	jne	.L10659
	movq	%r13, 80(%rdx)
.L10659:
	movzbl	16(%r13), %eax
.L6354:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	56(%r12), %rbx
	testq	%rbx, %rbx
	je	.L6478
	cmpq	$0, 72(%r12)
	je	.L11603
.L6478:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L6349
	cmpq	$0, 56(%rax)
	je	.L6349
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %r15
	cmpq	global_binding_level(%rip), %rbx
	je	.L11604
.L11159:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L6484:
	movq	%r12, 8(%r15)
	jmp	.L6349
.L11604:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L6484
	jmp	.L11159
.L11603:
	cmpb	$32, 16(%r13)
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	sete	%al
	movq	8(%r13), %r15
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L6479
	cmpb	$1, 16(%r12)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	jmp	.L6478
.L6479:
	movq	%rbx, 72(%r13)
	jmp	.L6478
.L6350:
	movq	current_binding_level(%rip), %rsi
	movq	56(%r12), %r15
	cmpq	global_binding_level(%rip), %rsi
	jne	.L6354
	movq	32(%r15), %rcx
	cmpb	$36, (%rcx)
	jne	.L6354
	cmpb	$95, 1(%rcx)
	jne	.L6354
	movq	class_binding_level(%rip), %r9
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rax
	testq	%r9, %r9
	movq	%r9, -2544(%rbp)
	movq	%rax, -1344(%rbp)
	jne	.L6358
	testb	$-128, 66(%rsi)
	movq	%rsi, -2544(%rbp)
	je	.L6358
.L6362:
	movq	-2544(%rbp), %rcx
	movq	56(%rcx), %rsi
	testb	$-128, 66(%rsi)
	movq	%rsi, -2544(%rbp)
	jne	.L6362
.L6358:
	movq	-2544(%rbp), %rcx
	cmpq	global_binding_level(%rip), %rcx
	je	.L11605
	movq	-2544(%rbp), %r8
	movq	-1344(%rbp), %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	8(%r8), %rdx
	call	saveable_tree_cons
	movq	-2544(%rbp), %rbx
	movq	%rax, 8(%rbx)
.L6364:
	testq	%r15, %r15
	je	.L6365
	movq	-1344(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L6366
	movq	%r15, 80(%rcx)
.L6366:
	movq	-1344(%rbp), %rbx
	cmpq	%rbx, 8(%r15)
	je	.L6367
	cmpb	$21, 16(%rbx)
	je	.L11606
.L6368:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L6370
	cmpq	$0, 32(%rax)
	je	.L6369
.L6370:
	movq	lang_name_cplusplus(%rip), %rdx
	cmpq	%rdx, current_lang_name(%rip)
	je	.L11607
.L6371:
	xorl	%ecx, %ecx
.L6406:
	testq	%rcx, %rcx
	jne	.L6407
.L10259:
	movq	-1344(%rbp), %rdx
	movl	$32, %edi
	movq	%r15, %rsi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-1344(%rbp), %rdi
	movq	%rax, -2552(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-2552(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11608
.L11155:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L6409:
	movq	-1344(%rbp), %rcx
	movq	%rcx, 8(%r15)
.L6412:
	movq	32(%r15), %rax
	cmpb	$36, (%rax)
	je	.L11609
.L6414:
	movq	-1344(%rbp), %r10
	movq	80(%r10), %rdx
	testq	%rdx, %rdx
	je	.L6445
	cmpb	$32, 16(%rdx)
	je	.L11610
.L6415:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L6434
	movq	-2552(%rbp), %rcx
	movq	56(%rcx), %rdx
	testq	%rdx, %rdx
	movq	%rdx, -1360(%rbp)
	je	.L10663
	movq	56(%rdx), %rsi
	testq	%rsi, %rsi
	je	.L6436
	movq	%rdx, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L6436:
	movq	-2552(%rbp), %rdx
	movq	-1360(%rbp), %r8
	movq	%rdx, 56(%r8)
	movq	decl_obstack+24(%rip), %rdx
	leaq	8(%rdx), %r10
	cmpq	decl_obstack+32(%rip), %r10
	ja	.L11611
.L6438:
	movq	-2552(%rbp), %rsi
	movq	%rdx, %r11
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rsi, (%r11)
	cmpb	$32, 16(%rsi)
	je	.L11612
.L10663:
	movq	32(%r15), %rax
.L6445:
	cmpb	$36, (%rax)
	je	.L11613
.L6459:
	movq	-2552(%rbp), %rdx
	movq	-1344(%rbp), %r9
	movq	%rdx, 80(%r9)
	movq	current_class_type(%rip), %rdx
	testq	%rdx, %rdx
	jne	.L6462
	cmpq	$0, current_function_decl(%rip)
	je	.L6461
.L6462:
	movq	lang_name_cplusplus(%rip), %rdi
	cmpq	%rdi, current_lang_name(%rip)
	je	.L6460
.L6461:
	movq	-2552(%rbp), %rax
	movq	%r15, 72(%rax)
.L6367:
	movq	-2544(%rbp), %rsi
	movzbl	66(%rsi), %r10d
	andl	$15, %r10d
	cmpl	$2, %r10d
	je	.L11614
.L6365:
	movq	-1344(%rbp), %rsi
	movq	80(%rsi), %rax
	cmpb	$32, 16(%rax)
	je	.L11615
	movq	-1344(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-1344(%rbp), %rbx
	movq	%rax, (%rbx)
.L11158:
	movzbl	16(%r12), %eax
	jmp	.L6354
.L11615:
	movq	%rax, (%rsi)
	jmp	.L11158
.L11614:
	movq	-1344(%rbp), %r11
	orb	$64, 18(%r11)
	movq	80(%r11), %r8
	movq	current_class_type(%rip), %rax
	movq	%r8, 56(%r15)
	cmpq	$0, 32(%rax)
	jne	.L6365
	movq	-2544(%rbp), %r9
	movq	144(%rax), %r15
	movq	8(%r9), %rcx
	movq	%rcx, 72(%r15)
	jmp	.L6365
.L6460:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L11616
	cmpq	$0, 32(%rdx)
	jne	.L6367
	movq	-2552(%rbp), %r10
	movq	80(%rdx), %rsi
	cmpb	$32, 16(%r10)
	movq	72(%rsi), %rbx
	movl	$136, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L6470
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2552(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1344(%rbp), %r8
	movq	%r8, 8(%rax)
.L6472:
	movq	-2552(%rbp), %rax
	movq	current_class_type(%rip), %rdi
	movq	152(%rax), %rbx
	movq	%rdi, 64(%rax)
	movq	%rdi, 16(%rbx)
	jmp	.L6367
.L6470:
	movq	-2552(%rbp), %rdx
	movq	%r15, 72(%rdx)
	jmp	.L6472
.L11616:
	movq	-2552(%rbp), %rsi
	movq	112(%rax), %rbx
	cmpb	$32, 16(%rsi)
	movl	$136, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L6465
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2552(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1344(%rbp), %r8
	movq	%r8, 8(%rax)
.L6467:
	movq	current_function_decl(%rip), %rdi
	movq	-2552(%rbp), %rbx
	movq	%rdi, 64(%rbx)
	jmp	.L6367
.L6465:
	movq	-2552(%rbp), %rdx
	movq	%r15, 72(%rdx)
	jmp	.L6467
.L11613:
	cmpb	$95, 1(%rax)
	jne	.L6459
	movq	-2552(%rbp), %r11
	orb	$64, 53(%r11)
	jmp	.L6459
.L11612:
	cmpq	$0, 72(%rsi)
	jne	.L10663
	movq	8(%rsi), %rdi
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$136, %esi
	movq	%rdi, -1368(%rbp)
	movl	$1, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L6440
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	-1360(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-1360(%rbp), %r10
	movl	24(%r10), %eax
	movq	32(%r10), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2552(%rbp), %rbx
	movq	%rax, 72(%rbx)
	movq	-1368(%rbp), %r9
	movq	%r9, 8(%rax)
	jmp	.L10663
.L6440:
	movq	-1360(%rbp), %r11
	movq	-2552(%rbp), %rdx
	movq	%r11, 72(%rdx)
	jmp	.L10663
.L11611:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L6438
.L6434:
	movq	-2552(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -2552(%rbp)
	jmp	.L10663
.L11610:
	movq	global_binding_level(%rip), %r8
	cmpq	%r8, current_binding_level(%rip)
	je	.L6416
	movq	48(%r15), %rdx
	testq	%rdx, %rdx
	movq	%rdx, %rcx
	jne	.L6417
.L6416:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L6418
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L10145
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L6419
	movq	144(%rdi), %r11
	testb	$1, 3(%r11)
	jne	.L11617
.L6419:
	testq	%rcx, %rcx
	jne	.L10145
.L10146:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10145
.L6418:
	movq	40(%r15), %rcx
.L6417:
	testq	%rcx, %rcx
	je	.L6421
.L10145:
	cmpb	$32, 16(%rcx)
	je	.L6421
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L6421
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L6429
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11156
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L11618
.L11156:
	movq	%rax, %rcx
.L6421:
	movq	-1344(%rbp), %rsi
	cmpq	80(%rsi), %rcx
	jne	.L6415
	jmp	.L10663
.L11618:
	testl	%edx, %edx
	jg	.L11156
	movl	$1, %r9d
	testl	%r9d, %r9d
	je	.L6421
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11156
.L6429:
	movq	8(%rcx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rcx
	jmp	.L6421
.L11617:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%r15, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L6421
	testq	%rax, %rax
	je	.L10146
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L6419
.L11609:
	cmpb	$95, 1(%rax)
	jne	.L6414
	jmp	.L6445
.L11608:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L6409
	jmp	.L11155
	.p2align 6,,7
.L6407:
	movq	80(%rcx), %rsi
	movq	%rsi, -2552(%rbp)
	jmp	.L6412
.L11607:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L6373
	movq	80(%rax), %rbx
.L6373:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L6406
.L6405:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L6382
	cmpl	$32, %eax
	je	.L11619
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L6376:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L6406
	jmp	.L6405
.L11619:
	movq	8(%rbx), %r9
	movq	-1344(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%r9), %r11
	movq	72(%r11), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10892
	movq	64(%rbx), %rbx
	jmp	.L6376
.L10892:
	movq	32(%rax), %rcx
	jmp	.L6406
.L6382:
	movq	-1344(%rbp), %rax
	movq	80(%rax), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L6371
	movq	global_binding_level(%rip), %r10
	cmpq	%r10, current_binding_level(%rip)
	je	.L6385
	movq	48(%rbx), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L6386
.L6385:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L6387
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10143
	movq	32(%rdi), %rdx
	testq	%rdx, %rdx
	movq	%rdx, -1352(%rbp)
	jne	.L6388
	movq	144(%rdi), %r11
	testb	$1, 3(%r11)
	jne	.L11620
.L6388:
	testq	%rcx, %rcx
	jne	.L10143
.L10144:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10143
.L6387:
	movq	40(%rbx), %rcx
.L6386:
	testq	%rcx, %rcx
	je	.L10259
.L10143:
	cmpb	$32, 16(%rcx)
	je	.L6406
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L6406
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L6398
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11154
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L11621
.L11154:
	movq	%rax, %rcx
	jmp	.L6406
.L11621:
	testl	%edx, %edx
	jg	.L11154
	movl	$1, %r9d
	testl	%r9d, %r9d
	je	.L6406
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11154
.L6398:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L6406
	jmp	.L11154
.L11620:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L6406
	testq	%rax, %rax
	je	.L10144
	cmpb	$32, 16(%rax)
	cmovne	-1352(%rbp), %rcx
	jmp	.L6388
.L6369:
	movq	-1344(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r15, %rsi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -1376(%rbp)
	je	.L11622
.L11157:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L6447:
	movq	-1344(%rbp), %r9
	movq	%r9, 8(%r15)
	movq	-1376(%rbp), %rdi
	movq	56(%rdi), %rax
	testq	%rax, %rax
	movq	%rax, -1384(%rbp)
	je	.L6450
	movq	56(%rax), %rsi
	testq	%rsi, %rsi
	je	.L6451
	movq	class_binding_level(%rip), %rbx
	movq	%rax, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L6451:
	movq	decl_obstack+24(%rip), %rdx
	movq	-1376(%rbp), %r10
	movq	-1384(%rbp), %rax
	leaq	8(%rdx), %rbx
	cmpq	decl_obstack+32(%rip), %rbx
	movq	%r10, 56(%rax)
	ja	.L11623
.L6453:
	movq	-1376(%rbp), %rbx
	movq	%rdx, %rsi
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%rsi)
	cmpb	$32, 16(%rbx)
	je	.L11624
.L6450:
	movq	-1376(%rbp), %rbx
	movq	%rbx, -2552(%rbp)
	jmp	.L10663
.L11624:
	cmpq	$0, 72(%rbx)
	jne	.L6450
	movq	-1376(%rbp), %r8
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%r8), %rcx
	movq	%rcx, -1392(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L6455
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-1384(%rbp), %r10
	cmpb	$1, 16(%r10)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	-1384(%rbp), %r9
	movq	32(%rbx), %rdx
	movq	-1384(%rbp), %rdi
	movl	$.LC35, %esi
	movq	32(%r9), %rcx
	movl	24(%rdi), %eax
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1376(%rbp), %rdx
	movq	%rax, 72(%rdx)
	movq	-1392(%rbp), %r11
	movq	%r11, 8(%rax)
	jmp	.L6450
.L6455:
	movq	-1384(%rbp), %rcx
	movq	-1376(%rbp), %r8
	movq	%rcx, 72(%r8)
	jmp	.L6450
.L11623:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L6453
.L11622:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L6447
	jmp	.L11157
	.p2align 6,,7
.L11606:
	cmpq	$0, class_binding_level(%rip)
	je	.L6368
	movq	144(%rbx), %rdi
	testb	$16, 3(%rdi)
	jne	.L6367
	jmp	.L6368
	.p2align 6,,7
.L11605:
	movq	-1344(%rbp), %rsi
	movq	8(%rcx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	perm_tree_cons
	movq	-2544(%rbp), %r10
	movq	%rax, 8(%r10)
	jmp	.L6364
	.p2align 6,,7
.L6335:
	movq	-2536(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10658
	movl	flag_traditional(%rip), %r11d
	testl	%r11d, %r11d
	jne	.L6340
	testb	$8, 18(%r14)
	je	.L6340
	testb	$8, 18(%r13)
	jne	.L6340
	testb	$9, 53(%r13)
	jne	.L6340
	cmpq	%r13, current_function_decl(%rip)
	je	.L11625
.L6344:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L6345
	cmpq	$0, 8(%rax)
	jne	.L11626
.L6345:
	movq	-2536(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11153:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-2536(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L6340
.L11626:
	movq	-2536(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11153
.L11625:
	movq	-2536(%rbp), %r13
	movq	%r13, current_function_decl(%rip)
	jmp	.L6344
	.p2align 6,,7
.L11320:
	cmpq	$0, 64(%rcx)
	jne	.L6333
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L6333
.L11319:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -2536(%rbp)
	call	error_with_decl
	jmp	.L6331
.L6324:
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.L6326
	.p2align 4,,7
.L6330:
	cmpq	%r14, 56(%rdi)
	je	.L6326
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L6330
.L6326:
	movq	%rdi, -2536(%rbp)
	jmp	.L6323
.L11318:
	movq	40(%r14), %rdi
	movq	%rdi, -2536(%rbp)
	jmp	.L6323
.L11317:
	movq	56(%r13), %r14
	jmp	.L6320
.L11316:
	testb	$32, 53(%r13)
	jne	.L6318
	jmp	.L6319
.L10654:
	movzbl	16(%r13), %edx
	jmp	.L6318
.L10643:
	movzbl	16(%r13), %edx
.L6065:
	cmpb	$32, %dl
	je	.L10917
.L6073:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L6211
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L6211
	testb	$1, 53(%rax)
	jne	.L6212
	testb	$8, 18(%rax)
	je	.L6211
.L6212:
	andb	$8, %dl
	je	.L11627
	.p2align 4,,7
.L6211:
	movl	flag_traditional(%rip), %r12d
	testl	%r12d, %r12d
	je	.L10651
	testb	$1, 53(%r13)
	je	.L10651
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rsi
	cmpq	%rsi, current_binding_level(%rip)
	je	.L6215
	movq	48(%r14), %r9
	testq	%r9, %r9
	movq	%r9, %rdx
	jne	.L6216
.L6215:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L6217
	movq	56(%r14), %rdx
	testq	%rdx, %rdx
	jne	.L10141
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L6218
	movq	144(%rdi), %r15
	testb	$1, 3(%r15)
	jne	.L11628
.L6218:
	testq	%rdx, %rdx
	jne	.L10141
.L10142:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rdx
	jne	.L10141
.L6217:
	movq	40(%r14), %rdx
.L6216:
	testq	%rdx, %rdx
	je	.L10258
.L10141:
	cmpb	$32, 16(%rdx)
	je	.L6220
	movl	looking_for_typename(%rip), %ecx
	testl	%ecx, %ecx
	js	.L6220
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L6228
	movq	80(%rax), %rax
	cmpq	%rax, %rdx
	je	.L11150
	testl	%ebx, %ebx
	jle	.L11629
.L11150:
	movq	%rax, %rdx
.L6220:
	testq	%rdx, %rdx
	jne	.L10651
.L10258:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -2528(%rbp)
.L6214:
	cmpq	%rax, -2528(%rbp)
	je	.L11630
	movq	current_binding_level(%rip), %rbx
	movq	48(%r14), %r12
	movq	40(%r14), %r15
	cmpq	%rax, %rbx
	je	.L11631
.L11151:
	movq	16(%rbx), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%rbx)
.L6259:
	testq	%r12, %r12
	movq	%r13, 48(%r14)
	je	.L11632
.L6270:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L6272
	testq	%r12, %r12
	je	.L6273
	testb	$1, 53(%r13)
	jne	.L6273
	cmpb	$34, 16(%r12)
	je	.L11633
.L6273:
	movl	warn_shadow(%rip), %r9d
	testl	%r9d, %r9d
	je	.L6272
	testb	$1, 53(%r13)
	jne	.L6272
	movl	32(%r13), %ecx
	testl	%ecx, %ecx
	je	.L6272
	testq	%rax, %rax
	jne	.L6272
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L6278
	cmpb	$34, 16(%r12)
	je	.L11634
.L6278:
	cmpq	$0, 56(%r14)
	je	.L6280
	movl	$.LC41, %edi
.L6279:
	testq	%rdi, %rdi
	jne	.L11152
	.p2align 4,,7
.L6272:
	testq	%r12, %r12
	je	.L10652
	movq	-2528(%rbp), %rbx
	movq	%r12, %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	16(%rbx), %rdx
	call	tree_cons
	movq	-2528(%rbp), %r12
	movq	%rax, 16(%r12)
.L10652:
	movzbl	16(%r13), %edx
.L6257:
	leal	-128(%rdx), %edi
	cmpb	$1, %dil
	jbe	.L6045
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L6045
	cmpb	$18, 16(%rcx)
	je	.L11635
.L6289:
	testb	$64, 46(%rcx)
	je	.L6045
.L6288:
	movq	-2528(%rbp), %rdx
	movzwl	64(%rdx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rdx)
	je	.L11636
.L10653:
	movzbl	16(%r13), %edx
	.p2align 4,,7
.L6045:
	cmpb	$32, %dl
	je	.L11637
.L6291:
	movq	-2528(%rbp), %rcx
	cmpq	global_binding_level(%rip), %rcx
	movq	(%rcx), %r10
	movq	%r10, (%r13)
	movq	%r13, (%rcx)
	jne	.L6064
	testb	$4, 17(%r13)
	jne	.L6064
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L6064
.L11637:
	testq	%r14, %r14
	je	.L6291
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L6292
	cmpq	class_binding_level(%rip), %rax
	je	.L6293
	movq	48(%r14), %rax
	testq	%rax, %rax
	je	.L6297
	cmpb	$32, 16(%rax)
	je	.L6295
.L6297:
	cmpq	$0, current_class_type(%rip)
	je	.L6292
	movq	56(%r14), %rax
	testq	%rax, %rax
	je	.L6292
	cmpb	$32, 16(%rax)
	je	.L6295
.L6292:
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L6296
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L6295
	cmpb	$-127, %dl
	je	.L11638
.L6296:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L6291
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L11639
.L6303:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L6307
	cmpq	class_binding_level(%rip), %rax
	je	.L6308
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L6312
	cmpb	$32, 16(%rax)
	je	.L6310
.L6312:
	cmpq	$0, current_class_type(%rip)
	je	.L6307
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L6307
	cmpb	$32, 16(%rax)
	je	.L6310
.L6307:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L6291
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L6310
	cmpb	$-127, %dl
	jne	.L6291
	movq	$0, 8(%rbx)
	jmp	.L6291
.L6310:
	movq	8(%rax), %r14
	movq	%r14, 8(%rbx)
	jmp	.L6291
.L6308:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L6312
.L11639:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %r12
	sete	%r9b
	movq	8(%r13), %r15
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	cmpb	$1, 16(%r14)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%r14), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L6303
.L11638:
	movq	$0, 8(%r14)
	jmp	.L6296
.L6295:
	movq	8(%rax), %r11
	movq	%r11, 8(%r14)
	jmp	.L6296
.L6293:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L6297
.L11636:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10653
.L11635:
	movq	8(%rcx), %r8
	testb	$64, 46(%r8)
	jne	.L6288
	jmp	.L6289
.L11152:
	movq	32(%r14), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L6272
.L6280:
	testq	%r12, %r12
	je	.L6282
	movl	$.LC42, %edi
	jmp	.L6279
.L6282:
	testq	%r15, %r15
	movl	$.LC43, %r10d
	cmovne	%r10, %rdi
	jmp	.L6279
.L11634:
	movl	$.LC40, %edi
	jmp	.L6279
.L11633:
	cmpb	$34, 16(%r13)
	je	.L6273
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r15
	movq	56(%r15), %rax
	je	.L6274
	movq	56(%rax), %rax
.L6274:
	movzbl	66(%rax), %esi
	andl	$15, %esi
	decl	%esi
	jne	.L6272
	movl	$.LC40, %edi
	jmp	.L11152
	.p2align 6,,7
.L11632:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L11640
.L6262:
	testq	%r12, %r12
	jne	.L6270
	testq	%r15, %r15
	jne	.L6270
	testb	$1, 53(%r13)
	je	.L6270
	testb	$8, 18(%r13)
	je	.L6270
	orb	$8, 18(%r14)
	jmp	.L6270
	.p2align 6,,7
.L11640:
	testq	%r15, %r15
	je	.L6262
	cmpb	$29, 16(%r13)
	jne	.L6262
	cmpb	$29, 16(%r15)
	jne	.L6262
	movq	8(%r13), %rdi
	movq	8(%r15), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L11641
	movzbl	53(%r15), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L6265
	movzbl	53(%r13), %r8d
	leal	0(,%rax,8), %r11d
	leaq	88(%r13), %rdx
	andb	$-9, %r8b
	orb	%r11b, %r8b
	movb	%r8b, 53(%r13)
	cmpq	%r15, current_function_decl(%rip)
	je	.L6266
	movq	88(%r15), %rax
.L6267:
	movq	%rax, (%rdx)
	movq	72(%r15), %rbx
	movq	80(%r15), %rdi
	movq	136(%r15), %rdx
	movzbl	17(%r13), %esi
	movq	%rbx, 72(%r13)
	movq	%rdi, 80(%r13)
	movq	%rdx, 136(%r13)
	movzbl	17(%r15), %r10d
	movq	%r15, 96(%r13)
	andb	$127, %sil
	shrb	$7, %r10b
	movzbl	%r10b, %ecx
	movl	%ecx, %r9d
	salb	$7, %r9b
	orb	%r9b, %sil
	movb	%sil, 17(%r13)
	movzbl	53(%r15), %ecx
.L6265:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L6268
	movzbl	53(%r13), %r8d
	salb	$4, %al
	andb	$-17, %r8b
	orb	%al, %r8b
	movb	%r8b, 53(%r13)
	movl	128(%r15), %eax
	movl	%eax, 128(%r13)
.L6268:
	movq	8(%r15), %rdx
	cmpq	$0, 24(%rdx)
	je	.L6262
	cmpq	$0, 88(%r15)
	je	.L6262
	movq	8(%r13), %r11
	cmpq	$0, 24(%r11)
	jne	.L6262
	movq	%rdx, 8(%r13)
	jmp	.L6262
.L6266:
	xorl	%eax, %eax
	jmp	.L6267
	.p2align 6,,7
.L11641:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L6262
	.p2align 6,,7
.L11631:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L6259
	jmp	.L11151
.L11630:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L11642
.L6234:
	cmpq	$0, 40(%r14)
	jne	.L6235
	testb	$8, 18(%r13)
	je	.L6235
	orb	$8, 18(%r14)
.L6235:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L11643
.L6237:
	movq	%r13, 40(%r14)
	movzbl	16(%r13), %edx
.L6236:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L6248
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L6238
	testb	$1, 18(%rcx)
	je	.L6238
	orb	$1, 18(%r13)
	movq	72(%r14), %rax
.L6238:
	testq	%rax, %rax
	je	.L6248
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L6243
	testb	$8, 17(%rcx)
	je	.L6243
	orb	$8, 17(%r13)
	movq	72(%r14), %rax
.L6243:
	testq	%rax, %rax
	je	.L6248
	cmpq	$0, 8(%rax)
	je	.L6248
	cmpb	$29, %dl
	je	.L11644
.L6251:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L6248:
	testb	$8, 18(%r14)
	je	.L6257
	cmpb	$32, %dl
	je	.L6257
	testb	$8, 18(%r13)
	jne	.L6257
	testb	$1, 53(%r13)
	jne	.L6257
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L6253
	cmpq	$0, 8(%rax)
	jne	.L11645
.L6253:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11243:
	xorl	%eax, %eax
	call	warning
	jmp	.L10652
.L11645:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11243
.L11644:
	movq	8(%r13), %rbx
	movq	integer_type_node(%rip), %rdi
	cmpq	%rdi, 8(%rbx)
	jne	.L6251
	jmp	.L6248
	.p2align 6,,7
.L11643:
	cmpq	$0, -2504(%rbp)
	je	.L6237
	movq	-2504(%rbp), %r10
	cmpb	$32, 16(%r10)
	jne	.L6236
	jmp	.L6237
.L11642:
	testb	$8, 54(%r13)
	jne	.L6234
	andb	$-9, 18(%r13)
	jmp	.L6234
	.p2align 6,,7
.L10651:
	movq	global_binding_level(%rip), %rax
	jmp	.L6214
.L11629:
	testl	%ecx, %ecx
	jg	.L11150
	testl	%ebx, %ebx
	je	.L6220
	movq	%rdx, %rsi
	movq	%r14, %rdi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11150
	.p2align 6,,7
.L6228:
	movq	8(%rdx), %rcx
	cmpq	error_mark_node(%rip), %rcx
	cmove	%rcx, %rdx
	jmp	.L6220
.L11628:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rdx
	je	.L6220
	testq	%rax, %rax
	je	.L10142
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rdx
	jmp	.L6218
	.p2align 6,,7
.L11627:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L6211
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r14), %rdi
	call	warning_with_decl
	jmp	.L6211
	.p2align 6,,7
.L10917:
	movq	8(%r13), %rdx
	movq	80(%rdx), %r12
	testq	%r12, %r12
	je	.L6075
	movzbl	16(%r12), %eax
	cmpb	$32, %al
	je	.L6074
.L6075:
	movq	global_binding_level(%rip), %r15
	movq	%r13, %r12
	cmpq	%r15, current_binding_level(%rip)
	jne	.L10644
	movq	%r13, 80(%rdx)
.L10644:
	movzbl	16(%r13), %eax
.L6078:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%bl
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	movq	56(%r12), %rbx
	testq	%rbx, %rbx
	je	.L6202
	cmpq	$0, 72(%r12)
	je	.L11646
.L6202:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L6073
	cmpq	$0, 56(%rax)
	je	.L6073
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %r15
	cmpq	global_binding_level(%rip), %rbx
	je	.L11647
.L11149:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L6208:
	movq	%r12, 8(%r15)
	jmp	.L6073
.L11647:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L6208
	jmp	.L11149
.L11646:
	cmpb	$32, 16(%r13)
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	sete	%r8b
	movq	8(%r13), %r15
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L6203
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	jmp	.L6202
.L6203:
	movq	%rbx, 72(%r13)
	jmp	.L6202
.L6074:
	movq	current_binding_level(%rip), %rsi
	movq	56(%r12), %r15
	cmpq	global_binding_level(%rip), %rsi
	jne	.L6078
	movq	32(%r15), %rcx
	cmpb	$36, (%rcx)
	jne	.L6078
	cmpb	$95, 1(%rcx)
	jne	.L6078
	movq	class_binding_level(%rip), %r8
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rax
	testq	%r8, %r8
	movq	%r8, -2512(%rbp)
	movq	%rax, -1288(%rbp)
	jne	.L6082
	testb	$-128, 66(%rsi)
	movq	%rsi, -2512(%rbp)
	je	.L6082
.L6086:
	movq	-2512(%rbp), %rdi
	movq	56(%rdi), %rcx
	testb	$-128, 66(%rcx)
	movq	%rcx, -2512(%rbp)
	jne	.L6086
.L6082:
	movq	-2512(%rbp), %rcx
	cmpq	global_binding_level(%rip), %rcx
	je	.L11648
	movq	-2512(%rbp), %rbx
	movq	-1288(%rbp), %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	saveable_tree_cons
	movq	-2512(%rbp), %r9
	movq	%rax, 8(%r9)
.L6088:
	testq	%r15, %r15
	je	.L6089
	movq	-1288(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L6090
	movq	%r15, 80(%rcx)
.L6090:
	movq	-1288(%rbp), %rbx
	cmpq	%rbx, 8(%r15)
	je	.L6091
	cmpb	$21, 16(%rbx)
	je	.L11649
.L6092:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L6094
	cmpq	$0, 32(%rax)
	je	.L6093
.L6094:
	movq	lang_name_cplusplus(%rip), %rdx
	cmpq	%rdx, current_lang_name(%rip)
	je	.L11650
.L6095:
	xorl	%ecx, %ecx
.L6130:
	testq	%rcx, %rcx
	jne	.L6131
.L10257:
	movq	-1288(%rbp), %rdx
	movl	$32, %edi
	movq	%r15, %rsi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-1288(%rbp), %rdi
	movq	%rax, -2520(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-2520(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11651
.L11145:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L6133:
	movq	-1288(%rbp), %rdx
	movq	%rdx, 8(%r15)
.L6136:
	movq	32(%r15), %rax
	cmpb	$36, (%rax)
	je	.L11652
.L6138:
	movq	-1288(%rbp), %rcx
	movq	80(%rcx), %rdx
	testq	%rdx, %rdx
	je	.L6169
	cmpb	$32, 16(%rdx)
	je	.L11653
.L6139:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L6158
	movq	-2520(%rbp), %rax
	movq	56(%rax), %rdx
	testq	%rdx, %rdx
	movq	%rdx, -1304(%rbp)
	je	.L10648
	movq	56(%rdx), %rsi
	testq	%rsi, %rsi
	je	.L6160
	movq	%rdx, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L6160:
	movq	decl_obstack+24(%rip), %rdx
	movq	-2520(%rbp), %r11
	movq	-1304(%rbp), %rdi
	leaq	8(%rdx), %rcx
	cmpq	decl_obstack+32(%rip), %rcx
	movq	%r11, 56(%rdi)
	ja	.L11654
.L6162:
	movq	-2520(%rbp), %rsi
	movq	%rdx, %r9
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rsi, (%r9)
	cmpb	$32, 16(%rsi)
	je	.L11655
.L10648:
	movq	32(%r15), %rax
.L6169:
	cmpb	$36, (%rax)
	je	.L11656
.L6183:
	movq	current_class_type(%rip), %rdx
	movq	-2520(%rbp), %r10
	movq	-1288(%rbp), %r9
	testq	%rdx, %rdx
	movq	%r10, 80(%r9)
	jne	.L6186
	cmpq	$0, current_function_decl(%rip)
	je	.L6185
.L6186:
	movq	lang_name_cplusplus(%rip), %r8
	cmpq	%r8, current_lang_name(%rip)
	je	.L6184
.L6185:
	movq	-2520(%rbp), %rax
	movq	%r15, 72(%rax)
.L6091:
	movq	-2512(%rbp), %rsi
	movzbl	66(%rsi), %r11d
	andl	$15, %r11d
	cmpl	$2, %r11d
	je	.L11657
.L6089:
	movq	-1288(%rbp), %rsi
	movq	80(%rsi), %rax
	cmpb	$32, 16(%rax)
	je	.L11658
	movq	-1288(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-1288(%rbp), %rdi
	movq	%rax, (%rdi)
.L11148:
	movzbl	16(%r12), %eax
	jmp	.L6078
.L11658:
	movq	%rax, (%rsi)
	jmp	.L11148
.L11657:
	movq	-1288(%rbp), %r9
	orb	$64, 18(%r9)
	movq	80(%r9), %rdx
	movq	current_class_type(%rip), %rax
	movq	%rdx, 56(%r15)
	cmpq	$0, 32(%rax)
	jne	.L6089
	movq	-2512(%rbp), %r10
	movq	144(%rax), %r15
	movq	8(%r10), %rcx
	movq	%rcx, 72(%r15)
	jmp	.L6089
.L6184:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L11659
	cmpq	$0, 32(%rdx)
	jne	.L6091
	movq	-2520(%rbp), %r11
	movq	80(%rdx), %rsi
	cmpb	$32, 16(%r11)
	movq	72(%rsi), %rbx
	movl	$136, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L6194
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2520(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1288(%rbp), %rdx
	movq	%rdx, 8(%rax)
.L6196:
	movq	-2520(%rbp), %rax
	movq	current_class_type(%rip), %r8
	movq	152(%rax), %rbx
	movq	%r8, 64(%rax)
	movq	%r8, 16(%rbx)
	jmp	.L6091
.L6194:
	movq	-2520(%rbp), %rdi
	movq	%r15, 72(%rdi)
	jmp	.L6196
.L11659:
	movq	-2520(%rbp), %rsi
	movq	112(%rax), %rbx
	cmpb	$32, 16(%rsi)
	movl	$136, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L6189
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2520(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1288(%rbp), %rdx
	movq	%rdx, 8(%rax)
.L6191:
	movq	current_function_decl(%rip), %r8
	movq	-2520(%rbp), %rbx
	movq	%r8, 64(%rbx)
	jmp	.L6091
.L6189:
	movq	-2520(%rbp), %rdi
	movq	%r15, 72(%rdi)
	jmp	.L6191
.L11656:
	cmpb	$95, 1(%rax)
	jne	.L6183
	movq	-2520(%rbp), %rdi
	orb	$64, 53(%rdi)
	jmp	.L6183
.L11655:
	cmpq	$0, 72(%rsi)
	jne	.L10648
	movq	8(%rsi), %r10
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%r10, -1312(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L6164
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	-1304(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-1304(%rbp), %r11
	movl	24(%r11), %eax
	movq	32(%r11), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2520(%rbp), %rbx
	movq	%rax, 72(%rbx)
	movq	-1312(%rbp), %r8
	movq	%r8, 8(%rax)
	jmp	.L10648
.L6164:
	movq	-1304(%rbp), %r9
	movq	-2520(%rbp), %rdi
	movq	%r9, 72(%rdi)
	jmp	.L10648
.L11654:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L6162
.L6158:
	movq	-2520(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -2520(%rbp)
	jmp	.L10648
.L11653:
	movq	global_binding_level(%rip), %rdi
	cmpq	%rdi, current_binding_level(%rip)
	je	.L6140
	movq	48(%r15), %r11
	testq	%r11, %r11
	movq	%r11, %rcx
	jne	.L6141
.L6140:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L6142
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L10139
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L6143
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L11660
.L6143:
	testq	%rcx, %rcx
	jne	.L10139
.L10140:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10139
.L6142:
	movq	40(%r15), %rcx
.L6141:
	testq	%rcx, %rcx
	je	.L6145
.L10139:
	cmpb	$32, 16(%rcx)
	je	.L6145
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L6145
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L6153
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11146
	movl	$1, %r8d
	testl	%r8d, %r8d
	jle	.L11661
.L11146:
	movq	%rax, %rcx
.L6145:
	movq	-1288(%rbp), %rdx
	cmpq	80(%rdx), %rcx
	jne	.L6139
	jmp	.L10648
.L11661:
	testl	%edx, %edx
	jg	.L11146
	movl	$1, %ebx
	testl	%ebx, %ebx
	je	.L6145
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11146
.L6153:
	movq	8(%rcx), %rsi
	cmpq	error_mark_node(%rip), %rsi
	cmove	%rsi, %rcx
	jmp	.L6145
.L11660:
	movl	$1, %r10d
	xorl	%ecx, %ecx
	movq	%r15, %rsi
	cmpl	$-1, %r10d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L6145
	testq	%rax, %rax
	je	.L10140
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L6143
.L11652:
	cmpb	$95, 1(%rax)
	jne	.L6138
	jmp	.L6169
.L11651:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L6133
	jmp	.L11145
	.p2align 6,,7
.L6131:
	movq	80(%rcx), %rax
	movq	%rax, -2520(%rbp)
	jmp	.L6136
.L11650:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L6097
	movq	80(%rax), %rbx
.L6097:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L6130
.L6129:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L6106
	cmpl	$32, %eax
	je	.L11662
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L6100:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L6130
	jmp	.L6129
.L11662:
	movq	8(%rbx), %rsi
	movq	-1288(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%rsi), %r8
	movq	72(%r8), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10891
	movq	64(%rbx), %rbx
	jmp	.L6100
.L10891:
	movq	32(%rax), %rcx
	jmp	.L6130
.L6106:
	movq	-1288(%rbp), %rax
	movq	80(%rax), %rcx
	movq	56(%rcx), %rbx
	testq	%rbx, %rbx
	je	.L6095
	movq	global_binding_level(%rip), %rdi
	cmpq	%rdi, current_binding_level(%rip)
	je	.L6109
	movq	48(%rbx), %r11
	testq	%r11, %r11
	movq	%r11, %rcx
	jne	.L6110
.L6109:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L6111
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10137
	movq	32(%rdi), %r9
	testq	%r9, %r9
	movq	%r9, -1296(%rbp)
	jne	.L6112
	movq	144(%rdi), %r10
	testb	$1, 3(%r10)
	jne	.L11663
.L6112:
	testq	%rcx, %rcx
	jne	.L10137
.L10138:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10137
.L6111:
	movq	40(%rbx), %rcx
.L6110:
	testq	%rcx, %rcx
	je	.L10257
.L10137:
	cmpb	$32, 16(%rcx)
	je	.L6130
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L6130
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L6122
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11144
	movl	$1, %r8d
	testl	%r8d, %r8d
	jle	.L11664
.L11144:
	movq	%rax, %rcx
	jmp	.L6130
.L11664:
	testl	%edx, %edx
	jg	.L11144
	movl	$1, %esi
	testl	%esi, %esi
	je	.L6130
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11144
.L6122:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L6130
	jmp	.L11144
.L11663:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L6130
	testq	%rax, %rax
	je	.L10138
	cmpb	$32, 16(%rax)
	cmovne	-1296(%rbp), %rcx
	jmp	.L6112
.L6093:
	movq	-1288(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r15, %rsi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -1320(%rbp)
	je	.L11665
.L11147:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L6171:
	movq	-1288(%rbp), %r8
	movq	%r8, 8(%r15)
	movq	-1320(%rbp), %r10
	movq	56(%r10), %rax
	testq	%rax, %rax
	movq	%rax, -1328(%rbp)
	je	.L6174
	movq	56(%rax), %rsi
	testq	%rsi, %rsi
	je	.L6175
	movq	class_binding_level(%rip), %rbx
	movq	%rax, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L6175:
	movq	decl_obstack+24(%rip), %rdx
	movq	-1320(%rbp), %r11
	movq	-1328(%rbp), %rax
	leaq	8(%rdx), %rbx
	cmpq	decl_obstack+32(%rip), %rbx
	movq	%r11, 56(%rax)
	ja	.L11666
.L6177:
	movq	-1320(%rbp), %rbx
	movq	%rdx, %rsi
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%rsi)
	cmpb	$32, 16(%rbx)
	je	.L11667
.L6174:
	movq	-1320(%rbp), %rbx
	movq	%rbx, -2520(%rbp)
	jmp	.L10648
.L11667:
	cmpq	$0, 72(%rbx)
	jne	.L6174
	movq	-1320(%rbp), %rdx
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%rdx), %rcx
	movq	%rcx, -1336(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L6179
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-1328(%rbp), %r11
	cmpb	$1, 16(%r11)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	-1328(%rbp), %r10
	movq	32(%rbx), %rdx
	movq	-1328(%rbp), %r8
	movl	$.LC35, %esi
	movq	32(%r10), %rcx
	movl	24(%r8), %eax
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1320(%rbp), %r9
	movq	%rax, 72(%r9)
	movq	-1336(%rbp), %rdi
	movq	%rdi, 8(%rax)
	jmp	.L6174
.L6179:
	movq	-1328(%rbp), %rcx
	movq	-1320(%rbp), %rdx
	movq	%rcx, 72(%rdx)
	jmp	.L6174
.L11666:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L6177
.L11665:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L6171
	jmp	.L11147
	.p2align 6,,7
.L11649:
	cmpq	$0, class_binding_level(%rip)
	je	.L6092
	movq	144(%rbx), %r10
	testb	$16, 3(%r10)
	jne	.L6091
	jmp	.L6092
	.p2align 6,,7
.L11648:
	movq	-1288(%rbp), %rsi
	movq	8(%rcx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	perm_tree_cons
	movq	-2512(%rbp), %r11
	movq	%rax, 8(%r11)
	jmp	.L6088
	.p2align 6,,7
.L6059:
	movq	-2504(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10643
	movl	flag_traditional(%rip), %esi
	testl	%esi, %esi
	jne	.L6064
	testb	$8, 18(%r14)
	je	.L6064
	testb	$8, 18(%r13)
	jne	.L6064
	testb	$9, 53(%r13)
	jne	.L6064
	cmpq	%r13, current_function_decl(%rip)
	je	.L11668
.L6068:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L6069
	cmpq	$0, 8(%rax)
	jne	.L11669
.L6069:
	movq	-2504(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11143:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-2504(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L6064
.L11669:
	movq	-2504(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11143
.L11668:
	movq	-2504(%rbp), %r13
	movq	%r13, current_function_decl(%rip)
	jmp	.L6068
	.p2align 6,,7
.L11315:
	cmpq	$0, 64(%rcx)
	jne	.L6057
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L6057
.L11314:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -2504(%rbp)
	call	error_with_decl
	jmp	.L6055
.L6048:
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.L6050
	.p2align 4,,7
.L6054:
	cmpq	%r14, 56(%rdi)
	je	.L6050
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L6054
.L6050:
	movq	%rdi, -2504(%rbp)
	jmp	.L6047
.L11313:
	movq	40(%r14), %rbx
	movq	%rbx, -2504(%rbp)
	jmp	.L6047
.L11312:
	movq	56(%r13), %r14
	jmp	.L6044
.L11311:
	testb	$32, 53(%r13)
	jne	.L6042
	jmp	.L6043
.L10639:
	movzbl	16(%r13), %edx
	jmp	.L6042
.L10628:
	movzbl	16(%r13), %edx
.L5789:
	cmpb	$32, %dl
	je	.L10916
.L5797:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L5935
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L5935
	testb	$1, 53(%rax)
	jne	.L5936
	testb	$8, 18(%rax)
	je	.L5935
.L5936:
	andb	$8, %dl
	je	.L11670
	.p2align 4,,7
.L5935:
	movl	flag_traditional(%rip), %r12d
	testl	%r12d, %r12d
	je	.L10636
	testb	$1, 53(%r13)
	je	.L10636
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rdi
	cmpq	%rdi, current_binding_level(%rip)
	je	.L5939
	movq	48(%r14), %r8
	testq	%r8, %r8
	movq	%r8, %rdx
	jne	.L5940
.L5939:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L5941
	movq	56(%r14), %rdx
	testq	%rdx, %rdx
	jne	.L10135
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L5942
	movq	144(%rdi), %r15
	testb	$1, 3(%r15)
	jne	.L11671
.L5942:
	testq	%rdx, %rdx
	jne	.L10135
.L10136:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rdx
	jne	.L10135
.L5941:
	movq	40(%r14), %rdx
.L5940:
	testq	%rdx, %rdx
	je	.L10256
.L10135:
	cmpb	$32, 16(%rdx)
	je	.L5944
	movl	looking_for_typename(%rip), %ecx
	testl	%ecx, %ecx
	js	.L5944
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L5952
	movq	80(%rax), %rax
	cmpq	%rax, %rdx
	je	.L11140
	testl	%ebx, %ebx
	jle	.L11672
.L11140:
	movq	%rax, %rdx
.L5944:
	testq	%rdx, %rdx
	jne	.L10636
.L10256:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -2496(%rbp)
.L5938:
	cmpq	%rax, -2496(%rbp)
	je	.L11673
	movq	current_binding_level(%rip), %rbx
	movq	48(%r14), %r12
	movq	40(%r14), %r15
	cmpq	%rax, %rbx
	je	.L11674
.L11141:
	movq	16(%rbx), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%rbx)
.L5983:
	testq	%r12, %r12
	movq	%r13, 48(%r14)
	je	.L11675
.L5994:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L5996
	testq	%r12, %r12
	je	.L5997
	testb	$1, 53(%r13)
	jne	.L5997
	cmpb	$34, 16(%r12)
	je	.L11676
.L5997:
	movl	warn_shadow(%rip), %r8d
	testl	%r8d, %r8d
	je	.L5996
	testb	$1, 53(%r13)
	jne	.L5996
	movl	32(%r13), %ecx
	testl	%ecx, %ecx
	je	.L5996
	testq	%rax, %rax
	jne	.L5996
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L6002
	cmpb	$34, 16(%r12)
	je	.L11677
.L6002:
	cmpq	$0, 56(%r14)
	je	.L6004
	movl	$.LC41, %edi
.L6003:
	testq	%rdi, %rdi
	jne	.L11142
	.p2align 4,,7
.L5996:
	testq	%r12, %r12
	je	.L10637
	movq	-2496(%rbp), %r9
	movq	%r12, %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	16(%r9), %rdx
	call	tree_cons
	movq	-2496(%rbp), %r12
	movq	%rax, 16(%r12)
.L10637:
	movzbl	16(%r13), %edx
.L5981:
	leal	-128(%rdx), %ebx
	cmpb	$1, %bl
	jbe	.L5769
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L5769
	cmpb	$18, 16(%rcx)
	je	.L11678
.L6013:
	testb	$64, 46(%rcx)
	je	.L5769
.L6012:
	movq	-2496(%rbp), %rdx
	movzwl	64(%rdx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rdx)
	je	.L11679
.L10638:
	movzbl	16(%r13), %edx
	.p2align 4,,7
.L5769:
	cmpb	$32, %dl
	je	.L11680
.L6015:
	movq	-2496(%rbp), %rdi
	cmpq	global_binding_level(%rip), %rdi
	movq	(%rdi), %r11
	movq	%r11, (%r13)
	movq	%r13, (%rdi)
	jne	.L5788
	testb	$4, 17(%r13)
	jne	.L5788
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L5788
.L11680:
	testq	%r14, %r14
	je	.L6015
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L6016
	cmpq	class_binding_level(%rip), %rax
	je	.L6017
	movq	48(%r14), %rax
	testq	%rax, %rax
	je	.L6021
	cmpb	$32, 16(%rax)
	je	.L6019
.L6021:
	cmpq	$0, current_class_type(%rip)
	je	.L6016
	movq	56(%r14), %rax
	testq	%rax, %rax
	je	.L6016
	cmpb	$32, 16(%rax)
	je	.L6019
.L6016:
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L6020
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L6019
	cmpb	$-127, %dl
	je	.L11681
.L6020:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L6015
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L11682
.L6027:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L6031
	cmpq	class_binding_level(%rip), %rax
	je	.L6032
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L6036
	cmpb	$32, 16(%rax)
	je	.L6034
.L6036:
	cmpq	$0, current_class_type(%rip)
	je	.L6031
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L6031
	cmpb	$32, 16(%rax)
	je	.L6034
.L6031:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L6015
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L6034
	cmpb	$-127, %dl
	jne	.L6015
	movq	$0, 8(%rbx)
	jmp	.L6015
.L6034:
	movq	8(%rax), %r14
	movq	%r14, 8(%rbx)
	jmp	.L6015
.L6032:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L6036
.L11682:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %r12
	sete	%cl
	movq	8(%r13), %r15
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r14)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%r14), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L6027
.L11681:
	movq	$0, 8(%r14)
	jmp	.L6020
.L6019:
	movq	8(%rax), %rsi
	movq	%rsi, 8(%r14)
	jmp	.L6020
.L6017:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L6021
.L11679:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10638
.L11678:
	movq	8(%rcx), %r10
	testb	$64, 46(%r10)
	jne	.L6012
	jmp	.L6013
.L11142:
	movq	32(%r14), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L5996
.L6004:
	testq	%r12, %r12
	je	.L6006
	movl	$.LC42, %edi
	jmp	.L6003
.L6006:
	testq	%r15, %r15
	movl	$.LC43, %r11d
	cmovne	%r11, %rdi
	jmp	.L6003
.L11677:
	movl	$.LC40, %edi
	jmp	.L6003
.L11676:
	cmpb	$34, 16(%r13)
	je	.L5997
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r15
	movq	56(%r15), %rax
	je	.L5998
	movq	56(%rax), %rax
.L5998:
	movzbl	66(%rax), %edi
	andl	$15, %edi
	decl	%edi
	jne	.L5996
	movl	$.LC40, %edi
	jmp	.L11142
	.p2align 6,,7
.L11675:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L11683
.L5986:
	testq	%r12, %r12
	jne	.L5994
	testq	%r15, %r15
	jne	.L5994
	testb	$1, 53(%r13)
	je	.L5994
	testb	$8, 18(%r13)
	je	.L5994
	orb	$8, 18(%r14)
	jmp	.L5994
	.p2align 6,,7
.L11683:
	testq	%r15, %r15
	je	.L5986
	cmpb	$29, 16(%r13)
	jne	.L5986
	cmpb	$29, 16(%r15)
	jne	.L5986
	movq	8(%r13), %rdi
	movq	8(%r15), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L11684
	movzbl	53(%r15), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L5989
	movzbl	53(%r13), %r10d
	leal	0(,%rax,8), %esi
	leaq	88(%r13), %rdx
	andb	$-9, %r10b
	orb	%sil, %r10b
	movb	%r10b, 53(%r13)
	cmpq	%r15, current_function_decl(%rip)
	je	.L5990
	movq	88(%r15), %rax
.L5991:
	movq	%rax, (%rdx)
	movq	72(%r15), %rbx
	movq	80(%r15), %r9
	movq	136(%r15), %rdx
	movzbl	17(%r13), %edi
	movq	%rbx, 72(%r13)
	movq	%r9, 80(%r13)
	movq	%rdx, 136(%r13)
	movzbl	17(%r15), %r11d
	movq	%r15, 96(%r13)
	andb	$127, %dil
	shrb	$7, %r11b
	movzbl	%r11b, %ecx
	movl	%ecx, %r8d
	salb	$7, %r8b
	orb	%r8b, %dil
	movb	%dil, 17(%r13)
	movzbl	53(%r15), %ecx
.L5989:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L5992
	movzbl	53(%r13), %r10d
	salb	$4, %al
	andb	$-17, %r10b
	orb	%al, %r10b
	movb	%r10b, 53(%r13)
	movl	128(%r15), %eax
	movl	%eax, 128(%r13)
.L5992:
	movq	8(%r15), %rdx
	cmpq	$0, 24(%rdx)
	je	.L5986
	cmpq	$0, 88(%r15)
	je	.L5986
	movq	8(%r13), %rsi
	cmpq	$0, 24(%rsi)
	jne	.L5986
	movq	%rdx, 8(%r13)
	jmp	.L5986
.L5990:
	xorl	%eax, %eax
	jmp	.L5991
	.p2align 6,,7
.L11684:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L5986
	.p2align 6,,7
.L11674:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L5983
	jmp	.L11141
.L11673:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L11685
.L5958:
	cmpq	$0, 40(%r14)
	jne	.L5959
	testb	$8, 18(%r13)
	je	.L5959
	orb	$8, 18(%r14)
.L5959:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L11686
.L5961:
	movq	%r13, 40(%r14)
	movzbl	16(%r13), %edx
.L5960:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L5972
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L5962
	testb	$1, 18(%rcx)
	je	.L5962
	orb	$1, 18(%r13)
	movq	72(%r14), %rax
.L5962:
	testq	%rax, %rax
	je	.L5972
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L5967
	testb	$8, 17(%rcx)
	je	.L5967
	orb	$8, 17(%r13)
	movq	72(%r14), %rax
.L5967:
	testq	%rax, %rax
	je	.L5972
	cmpq	$0, 8(%rax)
	je	.L5972
	cmpb	$29, %dl
	je	.L11687
.L5975:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L5972:
	testb	$8, 18(%r14)
	je	.L5981
	cmpb	$32, %dl
	je	.L5981
	testb	$8, 18(%r13)
	jne	.L5981
	testb	$1, 53(%r13)
	jne	.L5981
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L5977
	cmpq	$0, 8(%rax)
	jne	.L11688
.L5977:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11242:
	xorl	%eax, %eax
	call	warning
	jmp	.L10637
.L11688:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11242
.L11687:
	movq	8(%r13), %rbx
	movq	integer_type_node(%rip), %r9
	cmpq	%r9, 8(%rbx)
	jne	.L5975
	jmp	.L5972
	.p2align 6,,7
.L11686:
	cmpq	$0, -2472(%rbp)
	je	.L5961
	movq	-2472(%rbp), %r11
	cmpb	$32, 16(%r11)
	jne	.L5960
	jmp	.L5961
.L11685:
	testb	$8, 54(%r13)
	jne	.L5958
	andb	$-9, 18(%r13)
	jmp	.L5958
	.p2align 6,,7
.L10636:
	movq	global_binding_level(%rip), %rax
	jmp	.L5938
.L11672:
	testl	%ecx, %ecx
	jg	.L11140
	testl	%ebx, %ebx
	je	.L5944
	movq	%rdx, %rsi
	movq	%r14, %rdi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11140
	.p2align 6,,7
.L5952:
	movq	8(%rdx), %rcx
	cmpq	error_mark_node(%rip), %rcx
	cmove	%rcx, %rdx
	jmp	.L5944
.L11671:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rdx
	je	.L5944
	testq	%rax, %rax
	je	.L10136
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rdx
	jmp	.L5942
	.p2align 6,,7
.L11670:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L5935
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r14), %rdi
	call	warning_with_decl
	jmp	.L5935
	.p2align 6,,7
.L10916:
	movq	8(%r13), %rdx
	movq	80(%rdx), %r12
	testq	%r12, %r12
	je	.L5799
	movzbl	16(%r12), %eax
	cmpb	$32, %al
	je	.L5798
.L5799:
	movq	global_binding_level(%rip), %r15
	movq	%r13, %r12
	cmpq	%r15, current_binding_level(%rip)
	jne	.L10629
	movq	%r13, 80(%rdx)
.L10629:
	movzbl	16(%r13), %eax
.L5802:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%bl
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	movq	56(%r12), %rbx
	testq	%rbx, %rbx
	je	.L5926
	cmpq	$0, 72(%r12)
	je	.L11689
.L5926:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L5797
	cmpq	$0, 56(%rax)
	je	.L5797
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %r15
	cmpq	global_binding_level(%rip), %rbx
	je	.L11690
.L11139:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L5932:
	movq	%r12, 8(%r15)
	jmp	.L5797
.L11690:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L5932
	jmp	.L11139
.L11689:
	cmpb	$32, 16(%r13)
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	sete	%al
	movq	8(%r13), %r15
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L5927
	cmpb	$1, 16(%r12)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	jmp	.L5926
.L5927:
	movq	%rbx, 72(%r13)
	jmp	.L5926
.L5798:
	movq	current_binding_level(%rip), %rsi
	movq	56(%r12), %r15
	cmpq	global_binding_level(%rip), %rsi
	jne	.L5802
	movq	32(%r15), %rcx
	cmpb	$36, (%rcx)
	jne	.L5802
	cmpb	$95, 1(%rcx)
	jne	.L5802
	movq	class_binding_level(%rip), %r9
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rax
	testq	%r9, %r9
	movq	%r9, -2480(%rbp)
	movq	%rax, -1232(%rbp)
	jne	.L5806
	testb	$-128, 66(%rsi)
	movq	%rsi, -2480(%rbp)
	je	.L5806
.L5810:
	movq	-2480(%rbp), %rbx
	movq	56(%rbx), %rcx
	testb	$-128, 66(%rcx)
	movq	%rcx, -2480(%rbp)
	jne	.L5810
.L5806:
	movq	-2480(%rbp), %rcx
	cmpq	global_binding_level(%rip), %rcx
	je	.L11691
	movq	-2480(%rbp), %r8
	movq	-1232(%rbp), %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	8(%r8), %rdx
	call	saveable_tree_cons
	movq	-2480(%rbp), %r10
	movq	%rax, 8(%r10)
.L5812:
	testq	%r15, %r15
	je	.L5813
	movq	-1232(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L5814
	movq	%r15, 80(%rcx)
.L5814:
	movq	-1232(%rbp), %rbx
	cmpq	%rbx, 8(%r15)
	je	.L5815
	cmpb	$21, 16(%rbx)
	je	.L11692
.L5816:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L5818
	cmpq	$0, 32(%rax)
	je	.L5817
.L5818:
	movq	lang_name_cplusplus(%rip), %r11
	cmpq	%r11, current_lang_name(%rip)
	je	.L11693
.L5819:
	xorl	%ecx, %ecx
.L5854:
	testq	%rcx, %rcx
	jne	.L5855
.L10255:
	movq	-1232(%rbp), %rdx
	movl	$32, %edi
	movq	%r15, %rsi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-1232(%rbp), %rdi
	movq	%rax, -2488(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-2488(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11694
.L11135:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L5857:
	movq	-1232(%rbp), %rsi
	movq	%rsi, 8(%r15)
.L5860:
	movq	32(%r15), %rax
	cmpb	$36, (%rax)
	je	.L11695
.L5862:
	movq	-1232(%rbp), %rcx
	movq	80(%rcx), %rdx
	testq	%rdx, %rdx
	je	.L5893
	cmpb	$32, 16(%rdx)
	je	.L11696
.L5863:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L5882
	movq	-2488(%rbp), %rax
	movq	56(%rax), %rdx
	testq	%rdx, %rdx
	movq	%rdx, -1248(%rbp)
	je	.L10633
	movq	56(%rdx), %rsi
	testq	%rsi, %rsi
	je	.L5884
	movq	%rdx, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L5884:
	movq	-1248(%rbp), %rdx
	movq	-2488(%rbp), %r10
	movq	%r10, 56(%rdx)
	movq	decl_obstack+24(%rip), %rdx
	leaq	8(%rdx), %rcx
	cmpq	decl_obstack+32(%rip), %rcx
	ja	.L11697
.L5886:
	movq	-2488(%rbp), %rsi
	movq	%rdx, %r8
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rsi, (%r8)
	cmpb	$32, 16(%rsi)
	je	.L11698
.L10633:
	movq	32(%r15), %rax
.L5893:
	cmpb	$36, (%rax)
	je	.L11699
.L5907:
	movq	current_class_type(%rip), %rdx
	movq	-2488(%rbp), %r9
	movq	-1232(%rbp), %r11
	testq	%rdx, %rdx
	movq	%r9, 80(%r11)
	jne	.L5910
	cmpq	$0, current_function_decl(%rip)
	je	.L5909
.L5910:
	movq	lang_name_cplusplus(%rip), %rdi
	cmpq	%rdi, current_lang_name(%rip)
	je	.L5908
.L5909:
	movq	-2488(%rbp), %rax
	movq	%r15, 72(%rax)
.L5815:
	movq	-2480(%rbp), %rsi
	movzbl	66(%rsi), %r10d
	andl	$15, %r10d
	cmpl	$2, %r10d
	je	.L11700
.L5813:
	movq	-1232(%rbp), %rsi
	movq	80(%rsi), %rax
	cmpb	$32, 16(%rax)
	je	.L11701
	movq	-1232(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-1232(%rbp), %r9
	movq	%rax, (%r9)
.L11138:
	movzbl	16(%r12), %eax
	jmp	.L5802
.L11701:
	movq	%rax, (%rsi)
	jmp	.L11138
.L11700:
	movq	-1232(%rbp), %r8
	orb	$64, 18(%r8)
	movq	80(%r8), %rdx
	movq	current_class_type(%rip), %rax
	movq	%rdx, 56(%r15)
	cmpq	$0, 32(%rax)
	jne	.L5813
	movq	-2480(%rbp), %r11
	movq	144(%rax), %r15
	movq	8(%r11), %rcx
	movq	%rcx, 72(%r15)
	jmp	.L5813
.L5908:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L11702
	cmpq	$0, 32(%rdx)
	jne	.L5815
	movq	-2488(%rbp), %r10
	movq	80(%rdx), %rsi
	cmpb	$32, 16(%r10)
	movq	72(%rsi), %rbx
	movl	$136, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L5918
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2488(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1232(%rbp), %rdx
	movq	%rdx, 8(%rax)
.L5920:
	movq	-2488(%rbp), %rax
	movq	current_class_type(%rip), %rdi
	movq	152(%rax), %rbx
	movq	%rdi, 64(%rax)
	movq	%rdi, 16(%rbx)
	jmp	.L5815
.L5918:
	movq	-2488(%rbp), %r9
	movq	%r15, 72(%r9)
	jmp	.L5920
.L11702:
	movq	-2488(%rbp), %rsi
	movq	112(%rax), %rbx
	cmpb	$32, 16(%rsi)
	movl	$136, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L5913
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2488(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1232(%rbp), %rdx
	movq	%rdx, 8(%rax)
.L5915:
	movq	current_function_decl(%rip), %rdi
	movq	-2488(%rbp), %rbx
	movq	%rdi, 64(%rbx)
	jmp	.L5815
.L5913:
	movq	-2488(%rbp), %r9
	movq	%r15, 72(%r9)
	jmp	.L5915
.L11699:
	cmpb	$95, 1(%rax)
	jne	.L5907
	movq	-2488(%rbp), %r8
	orb	$64, 53(%r8)
	jmp	.L5907
.L11698:
	cmpq	$0, 72(%rsi)
	jne	.L10633
	movq	8(%rsi), %r11
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%r11, -1256(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L5888
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	-1248(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-1248(%rbp), %r10
	movl	24(%r10), %eax
	movq	32(%r10), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2488(%rbp), %r9
	movq	%rax, 72(%r9)
	movq	-1256(%rbp), %rdi
	movq	%rdi, 8(%rax)
	jmp	.L10633
.L5888:
	movq	-1248(%rbp), %r11
	movq	-2488(%rbp), %r8
	movq	%r11, 72(%r8)
	jmp	.L10633
.L11697:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L5886
.L5882:
	movq	-2488(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -2488(%rbp)
	jmp	.L10633
.L11696:
	movq	global_binding_level(%rip), %rdx
	cmpq	%rdx, current_binding_level(%rip)
	je	.L5864
	movq	48(%r15), %r10
	testq	%r10, %r10
	movq	%r10, %rcx
	jne	.L5865
.L5864:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L5866
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L10133
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L5867
	movq	144(%rdi), %r8
	testb	$1, 3(%r8)
	jne	.L11703
.L5867:
	testq	%rcx, %rcx
	jne	.L10133
.L10134:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10133
.L5866:
	movq	40(%r15), %rcx
.L5865:
	testq	%rcx, %rcx
	je	.L5869
.L10133:
	cmpb	$32, 16(%rcx)
	je	.L5869
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L5869
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L5877
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11136
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L11704
.L11136:
	movq	%rax, %rcx
.L5869:
	movq	-1232(%rbp), %rsi
	cmpq	80(%rsi), %rcx
	jne	.L5863
	jmp	.L10633
.L11704:
	testl	%edx, %edx
	jg	.L11136
	movl	$1, %r9d
	testl	%r9d, %r9d
	je	.L5869
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11136
.L5877:
	movq	8(%rcx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rcx
	jmp	.L5869
.L11703:
	movl	$1, %r11d
	xorl	%ecx, %ecx
	movq	%r15, %rsi
	cmpl	$-1, %r11d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L5869
	testq	%rax, %rax
	je	.L10134
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L5867
.L11695:
	cmpb	$95, 1(%rax)
	jne	.L5862
	jmp	.L5893
.L11694:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L5857
	jmp	.L11135
	.p2align 6,,7
.L5855:
	movq	80(%rcx), %rax
	movq	%rax, -2488(%rbp)
	jmp	.L5860
.L11693:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L5821
	movq	80(%rax), %rbx
.L5821:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L5854
.L5853:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L5830
	cmpl	$32, %eax
	je	.L11705
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L5824:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L5854
	jmp	.L5853
.L11705:
	movq	8(%rbx), %rsi
	movq	-1232(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%rsi), %r9
	movq	72(%r9), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10890
	movq	64(%rbx), %rbx
	jmp	.L5824
.L10890:
	movq	32(%rax), %rcx
	jmp	.L5854
.L5830:
	movq	-1232(%rbp), %rax
	movq	80(%rax), %rcx
	movq	56(%rcx), %rbx
	testq	%rbx, %rbx
	je	.L5819
	movq	global_binding_level(%rip), %rdx
	cmpq	%rdx, current_binding_level(%rip)
	je	.L5833
	movq	48(%rbx), %r10
	testq	%r10, %r10
	movq	%r10, %rcx
	jne	.L5834
.L5833:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L5835
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10131
	movq	32(%rdi), %r8
	testq	%r8, %r8
	movq	%r8, -1240(%rbp)
	jne	.L5836
	movq	144(%rdi), %r11
	testb	$1, 3(%r11)
	jne	.L11706
.L5836:
	testq	%rcx, %rcx
	jne	.L10131
.L10132:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10131
.L5835:
	movq	40(%rbx), %rcx
.L5834:
	testq	%rcx, %rcx
	je	.L10255
.L10131:
	cmpb	$32, 16(%rcx)
	je	.L5854
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L5854
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L5846
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11134
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L11707
.L11134:
	movq	%rax, %rcx
	jmp	.L5854
.L11707:
	testl	%edx, %edx
	jg	.L11134
	movl	$1, %r9d
	testl	%r9d, %r9d
	je	.L5854
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11134
.L5846:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L5854
	jmp	.L11134
.L11706:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L5854
	testq	%rax, %rax
	je	.L10132
	cmpb	$32, 16(%rax)
	cmovne	-1240(%rbp), %rcx
	jmp	.L5836
.L5817:
	movq	-1232(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r15, %rsi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -1264(%rbp)
	je	.L11708
.L11137:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L5895:
	movq	-1232(%rbp), %rdi
	movq	%rdi, 8(%r15)
	movq	-1264(%rbp), %rbx
	movq	56(%rbx), %rax
	testq	%rax, %rax
	movq	%rax, -1272(%rbp)
	je	.L5898
	movq	56(%rax), %rsi
	testq	%rsi, %rsi
	je	.L5899
	movq	class_binding_level(%rip), %rbx
	movq	%rax, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L5899:
	movq	decl_obstack+24(%rip), %rdx
	movq	-1264(%rbp), %r10
	movq	-1272(%rbp), %rax
	leaq	8(%rdx), %r9
	cmpq	decl_obstack+32(%rip), %r9
	movq	%r10, 56(%rax)
	ja	.L11709
.L5901:
	movq	-1264(%rbp), %rbx
	movq	%rdx, %rsi
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%rsi)
	cmpb	$32, 16(%rbx)
	je	.L11710
.L5898:
	movq	-1264(%rbp), %rbx
	movq	%rbx, -2488(%rbp)
	jmp	.L10633
.L11710:
	cmpq	$0, 72(%rbx)
	jne	.L5898
	movq	-1264(%rbp), %rdx
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%rdx), %rcx
	movq	%rcx, -1280(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L5903
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-1272(%rbp), %r10
	cmpb	$1, 16(%r10)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	-1272(%rbp), %r9
	movq	32(%rbx), %rdx
	movq	-1272(%rbp), %rdi
	movl	$.LC35, %esi
	movq	32(%r9), %rcx
	movl	24(%rdi), %eax
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1264(%rbp), %r11
	movq	%rax, 72(%r11)
	movq	-1280(%rbp), %r8
	movq	%r8, 8(%rax)
	jmp	.L5898
.L5903:
	movq	-1272(%rbp), %rcx
	movq	-1264(%rbp), %rdx
	movq	%rcx, 72(%rdx)
	jmp	.L5898
.L11709:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L5901
.L11708:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L5895
	jmp	.L11137
	.p2align 6,,7
.L11692:
	cmpq	$0, class_binding_level(%rip)
	je	.L5816
	movq	144(%rbx), %rdi
	testb	$16, 3(%rdi)
	jne	.L5815
	jmp	.L5816
	.p2align 6,,7
.L11691:
	movq	8(%rcx), %rdx
	movq	-1232(%rbp), %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	perm_tree_cons
	movq	-2480(%rbp), %rdx
	movq	%rax, 8(%rdx)
	jmp	.L5812
	.p2align 6,,7
.L5783:
	movq	-2472(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10628
	movl	flag_traditional(%rip), %esi
	testl	%esi, %esi
	jne	.L5788
	testb	$8, 18(%r14)
	je	.L5788
	testb	$8, 18(%r13)
	jne	.L5788
	testb	$9, 53(%r13)
	jne	.L5788
	cmpq	%r13, current_function_decl(%rip)
	je	.L11711
.L5792:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L5793
	cmpq	$0, 8(%rax)
	jne	.L11712
.L5793:
	movq	-2472(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11133:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-2472(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L5788
.L11712:
	movq	-2472(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11133
.L11711:
	movq	-2472(%rbp), %r13
	movq	%r13, current_function_decl(%rip)
	jmp	.L5792
	.p2align 6,,7
.L11310:
	cmpq	$0, 64(%rcx)
	jne	.L5781
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L5781
.L11309:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -2472(%rbp)
	call	error_with_decl
	jmp	.L5779
.L5772:
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.L5774
	.p2align 4,,7
.L5778:
	cmpq	%r14, 56(%rdi)
	je	.L5774
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L5778
.L5774:
	movq	%rdi, -2472(%rbp)
	jmp	.L5771
.L11308:
	movq	40(%r14), %rdi
	movq	%rdi, -2472(%rbp)
	jmp	.L5771
.L11307:
	movq	56(%r13), %r14
	jmp	.L5768
.L11306:
	testb	$32, 53(%r13)
	jne	.L5766
	jmp	.L5767
.L10624:
	movzbl	16(%r13), %edx
	jmp	.L5766
.L10613:
	movzbl	16(%r13), %edx
.L5513:
	cmpb	$32, %dl
	je	.L10915
.L5521:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L5659
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L5659
	testb	$1, 53(%rax)
	jne	.L5660
	testb	$8, 18(%rax)
	je	.L5659
.L5660:
	andb	$8, %dl
	je	.L11713
	.p2align 4,,7
.L5659:
	movl	flag_traditional(%rip), %r12d
	testl	%r12d, %r12d
	je	.L10621
	testb	$1, 53(%r13)
	je	.L10621
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %r9
	cmpq	%r9, current_binding_level(%rip)
	je	.L5663
	movq	48(%r14), %r15
	testq	%r15, %r15
	movq	%r15, %rdx
	jne	.L5664
.L5663:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L5665
	movq	56(%r14), %rdx
	testq	%rdx, %rdx
	jne	.L10129
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L5666
	movq	144(%rdi), %rcx
	testb	$1, 3(%rcx)
	jne	.L11714
.L5666:
	testq	%rdx, %rdx
	jne	.L10129
.L10130:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rdx
	jne	.L10129
.L5665:
	movq	40(%r14), %rdx
.L5664:
	testq	%rdx, %rdx
	je	.L10254
.L10129:
	cmpb	$32, 16(%rdx)
	je	.L5668
	movl	looking_for_typename(%rip), %ecx
	testl	%ecx, %ecx
	js	.L5668
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L5676
	movq	80(%rax), %rax
	cmpq	%rax, %rdx
	je	.L11130
	testl	%ebx, %ebx
	jle	.L11715
.L11130:
	movq	%rax, %rdx
.L5668:
	testq	%rdx, %rdx
	jne	.L10621
.L10254:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -2464(%rbp)
.L5662:
	cmpq	%rax, -2464(%rbp)
	je	.L11716
	movq	current_binding_level(%rip), %rbx
	movq	48(%r14), %r12
	movq	40(%r14), %r15
	cmpq	%rax, %rbx
	je	.L11717
.L11131:
	movq	16(%rbx), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%rbx)
.L5707:
	testq	%r12, %r12
	movq	%r13, 48(%r14)
	je	.L11718
.L5718:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L5720
	testq	%r12, %r12
	je	.L5721
	testb	$1, 53(%r13)
	jne	.L5721
	cmpb	$34, 16(%r12)
	je	.L11719
.L5721:
	movl	warn_shadow(%rip), %ecx
	testl	%ecx, %ecx
	je	.L5720
	testb	$1, 53(%r13)
	jne	.L5720
	movl	32(%r13), %edx
	testl	%edx, %edx
	je	.L5720
	testq	%rax, %rax
	jne	.L5720
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L5726
	cmpb	$34, 16(%r12)
	je	.L11720
.L5726:
	cmpq	$0, 56(%r14)
	je	.L5728
	movl	$.LC41, %edi
.L5727:
	testq	%rdi, %rdi
	jne	.L11132
	.p2align 4,,7
.L5720:
	testq	%r12, %r12
	je	.L10622
	movq	-2464(%rbp), %r10
	movq	%r12, %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	16(%r10), %rdx
	call	tree_cons
	movq	-2464(%rbp), %r12
	movq	%rax, 16(%r12)
.L10622:
	movzbl	16(%r13), %edx
.L5705:
	leal	-128(%rdx), %edi
	cmpb	$1, %dil
	jbe	.L5493
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L5493
	cmpb	$18, 16(%rcx)
	je	.L11721
.L5737:
	testb	$64, 46(%rcx)
	je	.L5493
.L5736:
	movq	-2464(%rbp), %r11
	movzwl	64(%r11), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%r11)
	je	.L11722
.L10623:
	movzbl	16(%r13), %edx
	.p2align 4,,7
.L5493:
	cmpb	$32, %dl
	je	.L11723
.L5739:
	movq	-2464(%rbp), %rdx
	cmpq	global_binding_level(%rip), %rdx
	movq	(%rdx), %rbx
	movq	%rbx, (%r13)
	movq	%r13, (%rdx)
	jne	.L5512
	testb	$4, 17(%r13)
	jne	.L5512
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L5512
.L11723:
	testq	%r14, %r14
	je	.L5739
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L5740
	cmpq	class_binding_level(%rip), %rax
	je	.L5741
	movq	48(%r14), %rax
	testq	%rax, %rax
	je	.L5745
	cmpb	$32, 16(%rax)
	je	.L5743
.L5745:
	cmpq	$0, current_class_type(%rip)
	je	.L5740
	movq	56(%r14), %rax
	testq	%rax, %rax
	je	.L5740
	cmpb	$32, 16(%rax)
	je	.L5743
.L5740:
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L5744
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L5743
	cmpb	$-127, %dl
	je	.L11724
.L5744:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L5739
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L11725
.L5751:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L5755
	cmpq	class_binding_level(%rip), %rax
	je	.L5756
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L5760
	cmpb	$32, 16(%rax)
	je	.L5758
.L5760:
	cmpq	$0, current_class_type(%rip)
	je	.L5755
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L5755
	cmpb	$32, 16(%rax)
	je	.L5758
.L5755:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L5739
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L5758
	cmpb	$-127, %dl
	jne	.L5739
	movq	$0, 8(%rbx)
	jmp	.L5739
.L5758:
	movq	8(%rax), %r14
	movq	%r14, 8(%rbx)
	jmp	.L5739
.L5756:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L5760
.L11725:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %r12
	sete	%cl
	movq	8(%r13), %r15
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r14)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%r14), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L5751
.L11724:
	movq	$0, 8(%r14)
	jmp	.L5744
.L5743:
	movq	8(%rax), %rsi
	movq	%rsi, 8(%r14)
	jmp	.L5744
.L5741:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L5745
.L11722:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10623
.L11721:
	movq	8(%rcx), %r8
	testb	$64, 46(%r8)
	jne	.L5736
	jmp	.L5737
.L11132:
	movq	32(%r14), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L5720
.L5728:
	testq	%r12, %r12
	je	.L5730
	movl	$.LC42, %edi
	jmp	.L5727
.L5730:
	testq	%r15, %r15
	movl	$.LC43, %ebx
	cmovne	%rbx, %rdi
	jmp	.L5727
.L11720:
	movl	$.LC40, %edi
	jmp	.L5727
.L11719:
	cmpb	$34, 16(%r13)
	je	.L5721
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r15
	movq	56(%r15), %rax
	je	.L5722
	movq	56(%rax), %rax
.L5722:
	movzbl	66(%rax), %r9d
	andl	$15, %r9d
	decl	%r9d
	jne	.L5720
	movl	$.LC40, %edi
	jmp	.L11132
	.p2align 6,,7
.L11718:
	movzbl	53(%r13), %r8d
	andb	$9, %r8b
	decb	%r8b
	je	.L11726
.L5710:
	testq	%r12, %r12
	jne	.L5718
	testq	%r15, %r15
	jne	.L5718
	testb	$1, 53(%r13)
	je	.L5718
	testb	$8, 18(%r13)
	je	.L5718
	orb	$8, 18(%r14)
	jmp	.L5718
	.p2align 6,,7
.L11726:
	testq	%r15, %r15
	je	.L5710
	cmpb	$29, 16(%r13)
	jne	.L5710
	cmpb	$29, 16(%r15)
	jne	.L5710
	movq	8(%r13), %rdi
	movq	8(%r15), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L11727
	movzbl	53(%r15), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L5713
	movzbl	53(%r13), %r11d
	leal	0(,%rax,8), %esi
	leaq	88(%r13), %rdx
	andb	$-9, %r11b
	orb	%sil, %r11b
	movb	%r11b, 53(%r13)
	cmpq	%r15, current_function_decl(%rip)
	je	.L5714
	movq	88(%r15), %rax
.L5715:
	movq	136(%r15), %r8
	movq	72(%r15), %rdi
	movq	%rax, (%rdx)
	movq	80(%r15), %r10
	movzbl	17(%r13), %r9d
	movq	%r8, 136(%r13)
	movq	%rdi, 72(%r13)
	movq	%r10, 80(%r13)
	movzbl	17(%r15), %ebx
	movq	%r15, 96(%r13)
	andb	$127, %r9b
	shrb	$7, %bl
	movzbl	%bl, %edx
	movl	%edx, %ecx
	salb	$7, %cl
	orb	%cl, %r9b
	movb	%r9b, 17(%r13)
	movzbl	53(%r15), %ecx
.L5713:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L5716
	movzbl	53(%r13), %r11d
	salb	$4, %al
	andb	$-17, %r11b
	orb	%al, %r11b
	movb	%r11b, 53(%r13)
	movl	128(%r15), %eax
	movl	%eax, 128(%r13)
.L5716:
	movq	8(%r15), %rdx
	cmpq	$0, 24(%rdx)
	je	.L5710
	cmpq	$0, 88(%r15)
	je	.L5710
	movq	8(%r13), %rsi
	cmpq	$0, 24(%rsi)
	jne	.L5710
	movq	%rdx, 8(%r13)
	jmp	.L5710
.L5714:
	xorl	%eax, %eax
	jmp	.L5715
	.p2align 6,,7
.L11727:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L5710
	.p2align 6,,7
.L11717:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L5707
	jmp	.L11131
.L11716:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L11728
.L5682:
	cmpq	$0, 40(%r14)
	jne	.L5683
	testb	$8, 18(%r13)
	je	.L5683
	orb	$8, 18(%r14)
.L5683:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L11729
.L5685:
	movq	%r13, 40(%r14)
	movzbl	16(%r13), %edx
.L5684:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L5696
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L5686
	testb	$1, 18(%rcx)
	je	.L5686
	orb	$1, 18(%r13)
	movq	72(%r14), %rax
.L5686:
	testq	%rax, %rax
	je	.L5696
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L5691
	testb	$8, 17(%rcx)
	je	.L5691
	orb	$8, 17(%r13)
	movq	72(%r14), %rax
.L5691:
	testq	%rax, %rax
	je	.L5696
	cmpq	$0, 8(%rax)
	je	.L5696
	cmpb	$29, %dl
	je	.L11730
.L5699:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L5696:
	testb	$8, 18(%r14)
	je	.L5705
	cmpb	$32, %dl
	je	.L5705
	testb	$8, 18(%r13)
	jne	.L5705
	testb	$1, 53(%r13)
	jne	.L5705
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L5701
	cmpq	$0, 8(%rax)
	jne	.L11731
.L5701:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11241:
	xorl	%eax, %eax
	call	warning
	jmp	.L10622
.L11731:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11241
.L11730:
	movq	8(%r13), %rdi
	movq	integer_type_node(%rip), %r10
	cmpq	%r10, 8(%rdi)
	jne	.L5699
	jmp	.L5696
	.p2align 6,,7
.L11729:
	cmpq	$0, -2440(%rbp)
	je	.L5685
	movq	-2440(%rbp), %rax
	cmpb	$32, 16(%rax)
	jne	.L5684
	jmp	.L5685
.L11728:
	testb	$8, 54(%r13)
	jne	.L5682
	andb	$-9, 18(%r13)
	jmp	.L5682
	.p2align 6,,7
.L10621:
	movq	global_binding_level(%rip), %rax
	jmp	.L5662
.L11715:
	testl	%ecx, %ecx
	jg	.L11130
	testl	%ebx, %ebx
	je	.L5668
	movq	%rdx, %rsi
	movq	%r14, %rdi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11130
	.p2align 6,,7
.L5676:
	movq	8(%rdx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rdx
	jmp	.L5668
.L11714:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rdx
	je	.L5668
	testq	%rax, %rax
	je	.L10130
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rdx
	jmp	.L5666
	.p2align 6,,7
.L11713:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L5659
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r14), %rdi
	call	warning_with_decl
	jmp	.L5659
	.p2align 6,,7
.L10915:
	movq	8(%r13), %rdx
	movq	80(%rdx), %r12
	testq	%r12, %r12
	je	.L5523
	movzbl	16(%r12), %eax
	cmpb	$32, %al
	je	.L5522
.L5523:
	movq	global_binding_level(%rip), %rsi
	movq	%r13, %r12
	cmpq	%rsi, current_binding_level(%rip)
	jne	.L10614
	movq	%r13, 80(%rdx)
.L10614:
	movzbl	16(%r13), %eax
.L5526:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	56(%r12), %rbx
	testq	%rbx, %rbx
	je	.L5650
	cmpq	$0, 72(%r12)
	je	.L11732
.L5650:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L5521
	cmpq	$0, 56(%rax)
	je	.L5521
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %r15
	cmpq	global_binding_level(%rip), %rbx
	je	.L11733
.L11129:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L5656:
	movq	%r12, 8(%r15)
	jmp	.L5521
.L11733:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L5656
	jmp	.L11129
.L11732:
	cmpb	$32, 16(%r13)
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	sete	%r11b
	movq	8(%r13), %r15
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L5651
	cmpb	$1, 16(%r12)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	jmp	.L5650
.L5651:
	movq	%rbx, 72(%r13)
	jmp	.L5650
.L5522:
	movq	current_binding_level(%rip), %rsi
	movq	56(%r12), %r15
	cmpq	global_binding_level(%rip), %rsi
	jne	.L5526
	movq	32(%r15), %rcx
	cmpb	$36, (%rcx)
	jne	.L5526
	cmpb	$95, 1(%rcx)
	jne	.L5526
	movq	class_binding_level(%rip), %r10
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rax
	testq	%r10, %r10
	movq	%r10, -2448(%rbp)
	movq	%rax, -1176(%rbp)
	jne	.L5530
	testb	$-128, 66(%rsi)
	movq	%rsi, -2448(%rbp)
	je	.L5530
.L5534:
	movq	-2448(%rbp), %rdi
	movq	56(%rdi), %r8
	testb	$-128, 66(%r8)
	movq	%r8, -2448(%rbp)
	jne	.L5534
.L5530:
	movq	-2448(%rbp), %rcx
	cmpq	global_binding_level(%rip), %rcx
	je	.L11734
	movq	-2448(%rbp), %rbx
	movq	-1176(%rbp), %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	saveable_tree_cons
	movq	-2448(%rbp), %r11
	movq	%rax, 8(%r11)
.L5536:
	testq	%r15, %r15
	je	.L5537
	movq	-1176(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L5538
	movq	%r15, 80(%rcx)
.L5538:
	movq	-1176(%rbp), %rbx
	cmpq	%rbx, 8(%r15)
	je	.L5539
	cmpb	$21, 16(%rbx)
	je	.L11735
.L5540:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L5542
	cmpq	$0, 32(%rax)
	je	.L5541
.L5542:
	movq	lang_name_cplusplus(%rip), %rdx
	cmpq	%rdx, current_lang_name(%rip)
	je	.L11736
.L5543:
	xorl	%ecx, %ecx
.L5578:
	testq	%rcx, %rcx
	jne	.L5579
.L10253:
	movq	-1176(%rbp), %rdx
	movl	$32, %edi
	movq	%r15, %rsi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-1176(%rbp), %rdi
	movq	%rax, -2456(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-2456(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11737
.L11125:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L5581:
	movq	-1176(%rbp), %rcx
	movq	%rcx, 8(%r15)
.L5584:
	movq	32(%r15), %rax
	cmpb	$36, (%rax)
	je	.L11738
.L5586:
	movq	-1176(%rbp), %rdi
	movq	80(%rdi), %rdx
	testq	%rdx, %rdx
	je	.L5617
	cmpb	$32, 16(%rdx)
	je	.L11739
.L5587:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L5606
	movq	-2456(%rbp), %rcx
	movq	56(%rcx), %rdx
	testq	%rdx, %rdx
	movq	%rdx, -1192(%rbp)
	je	.L10618
	movq	56(%rdx), %rsi
	testq	%rsi, %rsi
	je	.L5608
	movq	%rdx, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L5608:
	movq	decl_obstack+24(%rip), %rdx
	movq	-2456(%rbp), %r9
	movq	-1192(%rbp), %r11
	leaq	8(%rdx), %rdi
	cmpq	decl_obstack+32(%rip), %rdi
	movq	%r9, 56(%r11)
	ja	.L11740
.L5610:
	movq	-2456(%rbp), %rsi
	movq	%rdx, %r10
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rsi, (%r10)
	cmpb	$32, 16(%rsi)
	je	.L11741
.L10618:
	movq	32(%r15), %rax
.L5617:
	cmpb	$36, (%rax)
	je	.L11742
.L5631:
	movq	current_class_type(%rip), %rdx
	movq	-2456(%rbp), %r8
	movq	-1176(%rbp), %r10
	testq	%rdx, %rdx
	movq	%r8, 80(%r10)
	jne	.L5634
	cmpq	$0, current_function_decl(%rip)
	je	.L5633
.L5634:
	movq	lang_name_cplusplus(%rip), %r11
	cmpq	%r11, current_lang_name(%rip)
	je	.L5632
.L5633:
	movq	-2456(%rbp), %rdx
	movq	%r15, 72(%rdx)
.L5539:
	movq	-2448(%rbp), %r9
	movzbl	66(%r9), %esi
	andl	$15, %esi
	cmpl	$2, %esi
	je	.L11743
.L5537:
	movq	-1176(%rbp), %rsi
	movq	80(%rsi), %rax
	cmpb	$32, 16(%rax)
	je	.L11744
	movq	-1176(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-1176(%rbp), %rdi
	movq	%rax, (%rdi)
.L11128:
	movzbl	16(%r12), %eax
	jmp	.L5526
.L11744:
	movq	%rax, (%rsi)
	jmp	.L11128
.L11743:
	movq	-1176(%rbp), %rax
	orb	$64, 18(%rax)
	movq	80(%rax), %rbx
	movq	current_class_type(%rip), %rax
	movq	%rbx, 56(%r15)
	cmpq	$0, 32(%rax)
	jne	.L5537
	movq	-2448(%rbp), %r10
	movq	144(%rax), %r15
	movq	8(%r10), %rcx
	movq	%rcx, 72(%r15)
	jmp	.L5537
.L5632:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L11745
	cmpq	$0, 32(%rdx)
	jne	.L5539
	movq	-2456(%rbp), %rsi
	movq	80(%rdx), %r9
	cmpb	$32, 16(%rsi)
	movq	72(%r9), %rbx
	movl	$136, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L5642
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2456(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1176(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L5644:
	movq	-2456(%rbp), %rdx
	movq	current_class_type(%rip), %r11
	movq	152(%rdx), %r8
	movq	%r11, 64(%rdx)
	movq	%r11, 16(%r8)
	jmp	.L5539
.L5642:
	movq	-2456(%rbp), %rdi
	movq	%r15, 72(%rdi)
	jmp	.L5644
.L11745:
	movq	-2456(%rbp), %r9
	movq	112(%rax), %rbx
	cmpb	$32, 16(%r9)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$136, %esi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L5637
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2456(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1176(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L5639:
	movq	current_function_decl(%rip), %r11
	movq	-2456(%rbp), %r8
	movq	%r11, 64(%r8)
	jmp	.L5539
.L5637:
	movq	-2456(%rbp), %rdi
	movq	%r15, 72(%rdi)
	jmp	.L5639
.L11742:
	cmpb	$95, 1(%rax)
	jne	.L5631
	movq	-2456(%rbp), %rdi
	orb	$64, 53(%rdi)
	jmp	.L5631
.L11741:
	cmpq	$0, 72(%rsi)
	jne	.L10618
	movq	8(%rsi), %rdx
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%rdx, -1200(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L5612
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	-1192(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-1192(%rbp), %r11
	movl	24(%r11), %eax
	movq	32(%r11), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2456(%rbp), %r8
	movq	%rax, 72(%r8)
	movq	-1200(%rbp), %rbx
	movq	%rbx, 8(%rax)
	jmp	.L10618
.L5612:
	movq	-1192(%rbp), %r10
	movq	-2456(%rbp), %rdi
	movq	%r10, 72(%rdi)
	jmp	.L10618
.L11740:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L5610
.L5606:
	movq	-2456(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -2456(%rbp)
	jmp	.L10618
.L11739:
	movq	global_binding_level(%rip), %r11
	cmpq	%r11, current_binding_level(%rip)
	je	.L5588
	movq	48(%r15), %r9
	testq	%r9, %r9
	movq	%r9, %rcx
	jne	.L5589
.L5588:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L5590
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L10127
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L5591
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L11746
.L5591:
	testq	%rcx, %rcx
	jne	.L10127
.L10128:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10127
.L5590:
	movq	40(%r15), %rcx
.L5589:
	testq	%rcx, %rcx
	je	.L5593
.L10127:
	cmpb	$32, 16(%rcx)
	je	.L5593
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L5593
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L5601
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11126
	movl	$1, %r10d
	testl	%r10d, %r10d
	jle	.L11747
.L11126:
	movq	%rax, %rcx
.L5593:
	movq	-1176(%rbp), %r8
	cmpq	80(%r8), %rcx
	jne	.L5587
	jmp	.L10618
.L11747:
	testl	%edx, %edx
	jg	.L11126
	movl	$1, %ebx
	testl	%ebx, %ebx
	je	.L5593
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11126
.L5601:
	movq	8(%rcx), %rsi
	cmpq	error_mark_node(%rip), %rsi
	cmove	%rsi, %rcx
	jmp	.L5593
.L11746:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%r15, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L5593
	testq	%rax, %rax
	je	.L10128
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L5591
.L11738:
	cmpb	$95, 1(%rax)
	jne	.L5586
	jmp	.L5617
.L11737:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L5581
	jmp	.L11125
	.p2align 6,,7
.L5579:
	movq	80(%rcx), %r8
	movq	%r8, -2456(%rbp)
	jmp	.L5584
.L11736:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L5545
	movq	80(%rax), %rbx
.L5545:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L5578
.L5577:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L5554
	cmpl	$32, %eax
	je	.L11748
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L5548:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L5578
	jmp	.L5577
.L11748:
	movq	8(%rbx), %rsi
	movq	-1176(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%rsi), %r10
	movq	72(%r10), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10889
	movq	64(%rbx), %rbx
	jmp	.L5548
.L10889:
	movq	32(%rax), %rcx
	jmp	.L5578
.L5554:
	movq	-1176(%rbp), %rax
	movq	80(%rax), %r8
	movq	56(%r8), %rbx
	testq	%rbx, %rbx
	je	.L5543
	movq	global_binding_level(%rip), %rdi
	cmpq	%rdi, current_binding_level(%rip)
	je	.L5557
	movq	48(%rbx), %r11
	testq	%r11, %r11
	movq	%r11, %rcx
	jne	.L5558
.L5557:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L5559
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10125
	movq	32(%rdi), %r9
	testq	%r9, %r9
	movq	%r9, -1184(%rbp)
	jne	.L5560
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L11749
.L5560:
	testq	%rcx, %rcx
	jne	.L10125
.L10126:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10125
.L5559:
	movq	40(%rbx), %rcx
.L5558:
	testq	%rcx, %rcx
	je	.L10253
.L10125:
	cmpb	$32, 16(%rcx)
	je	.L5578
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L5578
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L5570
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11124
	movl	$1, %r10d
	testl	%r10d, %r10d
	jle	.L11750
.L11124:
	movq	%rax, %rcx
	jmp	.L5578
.L11750:
	testl	%edx, %edx
	jg	.L11124
	movl	$1, %esi
	testl	%esi, %esi
	je	.L5578
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11124
.L5570:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L5578
	jmp	.L11124
.L11749:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L5578
	testq	%rax, %rax
	je	.L10126
	cmpb	$32, 16(%rax)
	cmovne	-1184(%rbp), %rcx
	jmp	.L5560
.L5541:
	movq	-1176(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r15, %rsi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -1208(%rbp)
	je	.L11751
.L11127:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L5619:
	movq	-1176(%rbp), %rbx
	movq	%rbx, 8(%r15)
	movq	-1208(%rbp), %rdx
	movq	56(%rdx), %rax
	testq	%rax, %rax
	movq	%rax, -1216(%rbp)
	je	.L5622
	movq	56(%rax), %rsi
	testq	%rsi, %rsi
	je	.L5623
	movq	class_binding_level(%rip), %rbx
	movq	%rax, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L5623:
	movq	decl_obstack+24(%rip), %rdx
	movq	-1208(%rbp), %r11
	movq	-1216(%rbp), %rax
	leaq	8(%rdx), %r8
	cmpq	decl_obstack+32(%rip), %r8
	movq	%r11, 56(%rax)
	ja	.L11752
.L5625:
	movq	-1208(%rbp), %rbx
	movq	%rdx, %rsi
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%rsi)
	cmpb	$32, 16(%rbx)
	je	.L11753
.L5622:
	movq	-1208(%rbp), %rbx
	movq	%rbx, -2456(%rbp)
	jmp	.L10618
.L11753:
	cmpq	$0, 72(%rbx)
	jne	.L5622
	movq	-1208(%rbp), %r9
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%r9), %rcx
	movq	%rcx, -1224(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L5627
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	-1216(%rbp), %rsi
	cmpb	$1, 16(%rsi)
	movl	$138, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	-1216(%rbp), %r8
	movq	32(%rbx), %rdx
	movq	-1216(%rbp), %r11
	movl	$.LC35, %esi
	movq	32(%r8), %rcx
	movl	24(%r11), %eax
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1208(%rbp), %r10
	movq	%rax, 72(%r10)
	movq	-1224(%rbp), %rdi
	movq	%rdi, 8(%rax)
	jmp	.L5622
.L5627:
	movq	-1216(%rbp), %rcx
	movq	-1208(%rbp), %r9
	movq	%rcx, 72(%r9)
	jmp	.L5622
.L11752:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L5625
.L11751:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L5619
	jmp	.L11127
	.p2align 6,,7
.L11735:
	cmpq	$0, class_binding_level(%rip)
	je	.L5540
	movq	144(%rbx), %r9
	testb	$16, 3(%r9)
	jne	.L5539
	jmp	.L5540
	.p2align 6,,7
.L11734:
	movq	8(%rcx), %rdx
	movq	-1176(%rbp), %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	perm_tree_cons
	movq	-2448(%rbp), %rcx
	movq	%rax, 8(%rcx)
	jmp	.L5536
	.p2align 6,,7
.L5507:
	movq	-2440(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10613
	movl	flag_traditional(%rip), %r15d
	testl	%r15d, %r15d
	jne	.L5512
	testb	$8, 18(%r14)
	je	.L5512
	testb	$8, 18(%r13)
	jne	.L5512
	testb	$9, 53(%r13)
	jne	.L5512
	cmpq	%r13, current_function_decl(%rip)
	je	.L11754
.L5516:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L5517
	cmpq	$0, 8(%rax)
	jne	.L11755
.L5517:
	movq	-2440(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11123:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-2440(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L5512
.L11755:
	movq	-2440(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11123
.L11754:
	movq	-2440(%rbp), %r13
	movq	%r13, current_function_decl(%rip)
	jmp	.L5516
	.p2align 6,,7
.L11305:
	cmpq	$0, 64(%rcx)
	jne	.L5505
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L5505
.L11304:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -2440(%rbp)
	call	error_with_decl
	jmp	.L5503
.L5496:
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.L5498
	.p2align 4,,7
.L5502:
	cmpq	%r14, 56(%rdi)
	je	.L5498
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L5502
.L5498:
	movq	%rdi, -2440(%rbp)
	jmp	.L5495
.L11303:
	movq	40(%r14), %rbx
	movq	%rbx, -2440(%rbp)
	jmp	.L5495
.L11302:
	movq	56(%r13), %r14
	jmp	.L5492
.L11301:
	testb	$32, 53(%r13)
	jne	.L5490
	jmp	.L5491
.L10609:
	movzbl	16(%r13), %edx
	jmp	.L5490
.L10598:
	movzbl	16(%r13), %edx
.L5237:
	cmpb	$32, %dl
	je	.L10914
.L5245:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L5383
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L5383
	testb	$1, 53(%rax)
	jne	.L5384
	testb	$8, 18(%rax)
	je	.L5383
.L5384:
	andb	$8, %dl
	je	.L11756
	.p2align 4,,7
.L5383:
	movl	flag_traditional(%rip), %r12d
	testl	%r12d, %r12d
	je	.L10606
	testb	$1, 53(%r13)
	je	.L10606
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rdi
	cmpq	%rdi, current_binding_level(%rip)
	je	.L5387
	movq	48(%r14), %r10
	testq	%r10, %r10
	movq	%r10, %rdx
	jne	.L5388
.L5387:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L5389
	movq	56(%r14), %rdx
	testq	%rdx, %rdx
	jne	.L10123
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L5390
	movq	144(%rdi), %r8
	testb	$1, 3(%r8)
	jne	.L11757
.L5390:
	testq	%rdx, %rdx
	jne	.L10123
.L10124:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rdx
	jne	.L10123
.L5389:
	movq	40(%r14), %rdx
.L5388:
	testq	%rdx, %rdx
	je	.L10252
.L10123:
	cmpb	$32, 16(%rdx)
	je	.L5392
	movl	looking_for_typename(%rip), %ecx
	testl	%ecx, %ecx
	js	.L5392
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L5400
	movq	80(%rax), %rax
	cmpq	%rax, %rdx
	je	.L11120
	testl	%ebx, %ebx
	jle	.L11758
.L11120:
	movq	%rax, %rdx
.L5392:
	testq	%rdx, %rdx
	jne	.L10606
.L10252:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -2432(%rbp)
.L5386:
	cmpq	%rax, -2432(%rbp)
	je	.L11759
	movq	current_binding_level(%rip), %rbx
	movq	48(%r14), %r12
	movq	40(%r14), %r15
	cmpq	%rax, %rbx
	je	.L11760
.L11121:
	movq	16(%rbx), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%rbx)
.L5431:
	testq	%r12, %r12
	movq	%r13, 48(%r14)
	je	.L11761
.L5442:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L5444
	testq	%r12, %r12
	je	.L5445
	testb	$1, 53(%r13)
	jne	.L5445
	cmpb	$34, 16(%r12)
	je	.L11762
.L5445:
	movl	warn_shadow(%rip), %r10d
	testl	%r10d, %r10d
	je	.L5444
	testb	$1, 53(%r13)
	jne	.L5444
	movl	32(%r13), %r8d
	testl	%r8d, %r8d
	je	.L5444
	testq	%rax, %rax
	jne	.L5444
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L5450
	cmpb	$34, 16(%r12)
	je	.L11763
.L5450:
	cmpq	$0, 56(%r14)
	je	.L5452
	movl	$.LC41, %edi
.L5451:
	testq	%rdi, %rdi
	jne	.L11122
	.p2align 4,,7
.L5444:
	testq	%r12, %r12
	je	.L10607
	movq	-2432(%rbp), %r11
	movq	%r12, %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	16(%r11), %rdx
	call	tree_cons
	movq	-2432(%rbp), %r12
	movq	%rax, 16(%r12)
.L10607:
	movzbl	16(%r13), %edx
.L5429:
	leal	-128(%rdx), %ebx
	cmpb	$1, %bl
	jbe	.L5217
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L5217
	cmpb	$18, 16(%rcx)
	je	.L11764
.L5461:
	testb	$64, 46(%rcx)
	je	.L5217
.L5460:
	movq	-2432(%rbp), %rdx
	movzwl	64(%rdx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rdx)
	je	.L11765
.L10608:
	movzbl	16(%r13), %edx
	.p2align 4,,7
.L5217:
	cmpb	$32, %dl
	je	.L11766
.L5463:
	movq	-2432(%rbp), %rdi
	cmpq	global_binding_level(%rip), %rdi
	movq	(%rdi), %rcx
	movq	%rcx, (%r13)
	movq	%r13, (%rdi)
	jne	.L5236
	testb	$4, 17(%r13)
	jne	.L5236
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L5236
.L11766:
	testq	%r14, %r14
	je	.L5463
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L5464
	cmpq	class_binding_level(%rip), %rax
	je	.L5465
	movq	48(%r14), %rax
	testq	%rax, %rax
	je	.L5469
	cmpb	$32, 16(%rax)
	je	.L5467
.L5469:
	cmpq	$0, current_class_type(%rip)
	je	.L5464
	movq	56(%r14), %rax
	testq	%rax, %rax
	je	.L5464
	cmpb	$32, 16(%rax)
	je	.L5467
.L5464:
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L5468
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L5467
	cmpb	$-127, %dl
	je	.L11767
.L5468:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L5463
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L11768
.L5475:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L5479
	cmpq	class_binding_level(%rip), %rax
	je	.L5480
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L5484
	cmpb	$32, 16(%rax)
	je	.L5482
.L5484:
	cmpq	$0, current_class_type(%rip)
	je	.L5479
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L5479
	cmpb	$32, 16(%rax)
	je	.L5482
.L5479:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L5463
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L5482
	cmpb	$-127, %dl
	jne	.L5463
	movq	$0, 8(%rbx)
	jmp	.L5463
.L5482:
	movq	8(%rax), %r14
	movq	%r14, 8(%rbx)
	jmp	.L5463
.L5480:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L5484
.L11768:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %r12
	sete	%r8b
	movq	8(%r13), %r15
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r14)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%r14), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L5475
.L11767:
	movq	$0, 8(%r14)
	jmp	.L5468
.L5467:
	movq	8(%rax), %rsi
	movq	%rsi, 8(%r14)
	jmp	.L5468
.L5465:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L5469
.L11765:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10608
.L11764:
	movq	8(%rcx), %r9
	testb	$64, 46(%r9)
	jne	.L5460
	jmp	.L5461
.L11122:
	movq	32(%r14), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L5444
.L5452:
	testq	%r12, %r12
	je	.L5454
	movl	$.LC42, %edi
	jmp	.L5451
.L5454:
	testq	%r15, %r15
	movl	$.LC43, %ecx
	cmovne	%rcx, %rdi
	jmp	.L5451
.L11763:
	movl	$.LC40, %edi
	jmp	.L5451
.L11762:
	cmpb	$34, 16(%r13)
	je	.L5445
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r15
	movq	56(%r15), %rax
	je	.L5446
	movq	56(%rax), %rax
.L5446:
	movzbl	66(%rax), %edi
	andl	$15, %edi
	decl	%edi
	jne	.L5444
	movl	$.LC40, %edi
	jmp	.L11122
	.p2align 6,,7
.L11761:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L11769
.L5434:
	testq	%r12, %r12
	jne	.L5442
	testq	%r15, %r15
	jne	.L5442
	testb	$1, 53(%r13)
	je	.L5442
	testb	$8, 18(%r13)
	je	.L5442
	orb	$8, 18(%r14)
	jmp	.L5442
	.p2align 6,,7
.L11769:
	testq	%r15, %r15
	je	.L5434
	cmpb	$29, 16(%r13)
	jne	.L5434
	cmpb	$29, 16(%r15)
	jne	.L5434
	movq	8(%r13), %rdi
	movq	8(%r15), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L11770
	movzbl	53(%r15), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L5437
	movzbl	53(%r13), %r9d
	leal	0(,%rax,8), %esi
	leaq	88(%r13), %rdx
	andb	$-9, %r9b
	orb	%sil, %r9b
	movb	%r9b, 53(%r13)
	cmpq	%r15, current_function_decl(%rip)
	je	.L5438
	movq	88(%r15), %rax
.L5439:
	movq	%rax, (%rdx)
	movq	72(%r15), %rbx
	movq	80(%r15), %r11
	movq	136(%r15), %rdx
	movzbl	17(%r13), %edi
	movq	%rbx, 72(%r13)
	movq	%r11, 80(%r13)
	movq	%rdx, 136(%r13)
	movzbl	17(%r15), %ecx
	movq	%r15, 96(%r13)
	andb	$127, %dil
	shrb	$7, %cl
	movzbl	%cl, %r8d
	movl	%r8d, %r10d
	salb	$7, %r10b
	orb	%r10b, %dil
	movb	%dil, 17(%r13)
	movzbl	53(%r15), %ecx
.L5437:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L5440
	movzbl	53(%r13), %r9d
	salb	$4, %al
	andb	$-17, %r9b
	orb	%al, %r9b
	movb	%r9b, 53(%r13)
	movl	128(%r15), %eax
	movl	%eax, 128(%r13)
.L5440:
	movq	8(%r15), %rdx
	cmpq	$0, 24(%rdx)
	je	.L5434
	cmpq	$0, 88(%r15)
	je	.L5434
	movq	8(%r13), %rsi
	cmpq	$0, 24(%rsi)
	jne	.L5434
	movq	%rdx, 8(%r13)
	jmp	.L5434
.L5438:
	xorl	%eax, %eax
	jmp	.L5439
	.p2align 6,,7
.L11770:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L5434
	.p2align 6,,7
.L11760:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L5431
	jmp	.L11121
.L11759:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L11771
.L5406:
	cmpq	$0, 40(%r14)
	jne	.L5407
	testb	$8, 18(%r13)
	je	.L5407
	orb	$8, 18(%r14)
.L5407:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L11772
.L5409:
	movq	%r13, 40(%r14)
	movzbl	16(%r13), %edx
.L5408:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L5420
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L5410
	testb	$1, 18(%rcx)
	je	.L5410
	orb	$1, 18(%r13)
	movq	72(%r14), %rax
.L5410:
	testq	%rax, %rax
	je	.L5420
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L5415
	testb	$8, 17(%rcx)
	je	.L5415
	orb	$8, 17(%r13)
	movq	72(%r14), %rax
.L5415:
	testq	%rax, %rax
	je	.L5420
	cmpq	$0, 8(%rax)
	je	.L5420
	cmpb	$29, %dl
	je	.L11773
.L5423:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L5420:
	testb	$8, 18(%r14)
	je	.L5429
	cmpb	$32, %dl
	je	.L5429
	testb	$8, 18(%r13)
	jne	.L5429
	testb	$1, 53(%r13)
	jne	.L5429
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L5425
	cmpq	$0, 8(%rax)
	jne	.L11774
.L5425:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11240:
	xorl	%eax, %eax
	call	warning
	jmp	.L10607
.L11774:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11240
.L11773:
	movq	8(%r13), %rbx
	movq	integer_type_node(%rip), %r11
	cmpq	%r11, 8(%rbx)
	jne	.L5423
	jmp	.L5420
	.p2align 6,,7
.L11772:
	cmpq	$0, -2408(%rbp)
	je	.L5409
	movq	-2408(%rbp), %rcx
	cmpb	$32, 16(%rcx)
	jne	.L5408
	jmp	.L5409
.L11771:
	testb	$8, 54(%r13)
	jne	.L5406
	andb	$-9, 18(%r13)
	jmp	.L5406
	.p2align 6,,7
.L10606:
	movq	global_binding_level(%rip), %rax
	jmp	.L5386
.L11758:
	testl	%ecx, %ecx
	jg	.L11120
	testl	%ebx, %ebx
	je	.L5392
	movq	%rdx, %rsi
	movq	%r14, %rdi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11120
	.p2align 6,,7
.L5400:
	movq	8(%rdx), %r15
	cmpq	error_mark_node(%rip), %r15
	cmove	%r15, %rdx
	jmp	.L5392
.L11757:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rdx
	je	.L5392
	testq	%rax, %rax
	je	.L10124
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rdx
	jmp	.L5390
	.p2align 6,,7
.L11756:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L5383
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r14), %rdi
	call	warning_with_decl
	jmp	.L5383
	.p2align 6,,7
.L10914:
	movq	8(%r13), %rdx
	movq	80(%rdx), %r12
	testq	%r12, %r12
	je	.L5247
	movzbl	16(%r12), %eax
	cmpb	$32, %al
	je	.L5246
.L5247:
	movq	global_binding_level(%rip), %r15
	movq	%r13, %r12
	cmpq	%r15, current_binding_level(%rip)
	jne	.L10599
	movq	%r13, 80(%rdx)
.L10599:
	movzbl	16(%r13), %eax
.L5250:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	56(%r12), %rbx
	testq	%rbx, %rbx
	je	.L5374
	cmpq	$0, 72(%r12)
	je	.L11775
.L5374:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L5245
	cmpq	$0, 56(%rax)
	je	.L5245
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %r15
	cmpq	global_binding_level(%rip), %rbx
	je	.L11776
.L11119:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L5380:
	movq	%r12, 8(%r15)
	jmp	.L5245
.L11776:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L5380
	jmp	.L11119
.L11775:
	cmpb	$32, 16(%r13)
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	sete	%al
	movq	8(%r13), %r15
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L5375
	cmpb	$1, 16(%r12)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	jmp	.L5374
.L5375:
	movq	%rbx, 72(%r13)
	jmp	.L5374
.L5246:
	movq	current_binding_level(%rip), %rsi
	movq	56(%r12), %r15
	cmpq	global_binding_level(%rip), %rsi
	jne	.L5250
	movq	32(%r15), %rcx
	cmpb	$36, (%rcx)
	jne	.L5250
	cmpb	$95, 1(%rcx)
	jne	.L5250
	movq	class_binding_level(%rip), %r11
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rax
	testq	%r11, %r11
	movq	%r11, -2416(%rbp)
	movq	%rax, -1120(%rbp)
	jne	.L5254
	testb	$-128, 66(%rsi)
	movq	%rsi, -2416(%rbp)
	je	.L5254
.L5258:
	movq	-2416(%rbp), %rcx
	movq	56(%rcx), %rsi
	testb	$-128, 66(%rsi)
	movq	%rsi, -2416(%rbp)
	jne	.L5258
.L5254:
	movq	-2416(%rbp), %rcx
	cmpq	global_binding_level(%rip), %rcx
	je	.L11777
	movq	-2416(%rbp), %r10
	movq	-1120(%rbp), %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	8(%r10), %rdx
	call	saveable_tree_cons
	movq	-2416(%rbp), %rbx
	movq	%rax, 8(%rbx)
.L5260:
	testq	%r15, %r15
	je	.L5261
	movq	-1120(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L5262
	movq	%r15, 80(%rcx)
.L5262:
	movq	-1120(%rbp), %rbx
	cmpq	%rbx, 8(%r15)
	je	.L5263
	cmpb	$21, 16(%rbx)
	je	.L11778
.L5264:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L5266
	cmpq	$0, 32(%rax)
	je	.L5265
.L5266:
	movq	lang_name_cplusplus(%rip), %rdx
	cmpq	%rdx, current_lang_name(%rip)
	je	.L11779
.L5267:
	xorl	%ecx, %ecx
.L5302:
	testq	%rcx, %rcx
	jne	.L5303
.L10251:
	movq	-1120(%rbp), %rdx
	movl	$32, %edi
	movq	%r15, %rsi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-1120(%rbp), %rdi
	movq	%rax, -2424(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-2424(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11780
.L11115:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L5305:
	movq	-1120(%rbp), %rcx
	movq	%rcx, 8(%r15)
.L5308:
	movq	32(%r15), %rax
	cmpb	$36, (%rax)
	je	.L11781
.L5310:
	movq	-1120(%rbp), %r9
	movq	80(%r9), %rdx
	testq	%rdx, %rdx
	je	.L5341
	cmpb	$32, 16(%rdx)
	je	.L11782
.L5311:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L5330
	movq	-2424(%rbp), %rcx
	movq	56(%rcx), %rdx
	testq	%rdx, %rdx
	movq	%rdx, -1136(%rbp)
	je	.L10603
	movq	56(%rdx), %rsi
	testq	%rsi, %rsi
	je	.L5332
	movq	%rdx, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L5332:
	movq	-2424(%rbp), %rdx
	movq	-1136(%rbp), %r10
	movq	%rdx, 56(%r10)
	movq	decl_obstack+24(%rip), %rdx
	leaq	8(%rdx), %r9
	cmpq	decl_obstack+32(%rip), %r9
	ja	.L11783
.L5334:
	movq	-2424(%rbp), %rsi
	movq	%rdx, %r8
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rsi, (%r8)
	cmpb	$32, 16(%rsi)
	je	.L11784
.L10603:
	movq	32(%r15), %rax
.L5341:
	cmpb	$36, (%rax)
	je	.L11785
.L5355:
	movq	-2424(%rbp), %rdx
	movq	-1120(%rbp), %r11
	movq	%rdx, 80(%r11)
	movq	current_class_type(%rip), %rdx
	testq	%rdx, %rdx
	jne	.L5358
	cmpq	$0, current_function_decl(%rip)
	je	.L5357
.L5358:
	movq	lang_name_cplusplus(%rip), %rdi
	cmpq	%rdi, current_lang_name(%rip)
	je	.L5356
.L5357:
	movq	-2424(%rbp), %rax
	movq	%r15, 72(%rax)
.L5263:
	movq	-2416(%rbp), %rsi
	movzbl	66(%rsi), %r9d
	andl	$15, %r9d
	cmpl	$2, %r9d
	je	.L11786
.L5261:
	movq	-1120(%rbp), %rsi
	movq	80(%rsi), %rax
	cmpb	$32, 16(%rax)
	je	.L11787
	movq	-1120(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-1120(%rbp), %rbx
	movq	%rax, (%rbx)
.L11118:
	movzbl	16(%r12), %eax
	jmp	.L5250
.L11787:
	movq	%rax, (%rsi)
	jmp	.L11118
.L11786:
	movq	-1120(%rbp), %r8
	orb	$64, 18(%r8)
	movq	80(%r8), %r10
	movq	current_class_type(%rip), %rax
	movq	%r10, 56(%r15)
	cmpq	$0, 32(%rax)
	jne	.L5261
	movq	-2416(%rbp), %r11
	movq	144(%rax), %r15
	movq	8(%r11), %rcx
	movq	%rcx, 72(%r15)
	jmp	.L5261
.L5356:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L11788
	cmpq	$0, 32(%rdx)
	jne	.L5263
	movq	-2424(%rbp), %r9
	movq	80(%rdx), %rsi
	cmpb	$32, 16(%r9)
	movq	72(%rsi), %rbx
	movl	$136, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L5366
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2424(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1120(%rbp), %r10
	movq	%r10, 8(%rax)
.L5368:
	movq	-2424(%rbp), %rax
	movq	current_class_type(%rip), %rdi
	movq	152(%rax), %rbx
	movq	%rdi, 64(%rax)
	movq	%rdi, 16(%rbx)
	jmp	.L5263
.L5366:
	movq	-2424(%rbp), %rdx
	movq	%r15, 72(%rdx)
	jmp	.L5368
.L11788:
	movq	-2424(%rbp), %rsi
	movq	112(%rax), %rbx
	cmpb	$32, 16(%rsi)
	movl	$136, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L5361
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2424(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1120(%rbp), %r10
	movq	%r10, 8(%rax)
.L5363:
	movq	current_function_decl(%rip), %rdi
	movq	-2424(%rbp), %rbx
	movq	%rdi, 64(%rbx)
	jmp	.L5263
.L5361:
	movq	-2424(%rbp), %rdx
	movq	%r15, 72(%rdx)
	jmp	.L5363
.L11785:
	cmpb	$95, 1(%rax)
	jne	.L5355
	movq	-2424(%rbp), %r8
	orb	$64, 53(%r8)
	jmp	.L5355
.L11784:
	cmpq	$0, 72(%rsi)
	jne	.L10603
	movq	8(%rsi), %rdi
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$136, %esi
	movq	%rdi, -1144(%rbp)
	movl	$1, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L5336
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movq	-1136(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-1136(%rbp), %r9
	movl	24(%r9), %eax
	movq	32(%r9), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2424(%rbp), %rbx
	movq	%rax, 72(%rbx)
	movq	-1144(%rbp), %r11
	movq	%r11, 8(%rax)
	jmp	.L10603
.L5336:
	movq	-1136(%rbp), %r8
	movq	-2424(%rbp), %rdx
	movq	%r8, 72(%rdx)
	jmp	.L10603
.L11783:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L5334
.L5330:
	movq	-2424(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -2424(%rbp)
	jmp	.L10603
.L11782:
	movq	global_binding_level(%rip), %r10
	cmpq	%r10, current_binding_level(%rip)
	je	.L5312
	movq	48(%r15), %rdx
	testq	%rdx, %rdx
	movq	%rdx, %rcx
	jne	.L5313
.L5312:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L5314
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L10121
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L5315
	movq	144(%rdi), %r8
	testb	$1, 3(%r8)
	jne	.L11789
.L5315:
	testq	%rcx, %rcx
	jne	.L10121
.L10122:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10121
.L5314:
	movq	40(%r15), %rcx
.L5313:
	testq	%rcx, %rcx
	je	.L5317
.L10121:
	cmpb	$32, 16(%rcx)
	je	.L5317
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L5317
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L5325
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11116
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L11790
.L11116:
	movq	%rax, %rcx
.L5317:
	movq	-1120(%rbp), %rsi
	cmpq	80(%rsi), %rcx
	jne	.L5311
	jmp	.L10603
.L11790:
	testl	%edx, %edx
	jg	.L11116
	movl	$1, %r11d
	testl	%r11d, %r11d
	je	.L5317
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11116
.L5325:
	movq	8(%rcx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rcx
	jmp	.L5317
.L11789:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%r15, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L5317
	testq	%rax, %rax
	je	.L10122
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L5315
.L11781:
	cmpb	$95, 1(%rax)
	jne	.L5310
	jmp	.L5341
.L11780:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L5305
	jmp	.L11115
	.p2align 6,,7
.L5303:
	movq	80(%rcx), %rsi
	movq	%rsi, -2424(%rbp)
	jmp	.L5308
.L11779:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L5269
	movq	80(%rax), %rbx
.L5269:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L5302
.L5301:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L5278
	cmpl	$32, %eax
	je	.L11791
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L5272:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L5302
	jmp	.L5301
.L11791:
	movq	8(%rbx), %r11
	movq	-1120(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%r11), %r8
	movq	72(%r8), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10888
	movq	64(%rbx), %rbx
	jmp	.L5272
.L10888:
	movq	32(%rax), %rcx
	jmp	.L5302
.L5278:
	movq	-1120(%rbp), %rax
	movq	80(%rax), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L5267
	movq	global_binding_level(%rip), %r9
	cmpq	%r9, current_binding_level(%rip)
	je	.L5281
	movq	48(%rbx), %r10
	testq	%r10, %r10
	movq	%r10, %rcx
	jne	.L5282
.L5281:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L5283
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10119
	movq	32(%rdi), %rdx
	testq	%rdx, %rdx
	movq	%rdx, -1128(%rbp)
	jne	.L5284
	movq	144(%rdi), %r8
	testb	$1, 3(%r8)
	jne	.L11792
.L5284:
	testq	%rcx, %rcx
	jne	.L10119
.L10120:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10119
.L5283:
	movq	40(%rbx), %rcx
.L5282:
	testq	%rcx, %rcx
	je	.L10251
.L10119:
	cmpb	$32, 16(%rcx)
	je	.L5302
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L5302
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L5294
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11114
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L11793
.L11114:
	movq	%rax, %rcx
	jmp	.L5302
.L11793:
	testl	%edx, %edx
	jg	.L11114
	movl	$1, %r11d
	testl	%r11d, %r11d
	je	.L5302
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11114
.L5294:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L5302
	jmp	.L11114
.L11792:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L5302
	testq	%rax, %rax
	je	.L10120
	cmpb	$32, 16(%rax)
	cmovne	-1128(%rbp), %rcx
	jmp	.L5284
.L5265:
	movq	-1120(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r15, %rsi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -1152(%rbp)
	je	.L11794
.L11117:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L5343:
	movq	-1120(%rbp), %r11
	movq	%r11, 8(%r15)
	movq	-1152(%rbp), %rdi
	movq	56(%rdi), %rax
	testq	%rax, %rax
	movq	%rax, -1160(%rbp)
	je	.L5346
	movq	56(%rax), %rsi
	testq	%rsi, %rsi
	je	.L5347
	movq	class_binding_level(%rip), %rbx
	movq	%rax, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L5347:
	movq	decl_obstack+24(%rip), %rdx
	movq	-1152(%rbp), %r9
	movq	-1160(%rbp), %rax
	leaq	8(%rdx), %rbx
	cmpq	decl_obstack+32(%rip), %rbx
	movq	%r9, 56(%rax)
	ja	.L11795
.L5349:
	movq	-1152(%rbp), %rbx
	movq	%rdx, %rsi
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%rsi)
	cmpb	$32, 16(%rbx)
	je	.L11796
.L5346:
	movq	-1152(%rbp), %rbx
	movq	%rbx, -2424(%rbp)
	jmp	.L10603
.L11796:
	cmpq	$0, 72(%rbx)
	jne	.L5346
	movq	-1152(%rbp), %r10
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%r10), %rcx
	movq	%rcx, -1168(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L5351
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-1160(%rbp), %r9
	cmpb	$1, 16(%r9)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	-1160(%rbp), %r11
	movq	32(%rbx), %rdx
	movq	-1160(%rbp), %rdi
	movl	$.LC35, %esi
	movq	32(%r11), %rcx
	movl	24(%rdi), %eax
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1152(%rbp), %rdx
	movq	%rax, 72(%rdx)
	movq	-1168(%rbp), %r8
	movq	%r8, 8(%rax)
	jmp	.L5346
.L5351:
	movq	-1160(%rbp), %rcx
	movq	-1152(%rbp), %r10
	movq	%rcx, 72(%r10)
	jmp	.L5346
.L11795:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L5349
.L11794:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L5343
	jmp	.L11117
	.p2align 6,,7
.L11778:
	cmpq	$0, class_binding_level(%rip)
	je	.L5264
	movq	144(%rbx), %rdi
	testb	$16, 3(%rdi)
	jne	.L5263
	jmp	.L5264
	.p2align 6,,7
.L11777:
	movq	-1120(%rbp), %rsi
	movq	8(%rcx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	perm_tree_cons
	movq	-2416(%rbp), %r9
	movq	%rax, 8(%r9)
	jmp	.L5260
	.p2align 6,,7
.L5231:
	movq	-2408(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10598
	movl	flag_traditional(%rip), %r8d
	testl	%r8d, %r8d
	jne	.L5236
	testb	$8, 18(%r14)
	je	.L5236
	testb	$8, 18(%r13)
	jne	.L5236
	testb	$9, 53(%r13)
	jne	.L5236
	cmpq	%r13, current_function_decl(%rip)
	je	.L11797
.L5240:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L5241
	cmpq	$0, 8(%rax)
	jne	.L11798
.L5241:
	movq	-2408(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11113:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-2408(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L5236
.L11798:
	movq	-2408(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11113
.L11797:
	movq	-2408(%rbp), %r13
	movq	%r13, current_function_decl(%rip)
	jmp	.L5240
	.p2align 6,,7
.L11300:
	cmpq	$0, 64(%rcx)
	jne	.L5229
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L5229
.L11299:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -2408(%rbp)
	call	error_with_decl
	jmp	.L5227
.L5220:
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.L5222
	.p2align 4,,7
.L5226:
	cmpq	%r14, 56(%rdi)
	je	.L5222
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L5226
.L5222:
	movq	%rdi, -2408(%rbp)
	jmp	.L5219
.L11298:
	movq	40(%r14), %rdi
	movq	%rdi, -2408(%rbp)
	jmp	.L5219
.L11297:
	movq	56(%r13), %r14
	jmp	.L5216
.L11296:
	testb	$32, 53(%r13)
	jne	.L5214
	jmp	.L5215
.L10594:
	movzbl	16(%r13), %edx
	jmp	.L5214
.L10583:
	movzbl	16(%r13), %edx
.L4961:
	cmpb	$32, %dl
	je	.L10913
.L4969:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L5107
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L5107
	testb	$1, 53(%rax)
	jne	.L5108
	testb	$8, 18(%rax)
	je	.L5107
.L5108:
	andb	$8, %dl
	je	.L11799
	.p2align 4,,7
.L5107:
	movl	flag_traditional(%rip), %esi
	testl	%esi, %esi
	je	.L10591
	testb	$1, 53(%r13)
	je	.L10591
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %r12
	cmpq	%r12, current_binding_level(%rip)
	je	.L5111
	movq	48(%r14), %r11
	testq	%r11, %r11
	movq	%r11, %rdx
	jne	.L5112
.L5111:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L5113
	movq	56(%r14), %rdx
	testq	%rdx, %rdx
	jne	.L10117
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L5114
	movq	144(%rdi), %r15
	testb	$1, 3(%r15)
	jne	.L11800
.L5114:
	testq	%rdx, %rdx
	jne	.L10117
.L10118:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rdx
	jne	.L10117
.L5113:
	movq	40(%r14), %rdx
.L5112:
	testq	%rdx, %rdx
	je	.L10250
.L10117:
	cmpb	$32, 16(%rdx)
	je	.L5116
	movl	looking_for_typename(%rip), %ecx
	testl	%ecx, %ecx
	js	.L5116
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L5124
	movq	80(%rax), %rax
	cmpq	%rax, %rdx
	je	.L11110
	testl	%ebx, %ebx
	jle	.L11801
.L11110:
	movq	%rax, %rdx
.L5116:
	testq	%rdx, %rdx
	jne	.L10591
.L10250:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -2400(%rbp)
.L5110:
	cmpq	%rax, -2400(%rbp)
	je	.L11802
	movq	current_binding_level(%rip), %rbx
	movq	48(%r14), %r12
	movq	40(%r14), %r15
	cmpq	%rax, %rbx
	je	.L11803
.L11111:
	movq	16(%rbx), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%rbx)
.L5155:
	testq	%r12, %r12
	movq	%r13, 48(%r14)
	je	.L11804
.L5166:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L5168
	testq	%r12, %r12
	je	.L5169
	testb	$1, 53(%r13)
	jne	.L5169
	cmpb	$34, 16(%r12)
	je	.L11805
.L5169:
	movl	warn_shadow(%rip), %r11d
	testl	%r11d, %r11d
	je	.L5168
	testb	$1, 53(%r13)
	jne	.L5168
	movl	32(%r13), %ecx
	testl	%ecx, %ecx
	je	.L5168
	testq	%rax, %rax
	jne	.L5168
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L5174
	cmpb	$34, 16(%r12)
	je	.L11806
.L5174:
	cmpq	$0, 56(%r14)
	je	.L5176
	movl	$.LC41, %edi
.L5175:
	testq	%rdi, %rdi
	jne	.L11112
	.p2align 4,,7
.L5168:
	testq	%r12, %r12
	je	.L10592
	movq	-2400(%rbp), %rbx
	movq	%r12, %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	16(%rbx), %rdx
	call	tree_cons
	movq	-2400(%rbp), %r12
	movq	%rax, 16(%r12)
.L10592:
	movzbl	16(%r13), %edx
.L5153:
	leal	-128(%rdx), %edi
	cmpb	$1, %dil
	jbe	.L4941
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L4941
	cmpb	$18, 16(%rcx)
	je	.L11807
.L5185:
	testb	$64, 46(%rcx)
	je	.L4941
.L5184:
	movq	-2400(%rbp), %rdx
	movzwl	64(%rdx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rdx)
	je	.L11808
.L10593:
	movzbl	16(%r13), %edx
	.p2align 4,,7
.L4941:
	cmpb	$32, %dl
	je	.L11809
.L5187:
	movq	-2400(%rbp), %rcx
	cmpq	global_binding_level(%rip), %rcx
	movq	(%rcx), %r9
	movq	%r9, (%r13)
	movq	%r13, (%rcx)
	jne	.L4960
	testb	$4, 17(%r13)
	jne	.L4960
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L4960
.L11809:
	testq	%r14, %r14
	je	.L5187
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L5188
	cmpq	class_binding_level(%rip), %rax
	je	.L5189
	movq	48(%r14), %rax
	testq	%rax, %rax
	je	.L5193
	cmpb	$32, 16(%rax)
	je	.L5191
.L5193:
	cmpq	$0, current_class_type(%rip)
	je	.L5188
	movq	56(%r14), %rax
	testq	%rax, %rax
	je	.L5188
	cmpb	$32, 16(%rax)
	je	.L5191
.L5188:
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L5192
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L5191
	cmpb	$-127, %dl
	je	.L11810
.L5192:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L5187
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L11811
.L5199:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L5203
	cmpq	class_binding_level(%rip), %rax
	je	.L5204
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L5208
	cmpb	$32, 16(%rax)
	je	.L5206
.L5208:
	cmpq	$0, current_class_type(%rip)
	je	.L5203
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L5203
	cmpb	$32, 16(%rax)
	je	.L5206
.L5203:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L5187
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L5206
	cmpb	$-127, %dl
	jne	.L5187
	movq	$0, 8(%rbx)
	jmp	.L5187
.L5206:
	movq	8(%rax), %r14
	movq	%r14, 8(%rbx)
	jmp	.L5187
.L5204:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L5208
.L11811:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %r12
	sete	%r11b
	movq	8(%r13), %r15
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	cmpb	$1, 16(%r14)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%r14), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L5199
.L11810:
	movq	$0, 8(%r14)
	jmp	.L5192
.L5191:
	movq	8(%rax), %r8
	movq	%r8, 8(%r14)
	jmp	.L5192
.L5189:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L5193
.L11808:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10593
.L11807:
	movq	8(%rcx), %r10
	testb	$64, 46(%r10)
	jne	.L5184
	jmp	.L5185
.L11112:
	movq	32(%r14), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L5168
.L5176:
	testq	%r12, %r12
	je	.L5178
	movl	$.LC42, %edi
	jmp	.L5175
.L5178:
	testq	%r15, %r15
	movl	$.LC43, %r9d
	cmovne	%r9, %rdi
	jmp	.L5175
.L11806:
	movl	$.LC40, %edi
	jmp	.L5175
.L11805:
	cmpb	$34, 16(%r13)
	je	.L5169
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r15
	movq	56(%r15), %rax
	je	.L5170
	movq	56(%rax), %rax
.L5170:
	movzbl	66(%rax), %esi
	andl	$15, %esi
	decl	%esi
	jne	.L5168
	movl	$.LC40, %edi
	jmp	.L11112
	.p2align 6,,7
.L11804:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L11812
.L5158:
	testq	%r12, %r12
	jne	.L5166
	testq	%r15, %r15
	jne	.L5166
	testb	$1, 53(%r13)
	je	.L5166
	testb	$8, 18(%r13)
	je	.L5166
	orb	$8, 18(%r14)
	jmp	.L5166
	.p2align 6,,7
.L11812:
	testq	%r15, %r15
	je	.L5158
	cmpb	$29, 16(%r13)
	jne	.L5158
	cmpb	$29, 16(%r15)
	jne	.L5158
	movq	8(%r13), %rdi
	movq	8(%r15), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L11813
	movzbl	53(%r15), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L5161
	movzbl	53(%r13), %r10d
	leal	0(,%rax,8), %r8d
	leaq	88(%r13), %rdx
	andb	$-9, %r10b
	orb	%r8b, %r10b
	movb	%r10b, 53(%r13)
	cmpq	%r15, current_function_decl(%rip)
	je	.L5162
	movq	88(%r15), %rax
.L5163:
	movq	%rax, (%rdx)
	movq	72(%r15), %rbx
	movq	80(%r15), %rdi
	movq	136(%r15), %rdx
	movzbl	17(%r13), %esi
	movq	%rbx, 72(%r13)
	movq	%rdi, 80(%r13)
	movq	%rdx, 136(%r13)
	movzbl	17(%r15), %r9d
	movq	%r15, 96(%r13)
	andb	$127, %sil
	shrb	$7, %r9b
	movzbl	%r9b, %ecx
	movl	%ecx, %r11d
	salb	$7, %r11b
	orb	%r11b, %sil
	movb	%sil, 17(%r13)
	movzbl	53(%r15), %ecx
.L5161:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L5164
	movzbl	53(%r13), %r10d
	salb	$4, %al
	andb	$-17, %r10b
	orb	%al, %r10b
	movb	%r10b, 53(%r13)
	movl	128(%r15), %eax
	movl	%eax, 128(%r13)
.L5164:
	movq	8(%r15), %rdx
	cmpq	$0, 24(%rdx)
	je	.L5158
	cmpq	$0, 88(%r15)
	je	.L5158
	movq	8(%r13), %r8
	cmpq	$0, 24(%r8)
	jne	.L5158
	movq	%rdx, 8(%r13)
	jmp	.L5158
.L5162:
	xorl	%eax, %eax
	jmp	.L5163
	.p2align 6,,7
.L11813:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L5158
	.p2align 6,,7
.L11803:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L5155
	jmp	.L11111
.L11802:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L11814
.L5130:
	cmpq	$0, 40(%r14)
	jne	.L5131
	testb	$8, 18(%r13)
	je	.L5131
	orb	$8, 18(%r14)
.L5131:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L11815
.L5133:
	movq	%r13, 40(%r14)
	movzbl	16(%r13), %edx
.L5132:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L5144
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L5134
	testb	$1, 18(%rcx)
	je	.L5134
	orb	$1, 18(%r13)
	movq	72(%r14), %rax
.L5134:
	testq	%rax, %rax
	je	.L5144
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L5139
	testb	$8, 17(%rcx)
	je	.L5139
	orb	$8, 17(%r13)
	movq	72(%r14), %rax
.L5139:
	testq	%rax, %rax
	je	.L5144
	cmpq	$0, 8(%rax)
	je	.L5144
	cmpb	$29, %dl
	je	.L11816
.L5147:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L5144:
	testb	$8, 18(%r14)
	je	.L5153
	cmpb	$32, %dl
	je	.L5153
	testb	$8, 18(%r13)
	jne	.L5153
	testb	$1, 53(%r13)
	jne	.L5153
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L5149
	cmpq	$0, 8(%rax)
	jne	.L11817
.L5149:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11239:
	xorl	%eax, %eax
	call	warning
	jmp	.L10592
.L11817:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11239
.L11816:
	movq	8(%r13), %rbx
	movq	integer_type_node(%rip), %rdi
	cmpq	%rdi, 8(%rbx)
	jne	.L5147
	jmp	.L5144
	.p2align 6,,7
.L11815:
	cmpq	$0, -2376(%rbp)
	je	.L5133
	movq	-2376(%rbp), %r9
	cmpb	$32, 16(%r9)
	jne	.L5132
	jmp	.L5133
.L11814:
	testb	$8, 54(%r13)
	jne	.L5130
	andb	$-9, 18(%r13)
	jmp	.L5130
	.p2align 6,,7
.L10591:
	movq	global_binding_level(%rip), %rax
	jmp	.L5110
.L11801:
	testl	%ecx, %ecx
	jg	.L11110
	testl	%ebx, %ebx
	je	.L5116
	movq	%rdx, %rsi
	movq	%r14, %rdi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11110
	.p2align 6,,7
.L5124:
	movq	8(%rdx), %rcx
	cmpq	error_mark_node(%rip), %rcx
	cmove	%rcx, %rdx
	jmp	.L5116
.L11800:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rdx
	je	.L5116
	testq	%rax, %rax
	je	.L10118
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rdx
	jmp	.L5114
	.p2align 6,,7
.L11799:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L5107
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r14), %rdi
	call	warning_with_decl
	jmp	.L5107
	.p2align 6,,7
.L10913:
	movq	8(%r13), %rdx
	movq	80(%rdx), %r12
	testq	%r12, %r12
	je	.L4971
	movzbl	16(%r12), %eax
	cmpb	$32, %al
	je	.L4970
.L4971:
	movq	global_binding_level(%rip), %r15
	movq	%r13, %r12
	cmpq	%r15, current_binding_level(%rip)
	jne	.L10584
	movq	%r13, 80(%rdx)
.L10584:
	movzbl	16(%r13), %eax
.L4974:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%bl
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	movq	56(%r12), %rbx
	testq	%rbx, %rbx
	je	.L5098
	cmpq	$0, 72(%r12)
	je	.L11818
.L5098:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L4969
	cmpq	$0, 56(%rax)
	je	.L4969
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %r15
	cmpq	global_binding_level(%rip), %rbx
	je	.L11819
.L11109:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L5104:
	movq	%r12, 8(%r15)
	jmp	.L4969
.L11819:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L5104
	jmp	.L11109
.L11818:
	cmpb	$32, 16(%r13)
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	sete	%r10b
	movq	8(%r13), %r15
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L5099
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	jmp	.L5098
.L5099:
	movq	%rbx, 72(%r13)
	jmp	.L5098
.L4970:
	movq	current_binding_level(%rip), %rsi
	movq	56(%r12), %r15
	cmpq	global_binding_level(%rip), %rsi
	jne	.L4974
	movq	32(%r15), %rcx
	cmpb	$36, (%rcx)
	jne	.L4974
	cmpb	$95, 1(%rcx)
	jne	.L4974
	movq	class_binding_level(%rip), %r10
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rax
	testq	%r10, %r10
	movq	%r10, -2384(%rbp)
	movq	%rax, -1064(%rbp)
	jne	.L4978
	testb	$-128, 66(%rsi)
	movq	%rsi, -2384(%rbp)
	je	.L4978
.L4982:
	movq	-2384(%rbp), %rdi
	movq	56(%rdi), %rcx
	testb	$-128, 66(%rcx)
	movq	%rcx, -2384(%rbp)
	jne	.L4982
.L4978:
	movq	-2384(%rbp), %rcx
	cmpq	global_binding_level(%rip), %rcx
	je	.L11820
	movq	-2384(%rbp), %rbx
	movq	-1064(%rbp), %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	saveable_tree_cons
	movq	-2384(%rbp), %r11
	movq	%rax, 8(%r11)
.L4984:
	testq	%r15, %r15
	je	.L4985
	movq	-1064(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L4986
	movq	%r15, 80(%rcx)
.L4986:
	movq	-1064(%rbp), %rbx
	cmpq	%rbx, 8(%r15)
	je	.L4987
	cmpb	$21, 16(%rbx)
	je	.L11821
.L4988:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L4990
	cmpq	$0, 32(%rax)
	je	.L4989
.L4990:
	movq	lang_name_cplusplus(%rip), %rdx
	cmpq	%rdx, current_lang_name(%rip)
	je	.L11822
.L4991:
	xorl	%ecx, %ecx
.L5026:
	testq	%rcx, %rcx
	jne	.L5027
.L10249:
	movq	-1064(%rbp), %rdx
	movl	$32, %edi
	movq	%r15, %rsi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-1064(%rbp), %rdi
	movq	%rax, -2392(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-2392(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11823
.L11105:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L5029:
	movq	-1064(%rbp), %rdx
	movq	%rdx, 8(%r15)
.L5032:
	movq	32(%r15), %rax
	cmpb	$36, (%rax)
	je	.L11824
.L5034:
	movq	-1064(%rbp), %rcx
	movq	80(%rcx), %rdx
	testq	%rdx, %rdx
	je	.L5065
	cmpb	$32, 16(%rdx)
	je	.L11825
.L5035:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L5054
	movq	-2392(%rbp), %rax
	movq	56(%rax), %rdx
	testq	%rdx, %rdx
	movq	%rdx, -1080(%rbp)
	je	.L10588
	movq	56(%rdx), %rsi
	testq	%rsi, %rsi
	je	.L5056
	movq	%rdx, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L5056:
	movq	decl_obstack+24(%rip), %rdx
	movq	-2392(%rbp), %r8
	movq	-1080(%rbp), %rdi
	leaq	8(%rdx), %rcx
	cmpq	decl_obstack+32(%rip), %rcx
	movq	%r8, 56(%rdi)
	ja	.L11826
.L5058:
	movq	-2392(%rbp), %rsi
	movq	%rdx, %r11
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rsi, (%r11)
	cmpb	$32, 16(%rsi)
	je	.L11827
.L10588:
	movq	32(%r15), %rax
.L5065:
	cmpb	$36, (%rax)
	je	.L11828
.L5079:
	movq	current_class_type(%rip), %rdx
	movq	-2392(%rbp), %r9
	movq	-1064(%rbp), %r11
	testq	%rdx, %rdx
	movq	%r9, 80(%r11)
	jne	.L5082
	cmpq	$0, current_function_decl(%rip)
	je	.L5081
.L5082:
	movq	lang_name_cplusplus(%rip), %r10
	cmpq	%r10, current_lang_name(%rip)
	je	.L5080
.L5081:
	movq	-2392(%rbp), %rax
	movq	%r15, 72(%rax)
.L4987:
	movq	-2384(%rbp), %rsi
	movzbl	66(%rsi), %r8d
	andl	$15, %r8d
	cmpl	$2, %r8d
	je	.L11829
.L4985:
	movq	-1064(%rbp), %rsi
	movq	80(%rsi), %rax
	cmpb	$32, 16(%rax)
	je	.L11830
	movq	-1064(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-1064(%rbp), %rdi
	movq	%rax, (%rdi)
.L11108:
	movzbl	16(%r12), %eax
	jmp	.L4974
.L11830:
	movq	%rax, (%rsi)
	jmp	.L11108
.L11829:
	movq	-1064(%rbp), %r11
	orb	$64, 18(%r11)
	movq	80(%r11), %rdx
	movq	current_class_type(%rip), %rax
	movq	%rdx, 56(%r15)
	cmpq	$0, 32(%rax)
	jne	.L4985
	movq	-2384(%rbp), %r9
	movq	144(%rax), %r15
	movq	8(%r9), %rcx
	movq	%rcx, 72(%r15)
	jmp	.L4985
.L5080:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L11831
	cmpq	$0, 32(%rdx)
	jne	.L4987
	movq	-2392(%rbp), %r8
	movq	80(%rdx), %rsi
	cmpb	$32, 16(%r8)
	movq	72(%rsi), %rbx
	movl	$136, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L5090
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2392(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1064(%rbp), %rdx
	movq	%rdx, 8(%rax)
.L5092:
	movq	-2392(%rbp), %rax
	movq	current_class_type(%rip), %r10
	movq	152(%rax), %rbx
	movq	%r10, 64(%rax)
	movq	%r10, 16(%rbx)
	jmp	.L4987
.L5090:
	movq	-2392(%rbp), %rdi
	movq	%r15, 72(%rdi)
	jmp	.L5092
.L11831:
	movq	-2392(%rbp), %rsi
	movq	112(%rax), %rbx
	cmpb	$32, 16(%rsi)
	movl	$136, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L5085
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2392(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1064(%rbp), %rdx
	movq	%rdx, 8(%rax)
.L5087:
	movq	current_function_decl(%rip), %r10
	movq	-2392(%rbp), %rbx
	movq	%r10, 64(%rbx)
	jmp	.L4987
.L5085:
	movq	-2392(%rbp), %rdi
	movq	%r15, 72(%rdi)
	jmp	.L5087
.L11828:
	cmpb	$95, 1(%rax)
	jne	.L5079
	movq	-2392(%rbp), %rdi
	orb	$64, 53(%rdi)
	jmp	.L5079
.L11827:
	cmpq	$0, 72(%rsi)
	jne	.L10588
	movq	8(%rsi), %r9
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%r9, -1088(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L5060
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	-1080(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-1080(%rbp), %r8
	movl	24(%r8), %eax
	movq	32(%r8), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2392(%rbp), %rbx
	movq	%rax, 72(%rbx)
	movq	-1088(%rbp), %r10
	movq	%r10, 8(%rax)
	jmp	.L10588
.L5060:
	movq	-1080(%rbp), %r11
	movq	-2392(%rbp), %rdi
	movq	%r11, 72(%rdi)
	jmp	.L10588
.L11826:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L5058
.L5054:
	movq	-2392(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -2392(%rbp)
	jmp	.L10588
.L11825:
	movq	global_binding_level(%rip), %rdi
	cmpq	%rdi, current_binding_level(%rip)
	je	.L5036
	movq	48(%r15), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L5037
.L5036:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L5038
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L10115
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L5039
	movq	144(%rdi), %r11
	testb	$1, 3(%r11)
	jne	.L11832
.L5039:
	testq	%rcx, %rcx
	jne	.L10115
.L10116:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10115
.L5038:
	movq	40(%r15), %rcx
.L5037:
	testq	%rcx, %rcx
	je	.L5041
.L10115:
	cmpb	$32, 16(%rcx)
	je	.L5041
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L5041
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L5049
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11106
	movl	$1, %r10d
	testl	%r10d, %r10d
	jle	.L11833
.L11106:
	movq	%rax, %rcx
.L5041:
	movq	-1064(%rbp), %rdx
	cmpq	80(%rdx), %rcx
	jne	.L5035
	jmp	.L10588
.L11833:
	testl	%edx, %edx
	jg	.L11106
	movl	$1, %ebx
	testl	%ebx, %ebx
	je	.L5041
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11106
.L5049:
	movq	8(%rcx), %rsi
	cmpq	error_mark_node(%rip), %rsi
	cmove	%rsi, %rcx
	jmp	.L5041
.L11832:
	movl	$1, %r9d
	xorl	%ecx, %ecx
	movq	%r15, %rsi
	cmpl	$-1, %r9d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L5041
	testq	%rax, %rax
	je	.L10116
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L5039
.L11824:
	cmpb	$95, 1(%rax)
	jne	.L5034
	jmp	.L5065
.L11823:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L5029
	jmp	.L11105
	.p2align 6,,7
.L5027:
	movq	80(%rcx), %rax
	movq	%rax, -2392(%rbp)
	jmp	.L5032
.L11822:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L4993
	movq	80(%rax), %rbx
.L4993:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L5026
.L5025:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L5002
	cmpl	$32, %eax
	je	.L11834
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L4996:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L5026
	jmp	.L5025
.L11834:
	movq	8(%rbx), %rsi
	movq	-1064(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%rsi), %r10
	movq	72(%r10), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10887
	movq	64(%rbx), %rbx
	jmp	.L4996
.L10887:
	movq	32(%rax), %rcx
	jmp	.L5026
.L5002:
	movq	-1064(%rbp), %rax
	movq	80(%rax), %rcx
	movq	56(%rcx), %rbx
	testq	%rbx, %rbx
	je	.L4991
	movq	global_binding_level(%rip), %rdi
	cmpq	%rdi, current_binding_level(%rip)
	je	.L5005
	movq	48(%rbx), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L5006
.L5005:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L5007
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10113
	movq	32(%rdi), %r11
	testq	%r11, %r11
	movq	%r11, -1072(%rbp)
	jne	.L5008
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L11835
.L5008:
	testq	%rcx, %rcx
	jne	.L10113
.L10114:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10113
.L5007:
	movq	40(%rbx), %rcx
.L5006:
	testq	%rcx, %rcx
	je	.L10249
.L10113:
	cmpb	$32, 16(%rcx)
	je	.L5026
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L5026
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L5018
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11104
	movl	$1, %r10d
	testl	%r10d, %r10d
	jle	.L11836
.L11104:
	movq	%rax, %rcx
	jmp	.L5026
.L11836:
	testl	%edx, %edx
	jg	.L11104
	movl	$1, %esi
	testl	%esi, %esi
	je	.L5026
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11104
.L5018:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L5026
	jmp	.L11104
.L11835:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L5026
	testq	%rax, %rax
	je	.L10114
	cmpb	$32, 16(%rax)
	cmovne	-1072(%rbp), %rcx
	jmp	.L5008
.L4989:
	movq	-1064(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r15, %rsi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -1096(%rbp)
	je	.L11837
.L11107:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L5067:
	movq	-1064(%rbp), %r10
	movq	%r10, 8(%r15)
	movq	-1096(%rbp), %r9
	movq	56(%r9), %rax
	testq	%rax, %rax
	movq	%rax, -1104(%rbp)
	je	.L5070
	movq	56(%rax), %rsi
	testq	%rsi, %rsi
	je	.L5071
	movq	class_binding_level(%rip), %rbx
	movq	%rax, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L5071:
	movq	decl_obstack+24(%rip), %rdx
	movq	-1096(%rbp), %r8
	movq	-1104(%rbp), %rax
	leaq	8(%rdx), %rbx
	cmpq	decl_obstack+32(%rip), %rbx
	movq	%r8, 56(%rax)
	ja	.L11838
.L5073:
	movq	-1096(%rbp), %rbx
	movq	%rdx, %rsi
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%rsi)
	cmpb	$32, 16(%rbx)
	je	.L11839
.L5070:
	movq	-1096(%rbp), %rbx
	movq	%rbx, -2392(%rbp)
	jmp	.L10588
.L11839:
	cmpq	$0, 72(%rbx)
	jne	.L5070
	movq	-1096(%rbp), %rdx
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%rdx), %rcx
	movq	%rcx, -1112(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L5075
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-1104(%rbp), %r8
	cmpb	$1, 16(%r8)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	-1104(%rbp), %r9
	movq	32(%rbx), %rdx
	movq	-1104(%rbp), %r10
	movl	$.LC35, %esi
	movq	32(%r9), %rcx
	movl	24(%r10), %eax
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1096(%rbp), %r11
	movq	%rax, 72(%r11)
	movq	-1112(%rbp), %rdi
	movq	%rdi, 8(%rax)
	jmp	.L5070
.L5075:
	movq	-1104(%rbp), %rcx
	movq	-1096(%rbp), %rdx
	movq	%rcx, 72(%rdx)
	jmp	.L5070
.L11838:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L5073
.L11837:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L5067
	jmp	.L11107
	.p2align 6,,7
.L11821:
	cmpq	$0, class_binding_level(%rip)
	je	.L4988
	movq	144(%rbx), %r9
	testb	$16, 3(%r9)
	jne	.L4987
	jmp	.L4988
	.p2align 6,,7
.L11820:
	movq	-1064(%rbp), %rsi
	movq	8(%rcx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	perm_tree_cons
	movq	-2384(%rbp), %r8
	movq	%rax, 8(%r8)
	jmp	.L4984
	.p2align 6,,7
.L4955:
	movq	-2376(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10583
	movl	flag_traditional(%rip), %esi
	testl	%esi, %esi
	jne	.L4960
	testb	$8, 18(%r14)
	je	.L4960
	testb	$8, 18(%r13)
	jne	.L4960
	testb	$9, 53(%r13)
	jne	.L4960
	cmpq	%r13, current_function_decl(%rip)
	je	.L11840
.L4964:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L4965
	cmpq	$0, 8(%rax)
	jne	.L11841
.L4965:
	movq	-2376(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11103:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-2376(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L4960
.L11841:
	movq	-2376(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11103
.L11840:
	movq	-2376(%rbp), %r13
	movq	%r13, current_function_decl(%rip)
	jmp	.L4964
	.p2align 6,,7
.L11295:
	cmpq	$0, 64(%rcx)
	jne	.L4953
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L4953
.L11294:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -2376(%rbp)
	call	error_with_decl
	jmp	.L4951
.L4944:
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.L4946
	.p2align 4,,7
.L4950:
	cmpq	%r14, 56(%rdi)
	je	.L4946
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L4950
.L4946:
	movq	%rdi, -2376(%rbp)
	jmp	.L4943
.L11293:
	movq	40(%r14), %rbx
	movq	%rbx, -2376(%rbp)
	jmp	.L4943
.L11292:
	movq	56(%r13), %r14
	jmp	.L4940
.L11291:
	testb	$32, 53(%r13)
	jne	.L4938
	jmp	.L4939
.L10579:
	movzbl	16(%r13), %edx
	jmp	.L4938
.L10568:
	movzbl	16(%r13), %edx
.L4685:
	cmpb	$32, %dl
	je	.L10912
.L4693:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L4831
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L4831
	testb	$1, 53(%rax)
	jne	.L4832
	testb	$8, 18(%rax)
	je	.L4831
.L4832:
	andb	$8, %dl
	je	.L11842
	.p2align 4,,7
.L4831:
	movl	flag_traditional(%rip), %r12d
	testl	%r12d, %r12d
	je	.L10576
	testb	$1, 53(%r13)
	je	.L10576
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rdi
	cmpq	%rdi, current_binding_level(%rip)
	je	.L4835
	movq	48(%r14), %r10
	testq	%r10, %r10
	movq	%r10, %rdx
	jne	.L4836
.L4835:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L4837
	movq	56(%r14), %rdx
	testq	%rdx, %rdx
	jne	.L10111
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L4838
	movq	144(%rdi), %r15
	testb	$1, 3(%r15)
	jne	.L11843
.L4838:
	testq	%rdx, %rdx
	jne	.L10111
.L10112:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rdx
	jne	.L10111
.L4837:
	movq	40(%r14), %rdx
.L4836:
	testq	%rdx, %rdx
	je	.L10248
.L10111:
	cmpb	$32, 16(%rdx)
	je	.L4840
	movl	looking_for_typename(%rip), %ecx
	testl	%ecx, %ecx
	js	.L4840
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L4848
	movq	80(%rax), %rax
	cmpq	%rax, %rdx
	je	.L11100
	testl	%ebx, %ebx
	jle	.L11844
.L11100:
	movq	%rax, %rdx
.L4840:
	testq	%rdx, %rdx
	jne	.L10576
.L10248:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -2368(%rbp)
.L4834:
	cmpq	%rax, -2368(%rbp)
	je	.L11845
	movq	current_binding_level(%rip), %rbx
	movq	48(%r14), %r12
	movq	40(%r14), %r15
	cmpq	%rax, %rbx
	je	.L11846
.L11101:
	movq	16(%rbx), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%rbx)
.L4879:
	testq	%r12, %r12
	movq	%r13, 48(%r14)
	je	.L11847
.L4890:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L4892
	testq	%r12, %r12
	je	.L4893
	testb	$1, 53(%r13)
	jne	.L4893
	cmpb	$34, 16(%r12)
	je	.L11848
.L4893:
	movl	warn_shadow(%rip), %r10d
	testl	%r10d, %r10d
	je	.L4892
	testb	$1, 53(%r13)
	jne	.L4892
	movl	32(%r13), %ecx
	testl	%ecx, %ecx
	je	.L4892
	testq	%rax, %rax
	jne	.L4892
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L4898
	cmpb	$34, 16(%r12)
	je	.L11849
.L4898:
	cmpq	$0, 56(%r14)
	je	.L4900
	movl	$.LC41, %edi
.L4899:
	testq	%rdi, %rdi
	jne	.L11102
	.p2align 4,,7
.L4892:
	testq	%r12, %r12
	je	.L10577
	movq	-2368(%rbp), %r11
	movq	%r12, %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	16(%r11), %rdx
	call	tree_cons
	movq	-2368(%rbp), %r12
	movq	%rax, 16(%r12)
.L10577:
	movzbl	16(%r13), %edx
.L4877:
	leal	-128(%rdx), %ebx
	cmpb	$1, %bl
	jbe	.L4665
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L4665
	cmpb	$18, 16(%rcx)
	je	.L11850
.L4909:
	testb	$64, 46(%rcx)
	je	.L4665
.L4908:
	movq	-2368(%rbp), %rdx
	movzwl	64(%rdx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rdx)
	je	.L11851
.L10578:
	movzbl	16(%r13), %edx
	.p2align 4,,7
.L4665:
	cmpb	$32, %dl
	je	.L11852
.L4911:
	movq	-2368(%rbp), %rdi
	cmpq	global_binding_level(%rip), %rdi
	movq	(%rdi), %r8
	movq	%r8, (%r13)
	movq	%r13, (%rdi)
	jne	.L4684
	testb	$4, 17(%r13)
	jne	.L4684
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L4684
.L11852:
	testq	%r14, %r14
	je	.L4911
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L4912
	cmpq	class_binding_level(%rip), %rax
	je	.L4913
	movq	48(%r14), %rax
	testq	%rax, %rax
	je	.L4917
	cmpb	$32, 16(%rax)
	je	.L4915
.L4917:
	cmpq	$0, current_class_type(%rip)
	je	.L4912
	movq	56(%r14), %rax
	testq	%rax, %rax
	je	.L4912
	cmpb	$32, 16(%rax)
	je	.L4915
.L4912:
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L4916
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L4915
	cmpb	$-127, %dl
	je	.L11853
.L4916:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L4911
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L11854
.L4923:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L4927
	cmpq	class_binding_level(%rip), %rax
	je	.L4928
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L4932
	cmpb	$32, 16(%rax)
	je	.L4930
.L4932:
	cmpq	$0, current_class_type(%rip)
	je	.L4927
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L4927
	cmpb	$32, 16(%rax)
	je	.L4930
.L4927:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L4911
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L4930
	cmpb	$-127, %dl
	jne	.L4911
	movq	$0, 8(%rbx)
	jmp	.L4911
.L4930:
	movq	8(%rax), %r14
	movq	%r14, 8(%rbx)
	jmp	.L4911
.L4928:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L4932
.L11854:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %r12
	sete	%cl
	movq	8(%r13), %r15
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r14)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%r14), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L4923
.L11853:
	movq	$0, 8(%r14)
	jmp	.L4916
.L4915:
	movq	8(%rax), %rsi
	movq	%rsi, 8(%r14)
	jmp	.L4916
.L4913:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L4917
.L11851:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10578
.L11850:
	movq	8(%rcx), %r9
	testb	$64, 46(%r9)
	jne	.L4908
	jmp	.L4909
.L11102:
	movq	32(%r14), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L4892
.L4900:
	testq	%r12, %r12
	je	.L4902
	movl	$.LC42, %edi
	jmp	.L4899
.L4902:
	testq	%r15, %r15
	movl	$.LC43, %r8d
	cmovne	%r8, %rdi
	jmp	.L4899
.L11849:
	movl	$.LC40, %edi
	jmp	.L4899
.L11848:
	cmpb	$34, 16(%r13)
	je	.L4893
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r15
	movq	56(%r15), %rax
	je	.L4894
	movq	56(%rax), %rax
.L4894:
	movzbl	66(%rax), %edi
	andl	$15, %edi
	decl	%edi
	jne	.L4892
	movl	$.LC40, %edi
	jmp	.L11102
	.p2align 6,,7
.L11847:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L11855
.L4882:
	testq	%r12, %r12
	jne	.L4890
	testq	%r15, %r15
	jne	.L4890
	testb	$1, 53(%r13)
	je	.L4890
	testb	$8, 18(%r13)
	je	.L4890
	orb	$8, 18(%r14)
	jmp	.L4890
	.p2align 6,,7
.L11855:
	testq	%r15, %r15
	je	.L4882
	cmpb	$29, 16(%r13)
	jne	.L4882
	cmpb	$29, 16(%r15)
	jne	.L4882
	movq	8(%r13), %rdi
	movq	8(%r15), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L11856
	movzbl	53(%r15), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L4885
	movzbl	53(%r13), %r9d
	leal	0(,%rax,8), %esi
	leaq	88(%r13), %rdx
	andb	$-9, %r9b
	orb	%sil, %r9b
	movb	%r9b, 53(%r13)
	cmpq	%r15, current_function_decl(%rip)
	je	.L4886
	movq	88(%r15), %rax
.L4887:
	movq	%rax, (%rdx)
	movq	72(%r15), %rbx
	movq	80(%r15), %r11
	movq	136(%r15), %rdx
	movzbl	17(%r13), %edi
	movq	%rbx, 72(%r13)
	movq	%r11, 80(%r13)
	movq	%rdx, 136(%r13)
	movzbl	17(%r15), %r8d
	movq	%r15, 96(%r13)
	andb	$127, %dil
	shrb	$7, %r8b
	movzbl	%r8b, %ecx
	movl	%ecx, %r10d
	salb	$7, %r10b
	orb	%r10b, %dil
	movb	%dil, 17(%r13)
	movzbl	53(%r15), %ecx
.L4885:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L4888
	movzbl	53(%r13), %r9d
	salb	$4, %al
	andb	$-17, %r9b
	orb	%al, %r9b
	movb	%r9b, 53(%r13)
	movl	128(%r15), %eax
	movl	%eax, 128(%r13)
.L4888:
	movq	8(%r15), %rdx
	cmpq	$0, 24(%rdx)
	je	.L4882
	cmpq	$0, 88(%r15)
	je	.L4882
	movq	8(%r13), %rsi
	cmpq	$0, 24(%rsi)
	jne	.L4882
	movq	%rdx, 8(%r13)
	jmp	.L4882
.L4886:
	xorl	%eax, %eax
	jmp	.L4887
	.p2align 6,,7
.L11856:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L4882
	.p2align 6,,7
.L11846:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4879
	jmp	.L11101
.L11845:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L11857
.L4854:
	cmpq	$0, 40(%r14)
	jne	.L4855
	testb	$8, 18(%r13)
	je	.L4855
	orb	$8, 18(%r14)
.L4855:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L11858
.L4857:
	movq	%r13, 40(%r14)
	movzbl	16(%r13), %edx
.L4856:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L4868
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L4858
	testb	$1, 18(%rcx)
	je	.L4858
	orb	$1, 18(%r13)
	movq	72(%r14), %rax
.L4858:
	testq	%rax, %rax
	je	.L4868
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L4863
	testb	$8, 17(%rcx)
	je	.L4863
	orb	$8, 17(%r13)
	movq	72(%r14), %rax
.L4863:
	testq	%rax, %rax
	je	.L4868
	cmpq	$0, 8(%rax)
	je	.L4868
	cmpb	$29, %dl
	je	.L11859
.L4871:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L4868:
	testb	$8, 18(%r14)
	je	.L4877
	cmpb	$32, %dl
	je	.L4877
	testb	$8, 18(%r13)
	jne	.L4877
	testb	$1, 53(%r13)
	jne	.L4877
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L4873
	cmpq	$0, 8(%rax)
	jne	.L11860
.L4873:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11238:
	xorl	%eax, %eax
	call	warning
	jmp	.L10577
.L11860:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11238
.L11859:
	movq	8(%r13), %rbx
	movq	integer_type_node(%rip), %r11
	cmpq	%r11, 8(%rbx)
	jne	.L4871
	jmp	.L4868
	.p2align 6,,7
.L11858:
	cmpq	$0, -2344(%rbp)
	je	.L4857
	movq	-2344(%rbp), %r8
	cmpb	$32, 16(%r8)
	jne	.L4856
	jmp	.L4857
.L11857:
	testb	$8, 54(%r13)
	jne	.L4854
	andb	$-9, 18(%r13)
	jmp	.L4854
	.p2align 6,,7
.L10576:
	movq	global_binding_level(%rip), %rax
	jmp	.L4834
.L11844:
	testl	%ecx, %ecx
	jg	.L11100
	testl	%ebx, %ebx
	je	.L4840
	movq	%rdx, %rsi
	movq	%r14, %rdi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11100
	.p2align 6,,7
.L4848:
	movq	8(%rdx), %rcx
	cmpq	error_mark_node(%rip), %rcx
	cmove	%rcx, %rdx
	jmp	.L4840
.L11843:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rdx
	je	.L4840
	testq	%rax, %rax
	je	.L10112
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rdx
	jmp	.L4838
	.p2align 6,,7
.L11842:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L4831
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r14), %rdi
	call	warning_with_decl
	jmp	.L4831
	.p2align 6,,7
.L10912:
	movq	8(%r13), %rdx
	movq	80(%rdx), %r12
	testq	%r12, %r12
	je	.L4695
	movzbl	16(%r12), %eax
	cmpb	$32, %al
	je	.L4694
.L4695:
	movq	global_binding_level(%rip), %r15
	movq	%r13, %r12
	cmpq	%r15, current_binding_level(%rip)
	jne	.L10569
	movq	%r13, 80(%rdx)
.L10569:
	movzbl	16(%r13), %eax
.L4698:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%bl
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	movq	56(%r12), %rbx
	testq	%rbx, %rbx
	je	.L4822
	cmpq	$0, 72(%r12)
	je	.L11861
.L4822:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L4693
	cmpq	$0, 56(%rax)
	je	.L4693
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %r15
	cmpq	global_binding_level(%rip), %rbx
	je	.L11862
.L11099:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L4828:
	movq	%r12, 8(%r15)
	jmp	.L4693
.L11862:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4828
	jmp	.L11099
.L11861:
	cmpb	$32, 16(%r13)
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	sete	%al
	movq	8(%r13), %r15
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L4823
	cmpb	$1, 16(%r12)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	jmp	.L4822
.L4823:
	movq	%rbx, 72(%r13)
	jmp	.L4822
.L4694:
	movq	current_binding_level(%rip), %rsi
	movq	56(%r12), %r15
	cmpq	global_binding_level(%rip), %rsi
	jne	.L4698
	movq	32(%r15), %rcx
	cmpb	$36, (%rcx)
	jne	.L4698
	cmpb	$95, 1(%rcx)
	jne	.L4698
	movq	class_binding_level(%rip), %rcx
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rax
	testq	%rcx, %rcx
	movq	%rcx, -2352(%rbp)
	movq	%rax, -1008(%rbp)
	jne	.L4702
	testb	$-128, 66(%rsi)
	movq	%rsi, -2352(%rbp)
	je	.L4702
.L4706:
	movq	-2352(%rbp), %r11
	movq	56(%r11), %rbx
	testb	$-128, 66(%rbx)
	movq	%rbx, -2352(%rbp)
	jne	.L4706
.L4702:
	movq	-2352(%rbp), %rcx
	cmpq	global_binding_level(%rip), %rcx
	je	.L11863
	movq	-2352(%rbp), %r10
	movq	-1008(%rbp), %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	8(%r10), %rdx
	call	saveable_tree_cons
	movq	-2352(%rbp), %r9
	movq	%rax, 8(%r9)
.L4708:
	testq	%r15, %r15
	je	.L4709
	movq	-1008(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L4710
	movq	%r15, 80(%rcx)
.L4710:
	movq	-1008(%rbp), %rbx
	cmpq	%rbx, 8(%r15)
	je	.L4711
	cmpb	$21, 16(%rbx)
	je	.L11864
.L4712:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L4714
	cmpq	$0, 32(%rax)
	je	.L4713
.L4714:
	movq	lang_name_cplusplus(%rip), %r8
	cmpq	%r8, current_lang_name(%rip)
	je	.L11865
.L4715:
	xorl	%ecx, %ecx
.L4750:
	testq	%rcx, %rcx
	jne	.L4751
.L10247:
	movq	-1008(%rbp), %rdx
	movl	$32, %edi
	movq	%r15, %rsi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-1008(%rbp), %rdi
	movq	%rax, -2360(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-2360(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11866
.L11095:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L4753:
	movq	-1008(%rbp), %rcx
	movq	%rcx, 8(%r15)
.L4756:
	movq	32(%r15), %rax
	cmpb	$36, (%rax)
	je	.L11867
.L4758:
	movq	-1008(%rbp), %r9
	movq	80(%r9), %rdx
	testq	%rdx, %rdx
	je	.L4789
	cmpb	$32, 16(%rdx)
	je	.L11868
.L4759:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4778
	movq	-2360(%rbp), %rcx
	movq	56(%rcx), %rdx
	testq	%rdx, %rdx
	movq	%rdx, -1024(%rbp)
	je	.L10573
	movq	56(%rdx), %rsi
	testq	%rsi, %rsi
	je	.L4780
	movq	%rdx, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L4780:
	movq	-1024(%rbp), %rdx
	movq	-2360(%rbp), %r10
	movq	%r10, 56(%rdx)
	movq	decl_obstack+24(%rip), %rdx
	leaq	8(%rdx), %r9
	cmpq	decl_obstack+32(%rip), %r9
	ja	.L11869
.L4782:
	movq	-2360(%rbp), %rsi
	movq	%rdx, %r8
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rsi, (%r8)
	cmpb	$32, 16(%rsi)
	je	.L11870
.L10573:
	movq	32(%r15), %rax
.L4789:
	cmpb	$36, (%rax)
	je	.L11871
.L4803:
	movq	current_class_type(%rip), %rdx
	movq	-2360(%rbp), %r11
	movq	-1008(%rbp), %r8
	testq	%rdx, %rdx
	movq	%r11, 80(%r8)
	jne	.L4806
	cmpq	$0, current_function_decl(%rip)
	je	.L4805
.L4806:
	movq	lang_name_cplusplus(%rip), %rdi
	cmpq	%rdi, current_lang_name(%rip)
	je	.L4804
.L4805:
	movq	-2360(%rbp), %rax
	movq	%r15, 72(%rax)
.L4711:
	movq	-2352(%rbp), %rsi
	movzbl	66(%rsi), %r9d
	andl	$15, %r9d
	cmpl	$2, %r9d
	je	.L11872
.L4709:
	movq	-1008(%rbp), %rsi
	movq	80(%rsi), %rax
	cmpb	$32, 16(%rax)
	je	.L11873
	movq	-1008(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-1008(%rbp), %r11
	movq	%rax, (%r11)
.L11098:
	movzbl	16(%r12), %eax
	jmp	.L4698
.L11873:
	movq	%rax, (%rsi)
	jmp	.L11098
.L11872:
	movq	-1008(%rbp), %r10
	orb	$64, 18(%r10)
	movq	80(%r10), %rdx
	movq	current_class_type(%rip), %rax
	movq	%rdx, 56(%r15)
	cmpq	$0, 32(%rax)
	jne	.L4709
	movq	-2352(%rbp), %r8
	movq	144(%rax), %r15
	movq	8(%r8), %rcx
	movq	%rcx, 72(%r15)
	jmp	.L4709
.L4804:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L11874
	cmpq	$0, 32(%rdx)
	jne	.L4711
	movq	-2360(%rbp), %r9
	movq	80(%rdx), %rsi
	cmpb	$32, 16(%r9)
	movq	72(%rsi), %rbx
	movl	$136, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L4814
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2360(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1008(%rbp), %rdx
	movq	%rdx, 8(%rax)
.L4816:
	movq	-2360(%rbp), %rax
	movq	current_class_type(%rip), %rdi
	movq	152(%rax), %rbx
	movq	%rdi, 64(%rax)
	movq	%rdi, 16(%rbx)
	jmp	.L4711
.L4814:
	movq	-2360(%rbp), %r11
	movq	%r15, 72(%r11)
	jmp	.L4816
.L11874:
	movq	-2360(%rbp), %rsi
	movq	112(%rax), %rbx
	cmpb	$32, 16(%rsi)
	movl	$136, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L4809
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2360(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-1008(%rbp), %rdx
	movq	%rdx, 8(%rax)
.L4811:
	movq	current_function_decl(%rip), %rdi
	movq	-2360(%rbp), %rbx
	movq	%rdi, 64(%rbx)
	jmp	.L4711
.L4809:
	movq	-2360(%rbp), %r11
	movq	%r15, 72(%r11)
	jmp	.L4811
.L11871:
	cmpb	$95, 1(%rax)
	jne	.L4803
	movq	-2360(%rbp), %r10
	orb	$64, 53(%r10)
	jmp	.L4803
.L11870:
	cmpq	$0, 72(%rsi)
	jne	.L10573
	movq	8(%rsi), %rdi
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$136, %esi
	movq	%rdi, -1032(%rbp)
	movl	$1, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L4784
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	-1024(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-1024(%rbp), %r9
	movl	24(%r9), %eax
	movq	32(%r9), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2360(%rbp), %r11
	movq	%rax, 72(%r11)
	movq	-1032(%rbp), %rbx
	movq	%rbx, 8(%rax)
	jmp	.L10573
.L4784:
	movq	-1024(%rbp), %r8
	movq	-2360(%rbp), %r10
	movq	%r8, 72(%r10)
	jmp	.L10573
.L11869:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L4782
.L4778:
	movq	-2360(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -2360(%rbp)
	jmp	.L10573
.L11868:
	movq	global_binding_level(%rip), %rdx
	cmpq	%rdx, current_binding_level(%rip)
	je	.L4760
	movq	48(%r15), %r10
	testq	%r10, %r10
	movq	%r10, %rcx
	jne	.L4761
.L4760:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L4762
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L10109
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L4763
	movq	144(%rdi), %r8
	testb	$1, 3(%r8)
	jne	.L11875
.L4763:
	testq	%rcx, %rcx
	jne	.L10109
.L10110:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10109
.L4762:
	movq	40(%r15), %rcx
.L4761:
	testq	%rcx, %rcx
	je	.L4765
.L10109:
	cmpb	$32, 16(%rcx)
	je	.L4765
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L4765
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L4773
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11096
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L11876
.L11096:
	movq	%rax, %rcx
.L4765:
	movq	-1008(%rbp), %r11
	cmpq	80(%r11), %rcx
	jne	.L4759
	jmp	.L10573
.L11876:
	testl	%edx, %edx
	jg	.L11096
	movl	$1, %ebx
	testl	%ebx, %ebx
	je	.L4765
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11096
.L4773:
	movq	8(%rcx), %rsi
	cmpq	error_mark_node(%rip), %rsi
	cmove	%rsi, %rcx
	jmp	.L4765
.L11875:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%r15, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L4765
	testq	%rax, %rax
	je	.L10110
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L4763
.L11867:
	cmpb	$95, 1(%rax)
	jne	.L4758
	jmp	.L4789
.L11866:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4753
	jmp	.L11095
	.p2align 6,,7
.L4751:
	movq	80(%rcx), %r11
	movq	%r11, -2360(%rbp)
	jmp	.L4756
.L11865:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L4717
	movq	80(%rax), %rbx
.L4717:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L4750
.L4749:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L4726
	cmpl	$32, %eax
	je	.L11877
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L4720:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L4750
	jmp	.L4749
.L11877:
	movq	8(%rbx), %rsi
	movq	-1008(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%rsi), %rcx
	movq	72(%rcx), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10886
	movq	64(%rbx), %rbx
	jmp	.L4720
.L10886:
	movq	32(%rax), %rcx
	jmp	.L4750
.L4726:
	movq	-1008(%rbp), %rax
	movq	80(%rax), %r11
	movq	56(%r11), %rbx
	testq	%rbx, %rbx
	je	.L4715
	movq	global_binding_level(%rip), %rdx
	cmpq	%rdx, current_binding_level(%rip)
	je	.L4729
	movq	48(%rbx), %r9
	testq	%r9, %r9
	movq	%r9, %rcx
	jne	.L4730
.L4729:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L4731
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10107
	movq	32(%rdi), %r10
	testq	%r10, %r10
	movq	%r10, -1016(%rbp)
	jne	.L4732
	movq	144(%rdi), %r8
	testb	$1, 3(%r8)
	jne	.L11878
.L4732:
	testq	%rcx, %rcx
	jne	.L10107
.L10108:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10107
.L4731:
	movq	40(%rbx), %rcx
.L4730:
	testq	%rcx, %rcx
	je	.L10247
.L10107:
	cmpb	$32, 16(%rcx)
	je	.L4750
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L4750
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L4742
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11094
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L11879
.L11094:
	movq	%rax, %rcx
	jmp	.L4750
.L11879:
	testl	%edx, %edx
	jg	.L11094
	movl	$1, %esi
	testl	%esi, %esi
	je	.L4750
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11094
.L4742:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L4750
	jmp	.L11094
.L11878:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L4750
	testq	%rax, %rax
	je	.L10108
	cmpb	$32, 16(%rax)
	cmovne	-1016(%rbp), %rcx
	jmp	.L4732
.L4713:
	movq	-1008(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r15, %rsi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -1040(%rbp)
	je	.L11880
.L11097:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L4791:
	movq	-1008(%rbp), %rbx
	movq	%rbx, 8(%r15)
	movq	-1040(%rbp), %rdi
	movq	56(%rdi), %rax
	testq	%rax, %rax
	movq	%rax, -1048(%rbp)
	je	.L4794
	movq	56(%rax), %rsi
	testq	%rsi, %rsi
	je	.L4795
	movq	class_binding_level(%rip), %rbx
	movq	%rax, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L4795:
	movq	decl_obstack+24(%rip), %rdx
	movq	-1040(%rbp), %r9
	movq	-1048(%rbp), %rax
	leaq	8(%rdx), %r11
	cmpq	decl_obstack+32(%rip), %r11
	movq	%r9, 56(%rax)
	ja	.L11881
.L4797:
	movq	-1040(%rbp), %rbx
	movq	%rdx, %rsi
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%rsi)
	cmpb	$32, 16(%rbx)
	je	.L11882
.L4794:
	movq	-1040(%rbp), %rbx
	movq	%rbx, -2360(%rbp)
	jmp	.L10573
.L11882:
	cmpq	$0, 72(%rbx)
	jne	.L4794
	movq	-1040(%rbp), %rdx
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%rdx), %rcx
	movq	%rcx, -1056(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L4799
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-1048(%rbp), %r9
	cmpb	$1, 16(%r9)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	-1048(%rbp), %r11
	movq	32(%rbx), %rdx
	movq	-1048(%rbp), %rdi
	movl	$.LC35, %esi
	movq	32(%r11), %rcx
	movl	24(%rdi), %eax
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1040(%rbp), %r8
	movq	%rax, 72(%r8)
	movq	-1056(%rbp), %r10
	movq	%r10, 8(%rax)
	jmp	.L4794
.L4799:
	movq	-1048(%rbp), %rcx
	movq	-1040(%rbp), %rdx
	movq	%rcx, 72(%rdx)
	jmp	.L4794
.L11881:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L4797
.L11880:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4791
	jmp	.L11097
	.p2align 6,,7
.L11864:
	cmpq	$0, class_binding_level(%rip)
	je	.L4712
	movq	144(%rbx), %rdi
	testb	$16, 3(%rdi)
	jne	.L4711
	jmp	.L4712
	.p2align 6,,7
.L11863:
	movq	8(%rcx), %rdx
	movq	-1008(%rbp), %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	perm_tree_cons
	movq	-2352(%rbp), %rdx
	movq	%rax, 8(%rdx)
	jmp	.L4708
	.p2align 6,,7
.L4679:
	movq	-2344(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10568
	movl	flag_traditional(%rip), %esi
	testl	%esi, %esi
	jne	.L4684
	testb	$8, 18(%r14)
	je	.L4684
	testb	$8, 18(%r13)
	jne	.L4684
	testb	$9, 53(%r13)
	jne	.L4684
	cmpq	%r13, current_function_decl(%rip)
	je	.L11883
.L4688:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L4689
	cmpq	$0, 8(%rax)
	jne	.L11884
.L4689:
	movq	-2344(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11093:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-2344(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L4684
.L11884:
	movq	-2344(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11093
.L11883:
	movq	-2344(%rbp), %r13
	movq	%r13, current_function_decl(%rip)
	jmp	.L4688
	.p2align 6,,7
.L11290:
	cmpq	$0, 64(%rcx)
	jne	.L4677
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L4677
.L11289:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -2344(%rbp)
	call	error_with_decl
	jmp	.L4675
.L4668:
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.L4670
	.p2align 4,,7
.L4674:
	cmpq	%r14, 56(%rdi)
	je	.L4670
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L4674
.L4670:
	movq	%rdi, -2344(%rbp)
	jmp	.L4667
.L11288:
	movq	40(%r14), %rdi
	movq	%rdi, -2344(%rbp)
	jmp	.L4667
.L11287:
	movq	56(%r13), %r14
	jmp	.L4664
.L11286:
	testb	$32, 53(%r13)
	jne	.L4662
	jmp	.L4663
.L10564:
	movzbl	16(%r13), %edx
	jmp	.L4662
.L10553:
	movzbl	16(%r13), %edx
.L4409:
	cmpb	$32, %dl
	je	.L10911
.L4417:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L4555
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L4555
	testb	$1, 53(%rax)
	jne	.L4556
	testb	$8, 18(%rax)
	je	.L4555
.L4556:
	andb	$8, %dl
	je	.L11885
	.p2align 4,,7
.L4555:
	movl	flag_traditional(%rip), %r12d
	testl	%r12d, %r12d
	je	.L10561
	testb	$1, 53(%r13)
	je	.L10561
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rdx
	cmpq	%rdx, current_binding_level(%rip)
	je	.L4559
	movq	48(%r14), %rcx
	testq	%rcx, %rcx
	movq	%rcx, %rdx
	jne	.L4560
.L4559:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L4561
	movq	56(%r14), %rdx
	testq	%rdx, %rdx
	jne	.L10105
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L4562
	movq	144(%rdi), %r15
	testb	$1, 3(%r15)
	jne	.L11886
.L4562:
	testq	%rdx, %rdx
	jne	.L10105
.L10106:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rdx
	jne	.L10105
.L4561:
	movq	40(%r14), %rdx
.L4560:
	testq	%rdx, %rdx
	je	.L10246
.L10105:
	cmpb	$32, 16(%rdx)
	je	.L4564
	movl	looking_for_typename(%rip), %ecx
	testl	%ecx, %ecx
	js	.L4564
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L4572
	movq	80(%rax), %rax
	cmpq	%rax, %rdx
	je	.L11090
	testl	%ebx, %ebx
	jle	.L11887
.L11090:
	movq	%rax, %rdx
.L4564:
	testq	%rdx, %rdx
	jne	.L10561
.L10246:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -2336(%rbp)
.L4558:
	cmpq	%rax, -2336(%rbp)
	je	.L11888
	movq	current_binding_level(%rip), %rbx
	movq	48(%r14), %r12
	movq	40(%r14), %r15
	cmpq	%rax, %rbx
	je	.L11889
.L11091:
	movq	16(%rbx), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%rbx)
.L4603:
	testq	%r12, %r12
	movq	%r13, 48(%r14)
	je	.L11890
.L4614:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L4616
	testq	%r12, %r12
	je	.L4617
	testb	$1, 53(%r13)
	jne	.L4617
	cmpb	$34, 16(%r12)
	je	.L11891
.L4617:
	movl	warn_shadow(%rip), %ebx
	testl	%ebx, %ebx
	je	.L4616
	testb	$1, 53(%r13)
	jne	.L4616
	movl	32(%r13), %edx
	testl	%edx, %edx
	je	.L4616
	testq	%rax, %rax
	jne	.L4616
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L4622
	cmpb	$34, 16(%r12)
	je	.L11892
.L4622:
	cmpq	$0, 56(%r14)
	je	.L4624
	movl	$.LC41, %edi
.L4623:
	testq	%rdi, %rdi
	jne	.L11092
	.p2align 4,,7
.L4616:
	testq	%r12, %r12
	je	.L10562
	movq	-2336(%rbp), %r9
	movq	%r12, %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	16(%r9), %rdx
	call	tree_cons
	movq	-2336(%rbp), %r12
	movq	%rax, 16(%r12)
.L10562:
	movzbl	16(%r13), %edx
.L4601:
	leal	-128(%rdx), %edi
	cmpb	$1, %dil
	jbe	.L4389
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L4389
	cmpb	$18, 16(%rcx)
	je	.L11893
.L4633:
	testb	$64, 46(%rcx)
	je	.L4389
.L4632:
	movq	-2336(%rbp), %r8
	movzwl	64(%r8), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%r8)
	je	.L11894
.L10563:
	movzbl	16(%r13), %edx
	.p2align 4,,7
.L4389:
	cmpb	$32, %dl
	je	.L11895
.L4635:
	movq	-2336(%rbp), %rdx
	cmpq	global_binding_level(%rip), %rdx
	movq	(%rdx), %r11
	movq	%r11, (%r13)
	movq	%r13, (%rdx)
	jne	.L4408
	testb	$4, 17(%r13)
	jne	.L4408
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L4408
.L11895:
	testq	%r14, %r14
	je	.L4635
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L4636
	cmpq	class_binding_level(%rip), %rax
	je	.L4637
	movq	48(%r14), %rax
	testq	%rax, %rax
	je	.L4641
	cmpb	$32, 16(%rax)
	je	.L4639
.L4641:
	cmpq	$0, current_class_type(%rip)
	je	.L4636
	movq	56(%r14), %rax
	testq	%rax, %rax
	je	.L4636
	cmpb	$32, 16(%rax)
	je	.L4639
.L4636:
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L4640
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L4639
	cmpb	$-127, %dl
	je	.L11896
.L4640:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L4635
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L11897
.L4647:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L4651
	cmpq	class_binding_level(%rip), %rax
	je	.L4652
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L4656
	cmpb	$32, 16(%rax)
	je	.L4654
.L4656:
	cmpq	$0, current_class_type(%rip)
	je	.L4651
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L4651
	cmpb	$32, 16(%rax)
	je	.L4654
.L4651:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L4635
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L4654
	cmpb	$-127, %dl
	jne	.L4635
	movq	$0, 8(%rbx)
	jmp	.L4635
.L4654:
	movq	8(%rax), %r14
	movq	%r14, 8(%rbx)
	jmp	.L4635
.L4652:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L4656
.L11897:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %r12
	sete	%bl
	movq	8(%r13), %r15
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r14)
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%r14), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L4647
.L11896:
	movq	$0, 8(%r14)
	jmp	.L4640
.L4639:
	movq	8(%rax), %rsi
	movq	%rsi, 8(%r14)
	jmp	.L4640
.L4637:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L4641
.L11894:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10563
.L11893:
	movq	8(%rcx), %r10
	testb	$64, 46(%r10)
	jne	.L4632
	jmp	.L4633
.L11092:
	movq	32(%r14), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L4616
.L4624:
	testq	%r12, %r12
	je	.L4626
	movl	$.LC42, %edi
	jmp	.L4623
.L4626:
	testq	%r15, %r15
	movl	$.LC43, %r11d
	cmovne	%r11, %rdi
	jmp	.L4623
.L11892:
	movl	$.LC40, %edi
	jmp	.L4623
.L11891:
	cmpb	$34, 16(%r13)
	je	.L4617
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r15
	movq	56(%r15), %rax
	je	.L4618
	movq	56(%rax), %rax
.L4618:
	movzbl	66(%rax), %ecx
	andl	$15, %ecx
	decl	%ecx
	jne	.L4616
	movl	$.LC40, %edi
	jmp	.L11092
	.p2align 6,,7
.L11890:
	movzbl	53(%r13), %r10d
	andb	$9, %r10b
	decb	%r10b
	je	.L11898
.L4606:
	testq	%r12, %r12
	jne	.L4614
	testq	%r15, %r15
	jne	.L4614
	testb	$1, 53(%r13)
	je	.L4614
	testb	$8, 18(%r13)
	je	.L4614
	orb	$8, 18(%r14)
	jmp	.L4614
	.p2align 6,,7
.L11898:
	testq	%r15, %r15
	je	.L4606
	cmpb	$29, 16(%r13)
	jne	.L4606
	cmpb	$29, 16(%r15)
	jne	.L4606
	movq	8(%r13), %rdi
	movq	8(%r15), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L11899
	movzbl	53(%r15), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L4609
	movzbl	53(%r13), %r8d
	leal	0(,%rax,8), %esi
	leaq	88(%r13), %rdx
	andb	$-9, %r8b
	orb	%sil, %r8b
	movb	%r8b, 53(%r13)
	cmpq	%r15, current_function_decl(%rip)
	je	.L4610
	movq	88(%r15), %rax
.L4611:
	movq	136(%r15), %r10
	movq	72(%r15), %r9
	movq	%rax, (%rdx)
	movq	80(%r15), %rdi
	movzbl	17(%r13), %ecx
	movq	%r10, 136(%r13)
	movq	%r9, 72(%r13)
	movq	%rdi, 80(%r13)
	movzbl	17(%r15), %r11d
	movq	%r15, 96(%r13)
	andb	$127, %cl
	shrb	$7, %r11b
	movzbl	%r11b, %edx
	movl	%edx, %ebx
	salb	$7, %bl
	orb	%bl, %cl
	movb	%cl, 17(%r13)
	movzbl	53(%r15), %ecx
.L4609:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L4612
	movzbl	53(%r13), %r8d
	salb	$4, %al
	andb	$-17, %r8b
	orb	%al, %r8b
	movb	%r8b, 53(%r13)
	movl	128(%r15), %eax
	movl	%eax, 128(%r13)
.L4612:
	movq	8(%r15), %rdx
	cmpq	$0, 24(%rdx)
	je	.L4606
	cmpq	$0, 88(%r15)
	je	.L4606
	movq	8(%r13), %rsi
	cmpq	$0, 24(%rsi)
	jne	.L4606
	movq	%rdx, 8(%r13)
	jmp	.L4606
.L4610:
	xorl	%eax, %eax
	jmp	.L4611
	.p2align 6,,7
.L11899:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L4606
	.p2align 6,,7
.L11889:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4603
	jmp	.L11091
.L11888:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L11900
.L4578:
	cmpq	$0, 40(%r14)
	jne	.L4579
	testb	$8, 18(%r13)
	je	.L4579
	orb	$8, 18(%r14)
.L4579:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L11901
.L4581:
	movq	%r13, 40(%r14)
	movzbl	16(%r13), %edx
.L4580:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L4592
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L4582
	testb	$1, 18(%rcx)
	je	.L4582
	orb	$1, 18(%r13)
	movq	72(%r14), %rax
.L4582:
	testq	%rax, %rax
	je	.L4592
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L4587
	testb	$8, 17(%rcx)
	je	.L4587
	orb	$8, 17(%r13)
	movq	72(%r14), %rax
.L4587:
	testq	%rax, %rax
	je	.L4592
	cmpq	$0, 8(%rax)
	je	.L4592
	cmpb	$29, %dl
	je	.L11902
.L4595:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L4592:
	testb	$8, 18(%r14)
	je	.L4601
	cmpb	$32, %dl
	je	.L4601
	testb	$8, 18(%r13)
	jne	.L4601
	testb	$1, 53(%r13)
	jne	.L4601
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L4597
	cmpq	$0, 8(%rax)
	jne	.L11903
.L4597:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11237:
	xorl	%eax, %eax
	call	warning
	jmp	.L10562
.L11903:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11237
.L11902:
	movq	8(%r13), %r9
	movq	integer_type_node(%rip), %rdi
	cmpq	%rdi, 8(%r9)
	jne	.L4595
	jmp	.L4592
	.p2align 6,,7
.L11901:
	cmpq	$0, -2312(%rbp)
	je	.L4581
	movq	-2312(%rbp), %r11
	cmpb	$32, 16(%r11)
	jne	.L4580
	jmp	.L4581
.L11900:
	testb	$8, 54(%r13)
	jne	.L4578
	andb	$-9, 18(%r13)
	jmp	.L4578
	.p2align 6,,7
.L10561:
	movq	global_binding_level(%rip), %rax
	jmp	.L4558
.L11887:
	testl	%ecx, %ecx
	jg	.L11090
	testl	%ebx, %ebx
	je	.L4564
	movq	%rdx, %rsi
	movq	%r14, %rdi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11090
	.p2align 6,,7
.L4572:
	movq	8(%rdx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rdx
	jmp	.L4564
.L11886:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rdx
	je	.L4564
	testq	%rax, %rax
	je	.L10106
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rdx
	jmp	.L4562
	.p2align 6,,7
.L11885:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L4555
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r14), %rdi
	call	warning_with_decl
	jmp	.L4555
	.p2align 6,,7
.L10911:
	movq	8(%r13), %rdx
	movq	80(%rdx), %r12
	testq	%r12, %r12
	je	.L4419
	movzbl	16(%r12), %eax
	cmpb	$32, %al
	je	.L4418
.L4419:
	movq	global_binding_level(%rip), %r11
	movq	%r13, %r12
	cmpq	%r11, current_binding_level(%rip)
	jne	.L10554
	movq	%r13, 80(%rdx)
.L10554:
	movzbl	16(%r13), %eax
.L4422:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	56(%r12), %rbx
	testq	%rbx, %rbx
	je	.L4546
	cmpq	$0, 72(%r12)
	je	.L11904
.L4546:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L4417
	cmpq	$0, 56(%rax)
	je	.L4417
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %r15
	cmpq	global_binding_level(%rip), %rbx
	je	.L11905
.L11089:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L4552:
	movq	%r12, 8(%r15)
	jmp	.L4417
.L11905:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4552
	jmp	.L11089
.L11904:
	cmpb	$32, 16(%r13)
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	sete	%r10b
	movq	8(%r13), %r15
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L4547
	cmpb	$1, 16(%r12)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	jmp	.L4546
.L4547:
	movq	%rbx, 72(%r13)
	jmp	.L4546
.L4418:
	movq	current_binding_level(%rip), %rsi
	movq	56(%r12), %r15
	cmpq	global_binding_level(%rip), %rsi
	jne	.L4422
	movq	32(%r15), %rcx
	cmpb	$36, (%rcx)
	jne	.L4422
	cmpb	$95, 1(%rcx)
	jne	.L4422
	movq	class_binding_level(%rip), %r9
	movq	%r13, 80(%rdx)
	movq	8(%r13), %r10
	testq	%r9, %r9
	movq	%r9, -2320(%rbp)
	movq	%r10, -952(%rbp)
	jne	.L4426
	testb	$-128, 66(%rsi)
	movq	%rsi, -2320(%rbp)
	je	.L4426
.L4430:
	movq	-2320(%rbp), %rcx
	movq	56(%rcx), %rbx
	testb	$-128, 66(%rbx)
	movq	%rbx, -2320(%rbp)
	jne	.L4430
.L4426:
	movq	-2320(%rbp), %rcx
	cmpq	global_binding_level(%rip), %rcx
	je	.L11906
	movq	-2320(%rbp), %r11
	movq	-952(%rbp), %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	8(%r11), %rdx
	call	saveable_tree_cons
	movq	-2320(%rbp), %r8
	movq	%rax, 8(%r8)
.L4432:
	testq	%r15, %r15
	je	.L4433
	movq	-952(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L4434
	movq	%r15, 80(%rcx)
.L4434:
	movq	-952(%rbp), %rbx
	cmpq	%rbx, 8(%r15)
	je	.L4435
	cmpb	$21, 16(%rbx)
	je	.L11907
.L4436:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L4438
	cmpq	$0, 32(%rax)
	je	.L4437
.L4438:
	movq	lang_name_cplusplus(%rip), %rdi
	cmpq	%rdi, current_lang_name(%rip)
	je	.L11908
.L4439:
	xorl	%ecx, %ecx
.L4474:
	testq	%rcx, %rcx
	jne	.L4475
.L10245:
	movq	-952(%rbp), %rdx
	movl	$32, %edi
	movq	%r15, %rsi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-952(%rbp), %rdi
	movq	%rax, -2328(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-2328(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11909
.L11085:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L4477:
	movq	-952(%rbp), %r10
	movq	%r10, 8(%r15)
.L4480:
	movq	32(%r15), %rax
	cmpb	$36, (%rax)
	je	.L11910
.L4482:
	movq	-952(%rbp), %rcx
	movq	80(%rcx), %rdx
	testq	%rdx, %rdx
	je	.L4513
	cmpb	$32, 16(%rdx)
	je	.L11911
.L4483:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4502
	movq	-2328(%rbp), %rax
	movq	56(%rax), %rdx
	testq	%rdx, %rdx
	movq	%rdx, -968(%rbp)
	je	.L10558
	movq	56(%rdx), %rsi
	testq	%rsi, %rsi
	je	.L4504
	movq	%rdx, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L4504:
	movq	-968(%rbp), %rdx
	movq	-2328(%rbp), %r8
	movq	%r8, 56(%rdx)
	movq	decl_obstack+24(%rip), %rdx
	leaq	8(%rdx), %rcx
	cmpq	decl_obstack+32(%rip), %rcx
	ja	.L11912
.L4506:
	movq	-2328(%rbp), %rsi
	movq	%rdx, %r11
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rsi, (%r11)
	cmpb	$32, 16(%rsi)
	je	.L11913
.L10558:
	movq	32(%r15), %rax
.L4513:
	cmpb	$36, (%rax)
	je	.L11914
.L4527:
	movq	current_class_type(%rip), %rdx
	movq	-2328(%rbp), %r9
	movq	-952(%rbp), %rdi
	testq	%rdx, %rdx
	movq	%r9, 80(%rdi)
	jne	.L4530
	cmpq	$0, current_function_decl(%rip)
	je	.L4529
.L4530:
	movq	lang_name_cplusplus(%rip), %rsi
	cmpq	%rsi, current_lang_name(%rip)
	je	.L4528
.L4529:
	movq	-2328(%rbp), %r10
	movq	%r15, 72(%r10)
.L4435:
	movq	-2320(%rbp), %rcx
	movzbl	66(%rcx), %esi
	andl	$15, %esi
	cmpl	$2, %esi
	je	.L11915
.L4433:
	movq	-952(%rbp), %rsi
	movq	80(%rsi), %rax
	cmpb	$32, 16(%rax)
	je	.L11916
	movq	-952(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-952(%rbp), %rdi
	movq	%rax, (%rdi)
.L11088:
	movzbl	16(%r12), %eax
	jmp	.L4422
.L11916:
	movq	%rax, (%rsi)
	jmp	.L11088
.L11915:
	movq	-952(%rbp), %rbx
	orb	$64, 18(%rbx)
	movq	80(%rbx), %rdx
	movq	current_class_type(%rip), %rax
	movq	%rdx, 56(%r15)
	cmpq	$0, 32(%rax)
	jne	.L4433
	movq	144(%rax), %r15
	movq	-2320(%rbp), %rax
	movq	8(%rax), %r11
	movq	%r11, 72(%r15)
	jmp	.L4433
.L4528:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L11917
	cmpq	$0, 32(%rdx)
	jne	.L4435
	movq	-2328(%rbp), %r8
	movq	80(%rdx), %rcx
	movl	$136, %esi
	cmpb	$32, 16(%r8)
	movq	72(%rcx), %rbx
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L4538
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2328(%rbp), %rbx
	movq	%rax, 72(%rbx)
	movq	-952(%rbp), %rdx
	movq	%rdx, 8(%rax)
.L4540:
	movq	-2328(%rbp), %r8
	movq	current_class_type(%rip), %r10
	movq	152(%r8), %r9
	movq	%r10, 64(%r8)
	movq	%r10, 16(%r9)
	jmp	.L4435
.L4538:
	movq	-2328(%rbp), %rdi
	movq	%r15, 72(%rdi)
	jmp	.L4540
.L11917:
	movq	-2328(%rbp), %rcx
	movq	112(%rax), %rbx
	movl	$136, %esi
	cmpb	$32, 16(%rcx)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L4533
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2328(%rbp), %rbx
	movq	%rax, 72(%rbx)
	movq	-952(%rbp), %rdx
	movq	%rdx, 8(%rax)
.L4535:
	movq	current_function_decl(%rip), %rsi
	movq	-2328(%rbp), %r9
	movq	%rsi, 64(%r9)
	jmp	.L4435
.L4533:
	movq	-2328(%rbp), %rdi
	movq	%r15, 72(%rdi)
	jmp	.L4535
.L11914:
	cmpb	$95, 1(%rax)
	jne	.L4527
	movq	-2328(%rbp), %r11
	orb	$64, 53(%r11)
	jmp	.L4527
.L11913:
	cmpq	$0, 72(%rsi)
	jne	.L10558
	movq	8(%rsi), %rdi
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$136, %esi
	movq	%rdi, -976(%rbp)
	movl	$1, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L4508
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-968(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-968(%rbp), %r8
	movl	24(%r8), %eax
	movq	32(%r8), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2328(%rbp), %r9
	movq	%rax, 72(%r9)
	movq	-976(%rbp), %rsi
	movq	%rsi, 8(%rax)
	jmp	.L10558
.L4508:
	movq	-968(%rbp), %rdi
	movq	-2328(%rbp), %r11
	movq	%rdi, 72(%r11)
	jmp	.L10558
.L11912:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L4506
.L4502:
	movq	-2328(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -2328(%rbp)
	jmp	.L10558
.L11911:
	movq	global_binding_level(%rip), %rdx
	cmpq	%rdx, current_binding_level(%rip)
	je	.L4484
	movq	48(%r15), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L4485
.L4484:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L4486
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L10103
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L4487
	movq	144(%rdi), %r11
	testb	$1, 3(%r11)
	jne	.L11918
.L4487:
	testq	%rcx, %rcx
	jne	.L10103
.L10104:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10103
.L4486:
	movq	40(%r15), %rcx
.L4485:
	testq	%rcx, %rcx
	je	.L4489
.L10103:
	cmpb	$32, 16(%rcx)
	je	.L4489
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L4489
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L4497
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11086
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L11919
.L11086:
	movq	%rax, %rcx
.L4489:
	movq	-952(%rbp), %r10
	cmpq	80(%r10), %rcx
	jne	.L4483
	jmp	.L10558
.L11919:
	testl	%edx, %edx
	jg	.L11086
	movl	$1, %r9d
	testl	%r9d, %r9d
	je	.L4489
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11086
.L4497:
	movq	8(%rcx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rcx
	jmp	.L4489
.L11918:
	movl	$1, %esi
	xorl	%ecx, %ecx
	cmpl	$-1, %esi
	movq	%r15, %rsi
	sete	%cl
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L4489
	testq	%rax, %rax
	je	.L10104
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L4487
.L11910:
	cmpb	$95, 1(%rax)
	jne	.L4482
	jmp	.L4513
.L11909:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4477
	jmp	.L11085
	.p2align 6,,7
.L4475:
	movq	80(%rcx), %rax
	movq	%rax, -2328(%rbp)
	jmp	.L4480
.L11908:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L4441
	movq	80(%rax), %rbx
.L4441:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L4474
.L4473:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L4450
	cmpl	$32, %eax
	je	.L11920
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L4444:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L4474
	jmp	.L4473
.L11920:
	movq	8(%rbx), %r10
	movq	-952(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%r10), %r9
	movq	72(%r9), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10885
	movq	64(%rbx), %rbx
	jmp	.L4444
.L10885:
	movq	32(%rax), %rcx
	jmp	.L4474
.L4450:
	movq	-952(%rbp), %rax
	movq	80(%rax), %rcx
	movq	56(%rcx), %rbx
	testq	%rbx, %rbx
	je	.L4439
	movq	global_binding_level(%rip), %rdx
	cmpq	%rdx, current_binding_level(%rip)
	je	.L4453
	movq	48(%rbx), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L4454
.L4453:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L4455
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10101
	movq	32(%rdi), %r11
	testq	%r11, %r11
	movq	%r11, -960(%rbp)
	jne	.L4456
	movq	144(%rdi), %rsi
	testb	$1, 3(%rsi)
	jne	.L11921
.L4456:
	testq	%rcx, %rcx
	jne	.L10101
.L10102:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10101
.L4455:
	movq	40(%rbx), %rcx
.L4454:
	testq	%rcx, %rcx
	je	.L10245
.L10101:
	cmpb	$32, 16(%rcx)
	je	.L4474
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L4474
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L4466
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11084
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L11922
.L11084:
	movq	%rax, %rcx
	jmp	.L4474
.L11922:
	testl	%edx, %edx
	jg	.L11084
	movl	$1, %r9d
	testl	%r9d, %r9d
	je	.L4474
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11084
.L4466:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L4474
	jmp	.L11084
.L11921:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L4474
	testq	%rax, %rax
	je	.L10102
	cmpb	$32, 16(%rax)
	cmovne	-960(%rbp), %rcx
	jmp	.L4456
.L4437:
	movq	-952(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r15, %rsi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -984(%rbp)
	je	.L11923
.L11087:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L4515:
	movq	-952(%rbp), %r9
	movq	%r9, 8(%r15)
	movq	-984(%rbp), %rbx
	movq	56(%rbx), %rax
	testq	%rax, %rax
	movq	%rax, -992(%rbp)
	je	.L4518
	movq	56(%rax), %rsi
	testq	%rsi, %rsi
	je	.L4519
	movq	class_binding_level(%rip), %rbx
	movq	%rax, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L4519:
	movq	decl_obstack+24(%rip), %rdx
	movq	-984(%rbp), %r8
	movq	-992(%rbp), %r10
	leaq	8(%rdx), %rsi
	cmpq	decl_obstack+32(%rip), %rsi
	movq	%r8, 56(%r10)
	ja	.L11924
.L4521:
	movq	-984(%rbp), %rbx
	movq	%rdx, %rcx
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%rcx)
	cmpb	$32, 16(%rbx)
	je	.L11925
.L4518:
	movq	-984(%rbp), %rbx
	movq	%rbx, -2328(%rbp)
	jmp	.L10558
.L11925:
	cmpq	$0, 72(%rbx)
	jne	.L4518
	movq	-984(%rbp), %rdx
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%rdx), %rax
	movq	%rax, -1000(%rbp)
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L4523
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-992(%rbp), %r8
	cmpb	$1, 16(%r8)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movq	-992(%rbp), %r9
	movq	32(%rbx), %rdx
	movq	-992(%rbp), %rsi
	movq	32(%r9), %rcx
	movl	24(%rsi), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-984(%rbp), %rdi
	movq	%rax, 72(%rdi)
	movq	-1000(%rbp), %r11
	movq	%r11, 8(%rax)
	jmp	.L4518
.L4523:
	movq	-992(%rbp), %rdx
	movq	-984(%rbp), %rax
	movq	%rdx, 72(%rax)
	jmp	.L4518
.L11924:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L4521
.L11923:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4515
	jmp	.L11087
	.p2align 6,,7
.L11907:
	cmpq	$0, class_binding_level(%rip)
	je	.L4436
	movq	144(%rbx), %rsi
	testb	$16, 3(%rsi)
	jne	.L4435
	jmp	.L4436
	.p2align 6,,7
.L11906:
	movq	8(%rcx), %rdx
	movq	-952(%rbp), %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	perm_tree_cons
	movq	-2320(%rbp), %rdx
	movq	%rax, 8(%rdx)
	jmp	.L4432
	.p2align 6,,7
.L4403:
	movq	-2312(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10553
	movl	flag_traditional(%rip), %esi
	testl	%esi, %esi
	jne	.L4408
	testb	$8, 18(%r14)
	je	.L4408
	testb	$8, 18(%r13)
	jne	.L4408
	testb	$9, 53(%r13)
	jne	.L4408
	cmpq	%r13, current_function_decl(%rip)
	je	.L11926
.L4412:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L4413
	cmpq	$0, 8(%rax)
	jne	.L11927
.L4413:
	movq	-2312(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11083:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-2312(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L4408
.L11927:
	movq	-2312(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11083
.L11926:
	movq	-2312(%rbp), %rdi
	movq	%rdi, current_function_decl(%rip)
	jmp	.L4412
	.p2align 6,,7
.L11285:
	cmpq	$0, 64(%rcx)
	jne	.L4401
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L4401
.L11284:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -2312(%rbp)
	call	error_with_decl
	jmp	.L4399
.L4392:
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.L4394
	.p2align 4,,7
.L4398:
	cmpq	%r14, 56(%rdi)
	je	.L4394
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L4398
.L4394:
	movq	%rdi, -2312(%rbp)
	jmp	.L4391
.L11283:
	movq	40(%r14), %r8
	movq	%r8, -2312(%rbp)
	jmp	.L4391
.L11282:
	movq	56(%r13), %r14
	jmp	.L4388
.L11281:
	testb	$32, 53(%r13)
	jne	.L4386
	jmp	.L4387
.L10549:
	movzbl	16(%r13), %edx
	jmp	.L4386
.L11280:
	leal	(%rcx,%rcx), %r10d
	movq	builtin_type_tdescs_arr(%rip), %rdi
	xorl	%eax, %eax
	movslq	%r10d,%rsi
	movl	%r10d, builtin_type_tdescs_max(%rip)
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L4382
.L4372:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4373
	movq	8, %rsi
	xorl	%edi, %edi
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	jmp	.L11081
.L4371:
	xorl	%esi, %esi
	movl	$32, %edi
	movq	%r14, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11928
.L11082:
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L4378:
	movq	$0, 8
	jmp	.L4370
.L11928:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4378
	jmp	.L11082
	.p2align 6,,7
.L11279:
	movq	-2264(%rbp), %rsi
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r14, %rdx
	call	build_decl
	movq	%rax, %r13
	movq	112(%rax), %r15
	movq	current_binding_level(%rip), %rax
	movq	%rax, -2296(%rbp)
	movq	current_function_decl(%rip), %rax
	cmpq	%rax, %r13
	je	.L10530
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L11929
.L4090:
	movq	%rax, 64(%r13)
.L4089:
	cmpb	$32, %dl
	je	.L11930
.L4091:
	testq	%r15, %r15
	je	.L4092
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L11931
	cmpq	$0, 48(%r15)
	jne	.L4095
	movq	$0, -2304(%rbp)
.L4094:
	cmpq	$0, -2304(%rbp)
	je	.L4112
	movq	-2304(%rbp), %r8
	cmpq	error_mark_node(%rip), %r8
	je	.L11932
.L4102:
	cmpq	$0, -2304(%rbp)
	je	.L10534
	movq	-2304(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L11933
.L4104:
	movq	-2304(%rbp), %r11
	testq	%r11, %r11
	movq	24(%r11), %r12
	movq	%r11, %rsi
	movl	32(%r11), %ebx
	je	.L10534
	movzbl	16(%r11), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L4106
	cmpb	$32, %al
	je	.L4112
	cmpb	$32, %dl
	je	.L10910
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10534
.L10538:
	movq	global_binding_level(%rip), %rax
.L4111:
	movq	current_binding_level(%rip), %rbx
	cmpq	%rax, %rbx
	je	.L4365
	movq	-2264(%rbp), %r13
	movq	8(%r13), %rsi
	movq	%r13, %rdi
.L11080:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L4366:
	movq	-2264(%rbp), %rdx
	movl	$32, %eax
	cmpl	$31, %eax
	movq	$0, 8(%rdx)
	jg	.L4088
	movq	-2304(%rbp), %r12
	movq	%r12, 40(%rdx)
	jmp	.L4088
.L4365:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4366
	movq	-2264(%rbp), %r11
	movq	8(%r11), %rsi
	movq	%r11, %rdi
	jmp	.L11080
.L10534:
	movzbl	16(%r13), %edx
.L4112:
	cmpb	$32, %dl
	je	.L10910
.L4120:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L4258
	movq	40(%r15), %rax
	testq	%rax, %rax
	je	.L4258
	testb	$1, 53(%rax)
	jne	.L4259
	testb	$8, 18(%rax)
	je	.L4258
.L4259:
	andb	$8, %dl
	je	.L11934
.L4258:
	movl	flag_traditional(%rip), %r12d
	testl	%r12d, %r12d
	je	.L10546
	testb	$1, 53(%r13)
	je	.L10546
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rcx
	cmpq	%rcx, current_binding_level(%rip)
	je	.L4262
	movq	48(%r15), %r10
	testq	%r10, %r10
	movq	%r10, %rcx
	jne	.L4263
.L4262:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L4264
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L10099
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L4265
	movq	144(%rdi), %rsi
	testb	$1, 3(%rsi)
	jne	.L11935
.L4265:
	testq	%rcx, %rcx
	jne	.L10099
.L10100:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10099
.L4264:
	movq	40(%r15), %rcx
.L4263:
	testq	%rcx, %rcx
	je	.L10244
.L10099:
	cmpb	$32, 16(%rcx)
	je	.L4267
	movl	looking_for_typename(%rip), %esi
	testl	%esi, %esi
	js	.L4267
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L4275
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11077
	testl	%ebx, %ebx
	jle	.L11936
.L11077:
	movq	%rax, %rcx
.L4267:
	testq	%rcx, %rcx
	jne	.L10546
.L10244:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -2296(%rbp)
.L4261:
	cmpq	%rax, -2296(%rbp)
	je	.L11937
	movq	current_binding_level(%rip), %rbx
	movq	48(%r15), %r12
	movq	40(%r15), %r8
	cmpq	%rax, %rbx
	je	.L11938
.L11078:
	movq	16(%rbx), %rdx
	movq	%r15, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	movq	%r8, -2808(%rbp)
	call	tree_cons
	movq	-2808(%rbp), %r8
	movq	%rax, 16(%rbx)
.L4306:
	testq	%r12, %r12
	movq	%r13, 48(%r15)
	je	.L11939
.L4317:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L4319
	testq	%r12, %r12
	je	.L4320
	testb	$1, 53(%r13)
	jne	.L4320
	cmpb	$34, 16(%r12)
	je	.L11940
.L4320:
	movl	warn_shadow(%rip), %edx
	testl	%edx, %edx
	je	.L4319
	testb	$1, 53(%r13)
	jne	.L4319
	movl	32(%r13), %edi
	testl	%edi, %edi
	je	.L4319
	testq	%rax, %rax
	jne	.L4319
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L4325
	cmpb	$34, 16(%r12)
	je	.L11941
.L4325:
	cmpq	$0, 56(%r15)
	je	.L4327
	movl	$.LC41, %edi
.L4326:
	testq	%rdi, %rdi
	jne	.L11079
.L4319:
	testq	%r12, %r12
	je	.L10547
	movq	%r12, %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	-2296(%rbp), %r12
	movq	16(%r12), %rdx
	call	tree_cons
	movq	%rax, 16(%r12)
.L10547:
	movzbl	16(%r13), %edx
.L4304:
	leal	-128(%rdx), %r9d
	cmpb	$1, %r9b
	jbe	.L4092
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L4092
	cmpb	$18, 16(%rcx)
	je	.L11942
.L4336:
	testb	$64, 46(%rcx)
	je	.L4092
.L4335:
	movq	-2296(%rbp), %rcx
	movzwl	64(%rcx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rcx)
	je	.L11943
.L10548:
	movzbl	16(%r13), %edx
.L4092:
	cmpb	$32, %dl
	je	.L11944
.L4338:
	movq	-2296(%rbp), %rdi
	movq	global_binding_level(%rip), %rax
	movq	(%rdi), %rdx
	cmpq	%rax, %rdi
	movq	%rdx, (%r13)
	movq	%r13, (%rdi)
	je	.L11945
.L4364:
	movq	%r13, -2304(%rbp)
	jmp	.L4111
.L11945:
	testb	$4, 17(%r13)
	jne	.L4364
	xorl	%eax, %eax
	movl	$124, %edi
	call	my_friendly_abort
	movq	global_binding_level(%rip), %rax
	jmp	.L4364
.L11944:
	testq	%r15, %r15
	je	.L4338
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L4339
	cmpq	class_binding_level(%rip), %rax
	je	.L4340
	movq	48(%r15), %rax
	testq	%rax, %rax
	je	.L4344
	cmpb	$32, 16(%rax)
	je	.L4342
.L4344:
	cmpq	$0, current_class_type(%rip)
	je	.L4339
	movq	56(%r15), %rax
	testq	%rax, %rax
	je	.L4339
	cmpb	$32, 16(%rax)
	je	.L4342
.L4339:
	movq	40(%r15), %rax
	testq	%rax, %rax
	je	.L4343
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L4342
	cmpb	$-127, %dl
	je	.L11946
.L4343:
	movq	current_class_name(%rip), %r15
	testq	%r15, %r15
	je	.L4338
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L11947
.L4350:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L4354
	cmpq	class_binding_level(%rip), %rax
	je	.L4355
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L4359
	cmpb	$32, 16(%rax)
	je	.L4357
.L4359:
	cmpq	$0, current_class_type(%rip)
	je	.L4354
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L4354
	cmpb	$32, 16(%rax)
	je	.L4357
.L4354:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L4338
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L4357
	cmpb	$-127, %dl
	jne	.L4338
	movq	$0, 8(%rbx)
	jmp	.L4338
.L4357:
	movq	8(%rax), %r15
	movq	%r15, 8(%rbx)
	jmp	.L4338
.L4355:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L4359
.L11947:
	cmpb	$32, 16(%r13)
	movq	56(%r13), %rbx
	sete	%sil
	movq	8(%r13), %r12
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$136, %esi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r15)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r15), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r15), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r12, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L4350
.L11946:
	movq	$0, 8(%r15)
	jmp	.L4343
.L4342:
	movq	8(%rax), %r10
	movq	%r10, 8(%r15)
	jmp	.L4343
.L4340:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L4344
.L11943:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10548
.L11942:
	movq	8(%rcx), %rbx
	testb	$64, 46(%rbx)
	jne	.L4335
	jmp	.L4336
.L11079:
	movq	32(%r15), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L4319
.L4327:
	testq	%r12, %r12
	je	.L4329
	movl	$.LC42, %edi
	jmp	.L4326
.L4329:
	testq	%r8, %r8
	movl	$.LC43, %r11d
	cmovne	%r11, %rdi
	jmp	.L4326
.L11941:
	movl	$.LC40, %edi
	jmp	.L4326
.L11940:
	cmpb	$34, 16(%r13)
	je	.L4320
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r8
	movq	56(%r8), %rax
	je	.L4321
	movq	56(%rax), %rax
.L4321:
	movzbl	66(%rax), %esi
	andl	$15, %esi
	decl	%esi
	jne	.L4319
	movl	$.LC40, %edi
	jmp	.L11079
	.p2align 6,,7
.L11939:
	movzbl	53(%r13), %r9d
	andb	$9, %r9b
	decb	%r9b
	je	.L11948
.L4309:
	testq	%r12, %r12
	jne	.L4317
	testq	%r8, %r8
	jne	.L4317
	testb	$1, 53(%r13)
	je	.L4317
	testb	$8, 18(%r13)
	je	.L4317
	orb	$8, 18(%r15)
	jmp	.L4317
	.p2align 6,,7
.L11948:
	testq	%r8, %r8
	je	.L4309
	cmpb	$29, 16(%r13)
	jne	.L4309
	cmpb	$29, 16(%r8)
	jne	.L4309
	movq	8(%r8), %rsi
	movq	8(%r13), %rdi
	xorl	%eax, %eax
	movl	$1, %edx
	movq	%r8, -2808(%rbp)
	call	comptypes
	movq	-2808(%rbp), %r8
	testl	%eax, %eax
	je	.L11949
	movzbl	53(%r8), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L4312
	movzbl	53(%r13), %ebx
	leal	0(,%rax,8), %ecx
	leaq	88(%r13), %rdx
	andb	$-9, %bl
	orb	%cl, %bl
	movb	%bl, 53(%r13)
	cmpq	%r8, current_function_decl(%rip)
	je	.L4313
	movq	88(%r8), %rax
.L4314:
	movq	136(%r8), %rbx
	movq	72(%r8), %r9
	movq	%rax, (%rdx)
	movq	80(%r8), %r11
	movzbl	17(%r13), %r10d
	movq	%rbx, 136(%r13)
	movq	%r9, 72(%r13)
	movq	%r11, 80(%r13)
	movzbl	17(%r8), %edi
	movq	%r8, 96(%r13)
	andb	$127, %r10b
	shrb	$7, %dil
	movzbl	%dil, %edx
	movl	%edx, %esi
	salb	$7, %sil
	orb	%sil, %r10b
	movb	%r10b, 17(%r13)
	movzbl	53(%r8), %ecx
.L4312:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L4315
	movzbl	53(%r13), %ecx
	salb	$4, %al
	andb	$-17, %cl
	orb	%al, %cl
	movb	%cl, 53(%r13)
	movl	128(%r8), %eax
	movl	%eax, 128(%r13)
.L4315:
	movq	8(%r8), %rdx
	cmpq	$0, 24(%rdx)
	je	.L4309
	cmpq	$0, 88(%r8)
	je	.L4309
	movq	8(%r13), %r10
	cmpq	$0, 24(%r10)
	jne	.L4309
	movq	%rdx, 8(%r13)
	jmp	.L4309
.L4313:
	xorl	%eax, %eax
	jmp	.L4314
.L11949:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	movq	-2808(%rbp), %r8
	jmp	.L4309
	.p2align 6,,7
.L11938:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4306
	jmp	.L11078
.L11937:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L11950
.L4281:
	cmpq	$0, 40(%r15)
	jne	.L4282
	testb	$8, 18(%r13)
	je	.L4282
	orb	$8, 18(%r15)
.L4282:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L11951
.L4284:
	movq	%r13, 40(%r15)
	movzbl	16(%r13), %edx
.L4283:
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L4295
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L4285
	testb	$1, 18(%rcx)
	je	.L4285
	orb	$1, 18(%r13)
	movq	72(%r15), %rax
.L4285:
	testq	%rax, %rax
	je	.L4295
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L4290
	testb	$8, 17(%rcx)
	je	.L4290
	orb	$8, 17(%r13)
	movq	72(%r15), %rax
.L4290:
	testq	%rax, %rax
	je	.L4295
	cmpq	$0, 8(%rax)
	je	.L4295
	cmpb	$29, %dl
	je	.L11952
.L4298:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L4295:
	testb	$8, 18(%r15)
	je	.L4304
	cmpb	$32, %dl
	je	.L4304
	testb	$8, 18(%r13)
	jne	.L4304
	testb	$1, 53(%r13)
	jne	.L4304
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L4300
	cmpq	$0, 8(%rax)
	jne	.L11953
.L4300:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11236:
	xorl	%eax, %eax
	call	warning
	jmp	.L10547
.L11953:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11236
.L11952:
	movq	8(%r13), %r11
	movq	integer_type_node(%rip), %rdi
	cmpq	%rdi, 8(%r11)
	jne	.L4298
	jmp	.L4295
	.p2align 6,,7
.L11951:
	cmpq	$0, -2304(%rbp)
	je	.L4284
	movq	-2304(%rbp), %r8
	cmpb	$32, 16(%r8)
	jne	.L4283
	jmp	.L4284
.L11950:
	testb	$8, 54(%r13)
	jne	.L4281
	andb	$-9, 18(%r13)
	jmp	.L4281
	.p2align 6,,7
.L10546:
	movq	global_binding_level(%rip), %rax
	jmp	.L4261
.L11936:
	testl	%esi, %esi
	jg	.L11077
	testl	%ebx, %ebx
	je	.L4267
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11077
	.p2align 6,,7
.L4275:
	movq	8(%rcx), %rdx
	cmpq	error_mark_node(%rip), %rdx
	cmove	%rdx, %rcx
	jmp	.L4267
.L11935:
	xorl	%ecx, %ecx
	movq	%r15, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L4267
	testq	%rax, %rax
	je	.L10100
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L4265
	.p2align 6,,7
.L11934:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L4258
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r15), %rdi
	call	warning_with_decl
	jmp	.L4258
	.p2align 6,,7
.L10910:
	movq	8(%r13), %rdx
	movq	80(%rdx), %rcx
	testq	%rcx, %rcx
	movq	%rcx, -2288(%rbp)
	je	.L4122
	movzbl	16(%rcx), %eax
	cmpb	$32, %al
	je	.L4121
.L4122:
	movq	global_binding_level(%rip), %r9
	movq	%r13, -2288(%rbp)
	cmpq	%r9, current_binding_level(%rip)
	jne	.L10539
	movq	%r13, 80(%rdx)
.L10539:
	movzbl	16(%r13), %eax
.L4125:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%bl
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	movq	-2288(%rbp), %rax
	movq	56(%rax), %rbx
	testq	%rbx, %rbx
	je	.L4249
	cmpq	$0, 72(%rax)
	je	.L11954
.L4249:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L4120
	cmpq	$0, 56(%rax)
	je	.L4120
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %rdi
	cmpq	global_binding_level(%rip), %rbx
	movq	%rdi, -944(%rbp)
	je	.L4254
	movq	-944(%rbp), %r11
	movq	8(%r11), %rsi
	movq	%r11, %rdi
.L11076:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L4255:
	movq	-944(%rbp), %rbx
	movq	%r12, 8(%rbx)
	jmp	.L4120
.L4254:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4255
	movq	-944(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
	jmp	.L11076
.L11954:
	movq	8(%r13), %r10
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	movq	%r10, -936(%rbp)
	cmpb	$32, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L4250
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	-936(%rbp), %rsi
	movq	%rsi, 8(%rax)
	jmp	.L4249
.L4250:
	movq	%rbx, 72(%r13)
	jmp	.L4249
.L4121:
	movq	-2288(%rbp), %rdi
	movq	current_binding_level(%rip), %rsi
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%rdi), %r12
	movq	%r12, -896(%rbp)
	jne	.L4125
	movq	-896(%rbp), %r10
	movq	32(%r10), %rcx
	cmpb	$36, (%rcx)
	jne	.L4125
	cmpb	$95, 1(%rcx)
	jne	.L4125
	movq	class_binding_level(%rip), %rbx
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rcx
	testq	%rbx, %rbx
	movq	%rbx, -2272(%rbp)
	movq	%rcx, -904(%rbp)
	jne	.L4129
	testb	$-128, 66(%rsi)
	movq	%rsi, -2272(%rbp)
	je	.L4129
.L4133:
	movq	-2272(%rbp), %rax
	movq	56(%rax), %rdx
	testb	$-128, 66(%rdx)
	movq	%rdx, -2272(%rbp)
	jne	.L4133
.L4129:
	movq	-2272(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11955
	movq	-2272(%rbp), %r11
	movq	-896(%rbp), %rdi
	xorl	%eax, %eax
	movq	-904(%rbp), %rsi
	movq	8(%r11), %rdx
	call	saveable_tree_cons
	movq	-2272(%rbp), %r8
	movq	%rax, 8(%r8)
.L4135:
	cmpq	$0, -896(%rbp)
	je	.L4136
	movq	-904(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L4137
	movq	-896(%rbp), %rsi
	movq	%rsi, 80(%rcx)
.L4137:
	movq	-896(%rbp), %r9
	movq	-904(%rbp), %rax
	cmpq	%rax, 8(%r9)
	je	.L4138
	cmpb	$21, 16(%rax)
	je	.L11956
.L4139:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L4141
	cmpq	$0, 32(%rax)
	je	.L4140
.L4141:
	movq	lang_name_cplusplus(%rip), %r10
	cmpq	%r10, current_lang_name(%rip)
	je	.L11957
.L4142:
	xorl	%ecx, %ecx
.L4177:
	testq	%rcx, %rcx
	jne	.L4178
.L10243:
	movq	-896(%rbp), %rsi
	movq	-904(%rbp), %rdx
	movl	$32, %edi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-904(%rbp), %rdi
	movq	%rax, -2280(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-2280(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L4179
	movq	-896(%rbp), %r10
	movq	8(%r10), %rsi
	movq	%r10, %rdi
.L11073:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L4180:
	movq	-904(%rbp), %r8
	movq	-896(%rbp), %rdx
	movq	%r8, 8(%rdx)
.L4183:
	movq	-896(%rbp), %r11
	movq	32(%r11), %rax
	cmpb	$36, (%rax)
	je	.L11958
.L4185:
	movq	-904(%rbp), %rsi
	movq	80(%rsi), %rdx
	testq	%rdx, %rdx
	je	.L4216
	cmpb	$32, 16(%rdx)
	je	.L11959
.L4186:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4205
	movq	-2280(%rbp), %rcx
	movq	56(%rcx), %r12
	testq	%r12, %r12
	je	.L10541
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L4207
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L4207:
	movq	decl_obstack+24(%rip), %rdx
	movq	-2280(%rbp), %rdi
	leaq	8(%rdx), %r9
	movq	%rdi, 56(%r12)
	cmpq	decl_obstack+32(%rip), %r9
	ja	.L11960
.L4209:
	movq	-2280(%rbp), %rbx
	movq	%rdx, %r10
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%r10)
	cmpb	$32, 16(%rbx)
	je	.L11961
.L10542:
	movq	-896(%rbp), %rbx
	movq	32(%rbx), %rax
.L4216:
	cmpb	$36, (%rax)
	je	.L11962
.L4230:
	movq	current_class_type(%rip), %rdx
	movq	-2280(%rbp), %rsi
	movq	-904(%rbp), %rcx
	testq	%rdx, %rdx
	movq	%rsi, 80(%rcx)
	jne	.L4233
	cmpq	$0, current_function_decl(%rip)
	je	.L4232
.L4233:
	movq	lang_name_cplusplus(%rip), %r9
	cmpq	%r9, current_lang_name(%rip)
	je	.L4231
.L4232:
	movq	-896(%rbp), %rdi
	movq	-2280(%rbp), %r10
	movq	%rdi, 72(%r10)
.L4138:
	movq	-2272(%rbp), %rax
	movzbl	66(%rax), %ecx
	andl	$15, %ecx
	cmpl	$2, %ecx
	je	.L11963
.L4136:
	movq	-904(%rbp), %rdx
	movq	80(%rdx), %rax
	cmpb	$32, 16(%rax)
	je	.L11964
	movq	-904(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-904(%rbp), %rcx
	movq	%rax, (%rcx)
	movq	-2288(%rbp), %r9
	movzbl	16(%r9), %eax
	jmp	.L4125
.L11964:
	movq	%rax, (%rdx)
	movq	-2288(%rbp), %r11
	movzbl	16(%r11), %eax
	jmp	.L4125
.L11963:
	movq	-904(%rbp), %rdi
	orb	$64, 18(%rdi)
	movq	80(%rdi), %rsi
	movq	-896(%rbp), %r10
	movq	current_class_type(%rip), %rax
	movq	%rsi, 56(%r10)
	cmpq	$0, 32(%rax)
	jne	.L4136
	movq	-2272(%rbp), %r8
	movq	144(%rax), %r12
	movq	8(%r8), %rdx
	movq	%rdx, 72(%r12)
	jmp	.L4136
.L4231:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L11965
	cmpq	$0, 32(%rdx)
	jne	.L4138
	movq	-2280(%rbp), %r11
	movq	80(%rdx), %r9
	movl	$136, %esi
	cmpb	$32, 16(%r11)
	movq	72(%r9), %rbx
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L4241
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	movq	-896(%rbp), %rdi
	cmpb	$1, 16(%rdi)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-896(%rbp), %r10
	movl	24(%r10), %eax
	movq	32(%r10), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2280(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-904(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L4243:
	movq	-2280(%rbp), %rbx
	movq	current_class_type(%rip), %r9
	movq	152(%rbx), %r11
	movq	%r9, 64(%rbx)
	movq	%r9, 16(%r11)
	jmp	.L4138
.L4241:
	movq	-896(%rbp), %r8
	movq	-2280(%rbp), %rdx
	movq	%r8, 72(%rdx)
	jmp	.L4243
.L11965:
	movq	-2280(%rbp), %rdx
	movq	112(%rax), %rbx
	movl	$136, %esi
	cmpb	$32, 16(%rdx)
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L4236
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-896(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-896(%rbp), %r9
	movl	24(%r9), %eax
	movq	32(%r9), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2280(%rbp), %rbx
	movq	%rax, 72(%rbx)
	movq	-904(%rbp), %r8
	movq	%r8, 8(%rax)
.L4238:
	movq	current_function_decl(%rip), %rdx
	movq	-2280(%rbp), %r12
	movq	%rdx, 64(%r12)
	jmp	.L4138
.L4236:
	movq	-896(%rbp), %rdi
	movq	-2280(%rbp), %r10
	movq	%rdi, 72(%r10)
	jmp	.L4238
.L11962:
	cmpb	$95, 1(%rax)
	jne	.L4230
	movq	-2280(%rbp), %rax
	orb	$64, 53(%rax)
	jmp	.L4230
.L11961:
	cmpq	$0, 72(%rbx)
	je	.L11966
.L10543:
	movq	-896(%rbp), %r11
	movq	32(%r11), %rax
	jmp	.L4216
.L11966:
	movq	-2280(%rbp), %r8
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%r8), %rdx
	movq	%rdx, -912(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L4211
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2280(%rbp), %r11
	movq	%rax, 72(%r11)
	movq	-912(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L10540:
	movq	-896(%rbp), %rdx
	movq	32(%rdx), %rax
	jmp	.L4216
.L4211:
	movq	-2280(%rbp), %rcx
	movq	%r12, 72(%rcx)
	jmp	.L10542
.L11960:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L4209
.L10541:
	movq	-896(%rbp), %r8
	movq	32(%r8), %rax
	jmp	.L4216
.L4205:
	movq	-2280(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -2280(%rbp)
	jmp	.L10543
.L11959:
	movq	global_binding_level(%rip), %r9
	movl	$1, %r12d
	cmpq	%r9, current_binding_level(%rip)
	je	.L4187
	movq	-896(%rbp), %rbx
	movq	48(%rbx), %rdi
	testq	%rdi, %rdi
	movq	%rdi, %rcx
	jne	.L4188
.L4187:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L4189
	movq	-896(%rbp), %r10
	movq	56(%r10), %rcx
	testq	%rcx, %rcx
	jne	.L10097
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L4190
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L11967
.L4190:
	testq	%rcx, %rcx
	jne	.L10097
.L10098:
	movq	-896(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10097
	movq	-896(%rbp), %r8
	movq	40(%r8), %rcx
.L4188:
	testq	%rcx, %rcx
	je	.L4192
.L10097:
	cmpb	$32, 16(%rcx)
	je	.L4192
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L4192
	movq	-896(%rbp), %r11
	movq	8(%r11), %rax
	testq	%rax, %rax
	je	.L4200
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11074
	testl	%r12d, %r12d
	jle	.L11968
.L11074:
	movq	%rax, %rcx
.L4192:
	movq	-904(%rbp), %rsi
	cmpq	80(%rsi), %rcx
	jne	.L4186
	jmp	.L10540
.L11968:
	testl	%edx, %edx
	jg	.L11074
	testl	%r12d, %r12d
	je	.L4192
	movq	-896(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11074
.L4200:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L4192
.L11967:
	xorl	%ecx, %ecx
	movq	-896(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L4192
	testq	%rax, %rax
	je	.L10098
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L4190
.L4189:
	movq	-896(%rbp), %rax
	movq	40(%rax), %rcx
	jmp	.L4188
.L11958:
	cmpb	$95, 1(%rax)
	jne	.L4185
	jmp	.L4216
.L4179:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4180
	movq	-896(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
	jmp	.L11073
.L4178:
	movq	80(%rcx), %rax
	movq	%rax, -2280(%rbp)
	jmp	.L4183
.L11957:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L4144
	movq	80(%rax), %rbx
.L4144:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L4177
.L4176:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L4153
	cmpl	$32, %eax
	je	.L11969
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L4147:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L4177
	jmp	.L4176
.L11969:
	movq	8(%rbx), %rdx
	movq	-904(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%rdx), %rcx
	movq	72(%rcx), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10884
	movq	64(%rbx), %rbx
	jmp	.L4147
.L10884:
	movq	32(%rax), %rcx
	jmp	.L4177
.L4153:
	movq	-904(%rbp), %rax
	movq	80(%rax), %r8
	movq	56(%r8), %rbx
	testq	%rbx, %rbx
	je	.L4142
	movq	global_binding_level(%rip), %r11
	cmpq	%r11, current_binding_level(%rip)
	je	.L4156
	movq	48(%rbx), %rsi
	testq	%rsi, %rsi
	movq	%rsi, %rcx
	jne	.L4157
.L4156:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L4158
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10095
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L4159
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L11970
.L4159:
	testq	%rcx, %rcx
	jne	.L10095
.L10096:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10095
.L4158:
	movq	40(%rbx), %rcx
.L4157:
	testq	%rcx, %rcx
	je	.L10243
.L10095:
	cmpb	$32, 16(%rcx)
	je	.L4177
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L4177
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L4169
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11072
	movl	$1, %r12d
	testl	%r12d, %r12d
	jle	.L11971
.L11072:
	movq	%rax, %rcx
	jmp	.L4177
.L11971:
	testl	%edx, %edx
	jg	.L11072
	movl	$1, %edi
	testl	%edi, %edi
	je	.L4177
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11072
.L4169:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L4177
	jmp	.L11072
.L11970:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L4177
	testq	%rax, %rax
	je	.L10096
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L4159
.L4140:
	movq	-896(%rbp), %rsi
	movq	-904(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -920(%rbp)
	je	.L4217
	movq	-896(%rbp), %r12
	movq	8(%r12), %rsi
	movq	%r12, %rdi
.L11075:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L4218:
	movq	-904(%rbp), %rdx
	movq	-896(%rbp), %r10
	movq	%rdx, 8(%r10)
	movq	-920(%rbp), %rdi
	movq	56(%rdi), %r12
	testq	%r12, %r12
	je	.L4221
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L4222
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L4222:
	movq	decl_obstack+24(%rip), %rdx
	movq	-920(%rbp), %rbx
	leaq	8(%rdx), %r8
	movq	%rbx, 56(%r12)
	cmpq	decl_obstack+32(%rip), %r8
	ja	.L11972
.L4224:
	movq	%rdx, %r11
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	-920(%rbp), %rdx
	movq	%rdx, (%r11)
	cmpb	$32, 16(%rdx)
	je	.L11973
.L4221:
	movq	-920(%rbp), %r12
	movq	%r12, -2280(%rbp)
	jmp	.L10543
.L11973:
	cmpq	$0, 72(%rdx)
	jne	.L4221
	movq	8(%rdx), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	%rax, -928(%rbp)
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L4226
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-920(%rbp), %rsi
	movq	%rax, 72(%rsi)
	movq	-928(%rbp), %rcx
	movq	%rcx, 8(%rax)
	jmp	.L4221
.L4226:
	movq	-920(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L4221
.L11972:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L4224
.L4217:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4218
	movq	-896(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
	jmp	.L11075
.L11956:
	cmpq	$0, class_binding_level(%rip)
	je	.L4139
	movq	144(%rax), %r12
	testb	$16, 3(%r12)
	jne	.L4138
	jmp	.L4139
.L11955:
	movq	-896(%rbp), %rdi
	movq	-904(%rbp), %rsi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%rbx)
	jmp	.L4135
	.p2align 6,,7
.L4106:
	movq	-2304(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10534
	movl	flag_traditional(%rip), %esi
	testl	%esi, %esi
	jne	.L10538
	testb	$8, 18(%r15)
	je	.L10538
	testb	$8, 18(%r13)
	jne	.L10538
	testb	$9, 53(%r13)
	jne	.L10538
	cmpq	%r13, current_function_decl(%rip)
	je	.L11974
.L4115:
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L4116
	cmpq	$0, 8(%rax)
	jne	.L11975
.L4116:
	movq	-2304(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11071:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-2304(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L10538
.L11975:
	movq	-2304(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11071
.L11974:
	movq	-2304(%rbp), %r13
	movq	%r13, current_function_decl(%rip)
	jmp	.L4115
	.p2align 6,,7
.L11933:
	cmpq	$0, 64(%rcx)
	jne	.L4104
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L4104
.L11932:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -2304(%rbp)
	call	error_with_decl
	jmp	.L4102
.L4095:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L4097
.L4101:
	cmpq	%r15, 56(%rax)
	je	.L4097
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L4101
.L4097:
	movq	%rax, -2304(%rbp)
	jmp	.L4094
.L11931:
	movq	40(%r15), %rax
	jmp	.L4097
.L11930:
	movq	56(%r13), %r15
	jmp	.L4091
.L11929:
	testb	$32, 53(%r13)
	jne	.L4089
	jmp	.L4090
.L10530:
	movzbl	16(%r13), %edx
	jmp	.L4089
.L11278:
	leal	(%rcx,%rcx), %eax
	movq	builtin_type_tdescs_arr(%rip), %rdi
	movslq	%eax,%rsi
	movl	%eax, builtin_type_tdescs_max(%rip)
	xorl	%eax, %eax
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L4082
.L4072:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4073
	movq	8, %rsi
	xorl	%edi, %edi
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	jmp	.L11069
.L4071:
	xorl	%esi, %esi
	movl	$32, %edi
	movq	%r14, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L11976
.L11070:
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L4078:
	movq	$0, 8
	jmp	.L4070
.L11976:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4078
	jmp	.L11070
	.p2align 6,,7
.L11277:
	movq	-2216(%rbp), %rsi
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r14, %rdx
	call	build_decl
	movq	current_binding_level(%rip), %r11
	movq	%rax, %r13
	movq	112(%rax), %r15
	movq	current_function_decl(%rip), %rax
	movq	%r11, -2248(%rbp)
	cmpq	%rax, %r13
	je	.L10511
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L11977
.L3790:
	movq	%rax, 64(%r13)
.L3789:
	cmpb	$32, %dl
	je	.L11978
.L3791:
	testq	%r15, %r15
	je	.L3792
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L11979
	cmpq	$0, 48(%r15)
	jne	.L3795
	movq	$0, -2256(%rbp)
.L3794:
	cmpq	$0, -2256(%rbp)
	je	.L3812
	movq	-2256(%rbp), %rax
	cmpq	error_mark_node(%rip), %rax
	je	.L11980
.L3802:
	cmpq	$0, -2256(%rbp)
	je	.L10515
	movq	-2256(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L11981
.L3804:
	movq	-2256(%rbp), %r8
	testq	%r8, %r8
	movq	24(%r8), %r12
	movq	%r8, %rsi
	movl	32(%r8), %ebx
	je	.L10515
	movzbl	16(%r8), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L3806
	cmpb	$32, %al
	je	.L3812
	cmpb	$32, %dl
	je	.L10909
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10515
.L10519:
	movq	global_binding_level(%rip), %rax
.L3811:
	movq	current_binding_level(%rip), %rbx
	cmpq	%rax, %rbx
	je	.L4065
	movq	-2216(%rbp), %r13
	movq	8(%r13), %rsi
	movq	%r13, %rdi
.L11068:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L4066:
	movq	-2216(%rbp), %rdx
	movl	$32, %eax
	cmpl	$31, %eax
	movq	$0, 8(%rdx)
	jg	.L3788
	movq	-2256(%rbp), %r12
	movq	%r12, 40(%rdx)
	jmp	.L3788
.L4065:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4066
	movq	-2216(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
	jmp	.L11068
.L10515:
	movzbl	16(%r13), %edx
.L3812:
	cmpb	$32, %dl
	je	.L10909
.L3820:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L3958
	movq	40(%r15), %rax
	testq	%rax, %rax
	je	.L3958
	testb	$1, 53(%rax)
	jne	.L3959
	testb	$8, 18(%rax)
	je	.L3958
.L3959:
	andb	$8, %dl
	je	.L11982
.L3958:
	movl	flag_traditional(%rip), %r12d
	testl	%r12d, %r12d
	je	.L10527
	testb	$1, 53(%r13)
	je	.L10527
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rcx
	cmpq	%rcx, current_binding_level(%rip)
	je	.L3962
	movq	48(%r15), %r10
	testq	%r10, %r10
	movq	%r10, %rcx
	jne	.L3963
.L3962:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L3964
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L10093
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L3965
	movq	144(%rdi), %rsi
	testb	$1, 3(%rsi)
	jne	.L11983
.L3965:
	testq	%rcx, %rcx
	jne	.L10093
.L10094:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10093
.L3964:
	movq	40(%r15), %rcx
.L3963:
	testq	%rcx, %rcx
	je	.L10242
.L10093:
	cmpb	$32, 16(%rcx)
	je	.L3967
	movl	looking_for_typename(%rip), %esi
	testl	%esi, %esi
	js	.L3967
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L3975
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11065
	testl	%ebx, %ebx
	jle	.L11984
.L11065:
	movq	%rax, %rcx
.L3967:
	testq	%rcx, %rcx
	jne	.L10527
.L10242:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -2248(%rbp)
.L3961:
	cmpq	%rax, -2248(%rbp)
	je	.L11985
	movq	current_binding_level(%rip), %rbx
	movq	48(%r15), %r12
	movq	40(%r15), %r8
	cmpq	%rax, %rbx
	je	.L11986
.L11066:
	movq	16(%rbx), %rdx
	movq	%r15, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	movq	%r8, -2808(%rbp)
	call	tree_cons
	movq	-2808(%rbp), %r8
	movq	%rax, 16(%rbx)
.L4006:
	testq	%r12, %r12
	movq	%r13, 48(%r15)
	je	.L11987
.L4017:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L4019
	testq	%r12, %r12
	je	.L4020
	testb	$1, 53(%r13)
	jne	.L4020
	cmpb	$34, 16(%r12)
	je	.L11988
.L4020:
	movl	warn_shadow(%rip), %edx
	testl	%edx, %edx
	je	.L4019
	testb	$1, 53(%r13)
	jne	.L4019
	movl	32(%r13), %r11d
	testl	%r11d, %r11d
	je	.L4019
	testq	%rax, %rax
	jne	.L4019
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L4025
	cmpb	$34, 16(%r12)
	je	.L11989
.L4025:
	cmpq	$0, 56(%r15)
	je	.L4027
	movl	$.LC41, %edi
.L4026:
	testq	%rdi, %rdi
	jne	.L11067
.L4019:
	testq	%r12, %r12
	je	.L10528
	movq	%r12, %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	-2248(%rbp), %r12
	movq	16(%r12), %rdx
	call	tree_cons
	movq	%rax, 16(%r12)
.L10528:
	movzbl	16(%r13), %edx
.L4004:
	leal	-128(%rdx), %edi
	cmpb	$1, %dil
	jbe	.L3792
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L3792
	cmpb	$18, 16(%rcx)
	je	.L11990
.L4036:
	testb	$64, 46(%rcx)
	je	.L3792
.L4035:
	movq	-2248(%rbp), %rcx
	movzwl	64(%rcx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rcx)
	je	.L11991
.L10529:
	movzbl	16(%r13), %edx
.L3792:
	cmpb	$32, %dl
	je	.L11992
.L4038:
	movq	-2248(%rbp), %r11
	movq	global_binding_level(%rip), %rax
	movq	(%r11), %rdx
	cmpq	%rax, %r11
	movq	%rdx, (%r13)
	movq	%r13, (%r11)
	je	.L11993
.L4064:
	movq	%r13, -2256(%rbp)
	jmp	.L3811
.L11993:
	testb	$4, 17(%r13)
	jne	.L4064
	xorl	%eax, %eax
	movl	$124, %edi
	call	my_friendly_abort
	movq	global_binding_level(%rip), %rax
	jmp	.L4064
.L11992:
	testq	%r15, %r15
	je	.L4038
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L4039
	cmpq	class_binding_level(%rip), %rax
	je	.L4040
	movq	48(%r15), %rax
	testq	%rax, %rax
	je	.L4044
	cmpb	$32, 16(%rax)
	je	.L4042
.L4044:
	cmpq	$0, current_class_type(%rip)
	je	.L4039
	movq	56(%r15), %rax
	testq	%rax, %rax
	je	.L4039
	cmpb	$32, 16(%rax)
	je	.L4042
.L4039:
	movq	40(%r15), %rax
	testq	%rax, %rax
	je	.L4043
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L4042
	cmpb	$-127, %dl
	je	.L11994
.L4043:
	movq	current_class_name(%rip), %r15
	testq	%r15, %r15
	je	.L4038
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L11995
.L4050:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L4054
	cmpq	class_binding_level(%rip), %rax
	je	.L4055
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L4059
	cmpb	$32, 16(%rax)
	je	.L4057
.L4059:
	cmpq	$0, current_class_type(%rip)
	je	.L4054
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L4054
	cmpb	$32, 16(%rax)
	je	.L4057
.L4054:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L4038
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L4057
	cmpb	$-127, %dl
	jne	.L4038
	movq	$0, 8(%rbx)
	jmp	.L4038
.L4057:
	movq	8(%rax), %r15
	movq	%r15, 8(%rbx)
	jmp	.L4038
.L4055:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L4059
.L11995:
	cmpb	$32, 16(%r13)
	movq	56(%r13), %rbx
	sete	%sil
	movq	8(%r13), %r12
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$136, %esi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r15)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r15), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r15), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r12, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L4050
.L11994:
	movq	$0, 8(%r15)
	jmp	.L4043
.L4042:
	movq	8(%rax), %r10
	movq	%r10, 8(%r15)
	jmp	.L4043
.L4040:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L4044
.L11991:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10529
.L11990:
	movq	8(%rcx), %rbx
	testb	$64, 46(%rbx)
	jne	.L4035
	jmp	.L4036
.L11067:
	movq	32(%r15), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L4019
.L4027:
	testq	%r12, %r12
	je	.L4029
	movl	$.LC42, %edi
	jmp	.L4026
.L4029:
	testq	%r8, %r8
	movl	$.LC43, %r9d
	cmovne	%r9, %rdi
	jmp	.L4026
.L11989:
	movl	$.LC40, %edi
	jmp	.L4026
.L11988:
	cmpb	$34, 16(%r13)
	je	.L4020
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r8
	movq	56(%r8), %rax
	je	.L4021
	movq	56(%rax), %rax
.L4021:
	movzbl	66(%rax), %esi
	andl	$15, %esi
	decl	%esi
	jne	.L4019
	movl	$.LC40, %edi
	jmp	.L11067
	.p2align 6,,7
.L11987:
	movzbl	53(%r13), %r9d
	andb	$9, %r9b
	decb	%r9b
	je	.L11996
.L4009:
	testq	%r12, %r12
	jne	.L4017
	testq	%r8, %r8
	jne	.L4017
	testb	$1, 53(%r13)
	je	.L4017
	testb	$8, 18(%r13)
	je	.L4017
	orb	$8, 18(%r15)
	jmp	.L4017
	.p2align 6,,7
.L11996:
	testq	%r8, %r8
	je	.L4009
	cmpb	$29, 16(%r13)
	jne	.L4009
	cmpb	$29, 16(%r8)
	jne	.L4009
	movq	8(%r8), %rsi
	movq	8(%r13), %rdi
	xorl	%eax, %eax
	movl	$1, %edx
	movq	%r8, -2808(%rbp)
	call	comptypes
	movq	-2808(%rbp), %r8
	testl	%eax, %eax
	je	.L11997
	movzbl	53(%r8), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L4012
	movzbl	53(%r13), %ebx
	leal	0(,%rax,8), %ecx
	leaq	88(%r13), %rdx
	andb	$-9, %bl
	orb	%cl, %bl
	movb	%bl, 53(%r13)
	cmpq	%r8, current_function_decl(%rip)
	je	.L4013
	movq	88(%r8), %rax
.L4014:
	movq	136(%r8), %rbx
	movq	72(%r8), %r9
	movq	%rax, (%rdx)
	movq	80(%r8), %rdi
	movzbl	17(%r13), %r10d
	movq	%rbx, 136(%r13)
	movq	%r9, 72(%r13)
	movq	%rdi, 80(%r13)
	movzbl	17(%r8), %r11d
	movq	%r8, 96(%r13)
	andb	$127, %r10b
	shrb	$7, %r11b
	movzbl	%r11b, %edx
	movl	%edx, %esi
	salb	$7, %sil
	orb	%sil, %r10b
	movb	%r10b, 17(%r13)
	movzbl	53(%r8), %ecx
.L4012:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L4015
	movzbl	53(%r13), %ecx
	salb	$4, %al
	andb	$-17, %cl
	orb	%al, %cl
	movb	%cl, 53(%r13)
	movl	128(%r8), %eax
	movl	%eax, 128(%r13)
.L4015:
	movq	8(%r8), %rdx
	cmpq	$0, 24(%rdx)
	je	.L4009
	cmpq	$0, 88(%r8)
	je	.L4009
	movq	8(%r13), %r10
	cmpq	$0, 24(%r10)
	jne	.L4009
	movq	%rdx, 8(%r13)
	jmp	.L4009
.L4013:
	xorl	%eax, %eax
	jmp	.L4014
.L11997:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	movq	-2808(%rbp), %r8
	jmp	.L4009
	.p2align 6,,7
.L11986:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L4006
	jmp	.L11066
.L11985:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L11998
.L3981:
	cmpq	$0, 40(%r15)
	jne	.L3982
	testb	$8, 18(%r13)
	je	.L3982
	orb	$8, 18(%r15)
.L3982:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L11999
.L3984:
	movq	%r13, 40(%r15)
	movzbl	16(%r13), %edx
.L3983:
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L3995
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L3985
	testb	$1, 18(%rcx)
	je	.L3985
	orb	$1, 18(%r13)
	movq	72(%r15), %rax
.L3985:
	testq	%rax, %rax
	je	.L3995
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L3990
	testb	$8, 17(%rcx)
	je	.L3990
	orb	$8, 17(%r13)
	movq	72(%r15), %rax
.L3990:
	testq	%rax, %rax
	je	.L3995
	cmpq	$0, 8(%rax)
	je	.L3995
	cmpb	$29, %dl
	je	.L12000
.L3998:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L3995:
	testb	$8, 18(%r15)
	je	.L4004
	cmpb	$32, %dl
	je	.L4004
	testb	$8, 18(%r13)
	jne	.L4004
	testb	$1, 53(%r13)
	jne	.L4004
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L4000
	cmpq	$0, 8(%rax)
	jne	.L12001
.L4000:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11235:
	xorl	%eax, %eax
	call	warning
	jmp	.L10528
.L12001:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11235
.L12000:
	movq	8(%r13), %r8
	movq	integer_type_node(%rip), %rdi
	cmpq	%rdi, 8(%r8)
	jne	.L3998
	jmp	.L3995
	.p2align 6,,7
.L11999:
	cmpq	$0, -2256(%rbp)
	je	.L3984
	movq	-2256(%rbp), %r11
	cmpb	$32, 16(%r11)
	jne	.L3983
	jmp	.L3984
.L11998:
	testb	$8, 54(%r13)
	jne	.L3981
	andb	$-9, 18(%r13)
	jmp	.L3981
	.p2align 6,,7
.L10527:
	movq	global_binding_level(%rip), %rax
	jmp	.L3961
.L11984:
	testl	%esi, %esi
	jg	.L11065
	testl	%ebx, %ebx
	je	.L3967
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11065
	.p2align 6,,7
.L3975:
	movq	8(%rcx), %rdx
	cmpq	error_mark_node(%rip), %rdx
	cmove	%rdx, %rcx
	jmp	.L3967
.L11983:
	xorl	%ecx, %ecx
	movq	%r15, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L3967
	testq	%rax, %rax
	je	.L10094
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L3965
	.p2align 6,,7
.L11982:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L3958
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r15), %rdi
	call	warning_with_decl
	jmp	.L3958
	.p2align 6,,7
.L10909:
	movq	8(%r13), %rdx
	movq	80(%rdx), %rcx
	testq	%rcx, %rcx
	movq	%rcx, -2240(%rbp)
	je	.L3822
	movzbl	16(%rcx), %eax
	cmpb	$32, %al
	je	.L3821
.L3822:
	movq	global_binding_level(%rip), %rcx
	movq	%r13, -2240(%rbp)
	cmpq	%rcx, current_binding_level(%rip)
	jne	.L10520
	movq	%r13, 80(%rdx)
.L10520:
	movzbl	16(%r13), %eax
.L3825:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%bl
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	movq	-2240(%rbp), %rax
	movq	56(%rax), %rbx
	testq	%rbx, %rbx
	je	.L3949
	cmpq	$0, 72(%rax)
	je	.L12002
.L3949:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L3820
	cmpq	$0, 56(%rax)
	je	.L3820
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %rdi
	cmpq	global_binding_level(%rip), %rbx
	movq	%rdi, -888(%rbp)
	je	.L3954
	movq	-888(%rbp), %r8
	movq	8(%r8), %rsi
	movq	%r8, %rdi
.L11064:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L3955:
	movq	-888(%rbp), %rbx
	movq	%r12, 8(%rbx)
	jmp	.L3820
.L3954:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3955
	movq	-888(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
	jmp	.L11064
.L12002:
	movq	8(%r13), %r10
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	movq	%r10, -880(%rbp)
	cmpb	$32, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L3950
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	-880(%rbp), %rsi
	movq	%rsi, 8(%rax)
	jmp	.L3949
.L3950:
	movq	%rbx, 72(%r13)
	jmp	.L3949
.L3821:
	movq	-2240(%rbp), %r12
	movq	current_binding_level(%rip), %rsi
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%r12), %rbx
	movq	%rbx, -840(%rbp)
	jne	.L3825
	movq	-840(%rbp), %rdi
	movq	32(%rdi), %rcx
	cmpb	$36, (%rcx)
	jne	.L3825
	cmpb	$95, 1(%rcx)
	jne	.L3825
	movq	class_binding_level(%rip), %r9
	movq	%r13, 80(%rdx)
	movq	8(%r13), %r10
	testq	%r9, %r9
	movq	%r9, -2224(%rbp)
	movq	%r10, -848(%rbp)
	jne	.L3829
	testb	$-128, 66(%rsi)
	movq	%rsi, -2224(%rbp)
	je	.L3829
.L3833:
	movq	-2224(%rbp), %r11
	movq	56(%r11), %rdx
	testb	$-128, 66(%rdx)
	movq	%rdx, -2224(%rbp)
	jne	.L3833
.L3829:
	movq	-2224(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12003
	movq	-2224(%rbp), %rcx
	movq	-840(%rbp), %rdi
	xorl	%eax, %eax
	movq	-848(%rbp), %rsi
	movq	8(%rcx), %rdx
	call	saveable_tree_cons
	movq	-2224(%rbp), %r8
	movq	%rax, 8(%r8)
.L3835:
	cmpq	$0, -840(%rbp)
	je	.L3836
	movq	-848(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L3837
	movq	-840(%rbp), %rax
	movq	%rax, 80(%rcx)
.L3837:
	movq	-840(%rbp), %rbx
	movq	-848(%rbp), %rax
	cmpq	%rax, 8(%rbx)
	je	.L3838
	cmpb	$21, 16(%rax)
	je	.L12004
.L3839:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L3841
	cmpq	$0, 32(%rax)
	je	.L3840
.L3841:
	movq	lang_name_cplusplus(%rip), %rdi
	cmpq	%rdi, current_lang_name(%rip)
	je	.L12005
.L3842:
	xorl	%ecx, %ecx
.L3877:
	testq	%rcx, %rcx
	jne	.L3878
.L10241:
	movq	-840(%rbp), %rsi
	movq	-848(%rbp), %rdx
	movl	$32, %edi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-848(%rbp), %rdi
	movq	%rax, -2232(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-2232(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L3879
	movq	-840(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
.L11061:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L3880:
	movq	-848(%rbp), %rdx
	movq	-840(%rbp), %r10
	movq	%rdx, 8(%r10)
.L3883:
	movq	-840(%rbp), %r8
	movq	32(%r8), %rax
	cmpb	$36, (%rax)
	je	.L12006
.L3885:
	movq	-848(%rbp), %rsi
	movq	80(%rsi), %rdx
	testq	%rdx, %rdx
	je	.L3916
	cmpb	$32, 16(%rdx)
	je	.L12007
.L3886:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3905
	movq	-2232(%rbp), %rcx
	movq	56(%rcx), %r12
	testq	%r12, %r12
	je	.L10522
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L3907
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L3907:
	movq	decl_obstack+24(%rip), %rdx
	movq	-2232(%rbp), %rdi
	leaq	8(%rdx), %r9
	movq	%rdi, 56(%r12)
	cmpq	decl_obstack+32(%rip), %r9
	ja	.L12008
.L3909:
	movq	-2232(%rbp), %rbx
	movq	%rdx, %r10
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%r10)
	cmpb	$32, 16(%rbx)
	je	.L12009
.L10523:
	movq	-840(%rbp), %r11
	movq	32(%r11), %rax
.L3916:
	cmpb	$36, (%rax)
	je	.L12010
.L3930:
	movq	current_class_type(%rip), %rdx
	movq	-2232(%rbp), %rsi
	movq	-848(%rbp), %rcx
	testq	%rdx, %rdx
	movq	%rsi, 80(%rcx)
	jne	.L3933
	cmpq	$0, current_function_decl(%rip)
	je	.L3932
.L3933:
	movq	lang_name_cplusplus(%rip), %r9
	cmpq	%r9, current_lang_name(%rip)
	je	.L3931
.L3932:
	movq	-840(%rbp), %rdi
	movq	-2232(%rbp), %r10
	movq	%rdi, 72(%r10)
.L3838:
	movq	-2224(%rbp), %rax
	movzbl	66(%rax), %ecx
	andl	$15, %ecx
	cmpl	$2, %ecx
	je	.L12011
.L3836:
	movq	-848(%rbp), %rdx
	movq	80(%rdx), %rax
	cmpb	$32, 16(%rax)
	je	.L12012
	movq	-848(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-848(%rbp), %rcx
	movq	%rax, (%rcx)
	movq	-2240(%rbp), %r9
	movzbl	16(%r9), %eax
	jmp	.L3825
.L12012:
	movq	%rax, (%rdx)
	movq	-2240(%rbp), %r8
	movzbl	16(%r8), %eax
	jmp	.L3825
.L12011:
	movq	-848(%rbp), %rdi
	orb	$64, 18(%rdi)
	movq	80(%rdi), %rsi
	movq	-840(%rbp), %r10
	movq	current_class_type(%rip), %rax
	movq	%rsi, 56(%r10)
	cmpq	$0, 32(%rax)
	jne	.L3836
	movq	-2224(%rbp), %r11
	movq	144(%rax), %r12
	movq	8(%r11), %rdx
	movq	%rdx, 72(%r12)
	jmp	.L3836
.L3931:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L12013
	cmpq	$0, 32(%rdx)
	jne	.L3838
	movq	-2232(%rbp), %r8
	movq	80(%rdx), %r9
	movl	$136, %esi
	cmpb	$32, 16(%r8)
	movq	72(%r9), %rbx
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L3941
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	movq	-840(%rbp), %rdi
	cmpb	$1, 16(%rdi)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-840(%rbp), %r10
	movl	24(%r10), %eax
	movq	32(%r10), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2232(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-848(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L3943:
	movq	-2232(%rbp), %rbx
	movq	current_class_type(%rip), %r9
	movq	152(%rbx), %r8
	movq	%r9, 64(%rbx)
	movq	%r9, 16(%r8)
	jmp	.L3838
.L3941:
	movq	-840(%rbp), %r11
	movq	-2232(%rbp), %rdx
	movq	%r11, 72(%rdx)
	jmp	.L3943
.L12013:
	movq	-2232(%rbp), %rdx
	movq	112(%rax), %rbx
	movl	$136, %esi
	cmpb	$32, 16(%rdx)
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L3936
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-840(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-840(%rbp), %r9
	movl	24(%r9), %eax
	movq	32(%r9), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2232(%rbp), %r11
	movq	%rax, 72(%r11)
	movq	-848(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L3938:
	movq	current_function_decl(%rip), %rdx
	movq	-2232(%rbp), %r12
	movq	%rdx, 64(%r12)
	jmp	.L3838
.L3936:
	movq	-840(%rbp), %rdi
	movq	-2232(%rbp), %r10
	movq	%rdi, 72(%r10)
	jmp	.L3938
.L12010:
	cmpb	$95, 1(%rax)
	jne	.L3930
	movq	-2232(%rbp), %rax
	orb	$64, 53(%rax)
	jmp	.L3930
.L12009:
	cmpq	$0, 72(%rbx)
	je	.L12014
.L10524:
	movq	-840(%rbp), %r8
	movq	32(%r8), %rax
	jmp	.L3916
.L12014:
	movq	-2232(%rbp), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%rax), %rdx
	xorl	%eax, %eax
	movq	%rdx, -856(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L3911
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2232(%rbp), %r11
	movq	%rax, 72(%r11)
	movq	-856(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L10521:
	movq	-840(%rbp), %rdx
	movq	32(%rdx), %rax
	jmp	.L3916
.L3911:
	movq	-2232(%rbp), %rcx
	movq	%r12, 72(%rcx)
	jmp	.L10523
.L12008:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L3909
.L10522:
	movq	-840(%rbp), %rbx
	movq	32(%rbx), %rax
	jmp	.L3916
.L3905:
	movq	-2232(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -2232(%rbp)
	jmp	.L10524
.L12007:
	movq	global_binding_level(%rip), %r9
	movl	$1, %r12d
	cmpq	%r9, current_binding_level(%rip)
	je	.L3887
	movq	-840(%rbp), %rbx
	movq	48(%rbx), %rdi
	testq	%rdi, %rdi
	movq	%rdi, %rcx
	jne	.L3888
.L3887:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L3889
	movq	-840(%rbp), %r10
	movq	56(%r10), %rcx
	testq	%rcx, %rcx
	jne	.L10091
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L3890
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L12015
.L3890:
	testq	%rcx, %rcx
	jne	.L10091
.L10092:
	movq	-840(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10091
	movq	-840(%rbp), %rax
	movq	40(%rax), %rcx
.L3888:
	testq	%rcx, %rcx
	je	.L3892
.L10091:
	cmpb	$32, 16(%rcx)
	je	.L3892
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L3892
	movq	-840(%rbp), %r8
	movq	8(%r8), %rax
	testq	%rax, %rax
	je	.L3900
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11062
	testl	%r12d, %r12d
	jle	.L12016
.L11062:
	movq	%rax, %rcx
.L3892:
	movq	-848(%rbp), %rsi
	cmpq	80(%rsi), %rcx
	jne	.L3886
	jmp	.L10521
.L12016:
	testl	%edx, %edx
	jg	.L11062
	testl	%r12d, %r12d
	je	.L3892
	movq	-840(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11062
.L3900:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L3892
.L12015:
	xorl	%ecx, %ecx
	movq	-840(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L3892
	testq	%rax, %rax
	je	.L10092
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L3890
.L3889:
	movq	-840(%rbp), %r11
	movq	40(%r11), %rcx
	jmp	.L3888
.L12006:
	cmpb	$95, 1(%rax)
	jne	.L3885
	jmp	.L3916
.L3879:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3880
	movq	-840(%rbp), %rax
	movq	8(%rax), %rsi
	movq	%rax, %rdi
	jmp	.L11061
.L3878:
	movq	80(%rcx), %r11
	movq	%r11, -2232(%rbp)
	jmp	.L3883
.L12005:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L3844
	movq	80(%rax), %rbx
.L3844:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L3877
.L3876:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L3853
	cmpl	$32, %eax
	je	.L12017
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L3847:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L3877
	jmp	.L3876
.L12017:
	movq	8(%rbx), %r10
	movq	-848(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%r10), %r9
	movq	72(%r9), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10883
	movq	64(%rbx), %rbx
	jmp	.L3847
.L10883:
	movq	32(%rax), %rcx
	jmp	.L3877
.L3853:
	movq	-848(%rbp), %r11
	movq	80(%r11), %rdx
	movq	56(%rdx), %rbx
	testq	%rbx, %rbx
	je	.L3842
	movq	global_binding_level(%rip), %r8
	cmpq	%r8, current_binding_level(%rip)
	je	.L3856
	movq	48(%rbx), %rsi
	testq	%rsi, %rsi
	movq	%rsi, %rcx
	jne	.L3857
.L3856:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L3858
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10089
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L3859
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L12018
.L3859:
	testq	%rcx, %rcx
	jne	.L10089
.L10090:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10089
.L3858:
	movq	40(%rbx), %rcx
.L3857:
	testq	%rcx, %rcx
	je	.L10241
.L10089:
	cmpb	$32, 16(%rcx)
	je	.L3877
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L3877
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L3869
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11060
	movl	$1, %r12d
	testl	%r12d, %r12d
	jle	.L12019
.L11060:
	movq	%rax, %rcx
	jmp	.L3877
.L12019:
	testl	%edx, %edx
	jg	.L11060
	movl	$1, %edi
	testl	%edi, %edi
	je	.L3877
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11060
.L3869:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L3877
	jmp	.L11060
.L12018:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L3877
	testq	%rax, %rax
	je	.L10090
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L3859
.L3840:
	movq	-840(%rbp), %rsi
	movq	-848(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -864(%rbp)
	je	.L3917
	movq	-840(%rbp), %r12
	movq	8(%r12), %rsi
	movq	%r12, %rdi
.L11063:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L3918:
	movq	-848(%rbp), %rdx
	movq	-840(%rbp), %r10
	movq	%rdx, 8(%r10)
	movq	-864(%rbp), %rdi
	movq	56(%rdi), %r12
	testq	%r12, %r12
	je	.L3921
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L3922
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L3922:
	movq	decl_obstack+24(%rip), %rdx
	movq	-864(%rbp), %r11
	leaq	8(%rdx), %rbx
	movq	%r11, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rbx
	ja	.L12020
.L3924:
	movq	%rdx, %r8
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	-864(%rbp), %rdx
	movq	%rdx, (%r8)
	cmpb	$32, 16(%rdx)
	je	.L12021
.L3921:
	movq	-864(%rbp), %r12
	movq	%r12, -2232(%rbp)
	jmp	.L10524
.L12021:
	cmpq	$0, 72(%rdx)
	jne	.L3921
	movq	8(%rdx), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	%rax, -872(%rbp)
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L3926
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-864(%rbp), %rsi
	movq	%rax, 72(%rsi)
	movq	-872(%rbp), %rcx
	movq	%rcx, 8(%rax)
	jmp	.L3921
.L3926:
	movq	-864(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L3921
.L12020:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L3924
.L3917:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3918
	movq	-840(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
	jmp	.L11063
.L12004:
	cmpq	$0, class_binding_level(%rip)
	je	.L3839
	movq	144(%rax), %rsi
	testb	$16, 3(%rsi)
	jne	.L3838
	jmp	.L3839
.L12003:
	movq	-840(%rbp), %rdi
	movq	-848(%rbp), %rsi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%rbx)
	jmp	.L3835
	.p2align 6,,7
.L3806:
	movq	-2256(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10515
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	jne	.L10519
	testb	$8, 18(%r15)
	je	.L10519
	testb	$8, 18(%r13)
	jne	.L10519
	testb	$9, 53(%r13)
	jne	.L10519
	cmpq	%r13, current_function_decl(%rip)
	je	.L12022
.L3815:
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L3816
	cmpq	$0, 8(%rax)
	jne	.L12023
.L3816:
	movq	-2256(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11059:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-2256(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L10519
.L12023:
	movq	-2256(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11059
.L12022:
	movq	-2256(%rbp), %rsi
	movq	%rsi, current_function_decl(%rip)
	jmp	.L3815
	.p2align 6,,7
.L11981:
	cmpq	$0, 64(%rcx)
	jne	.L3804
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L3804
.L11980:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -2256(%rbp)
	call	error_with_decl
	jmp	.L3802
.L3795:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L3797
.L3801:
	cmpq	%r15, 56(%rax)
	je	.L3797
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L3801
.L3797:
	movq	%rax, -2256(%rbp)
	jmp	.L3794
.L11979:
	movq	40(%r15), %rax
	jmp	.L3797
.L11978:
	movq	56(%r13), %r15
	jmp	.L3791
.L11977:
	testb	$32, 53(%r13)
	jne	.L3789
	jmp	.L3790
.L10511:
	movzbl	16(%r13), %edx
	jmp	.L3789
.L11276:
	leal	(%rcx,%rcx), %r10d
	movq	builtin_type_tdescs_arr(%rip), %rdi
	xorl	%eax, %eax
	movslq	%r10d,%rsi
	movl	%r10d, builtin_type_tdescs_max(%rip)
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L3782
.L3772:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3773
	movq	8, %rsi
	xorl	%edi, %edi
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	jmp	.L11057
.L3771:
	xorl	%esi, %esi
	movl	$32, %edi
	movq	%r15, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12024
.L11058:
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L3778:
	movq	$0, 8
	jmp	.L3770
.L12024:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3778
	jmp	.L11058
	.p2align 6,,7
.L11275:
	movq	-2168(%rbp), %rsi
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r15, %rdx
	call	build_decl
	movq	current_binding_level(%rip), %r8
	movq	%rax, %r13
	movq	112(%rax), %r14
	movq	current_function_decl(%rip), %rax
	movq	%r8, -2200(%rbp)
	cmpq	%rax, %r13
	je	.L10492
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L12025
.L3490:
	movq	%rax, 64(%r13)
.L3489:
	cmpb	$32, %dl
	je	.L12026
.L3491:
	testq	%r14, %r14
	je	.L3492
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L12027
	cmpq	$0, 48(%r14)
	jne	.L3495
	movq	$0, -2208(%rbp)
.L3494:
	cmpq	$0, -2208(%rbp)
	je	.L3512
	movq	-2208(%rbp), %rax
	cmpq	error_mark_node(%rip), %rax
	je	.L12028
.L3502:
	cmpq	$0, -2208(%rbp)
	je	.L10496
	movq	-2208(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L12029
.L3504:
	movq	-2208(%rbp), %rcx
	testq	%rcx, %rcx
	movq	24(%rcx), %r12
	movq	%rcx, %rsi
	movl	32(%rcx), %ebx
	je	.L10496
	movzbl	16(%rcx), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L3506
	cmpb	$32, %al
	je	.L3512
	cmpb	$32, %dl
	je	.L10908
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10496
.L10500:
	movq	global_binding_level(%rip), %rax
.L3511:
	movq	current_binding_level(%rip), %rbx
	cmpq	%rax, %rbx
	je	.L3765
	movq	-2168(%rbp), %r13
	movq	8(%r13), %rsi
	movq	%r13, %rdi
.L11056:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L3766:
	movq	-2168(%rbp), %rdx
	movl	$32, %eax
	cmpl	$31, %eax
	movq	$0, 8(%rdx)
	jg	.L3488
	movq	-2208(%rbp), %r12
	movq	%r12, 40(%rdx)
	jmp	.L3488
.L3765:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3766
	movq	-2168(%rbp), %rdx
	movq	8(%rdx), %rsi
	movq	%rdx, %rdi
	jmp	.L11056
.L10496:
	movzbl	16(%r13), %edx
.L3512:
	cmpb	$32, %dl
	je	.L10908
.L3520:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L3658
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L3658
	testb	$1, 53(%rax)
	jne	.L3659
	testb	$8, 18(%rax)
	je	.L3658
.L3659:
	andb	$8, %dl
	je	.L12030
.L3658:
	movl	flag_traditional(%rip), %r12d
	testl	%r12d, %r12d
	je	.L10508
	testb	$1, 53(%r13)
	je	.L10508
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L3662
	movq	48(%r14), %r11
	testq	%r11, %r11
	movq	%r11, %rcx
	jne	.L3663
.L3662:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L3664
	movq	56(%r14), %rcx
	testq	%rcx, %rcx
	jne	.L10087
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L3665
	movq	144(%rdi), %rsi
	testb	$1, 3(%rsi)
	jne	.L12031
.L3665:
	testq	%rcx, %rcx
	jne	.L10087
.L10088:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10087
.L3664:
	movq	40(%r14), %rcx
.L3663:
	testq	%rcx, %rcx
	je	.L10240
.L10087:
	cmpb	$32, 16(%rcx)
	je	.L3667
	movl	looking_for_typename(%rip), %esi
	testl	%esi, %esi
	js	.L3667
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L3675
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11053
	testl	%ebx, %ebx
	jle	.L12032
.L11053:
	movq	%rax, %rcx
.L3667:
	testq	%rcx, %rcx
	jne	.L10508
.L10240:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -2200(%rbp)
.L3661:
	cmpq	%rax, -2200(%rbp)
	je	.L12033
	movq	current_binding_level(%rip), %rbx
	movq	48(%r14), %r12
	movq	40(%r14), %r8
	cmpq	%rax, %rbx
	je	.L12034
.L11054:
	movq	16(%rbx), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	movq	%r8, -2808(%rbp)
	call	tree_cons
	movq	-2808(%rbp), %r8
	movq	%rax, 16(%rbx)
.L3706:
	testq	%r12, %r12
	movq	%r13, 48(%r14)
	je	.L12035
.L3717:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L3719
	testq	%r12, %r12
	je	.L3720
	testb	$1, 53(%r13)
	jne	.L3720
	cmpb	$34, 16(%r12)
	je	.L12036
.L3720:
	movl	warn_shadow(%rip), %ebx
	testl	%ebx, %ebx
	je	.L3719
	testb	$1, 53(%r13)
	jne	.L3719
	movl	32(%r13), %ecx
	testl	%ecx, %ecx
	je	.L3719
	testq	%rax, %rax
	jne	.L3719
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L3725
	cmpb	$34, 16(%r12)
	je	.L12037
.L3725:
	cmpq	$0, 56(%r14)
	je	.L3727
	movl	$.LC41, %edi
.L3726:
	testq	%rdi, %rdi
	jne	.L11055
.L3719:
	testq	%r12, %r12
	je	.L10509
	movq	%r12, %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	-2200(%rbp), %r12
	movq	16(%r12), %rdx
	call	tree_cons
	movq	%rax, 16(%r12)
.L10509:
	movzbl	16(%r13), %edx
.L3704:
	leal	-128(%rdx), %edi
	cmpb	$1, %dil
	jbe	.L3492
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L3492
	cmpb	$18, 16(%rcx)
	je	.L12038
.L3736:
	testb	$64, 46(%rcx)
	je	.L3492
.L3735:
	movq	-2200(%rbp), %r10
	movzwl	64(%r10), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%r10)
	je	.L12039
.L10510:
	movzbl	16(%r13), %edx
.L3492:
	cmpb	$32, %dl
	je	.L12040
.L3738:
	movq	-2200(%rbp), %rbx
	movq	global_binding_level(%rip), %rax
	movq	(%rbx), %rcx
	cmpq	%rax, %rbx
	movq	%rcx, (%r13)
	movq	%r13, (%rbx)
	je	.L12041
.L3764:
	movq	%r13, -2208(%rbp)
	jmp	.L3511
.L12041:
	testb	$4, 17(%r13)
	jne	.L3764
	xorl	%eax, %eax
	movl	$124, %edi
	call	my_friendly_abort
	movq	global_binding_level(%rip), %rax
	jmp	.L3764
.L12040:
	testq	%r14, %r14
	je	.L3738
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L3739
	cmpq	class_binding_level(%rip), %rax
	je	.L3740
	movq	48(%r14), %rax
	testq	%rax, %rax
	je	.L3744
	cmpb	$32, 16(%rax)
	je	.L3742
.L3744:
	cmpq	$0, current_class_type(%rip)
	je	.L3739
	movq	56(%r14), %rax
	testq	%rax, %rax
	je	.L3739
	cmpb	$32, 16(%rax)
	je	.L3742
.L3739:
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L3743
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L3742
	cmpb	$-127, %dl
	je	.L12042
.L3743:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L3738
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L12043
.L3750:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L3754
	cmpq	class_binding_level(%rip), %rax
	je	.L3755
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L3759
	cmpb	$32, 16(%rax)
	je	.L3757
.L3759:
	cmpq	$0, current_class_type(%rip)
	je	.L3754
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L3754
	cmpb	$32, 16(%rax)
	je	.L3757
.L3754:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L3738
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L3757
	cmpb	$-127, %dl
	jne	.L3738
	movq	$0, 8(%rbx)
	jmp	.L3738
.L3757:
	movq	8(%rax), %r14
	movq	%r14, 8(%rbx)
	jmp	.L3738
.L3755:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L3759
.L12043:
	cmpb	$32, 16(%r13)
	movq	56(%r13), %rbx
	sete	%sil
	movq	8(%r13), %r12
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$136, %esi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r14)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r14), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r12, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L3750
.L12042:
	movq	$0, 8(%r14)
	jmp	.L3743
.L3742:
	movq	8(%rax), %r11
	movq	%r11, 8(%r14)
	jmp	.L3743
.L3740:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L3744
.L12039:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10510
.L12038:
	movq	8(%rcx), %r9
	testb	$64, 46(%r9)
	jne	.L3735
	jmp	.L3736
.L11055:
	movq	32(%r14), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L3719
.L3727:
	testq	%r12, %r12
	je	.L3729
	movl	$.LC42, %edi
	jmp	.L3726
.L3729:
	testq	%r8, %r8
	movl	$.LC43, %edx
	cmovne	%rdx, %rdi
	jmp	.L3726
.L12037:
	movl	$.LC40, %edi
	jmp	.L3726
.L12036:
	cmpb	$34, 16(%r13)
	je	.L3720
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r8
	movq	56(%r8), %rax
	je	.L3721
	movq	56(%rax), %rax
.L3721:
	movzbl	66(%rax), %esi
	andl	$15, %esi
	decl	%esi
	jne	.L3719
	movl	$.LC40, %edi
	jmp	.L11055
	.p2align 6,,7
.L12035:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L12044
.L3709:
	testq	%r12, %r12
	jne	.L3717
	testq	%r8, %r8
	jne	.L3717
	testb	$1, 53(%r13)
	je	.L3717
	testb	$8, 18(%r13)
	je	.L3717
	orb	$8, 18(%r14)
	jmp	.L3717
	.p2align 6,,7
.L12044:
	testq	%r8, %r8
	je	.L3709
	cmpb	$29, 16(%r13)
	jne	.L3709
	cmpb	$29, 16(%r8)
	jne	.L3709
	movq	8(%r8), %rsi
	movq	8(%r13), %rdi
	xorl	%eax, %eax
	movl	$1, %edx
	movq	%r8, -2808(%rbp)
	call	comptypes
	movq	-2808(%rbp), %r8
	testl	%eax, %eax
	je	.L12045
	movzbl	53(%r8), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L3712
	movzbl	53(%r13), %r9d
	leal	0(,%rax,8), %r10d
	leaq	88(%r13), %rdx
	andb	$-9, %r9b
	orb	%r10b, %r9b
	movb	%r9b, 53(%r13)
	cmpq	%r8, current_function_decl(%rip)
	je	.L3713
	movq	88(%r8), %rax
.L3714:
	movq	%rax, (%rdx)
	movq	136(%r8), %r9
	movq	80(%r8), %rdi
	movq	72(%r8), %rdx
	movzbl	17(%r13), %r11d
	movq	%r9, 136(%r13)
	movq	%rdi, 80(%r13)
	movq	%rdx, 72(%r13)
	movzbl	17(%r8), %ecx
	movq	%r8, 96(%r13)
	andb	$127, %r11b
	shrb	$7, %cl
	movzbl	%cl, %ebx
	movl	%ebx, %esi
	salb	$7, %sil
	orb	%sil, %r11b
	movb	%r11b, 17(%r13)
	movzbl	53(%r8), %ecx
.L3712:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L3715
	movzbl	53(%r13), %r10d
	salb	$4, %al
	andb	$-17, %r10b
	orb	%al, %r10b
	movb	%r10b, 53(%r13)
	movl	128(%r8), %eax
	movl	%eax, 128(%r13)
.L3715:
	movq	8(%r8), %rdx
	cmpq	$0, 24(%rdx)
	je	.L3709
	cmpq	$0, 88(%r8)
	je	.L3709
	movq	8(%r13), %r11
	cmpq	$0, 24(%r11)
	jne	.L3709
	movq	%rdx, 8(%r13)
	jmp	.L3709
.L3713:
	xorl	%eax, %eax
	jmp	.L3714
.L12045:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	movq	-2808(%rbp), %r8
	jmp	.L3709
	.p2align 6,,7
.L12034:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3706
	jmp	.L11054
.L12033:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L12046
.L3681:
	cmpq	$0, 40(%r14)
	jne	.L3682
	testb	$8, 18(%r13)
	je	.L3682
	orb	$8, 18(%r14)
.L3682:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L12047
.L3684:
	movq	%r13, 40(%r14)
	movzbl	16(%r13), %edx
.L3683:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L3695
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L3685
	testb	$1, 18(%rcx)
	je	.L3685
	orb	$1, 18(%r13)
	movq	72(%r14), %rax
.L3685:
	testq	%rax, %rax
	je	.L3695
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L3690
	testb	$8, 17(%rcx)
	je	.L3690
	orb	$8, 17(%r13)
	movq	72(%r14), %rax
.L3690:
	testq	%rax, %rax
	je	.L3695
	cmpq	$0, 8(%rax)
	je	.L3695
	cmpb	$29, %dl
	je	.L12048
.L3698:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L3695:
	testb	$8, 18(%r14)
	je	.L3704
	cmpb	$32, %dl
	je	.L3704
	testb	$8, 18(%r13)
	jne	.L3704
	testb	$1, 53(%r13)
	jne	.L3704
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L3700
	cmpq	$0, 8(%rax)
	jne	.L12049
.L3700:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11234:
	xorl	%eax, %eax
	call	warning
	jmp	.L10509
.L12049:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11234
.L12048:
	movq	8(%r13), %rdi
	movq	integer_type_node(%rip), %r8
	cmpq	%r8, 8(%rdi)
	jne	.L3698
	jmp	.L3695
	.p2align 6,,7
.L12047:
	cmpq	$0, -2208(%rbp)
	je	.L3684
	movq	-2208(%rbp), %rcx
	cmpb	$32, 16(%rcx)
	jne	.L3683
	jmp	.L3684
.L12046:
	testb	$8, 54(%r13)
	jne	.L3681
	andb	$-9, 18(%r13)
	jmp	.L3681
	.p2align 6,,7
.L10508:
	movq	global_binding_level(%rip), %rax
	jmp	.L3661
.L12032:
	testl	%esi, %esi
	jg	.L11053
	testl	%ebx, %ebx
	je	.L3667
	movq	%rax, %rdx
	movq	%r14, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11053
	.p2align 6,,7
.L3675:
	movq	8(%rcx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rcx
	jmp	.L3667
.L12031:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L3667
	testq	%rax, %rax
	je	.L10088
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L3665
	.p2align 6,,7
.L12030:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L3658
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r14), %rdi
	call	warning_with_decl
	jmp	.L3658
	.p2align 6,,7
.L10908:
	movq	8(%r13), %rdx
	movq	80(%rdx), %rcx
	testq	%rcx, %rcx
	movq	%rcx, -2192(%rbp)
	je	.L3522
	movzbl	16(%rcx), %eax
	cmpb	$32, %al
	je	.L3521
.L3522:
	movq	global_binding_level(%rip), %r12
	movq	%r13, -2192(%rbp)
	cmpq	%r12, current_binding_level(%rip)
	jne	.L10501
	movq	%r13, 80(%rdx)
.L10501:
	movzbl	16(%r13), %eax
.L3525:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%bl
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	movq	-2192(%rbp), %rax
	movq	56(%rax), %rbx
	testq	%rbx, %rbx
	je	.L3649
	cmpq	$0, 72(%rax)
	je	.L12050
.L3649:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L3520
	cmpq	$0, 56(%rax)
	je	.L3520
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %rdi
	cmpq	global_binding_level(%rip), %rbx
	movq	%rdi, -832(%rbp)
	je	.L3654
	movq	-832(%rbp), %rdx
	movq	8(%rdx), %rsi
	movq	%rdx, %rdi
.L11052:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L3655:
	movq	-832(%rbp), %r10
	movq	%r12, 8(%r10)
	jmp	.L3520
.L3654:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3655
	movq	-832(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
	jmp	.L11052
.L12050:
	movq	8(%r13), %r11
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	movq	%r11, -824(%rbp)
	cmpb	$32, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L3650
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	-824(%rbp), %rsi
	movq	%rsi, 8(%rax)
	jmp	.L3649
.L3650:
	movq	%rbx, 72(%r13)
	jmp	.L3649
.L3521:
	movq	-2192(%rbp), %r10
	movq	current_binding_level(%rip), %rsi
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%r10), %rbx
	movq	%rbx, -784(%rbp)
	jne	.L3525
	movq	-784(%rbp), %r11
	movq	32(%r11), %rcx
	cmpb	$36, (%rcx)
	jne	.L3525
	cmpb	$95, 1(%rcx)
	jne	.L3525
	movq	class_binding_level(%rip), %r8
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rdx
	testq	%r8, %r8
	movq	%r8, -2176(%rbp)
	movq	%rdx, -792(%rbp)
	jne	.L3529
	testb	$-128, 66(%rsi)
	movq	%rsi, -2176(%rbp)
	je	.L3529
.L3533:
	movq	-2176(%rbp), %rax
	movq	56(%rax), %rsi
	testb	$-128, 66(%rsi)
	movq	%rsi, -2176(%rbp)
	jne	.L3533
.L3529:
	movq	-2176(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12051
	movq	-2176(%rbp), %r9
	movq	-784(%rbp), %rdi
	xorl	%eax, %eax
	movq	-792(%rbp), %rsi
	movq	8(%r9), %rdx
	call	saveable_tree_cons
	movq	-2176(%rbp), %rcx
	movq	%rax, 8(%rcx)
.L3535:
	cmpq	$0, -784(%rbp)
	je	.L3536
	movq	-792(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L3537
	movq	-784(%rbp), %rdi
	movq	%rdi, 80(%rcx)
.L3537:
	movq	-784(%rbp), %r12
	movq	-792(%rbp), %rax
	cmpq	%rax, 8(%r12)
	je	.L3538
	cmpb	$21, 16(%rax)
	je	.L12052
.L3539:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L3541
	cmpq	$0, 32(%rax)
	je	.L3540
.L3541:
	movq	lang_name_cplusplus(%rip), %r11
	cmpq	%r11, current_lang_name(%rip)
	je	.L12053
.L3542:
	xorl	%ecx, %ecx
.L3577:
	testq	%rcx, %rcx
	jne	.L3578
.L10239:
	movq	-784(%rbp), %rsi
	movq	-792(%rbp), %rdx
	movl	$32, %edi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-792(%rbp), %rdi
	movq	%rax, -2184(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-2184(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L3579
	movq	-784(%rbp), %r11
	movq	8(%r11), %rsi
	movq	%r11, %rdi
.L11049:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L3580:
	movq	-792(%rbp), %rsi
	movq	-784(%rbp), %rdx
	movq	%rsi, 8(%rdx)
.L3583:
	movq	-784(%rbp), %rcx
	movq	32(%rcx), %rax
	cmpb	$36, (%rax)
	je	.L12054
.L3585:
	movq	-792(%rbp), %r9
	movq	80(%r9), %rdx
	testq	%rdx, %rdx
	je	.L3616
	cmpb	$32, 16(%rdx)
	je	.L12055
.L3586:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3605
	movq	-2184(%rbp), %rax
	movq	56(%rax), %r12
	testq	%r12, %r12
	je	.L10503
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L3607
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L3607:
	movq	decl_obstack+24(%rip), %rdx
	movq	-2184(%rbp), %rdi
	leaq	8(%rdx), %rcx
	movq	%rdi, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rcx
	ja	.L12056
.L3609:
	movq	-2184(%rbp), %rbx
	movq	%rdx, %r11
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%r11)
	cmpb	$32, 16(%rbx)
	je	.L12057
.L10504:
	movq	-784(%rbp), %rsi
	movq	32(%rsi), %rax
.L3616:
	cmpb	$36, (%rax)
	je	.L12058
.L3630:
	movq	current_class_type(%rip), %rdx
	movq	-2184(%rbp), %r12
	movq	-792(%rbp), %r10
	testq	%rdx, %rdx
	movq	%r12, 80(%r10)
	jne	.L3633
	cmpq	$0, current_function_decl(%rip)
	je	.L3632
.L3633:
	movq	lang_name_cplusplus(%rip), %rax
	cmpq	%rax, current_lang_name(%rip)
	je	.L3631
.L3632:
	movq	-784(%rbp), %rdi
	movq	-2184(%rbp), %rcx
	movq	%rdi, 72(%rcx)
.L3538:
	movq	-2176(%rbp), %rax
	movzbl	66(%rax), %r12d
	andl	$15, %r12d
	cmpl	$2, %r12d
	je	.L12059
.L3536:
	movq	-792(%rbp), %rdx
	movq	80(%rdx), %rax
	cmpb	$32, 16(%rax)
	je	.L12060
	movq	-792(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-792(%rbp), %r12
	movq	%rax, (%r12)
	movq	-2192(%rbp), %r10
	movzbl	16(%r10), %eax
	jmp	.L3525
.L12060:
	movq	%rax, (%rdx)
	movq	-2192(%rbp), %r9
	movzbl	16(%r9), %eax
	jmp	.L3525
.L12059:
	movq	-792(%rbp), %rdi
	orb	$64, 18(%rdi)
	movq	80(%rdi), %rsi
	movq	-784(%rbp), %r11
	movq	current_class_type(%rip), %rax
	movq	%rsi, 56(%r11)
	cmpq	$0, 32(%rax)
	jne	.L3536
	movq	-2176(%rbp), %rdx
	movq	144(%rax), %rcx
	movq	8(%rdx), %r8
	movq	%r8, 72(%rcx)
	jmp	.L3536
.L3631:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L12061
	cmpq	$0, 32(%rdx)
	jne	.L3538
	movq	-2184(%rbp), %r9
	movq	80(%rdx), %r10
	movl	$136, %esi
	cmpb	$32, 16(%r9)
	movq	72(%r10), %rbx
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L3641
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movq	-784(%rbp), %rdi
	cmpb	$1, 16(%rdi)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-784(%rbp), %r11
	movl	24(%r11), %eax
	movq	32(%r11), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2184(%rbp), %r12
	movq	%rax, 72(%r12)
	movq	-792(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L3643:
	movq	-2184(%rbp), %rbx
	movq	current_class_type(%rip), %r10
	movq	152(%rbx), %r9
	movq	%r10, 64(%rbx)
	movq	%r10, 16(%r9)
	jmp	.L3538
.L3641:
	movq	-784(%rbp), %rdx
	movq	-2184(%rbp), %r8
	movq	%rdx, 72(%r8)
	jmp	.L3643
.L12061:
	movq	-2184(%rbp), %r8
	movq	112(%rax), %rbx
	movl	$136, %esi
	cmpb	$32, 16(%r8)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L3636
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	-784(%rbp), %r12
	cmpb	$1, 16(%r12)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-784(%rbp), %r10
	movl	24(%r10), %eax
	movq	32(%r10), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2184(%rbp), %rdx
	movq	%rax, 72(%rdx)
	movq	-792(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L3638:
	movq	current_function_decl(%rip), %r8
	movq	-2184(%rbp), %r11
	movq	%r8, 64(%r11)
	jmp	.L3538
.L3636:
	movq	-784(%rbp), %rcx
	movq	-2184(%rbp), %rdi
	movq	%rcx, 72(%rdi)
	jmp	.L3638
.L12058:
	cmpb	$95, 1(%rax)
	jne	.L3630
	movq	-2184(%rbp), %r9
	orb	$64, 53(%r9)
	jmp	.L3630
.L12057:
	cmpq	$0, 72(%rbx)
	je	.L12062
.L10505:
	movq	-784(%rbp), %rdx
	movq	32(%rdx), %rax
	jmp	.L3616
.L12062:
	movq	-2184(%rbp), %rdx
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%rdx), %r8
	movq	%r8, -800(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L3611
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2184(%rbp), %rsi
	movq	%rax, 72(%rsi)
	movq	-800(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L10502:
	movq	-784(%rbp), %r8
	movq	32(%r8), %rax
	jmp	.L3616
.L3611:
	movq	-2184(%rbp), %rax
	movq	%r12, 72(%rax)
	jmp	.L10504
.L12056:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L3609
.L10503:
	movq	-784(%rbp), %rbx
	movq	32(%rbx), %rax
	jmp	.L3616
.L3605:
	movq	-2184(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -2184(%rbp)
	jmp	.L10505
.L12055:
	movq	global_binding_level(%rip), %r10
	movl	$1, %r12d
	cmpq	%r10, current_binding_level(%rip)
	je	.L3587
	movq	-784(%rbp), %rbx
	movq	48(%rbx), %rdi
	testq	%rdi, %rdi
	movq	%rdi, %rcx
	jne	.L3588
.L3587:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L3589
	movq	-784(%rbp), %r11
	movq	56(%r11), %rcx
	testq	%rcx, %rcx
	jne	.L10085
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L3590
	movq	144(%rdi), %r8
	testb	$1, 3(%r8)
	jne	.L12063
.L3590:
	testq	%rcx, %rcx
	jne	.L10085
.L10086:
	movq	-784(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10085
	movq	-784(%rbp), %rsi
	movq	40(%rsi), %rcx
.L3588:
	testq	%rcx, %rcx
	je	.L3592
.L10085:
	cmpb	$32, 16(%rcx)
	je	.L3592
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L3592
	movq	-784(%rbp), %r9
	movq	8(%r9), %rax
	testq	%rax, %rax
	je	.L3600
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11050
	testl	%r12d, %r12d
	jle	.L12064
.L11050:
	movq	%rax, %rcx
.L3592:
	movq	-792(%rbp), %r10
	cmpq	80(%r10), %rcx
	jne	.L3586
	jmp	.L10502
.L12064:
	testl	%edx, %edx
	jg	.L11050
	testl	%r12d, %r12d
	je	.L3592
	movq	-784(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11050
.L3600:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L3592
.L12063:
	xorl	%ecx, %ecx
	movq	-784(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L3592
	testq	%rax, %rax
	je	.L10086
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L3590
.L3589:
	movq	-784(%rbp), %rdx
	movq	40(%rdx), %rcx
	jmp	.L3588
.L12054:
	cmpb	$95, 1(%rax)
	jne	.L3585
	jmp	.L3616
.L3579:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3580
	movq	-784(%rbp), %r8
	movq	8(%r8), %rsi
	movq	%r8, %rdi
	jmp	.L11049
.L3578:
	movq	80(%rcx), %rax
	movq	%rax, -2184(%rbp)
	jmp	.L3583
.L12053:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L3544
	movq	80(%rax), %rbx
.L3544:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L3577
.L3576:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L3553
	cmpl	$32, %eax
	je	.L12065
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L3547:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L3577
	jmp	.L3576
.L12065:
	movq	8(%rbx), %rdx
	movq	-792(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%rdx), %r8
	movq	72(%r8), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10882
	movq	64(%rbx), %rbx
	jmp	.L3547
.L10882:
	movq	32(%rax), %rcx
	jmp	.L3577
.L3553:
	movq	-792(%rbp), %rax
	movq	80(%rax), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L3542
	movq	global_binding_level(%rip), %rcx
	cmpq	%rcx, current_binding_level(%rip)
	je	.L3556
	movq	48(%rbx), %r9
	testq	%r9, %r9
	movq	%r9, %rcx
	jne	.L3557
.L3556:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L3558
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10083
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L3559
	movq	144(%rdi), %r10
	testb	$1, 3(%r10)
	jne	.L12066
.L3559:
	testq	%rcx, %rcx
	jne	.L10083
.L10084:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10083
.L3558:
	movq	40(%rbx), %rcx
.L3557:
	testq	%rcx, %rcx
	je	.L10239
.L10083:
	cmpb	$32, 16(%rcx)
	je	.L3577
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L3577
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L3569
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11048
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L12067
.L11048:
	movq	%rax, %rcx
	jmp	.L3577
.L12067:
	testl	%edx, %edx
	jg	.L11048
	movl	$1, %r12d
	testl	%r12d, %r12d
	je	.L3577
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11048
.L3569:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L3577
	jmp	.L11048
.L12066:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L3577
	testq	%rax, %rax
	je	.L10084
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L3559
.L3540:
	movq	-784(%rbp), %rsi
	movq	-792(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -808(%rbp)
	je	.L3617
	movq	-784(%rbp), %r12
	movq	8(%r12), %rsi
	movq	%r12, %rdi
.L11051:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L3618:
	movq	-792(%rbp), %r8
	movq	-784(%rbp), %r11
	movq	%r8, 8(%r11)
	movq	-808(%rbp), %rdi
	movq	56(%rdi), %r12
	testq	%r12, %r12
	je	.L3621
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L3622
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L3622:
	movq	-808(%rbp), %rdx
	movq	%rdx, 56(%r12)
	movq	decl_obstack+24(%rip), %rdx
	leaq	8(%rdx), %rbx
	cmpq	decl_obstack+32(%rip), %rbx
	ja	.L12068
.L3624:
	movq	%rdx, %rsi
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	-808(%rbp), %rdx
	movq	%rdx, (%rsi)
	cmpb	$32, 16(%rdx)
	je	.L12069
.L3621:
	movq	-808(%rbp), %r11
	movq	%r11, -2184(%rbp)
	jmp	.L10505
.L12069:
	cmpq	$0, 72(%rdx)
	jne	.L3621
	movq	current_class_name(%rip), %rbx
	movq	8(%rdx), %r9
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%r9, -816(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L3626
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-808(%rbp), %r12
	movq	%rax, 72(%r12)
	movq	-816(%rbp), %r10
	movq	%r10, 8(%rax)
	jmp	.L3621
.L3626:
	movq	-808(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L3621
.L12068:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L3624
.L3617:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3618
	movq	-784(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
	jmp	.L11051
.L12052:
	cmpq	$0, class_binding_level(%rip)
	je	.L3539
	movq	144(%rax), %rbx
	testb	$16, 3(%rbx)
	jne	.L3538
	jmp	.L3539
.L12051:
	movq	-784(%rbp), %rdi
	movq	-792(%rbp), %rsi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%rbx)
	jmp	.L3535
	.p2align 6,,7
.L3506:
	movq	-2208(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10496
	movl	flag_traditional(%rip), %r9d
	testl	%r9d, %r9d
	jne	.L10500
	testb	$8, 18(%r14)
	je	.L10500
	testb	$8, 18(%r13)
	jne	.L10500
	testb	$9, 53(%r13)
	jne	.L10500
	cmpq	%r13, current_function_decl(%rip)
	je	.L12070
.L3515:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L3516
	cmpq	$0, 8(%rax)
	jne	.L12071
.L3516:
	movq	-2208(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11047:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-2208(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L10500
.L12071:
	movq	-2208(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11047
.L12070:
	movq	-2208(%rbp), %rdi
	movq	%rdi, current_function_decl(%rip)
	jmp	.L3515
	.p2align 6,,7
.L12029:
	cmpq	$0, 64(%rcx)
	jne	.L3504
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L3504
.L12028:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -2208(%rbp)
	call	error_with_decl
	jmp	.L3502
.L3495:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L3497
.L3501:
	cmpq	%r14, 56(%rax)
	je	.L3497
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L3501
.L3497:
	movq	%rax, -2208(%rbp)
	jmp	.L3494
.L12027:
	movq	40(%r14), %rax
	jmp	.L3497
.L12026:
	movq	56(%r13), %r14
	jmp	.L3491
.L12025:
	testb	$32, 53(%r13)
	jne	.L3489
	jmp	.L3490
.L10492:
	movzbl	16(%r13), %edx
	jmp	.L3489
.L11274:
	leal	(%rcx,%rcx), %edx
	movq	builtin_type_tdescs_arr(%rip), %rdi
	xorl	%eax, %eax
	movslq	%edx,%rsi
	movl	%edx, builtin_type_tdescs_max(%rip)
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L3482
.L3472:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3473
	movq	8, %rsi
	xorl	%edi, %edi
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	jmp	.L11045
.L3471:
	xorl	%esi, %esi
	movl	$32, %edi
	movq	%r14, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12072
.L11046:
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L3478:
	movq	$0, 8
	jmp	.L3470
.L12072:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3478
	jmp	.L11046
	.p2align 6,,7
.L11273:
	movq	-2120(%rbp), %rsi
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r14, %rdx
	call	build_decl
	movq	current_binding_level(%rip), %rcx
	movq	%rax, %r13
	movq	112(%rax), %r15
	movq	current_function_decl(%rip), %rax
	movq	%rcx, -2152(%rbp)
	cmpq	%rax, %r13
	je	.L10473
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L12073
.L3190:
	movq	%rax, 64(%r13)
.L3189:
	cmpb	$32, %dl
	je	.L12074
.L3191:
	testq	%r15, %r15
	je	.L3192
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L12075
	cmpq	$0, 48(%r15)
	jne	.L3195
	movq	$0, -2160(%rbp)
.L3194:
	cmpq	$0, -2160(%rbp)
	je	.L3212
	movq	-2160(%rbp), %rax
	cmpq	error_mark_node(%rip), %rax
	je	.L12076
.L3202:
	cmpq	$0, -2160(%rbp)
	je	.L10477
	movq	-2160(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L12077
.L3204:
	movq	-2160(%rbp), %r8
	testq	%r8, %r8
	movq	24(%r8), %r12
	movq	%r8, %rsi
	movl	32(%r8), %ebx
	je	.L10477
	movzbl	16(%r8), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L3206
	cmpb	$32, %al
	je	.L3212
	cmpb	$32, %dl
	je	.L10907
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10477
.L10481:
	movq	global_binding_level(%rip), %rax
.L3211:
	movq	current_binding_level(%rip), %rbx
	cmpq	%rax, %rbx
	je	.L3465
	movq	-2120(%rbp), %r13
	movq	8(%r13), %rsi
	movq	%r13, %rdi
.L11044:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L3466:
	movq	-2120(%rbp), %rdx
	movl	$32, %eax
	cmpl	$31, %eax
	movq	$0, 8(%rdx)
	jg	.L3188
	movq	-2160(%rbp), %r12
	movq	%r12, 40(%rdx)
	jmp	.L3188
.L3465:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3466
	movq	-2120(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
	jmp	.L11044
.L10477:
	movzbl	16(%r13), %edx
.L3212:
	cmpb	$32, %dl
	je	.L10907
.L3220:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L3358
	movq	40(%r15), %rax
	testq	%rax, %rax
	je	.L3358
	testb	$1, 53(%rax)
	jne	.L3359
	testb	$8, 18(%rax)
	je	.L3358
.L3359:
	andb	$8, %dl
	je	.L12078
.L3358:
	movl	flag_traditional(%rip), %r12d
	testl	%r12d, %r12d
	je	.L10489
	testb	$1, 53(%r13)
	je	.L10489
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L3362
	movq	48(%r15), %r11
	testq	%r11, %r11
	movq	%r11, %rcx
	jne	.L3363
.L3362:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L3364
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L10081
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L3365
	movq	144(%rdi), %rsi
	testb	$1, 3(%rsi)
	jne	.L12079
.L3365:
	testq	%rcx, %rcx
	jne	.L10081
.L10082:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10081
.L3364:
	movq	40(%r15), %rcx
.L3363:
	testq	%rcx, %rcx
	je	.L10238
.L10081:
	cmpb	$32, 16(%rcx)
	je	.L3367
	movl	looking_for_typename(%rip), %esi
	testl	%esi, %esi
	js	.L3367
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L3375
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11041
	testl	%ebx, %ebx
	jle	.L12080
.L11041:
	movq	%rax, %rcx
.L3367:
	testq	%rcx, %rcx
	jne	.L10489
.L10238:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -2152(%rbp)
.L3361:
	cmpq	%rax, -2152(%rbp)
	je	.L12081
	movq	current_binding_level(%rip), %rbx
	movq	48(%r15), %r12
	movq	40(%r15), %r8
	cmpq	%rax, %rbx
	je	.L12082
.L11042:
	movq	16(%rbx), %rdx
	movq	%r15, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	movq	%r8, -2808(%rbp)
	call	tree_cons
	movq	-2808(%rbp), %r8
	movq	%rax, 16(%rbx)
.L3406:
	testq	%r12, %r12
	movq	%r13, 48(%r15)
	je	.L12083
.L3417:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L3419
	testq	%r12, %r12
	je	.L3420
	testb	$1, 53(%r13)
	jne	.L3420
	cmpb	$34, 16(%r12)
	je	.L12084
.L3420:
	movl	warn_shadow(%rip), %ecx
	testl	%ecx, %ecx
	je	.L3419
	testb	$1, 53(%r13)
	jne	.L3419
	movl	32(%r13), %edi
	testl	%edi, %edi
	je	.L3419
	testq	%rax, %rax
	jne	.L3419
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L3425
	cmpb	$34, 16(%r12)
	je	.L12085
.L3425:
	cmpq	$0, 56(%r15)
	je	.L3427
	movl	$.LC41, %edi
.L3426:
	testq	%rdi, %rdi
	jne	.L11043
.L3419:
	testq	%r12, %r12
	je	.L10490
	movq	%r12, %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	-2152(%rbp), %r12
	movq	16(%r12), %rdx
	call	tree_cons
	movq	%rax, 16(%r12)
.L10490:
	movzbl	16(%r13), %edx
.L3404:
	leal	-128(%rdx), %r10d
	cmpb	$1, %r10b
	jbe	.L3192
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L3192
	cmpb	$18, 16(%rcx)
	je	.L12086
.L3436:
	testb	$64, 46(%rcx)
	je	.L3192
.L3435:
	movq	-2152(%rbp), %rdx
	movzwl	64(%rdx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rdx)
	je	.L12087
.L10491:
	movzbl	16(%r13), %edx
.L3192:
	cmpb	$32, %dl
	je	.L12088
.L3438:
	movq	-2152(%rbp), %rbx
	movq	global_binding_level(%rip), %rax
	movq	(%rbx), %rdi
	cmpq	%rax, %rbx
	movq	%rdi, (%r13)
	movq	%r13, (%rbx)
	je	.L12089
.L3464:
	movq	%r13, -2160(%rbp)
	jmp	.L3211
.L12089:
	testb	$4, 17(%r13)
	jne	.L3464
	xorl	%eax, %eax
	movl	$124, %edi
	call	my_friendly_abort
	movq	global_binding_level(%rip), %rax
	jmp	.L3464
.L12088:
	testq	%r15, %r15
	je	.L3438
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L3439
	cmpq	class_binding_level(%rip), %rax
	je	.L3440
	movq	48(%r15), %rax
	testq	%rax, %rax
	je	.L3444
	cmpb	$32, 16(%rax)
	je	.L3442
.L3444:
	cmpq	$0, current_class_type(%rip)
	je	.L3439
	movq	56(%r15), %rax
	testq	%rax, %rax
	je	.L3439
	cmpb	$32, 16(%rax)
	je	.L3442
.L3439:
	movq	40(%r15), %rax
	testq	%rax, %rax
	je	.L3443
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L3442
	cmpb	$-127, %dl
	je	.L12090
.L3443:
	movq	current_class_name(%rip), %r15
	testq	%r15, %r15
	je	.L3438
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L12091
.L3450:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L3454
	cmpq	class_binding_level(%rip), %rax
	je	.L3455
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L3459
	cmpb	$32, 16(%rax)
	je	.L3457
.L3459:
	cmpq	$0, current_class_type(%rip)
	je	.L3454
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L3454
	cmpb	$32, 16(%rax)
	je	.L3457
.L3454:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L3438
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L3457
	cmpb	$-127, %dl
	jne	.L3438
	movq	$0, 8(%rbx)
	jmp	.L3438
.L3457:
	movq	8(%rax), %r15
	movq	%r15, 8(%rbx)
	jmp	.L3438
.L3455:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L3459
.L12091:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %rbx
	sete	%cl
	movq	8(%r13), %r12
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r15)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r15), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r15), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r12, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L3450
.L12090:
	movq	$0, 8(%r15)
	jmp	.L3443
.L3442:
	movq	8(%rax), %rsi
	movq	%rsi, 8(%r15)
	jmp	.L3443
.L3440:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L3444
.L12087:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10491
.L12086:
	movq	8(%rcx), %r11
	testb	$64, 46(%r11)
	jne	.L3435
	jmp	.L3436
.L11043:
	movq	32(%r15), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L3419
.L3427:
	testq	%r12, %r12
	je	.L3429
	movl	$.LC42, %edi
	jmp	.L3426
.L3429:
	testq	%r8, %r8
	movl	$.LC43, %r9d
	cmovne	%r9, %rdi
	jmp	.L3426
.L12085:
	movl	$.LC40, %edi
	jmp	.L3426
.L12084:
	cmpb	$34, 16(%r13)
	je	.L3420
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r8
	movq	56(%r8), %rax
	je	.L3421
	movq	56(%rax), %rax
.L3421:
	movzbl	66(%rax), %ebx
	andl	$15, %ebx
	decl	%ebx
	jne	.L3419
	movl	$.LC40, %edi
	jmp	.L11043
	.p2align 6,,7
.L12083:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L12092
.L3409:
	testq	%r12, %r12
	jne	.L3417
	testq	%r8, %r8
	jne	.L3417
	testb	$1, 53(%r13)
	je	.L3417
	testb	$8, 18(%r13)
	je	.L3417
	orb	$8, 18(%r15)
	jmp	.L3417
	.p2align 6,,7
.L12092:
	testq	%r8, %r8
	je	.L3409
	cmpb	$29, 16(%r13)
	jne	.L3409
	cmpb	$29, 16(%r8)
	jne	.L3409
	movq	8(%r8), %rsi
	movq	8(%r13), %rdi
	xorl	%eax, %eax
	movl	$1, %edx
	movq	%r8, -2808(%rbp)
	call	comptypes
	movq	-2808(%rbp), %r8
	testl	%eax, %eax
	je	.L12093
	movzbl	53(%r8), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L3412
	movzbl	53(%r13), %r10d
	leal	0(,%rax,8), %r11d
	leaq	88(%r13), %rdx
	andb	$-9, %r10b
	orb	%r11b, %r10b
	movb	%r10b, 53(%r13)
	cmpq	%r8, current_function_decl(%rip)
	je	.L3413
	movq	88(%r8), %rax
.L3414:
	movq	%rax, (%rdx)
	movq	136(%r8), %r10
	movq	80(%r8), %rdi
	movq	72(%r8), %rdx
	movzbl	17(%r13), %esi
	movq	%r10, 136(%r13)
	movq	%rdi, 80(%r13)
	movq	%rdx, 72(%r13)
	movzbl	17(%r8), %r9d
	movq	%r8, 96(%r13)
	andb	$127, %sil
	shrb	$7, %r9b
	movzbl	%r9b, %ecx
	movl	%ecx, %ebx
	salb	$7, %bl
	orb	%bl, %sil
	movb	%sil, 17(%r13)
	movzbl	53(%r8), %ecx
.L3412:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L3415
	movzbl	53(%r13), %r11d
	salb	$4, %al
	andb	$-17, %r11b
	orb	%al, %r11b
	movb	%r11b, 53(%r13)
	movl	128(%r8), %eax
	movl	%eax, 128(%r13)
.L3415:
	movq	8(%r8), %rdx
	cmpq	$0, 24(%rdx)
	je	.L3409
	cmpq	$0, 88(%r8)
	je	.L3409
	movq	8(%r13), %rsi
	cmpq	$0, 24(%rsi)
	jne	.L3409
	movq	%rdx, 8(%r13)
	jmp	.L3409
.L3413:
	xorl	%eax, %eax
	jmp	.L3414
.L12093:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	movq	-2808(%rbp), %r8
	jmp	.L3409
	.p2align 6,,7
.L12082:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3406
	jmp	.L11042
.L12081:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L12094
.L3381:
	cmpq	$0, 40(%r15)
	jne	.L3382
	testb	$8, 18(%r13)
	je	.L3382
	orb	$8, 18(%r15)
.L3382:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L12095
.L3384:
	movq	%r13, 40(%r15)
	movzbl	16(%r13), %edx
.L3383:
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L3395
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L3385
	testb	$1, 18(%rcx)
	je	.L3385
	orb	$1, 18(%r13)
	movq	72(%r15), %rax
.L3385:
	testq	%rax, %rax
	je	.L3395
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L3390
	testb	$8, 17(%rcx)
	je	.L3390
	orb	$8, 17(%r13)
	movq	72(%r15), %rax
.L3390:
	testq	%rax, %rax
	je	.L3395
	cmpq	$0, 8(%rax)
	je	.L3395
	cmpb	$29, %dl
	je	.L12096
.L3398:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L3395:
	testb	$8, 18(%r15)
	je	.L3404
	cmpb	$32, %dl
	je	.L3404
	testb	$8, 18(%r13)
	jne	.L3404
	testb	$1, 53(%r13)
	jne	.L3404
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L3400
	cmpq	$0, 8(%rax)
	jne	.L12097
.L3400:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11233:
	xorl	%eax, %eax
	call	warning
	jmp	.L10490
.L12097:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11233
.L12096:
	movq	8(%r13), %rdi
	movq	integer_type_node(%rip), %r9
	cmpq	%r9, 8(%rdi)
	jne	.L3398
	jmp	.L3395
	.p2align 6,,7
.L12095:
	cmpq	$0, -2160(%rbp)
	je	.L3384
	movq	-2160(%rbp), %rcx
	cmpb	$32, 16(%rcx)
	jne	.L3383
	jmp	.L3384
.L12094:
	testb	$8, 54(%r13)
	jne	.L3381
	andb	$-9, 18(%r13)
	jmp	.L3381
	.p2align 6,,7
.L10489:
	movq	global_binding_level(%rip), %rax
	jmp	.L3361
.L12080:
	testl	%esi, %esi
	jg	.L11041
	testl	%ebx, %ebx
	je	.L3367
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11041
	.p2align 6,,7
.L3375:
	movq	8(%rcx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rcx
	jmp	.L3367
.L12079:
	xorl	%ecx, %ecx
	movq	%r15, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L3367
	testq	%rax, %rax
	je	.L10082
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L3365
	.p2align 6,,7
.L12078:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L3358
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r15), %rdi
	call	warning_with_decl
	jmp	.L3358
	.p2align 6,,7
.L10907:
	movq	8(%r13), %rdx
	movq	80(%rdx), %rcx
	testq	%rcx, %rcx
	movq	%rcx, -2144(%rbp)
	je	.L3222
	movzbl	16(%rcx), %eax
	cmpb	$32, %al
	je	.L3221
.L3222:
	movq	global_binding_level(%rip), %rdi
	movq	%r13, -2144(%rbp)
	cmpq	%rdi, current_binding_level(%rip)
	jne	.L10482
	movq	%r13, 80(%rdx)
.L10482:
	movzbl	16(%r13), %eax
.L3225:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%bl
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	movq	-2144(%rbp), %rax
	movq	56(%rax), %rbx
	testq	%rbx, %rbx
	je	.L3349
	cmpq	$0, 72(%rax)
	je	.L12098
.L3349:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L3220
	cmpq	$0, 56(%rax)
	je	.L3220
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %rdi
	cmpq	global_binding_level(%rip), %rbx
	movq	%rdi, -776(%rbp)
	je	.L3354
	movq	-776(%rbp), %rdx
	movq	8(%rdx), %rsi
	movq	%rdx, %rdi
.L11040:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L3355:
	movq	-776(%rbp), %r10
	movq	%r12, 8(%r10)
	jmp	.L3220
.L3354:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3355
	movq	-776(%rbp), %r8
	movq	8(%r8), %rsi
	movq	%r8, %rdi
	jmp	.L11040
.L12098:
	movq	8(%r13), %r11
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	movq	%r11, -768(%rbp)
	cmpb	$32, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L3350
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	-768(%rbp), %rsi
	movq	%rsi, 8(%rax)
	jmp	.L3349
.L3350:
	movq	%rbx, 72(%r13)
	jmp	.L3349
.L3221:
	movq	-2144(%rbp), %r11
	movq	current_binding_level(%rip), %rsi
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%r11), %rbx
	movq	%rbx, -728(%rbp)
	jne	.L3225
	movq	-728(%rbp), %r12
	movq	32(%r12), %rcx
	cmpb	$36, (%rcx)
	jne	.L3225
	cmpb	$95, 1(%rcx)
	jne	.L3225
	movq	class_binding_level(%rip), %r9
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rdx
	testq	%r9, %r9
	movq	%r9, -2128(%rbp)
	movq	%rdx, -736(%rbp)
	jne	.L3229
	testb	$-128, 66(%rsi)
	movq	%rsi, -2128(%rbp)
	je	.L3229
.L3233:
	movq	-2128(%rbp), %rax
	movq	56(%rax), %rsi
	testb	$-128, 66(%rsi)
	movq	%rsi, -2128(%rbp)
	jne	.L3233
.L3229:
	movq	-2128(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12099
	movq	-2128(%rbp), %r8
	movq	-728(%rbp), %rdi
	xorl	%eax, %eax
	movq	-736(%rbp), %rsi
	movq	8(%r8), %rdx
	call	saveable_tree_cons
	movq	-2128(%rbp), %rcx
	movq	%rax, 8(%rcx)
.L3235:
	cmpq	$0, -728(%rbp)
	je	.L3236
	movq	-736(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L3237
	movq	-728(%rbp), %r10
	movq	%r10, 80(%rcx)
.L3237:
	movq	-728(%rbp), %rdi
	movq	-736(%rbp), %rax
	cmpq	%rax, 8(%rdi)
	je	.L3238
	cmpb	$21, 16(%rax)
	je	.L12100
.L3239:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L3241
	cmpq	$0, 32(%rax)
	je	.L3240
.L3241:
	movq	lang_name_cplusplus(%rip), %r12
	cmpq	%r12, current_lang_name(%rip)
	je	.L12101
.L3242:
	xorl	%ecx, %ecx
.L3277:
	testq	%rcx, %rcx
	jne	.L3278
.L10237:
	movq	-728(%rbp), %rsi
	movq	-736(%rbp), %rdx
	movl	$32, %edi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-736(%rbp), %rdi
	movq	%rax, -2136(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-2136(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L3279
	movq	-728(%rbp), %r12
	movq	8(%r12), %rsi
	movq	%r12, %rdi
.L11037:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L3280:
	movq	-736(%rbp), %rsi
	movq	-728(%rbp), %rdx
	movq	%rsi, 8(%rdx)
.L3283:
	movq	-728(%rbp), %rcx
	movq	32(%rcx), %rax
	cmpb	$36, (%rax)
	je	.L12102
.L3285:
	movq	-736(%rbp), %r8
	movq	80(%r8), %rdx
	testq	%rdx, %rdx
	je	.L3316
	cmpb	$32, 16(%rdx)
	je	.L12103
.L3286:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3305
	movq	-2136(%rbp), %rax
	movq	56(%rax), %r12
	testq	%r12, %r12
	je	.L10484
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L3307
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L3307:
	movq	decl_obstack+24(%rip), %rdx
	movq	-2136(%rbp), %rdi
	leaq	8(%rdx), %rcx
	movq	%rdi, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rcx
	ja	.L12104
.L3309:
	movq	-2136(%rbp), %rbx
	movq	%rdx, %r11
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%r11)
	cmpb	$32, 16(%rbx)
	je	.L12105
.L10485:
	movq	-728(%rbp), %rsi
	movq	32(%rsi), %rax
.L3316:
	cmpb	$36, (%rax)
	je	.L12106
.L3330:
	movq	current_class_type(%rip), %rdx
	movq	-2136(%rbp), %r12
	movq	-736(%rbp), %r10
	testq	%rdx, %rdx
	movq	%r12, 80(%r10)
	jne	.L3333
	cmpq	$0, current_function_decl(%rip)
	je	.L3332
.L3333:
	movq	lang_name_cplusplus(%rip), %rax
	cmpq	%rax, current_lang_name(%rip)
	je	.L3331
.L3332:
	movq	-728(%rbp), %rdi
	movq	-2136(%rbp), %rcx
	movq	%rdi, 72(%rcx)
.L3238:
	movq	-2128(%rbp), %rax
	movzbl	66(%rax), %r12d
	andl	$15, %r12d
	cmpl	$2, %r12d
	je	.L12107
.L3236:
	movq	-736(%rbp), %rdx
	movq	80(%rdx), %rax
	cmpb	$32, 16(%rax)
	je	.L12108
	movq	-736(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-736(%rbp), %r12
	movq	%rax, (%r12)
	movq	-2144(%rbp), %r10
	movzbl	16(%r10), %eax
	jmp	.L3225
.L12108:
	movq	%rax, (%rdx)
	movq	-2144(%rbp), %r8
	movzbl	16(%r8), %eax
	jmp	.L3225
.L12107:
	movq	-736(%rbp), %rdi
	orb	$64, 18(%rdi)
	movq	80(%rdi), %rsi
	movq	-728(%rbp), %r11
	movq	current_class_type(%rip), %rax
	movq	%rsi, 56(%r11)
	cmpq	$0, 32(%rax)
	jne	.L3236
	movq	-2128(%rbp), %rdx
	movq	144(%rax), %rcx
	movq	8(%rdx), %r9
	movq	%r9, 72(%rcx)
	jmp	.L3236
.L3331:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L12109
	cmpq	$0, 32(%rdx)
	jne	.L3238
	movq	-2136(%rbp), %r8
	movq	80(%rdx), %r10
	movl	$136, %esi
	cmpb	$32, 16(%r8)
	movq	72(%r10), %rbx
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L3341
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movq	-728(%rbp), %rdi
	cmpb	$1, 16(%rdi)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-728(%rbp), %r11
	movl	24(%r11), %eax
	movq	32(%r11), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2136(%rbp), %r12
	movq	%rax, 72(%r12)
	movq	-736(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L3343:
	movq	-2136(%rbp), %rbx
	movq	current_class_type(%rip), %r10
	movq	152(%rbx), %r8
	movq	%r10, 64(%rbx)
	movq	%r10, 16(%r8)
	jmp	.L3238
.L3341:
	movq	-728(%rbp), %rdx
	movq	-2136(%rbp), %r9
	movq	%rdx, 72(%r9)
	jmp	.L3343
.L12109:
	movq	-2136(%rbp), %r9
	movq	112(%rax), %rbx
	movl	$136, %esi
	cmpb	$32, 16(%r9)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L3336
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	-728(%rbp), %r12
	cmpb	$1, 16(%r12)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-728(%rbp), %r10
	movl	24(%r10), %eax
	movq	32(%r10), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2136(%rbp), %rdx
	movq	%rax, 72(%rdx)
	movq	-736(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L3338:
	movq	current_function_decl(%rip), %r9
	movq	-2136(%rbp), %r11
	movq	%r9, 64(%r11)
	jmp	.L3238
.L3336:
	movq	-728(%rbp), %rcx
	movq	-2136(%rbp), %rdi
	movq	%rcx, 72(%rdi)
	jmp	.L3338
.L12106:
	cmpb	$95, 1(%rax)
	jne	.L3330
	movq	-2136(%rbp), %r8
	orb	$64, 53(%r8)
	jmp	.L3330
.L12105:
	cmpq	$0, 72(%rbx)
	je	.L12110
.L10486:
	movq	-728(%rbp), %rdx
	movq	32(%rdx), %rax
	jmp	.L3316
.L12110:
	movq	-2136(%rbp), %rdx
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%rdx), %r9
	movq	%r9, -744(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L3311
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2136(%rbp), %rsi
	movq	%rax, 72(%rsi)
	movq	-744(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L10483:
	movq	-728(%rbp), %r9
	movq	32(%r9), %rax
	jmp	.L3316
.L3311:
	movq	-2136(%rbp), %rax
	movq	%r12, 72(%rax)
	jmp	.L10485
.L12104:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L3309
.L10484:
	movq	-728(%rbp), %rbx
	movq	32(%rbx), %rax
	jmp	.L3316
.L3305:
	movq	-2136(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -2136(%rbp)
	jmp	.L10486
.L12103:
	movq	global_binding_level(%rip), %r10
	movl	$1, %r12d
	cmpq	%r10, current_binding_level(%rip)
	je	.L3287
	movq	-728(%rbp), %r11
	movq	48(%r11), %rdi
	testq	%rdi, %rdi
	movq	%rdi, %rcx
	jne	.L3288
.L3287:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L3289
	movq	-728(%rbp), %rbx
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10079
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L3290
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L12111
.L3290:
	testq	%rcx, %rcx
	jne	.L10079
.L10080:
	movq	-728(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10079
	movq	-728(%rbp), %rsi
	movq	40(%rsi), %rcx
.L3288:
	testq	%rcx, %rcx
	je	.L3292
.L10079:
	cmpb	$32, 16(%rcx)
	je	.L3292
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L3292
	movq	-728(%rbp), %r8
	movq	8(%r8), %rax
	testq	%rax, %rax
	je	.L3300
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11038
	testl	%r12d, %r12d
	jle	.L12112
.L11038:
	movq	%rax, %rcx
.L3292:
	movq	-736(%rbp), %r10
	cmpq	80(%r10), %rcx
	jne	.L3286
	jmp	.L10483
.L12112:
	testl	%edx, %edx
	jg	.L11038
	testl	%r12d, %r12d
	je	.L3292
	movq	-728(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11038
.L3300:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L3292
.L12111:
	xorl	%ecx, %ecx
	movq	-728(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L3292
	testq	%rax, %rax
	je	.L10080
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L3290
.L3289:
	movq	-728(%rbp), %rdx
	movq	40(%rdx), %rcx
	jmp	.L3288
.L12102:
	cmpb	$95, 1(%rax)
	jne	.L3285
	jmp	.L3316
.L3279:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3280
	movq	-728(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
	jmp	.L11037
.L3278:
	movq	80(%rcx), %rax
	movq	%rax, -2136(%rbp)
	jmp	.L3283
.L12101:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L3244
	movq	80(%rax), %rbx
.L3244:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L3277
.L3276:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L3253
	cmpl	$32, %eax
	je	.L12113
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L3247:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L3277
	jmp	.L3276
.L12113:
	movq	8(%rbx), %rdx
	movq	-736(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%rdx), %r9
	movq	72(%r9), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10881
	movq	64(%rbx), %rbx
	jmp	.L3247
.L10881:
	movq	32(%rax), %rcx
	jmp	.L3277
.L3253:
	movq	-736(%rbp), %rax
	movq	80(%rax), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L3242
	movq	global_binding_level(%rip), %rcx
	cmpq	%rcx, current_binding_level(%rip)
	je	.L3256
	movq	48(%rbx), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L3257
.L3256:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L3258
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10077
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L3259
	movq	144(%rdi), %r10
	testb	$1, 3(%r10)
	jne	.L12114
.L3259:
	testq	%rcx, %rcx
	jne	.L10077
.L10078:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10077
.L3258:
	movq	40(%rbx), %rcx
.L3257:
	testq	%rcx, %rcx
	je	.L10237
.L10077:
	cmpb	$32, 16(%rcx)
	je	.L3277
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L3277
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L3269
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11036
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L12115
.L11036:
	movq	%rax, %rcx
	jmp	.L3277
.L12115:
	testl	%edx, %edx
	jg	.L11036
	movl	$1, %r11d
	testl	%r11d, %r11d
	je	.L3277
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11036
.L3269:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L3277
	jmp	.L11036
.L12114:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L3277
	testq	%rax, %rax
	je	.L10078
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L3259
.L3240:
	movq	-728(%rbp), %rsi
	movq	-736(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -752(%rbp)
	je	.L3317
	movq	-728(%rbp), %r12
	movq	8(%r12), %rsi
	movq	%r12, %rdi
.L11039:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L3318:
	movq	-736(%rbp), %r9
	movq	-728(%rbp), %r11
	movq	%r9, 8(%r11)
	movq	-752(%rbp), %rdi
	movq	56(%rdi), %r12
	testq	%r12, %r12
	je	.L3321
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L3322
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L3322:
	movq	-752(%rbp), %rdx
	movq	%rdx, 56(%r12)
	movq	decl_obstack+24(%rip), %rdx
	leaq	8(%rdx), %rbx
	cmpq	decl_obstack+32(%rip), %rbx
	ja	.L12116
.L3324:
	movq	%rdx, %rsi
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	-752(%rbp), %rdx
	movq	%rdx, (%rsi)
	cmpb	$32, 16(%rdx)
	je	.L12117
.L3321:
	movq	-752(%rbp), %r11
	movq	%r11, -2136(%rbp)
	jmp	.L10486
.L12117:
	cmpq	$0, 72(%rdx)
	jne	.L3321
	movq	current_class_name(%rip), %rbx
	movq	8(%rdx), %r8
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%r8, -760(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L3326
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-752(%rbp), %r12
	movq	%rax, 72(%r12)
	movq	-760(%rbp), %r10
	movq	%r10, 8(%rax)
	jmp	.L3321
.L3326:
	movq	-752(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L3321
.L12116:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L3324
.L3317:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3318
	movq	-728(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
	jmp	.L11039
.L12100:
	cmpq	$0, class_binding_level(%rip)
	je	.L3239
	movq	144(%rax), %rbx
	testb	$16, 3(%rbx)
	jne	.L3238
	jmp	.L3239
.L12099:
	movq	-728(%rbp), %rdi
	movq	-736(%rbp), %rsi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%rbx)
	jmp	.L3235
	.p2align 6,,7
.L3206:
	movq	-2160(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10477
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	jne	.L10481
	testb	$8, 18(%r15)
	je	.L10481
	testb	$8, 18(%r13)
	jne	.L10481
	testb	$9, 53(%r13)
	jne	.L10481
	cmpq	%r13, current_function_decl(%rip)
	je	.L12118
.L3215:
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L3216
	cmpq	$0, 8(%rax)
	jne	.L12119
.L3216:
	movq	-2160(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11035:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-2160(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L10481
.L12119:
	movq	-2160(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11035
.L12118:
	movq	-2160(%rbp), %r10
	movq	%r10, current_function_decl(%rip)
	jmp	.L3215
	.p2align 6,,7
.L12077:
	cmpq	$0, 64(%rcx)
	jne	.L3204
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L3204
.L12076:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -2160(%rbp)
	call	error_with_decl
	jmp	.L3202
.L3195:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L3197
.L3201:
	cmpq	%r15, 56(%rax)
	je	.L3197
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L3201
.L3197:
	movq	%rax, -2160(%rbp)
	jmp	.L3194
.L12075:
	movq	40(%r15), %rax
	jmp	.L3197
.L12074:
	movq	56(%r13), %r15
	jmp	.L3191
.L12073:
	testb	$32, 53(%r13)
	jne	.L3189
	jmp	.L3190
.L10473:
	movzbl	16(%r13), %edx
	jmp	.L3189
.L11272:
	leal	(%rcx,%rcx), %edx
	movq	builtin_type_tdescs_arr(%rip), %rdi
	xorl	%eax, %eax
	movslq	%edx,%rsi
	movl	%edx, builtin_type_tdescs_max(%rip)
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L3182
.L3172:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3173
	movq	8, %rsi
	xorl	%edi, %edi
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	jmp	.L11033
.L3171:
	xorl	%esi, %esi
	movl	$32, %edi
	movq	%r15, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12120
.L11034:
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L3178:
	movq	$0, 8
	jmp	.L3170
.L12120:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3178
	jmp	.L11034
	.p2align 6,,7
.L11271:
	movq	-2072(%rbp), %rsi
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r15, %rdx
	call	build_decl
	movq	current_binding_level(%rip), %r8
	movq	%rax, %r13
	movq	112(%rax), %r14
	movq	current_function_decl(%rip), %rax
	movq	%r8, -2104(%rbp)
	cmpq	%rax, %r13
	je	.L10454
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L12121
.L2890:
	movq	%rax, 64(%r13)
.L2889:
	cmpb	$32, %dl
	je	.L12122
.L2891:
	testq	%r14, %r14
	je	.L2892
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L12123
	cmpq	$0, 48(%r14)
	jne	.L2895
	movq	$0, -2112(%rbp)
.L2894:
	cmpq	$0, -2112(%rbp)
	je	.L2912
	movq	-2112(%rbp), %rax
	cmpq	error_mark_node(%rip), %rax
	je	.L12124
.L2902:
	cmpq	$0, -2112(%rbp)
	je	.L10458
	movq	-2112(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L12125
.L2904:
	movq	-2112(%rbp), %r11
	testq	%r11, %r11
	movq	24(%r11), %r12
	movq	%r11, %rsi
	movl	32(%r11), %ebx
	je	.L10458
	movzbl	16(%r11), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L2906
	cmpb	$32, %al
	je	.L2912
	cmpb	$32, %dl
	je	.L10906
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10458
.L10462:
	movq	global_binding_level(%rip), %rax
.L2911:
	movq	current_binding_level(%rip), %rbx
	cmpq	%rax, %rbx
	je	.L3165
	movq	-2072(%rbp), %r13
	movq	8(%r13), %rsi
	movq	%r13, %rdi
.L11032:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L3166:
	movq	-2072(%rbp), %rdx
	movl	$32, %eax
	cmpl	$31, %eax
	movq	$0, 8(%rdx)
	jg	.L2888
	movq	-2112(%rbp), %r12
	movq	%r12, 40(%rdx)
	jmp	.L2888
.L3165:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3166
	movq	-2072(%rbp), %r11
	movq	8(%r11), %rsi
	movq	%r11, %rdi
	jmp	.L11032
.L10458:
	movzbl	16(%r13), %edx
.L2912:
	cmpb	$32, %dl
	je	.L10906
.L2920:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L3058
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L3058
	testb	$1, 53(%rax)
	jne	.L3059
	testb	$8, 18(%rax)
	je	.L3058
.L3059:
	andb	$8, %dl
	je	.L12126
.L3058:
	movl	flag_traditional(%rip), %ecx
	testl	%ecx, %ecx
	je	.L10470
	testb	$1, 53(%r13)
	je	.L10470
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L3062
	movq	48(%r14), %r10
	testq	%r10, %r10
	movq	%r10, %rcx
	jne	.L3063
.L3062:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L3064
	movq	56(%r14), %rcx
	testq	%rcx, %rcx
	jne	.L10075
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L3065
	movq	144(%rdi), %r8
	testb	$1, 3(%r8)
	jne	.L12127
.L3065:
	testq	%rcx, %rcx
	jne	.L10075
.L10076:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10075
.L3064:
	movq	40(%r14), %rcx
.L3063:
	testq	%rcx, %rcx
	je	.L10236
.L10075:
	cmpb	$32, 16(%rcx)
	je	.L3067
	movl	looking_for_typename(%rip), %esi
	testl	%esi, %esi
	js	.L3067
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L3075
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11029
	testl	%ebx, %ebx
	jle	.L12128
.L11029:
	movq	%rax, %rcx
.L3067:
	testq	%rcx, %rcx
	jne	.L10470
.L10236:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -2104(%rbp)
.L3061:
	cmpq	%rax, -2104(%rbp)
	je	.L12129
	movq	current_binding_level(%rip), %rbx
	movq	48(%r14), %r12
	movq	40(%r14), %r8
	cmpq	%rax, %rbx
	je	.L12130
.L11030:
	movq	16(%rbx), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	movq	%r8, -2808(%rbp)
	call	tree_cons
	movq	-2808(%rbp), %r8
	movq	%rax, 16(%rbx)
.L3106:
	testq	%r12, %r12
	movq	%r13, 48(%r14)
	je	.L12131
.L3117:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L3119
	testq	%r12, %r12
	je	.L3120
	testb	$1, 53(%r13)
	jne	.L3120
	cmpb	$34, 16(%r12)
	je	.L12132
.L3120:
	movl	warn_shadow(%rip), %ebx
	testl	%ebx, %ebx
	je	.L3119
	testb	$1, 53(%r13)
	jne	.L3119
	movl	32(%r13), %edi
	testl	%edi, %edi
	je	.L3119
	testq	%rax, %rax
	jne	.L3119
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L3125
	cmpb	$34, 16(%r12)
	je	.L12133
.L3125:
	cmpq	$0, 56(%r14)
	je	.L3127
	movl	$.LC41, %edi
.L3126:
	testq	%rdi, %rdi
	jne	.L11031
.L3119:
	testq	%r12, %r12
	je	.L10471
	movq	%r12, %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	-2104(%rbp), %r12
	movq	16(%r12), %rdx
	call	tree_cons
	movq	%rax, 16(%r12)
.L10471:
	movzbl	16(%r13), %edx
.L3104:
	leal	-128(%rdx), %r9d
	cmpb	$1, %r9b
	jbe	.L2892
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L2892
	cmpb	$18, 16(%rcx)
	je	.L12134
.L3136:
	testb	$64, 46(%rcx)
	je	.L2892
.L3135:
	movq	-2104(%rbp), %rdx
	movzwl	64(%rdx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rdx)
	je	.L12135
.L10472:
	movzbl	16(%r13), %edx
.L2892:
	cmpb	$32, %dl
	je	.L12136
.L3138:
	movq	-2104(%rbp), %rbx
	movq	global_binding_level(%rip), %rax
	movq	(%rbx), %rdi
	cmpq	%rax, %rbx
	movq	%rdi, (%r13)
	movq	%r13, (%rbx)
	je	.L12137
.L3164:
	movq	%r13, -2112(%rbp)
	jmp	.L2911
.L12137:
	testb	$4, 17(%r13)
	jne	.L3164
	xorl	%eax, %eax
	movl	$124, %edi
	call	my_friendly_abort
	movq	global_binding_level(%rip), %rax
	jmp	.L3164
.L12136:
	testq	%r14, %r14
	je	.L3138
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L3139
	cmpq	class_binding_level(%rip), %rax
	je	.L3140
	movq	48(%r14), %rax
	testq	%rax, %rax
	je	.L3144
	cmpb	$32, 16(%rax)
	je	.L3142
.L3144:
	cmpq	$0, current_class_type(%rip)
	je	.L3139
	movq	56(%r14), %rax
	testq	%rax, %rax
	je	.L3139
	cmpb	$32, 16(%rax)
	je	.L3142
.L3139:
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L3143
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L3142
	cmpb	$-127, %dl
	je	.L12138
.L3143:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L3138
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L12139
.L3150:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L3154
	cmpq	class_binding_level(%rip), %rax
	je	.L3155
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L3159
	cmpb	$32, 16(%rax)
	je	.L3157
.L3159:
	cmpq	$0, current_class_type(%rip)
	je	.L3154
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L3154
	cmpb	$32, 16(%rax)
	je	.L3157
.L3154:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L3138
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L3157
	cmpb	$-127, %dl
	jne	.L3138
	movq	$0, 8(%rbx)
	jmp	.L3138
.L3157:
	movq	8(%rax), %r14
	movq	%r14, 8(%rbx)
	jmp	.L3138
.L3155:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L3159
.L12139:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %rbx
	sete	%r10b
	movq	8(%r13), %r12
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r14)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r14), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r12, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L3150
.L12138:
	movq	$0, 8(%r14)
	jmp	.L3143
.L3142:
	movq	8(%rax), %rcx
	movq	%rcx, 8(%r14)
	jmp	.L3143
.L3140:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L3144
.L12135:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10472
.L12134:
	movq	8(%rcx), %rsi
	testb	$64, 46(%rsi)
	jne	.L3135
	jmp	.L3136
.L11031:
	movq	32(%r14), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L3119
.L3127:
	testq	%r12, %r12
	je	.L3129
	movl	$.LC42, %edi
	jmp	.L3126
.L3129:
	testq	%r8, %r8
	movl	$.LC43, %r11d
	cmovne	%r11, %rdi
	jmp	.L3126
.L12133:
	movl	$.LC40, %edi
	jmp	.L3126
.L12132:
	cmpb	$34, 16(%r13)
	je	.L3120
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r8
	movq	56(%r8), %rax
	je	.L3121
	movq	56(%rax), %rax
.L3121:
	movzbl	66(%rax), %r10d
	andl	$15, %r10d
	decl	%r10d
	jne	.L3119
	movl	$.LC40, %edi
	jmp	.L11031
	.p2align 6,,7
.L12131:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L12140
.L3109:
	testq	%r12, %r12
	jne	.L3117
	testq	%r8, %r8
	jne	.L3117
	testb	$1, 53(%r13)
	je	.L3117
	testb	$8, 18(%r13)
	je	.L3117
	orb	$8, 18(%r14)
	jmp	.L3117
	.p2align 6,,7
.L12140:
	testq	%r8, %r8
	je	.L3109
	cmpb	$29, 16(%r13)
	jne	.L3109
	cmpb	$29, 16(%r8)
	jne	.L3109
	movq	8(%r8), %rsi
	movq	8(%r13), %rdi
	xorl	%eax, %eax
	movl	$1, %edx
	movq	%r8, -2808(%rbp)
	call	comptypes
	movq	-2808(%rbp), %r8
	testl	%eax, %eax
	je	.L12141
	movzbl	53(%r8), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L3112
	movzbl	53(%r13), %r9d
	leal	0(,%rax,8), %esi
	leaq	88(%r13), %rdx
	andb	$-9, %r9b
	orb	%sil, %r9b
	movb	%r9b, 53(%r13)
	cmpq	%r8, current_function_decl(%rip)
	je	.L3113
	movq	88(%r8), %rax
.L3114:
	movq	%rax, (%rdx)
	movq	136(%r8), %r9
	movq	80(%r8), %r11
	movq	72(%r8), %rdx
	movzbl	17(%r13), %ecx
	movq	%r9, 136(%r13)
	movq	%r11, 80(%r13)
	movq	%rdx, 72(%r13)
	movzbl	17(%r8), %edi
	movq	%r8, 96(%r13)
	andb	$127, %cl
	shrb	$7, %dil
	movzbl	%dil, %ebx
	movl	%ebx, %r10d
	salb	$7, %r10b
	orb	%r10b, %cl
	movb	%cl, 17(%r13)
	movzbl	53(%r8), %ecx
.L3112:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L3115
	movzbl	53(%r13), %esi
	salb	$4, %al
	andb	$-17, %sil
	orb	%al, %sil
	movb	%sil, 53(%r13)
	movl	128(%r8), %eax
	movl	%eax, 128(%r13)
.L3115:
	movq	8(%r8), %rdx
	cmpq	$0, 24(%rdx)
	je	.L3109
	cmpq	$0, 88(%r8)
	je	.L3109
	movq	8(%r13), %rcx
	cmpq	$0, 24(%rcx)
	jne	.L3109
	movq	%rdx, 8(%r13)
	jmp	.L3109
.L3113:
	xorl	%eax, %eax
	jmp	.L3114
.L12141:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	movq	-2808(%rbp), %r8
	jmp	.L3109
	.p2align 6,,7
.L12130:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3106
	jmp	.L11030
.L12129:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L12142
.L3081:
	cmpq	$0, 40(%r14)
	jne	.L3082
	testb	$8, 18(%r13)
	je	.L3082
	orb	$8, 18(%r14)
.L3082:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L12143
.L3084:
	movq	%r13, 40(%r14)
	movzbl	16(%r13), %edx
.L3083:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L3095
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L3085
	testb	$1, 18(%rcx)
	je	.L3085
	orb	$1, 18(%r13)
	movq	72(%r14), %rax
.L3085:
	testq	%rax, %rax
	je	.L3095
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L3090
	testb	$8, 17(%rcx)
	je	.L3090
	orb	$8, 17(%r13)
	movq	72(%r14), %rax
.L3090:
	testq	%rax, %rax
	je	.L3095
	cmpq	$0, 8(%rax)
	je	.L3095
	cmpb	$29, %dl
	je	.L12144
.L3098:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L3095:
	testb	$8, 18(%r14)
	je	.L3104
	cmpb	$32, %dl
	je	.L3104
	testb	$8, 18(%r13)
	jne	.L3104
	testb	$1, 53(%r13)
	jne	.L3104
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L3100
	cmpq	$0, 8(%rax)
	jne	.L12145
.L3100:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11232:
	xorl	%eax, %eax
	call	warning
	jmp	.L10471
.L12145:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11232
.L12144:
	movq	8(%r13), %r11
	movq	integer_type_node(%rip), %rdi
	cmpq	%rdi, 8(%r11)
	jne	.L3098
	jmp	.L3095
	.p2align 6,,7
.L12143:
	cmpq	$0, -2112(%rbp)
	je	.L3084
	movq	-2112(%rbp), %r12
	cmpb	$32, 16(%r12)
	jne	.L3083
	jmp	.L3084
.L12142:
	testb	$8, 54(%r13)
	jne	.L3081
	andb	$-9, 18(%r13)
	jmp	.L3081
	.p2align 6,,7
.L10470:
	movq	global_binding_level(%rip), %rax
	jmp	.L3061
.L12128:
	testl	%esi, %esi
	jg	.L11029
	testl	%ebx, %ebx
	je	.L3067
	movq	%rax, %rdx
	movq	%r14, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11029
	.p2align 6,,7
.L3075:
	movq	8(%rcx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rcx
	jmp	.L3067
.L12127:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L3067
	testq	%rax, %rax
	je	.L10076
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L3065
	.p2align 6,,7
.L12126:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L3058
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r14), %rdi
	call	warning_with_decl
	jmp	.L3058
	.p2align 6,,7
.L10906:
	movq	8(%r13), %rdx
	movq	80(%rdx), %rcx
	testq	%rcx, %rcx
	movq	%rcx, -2096(%rbp)
	je	.L2922
	movzbl	16(%rcx), %eax
	cmpb	$32, %al
	je	.L2921
.L2922:
	movq	global_binding_level(%rip), %r9
	movq	%r13, -2096(%rbp)
	cmpq	%r9, current_binding_level(%rip)
	jne	.L10463
	movq	%r13, 80(%rdx)
.L10463:
	movzbl	16(%r13), %eax
.L2925:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%bl
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	movq	-2096(%rbp), %rax
	movq	56(%rax), %rbx
	testq	%rbx, %rbx
	je	.L3049
	cmpq	$0, 72(%rax)
	je	.L12146
.L3049:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L2920
	cmpq	$0, 56(%rax)
	je	.L2920
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %rdi
	cmpq	global_binding_level(%rip), %rbx
	movq	%rdi, -720(%rbp)
	je	.L3054
	movq	-720(%rbp), %r11
	movq	8(%r11), %rsi
	movq	%r11, %rdi
.L11028:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L3055:
	movq	-720(%rbp), %rsi
	movq	%r12, 8(%rsi)
	jmp	.L2920
.L3054:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3055
	movq	-720(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
	jmp	.L11028
.L12146:
	movq	8(%r13), %r10
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	movq	%r10, -712(%rbp)
	cmpb	$32, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L3050
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	-712(%rbp), %r12
	movq	%r12, 8(%rax)
	jmp	.L3049
.L3050:
	movq	%rbx, 72(%r13)
	jmp	.L3049
.L2921:
	movq	-2096(%rbp), %r12
	movq	current_binding_level(%rip), %rsi
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%r12), %rbx
	movq	%rbx, -672(%rbp)
	jne	.L2925
	movq	-672(%rbp), %rdi
	movq	32(%rdi), %rcx
	cmpb	$36, (%rcx)
	jne	.L2925
	cmpb	$95, 1(%rcx)
	jne	.L2925
	movq	class_binding_level(%rip), %r10
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rcx
	testq	%r10, %r10
	movq	%r10, -2080(%rbp)
	movq	%rcx, -680(%rbp)
	jne	.L2929
	testb	$-128, 66(%rsi)
	movq	%rsi, -2080(%rbp)
	je	.L2929
.L2933:
	movq	-2080(%rbp), %r8
	movq	56(%r8), %rdx
	testb	$-128, 66(%rdx)
	movq	%rdx, -2080(%rbp)
	jne	.L2933
.L2929:
	movq	-2080(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12147
	movq	-2080(%rbp), %r9
	movq	-672(%rbp), %rdi
	xorl	%eax, %eax
	movq	-680(%rbp), %rsi
	movq	8(%r9), %rdx
	call	saveable_tree_cons
	movq	-2080(%rbp), %r11
	movq	%rax, 8(%r11)
.L2935:
	cmpq	$0, -672(%rbp)
	je	.L2936
	movq	-680(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L2937
	movq	-672(%rbp), %rax
	movq	%rax, 80(%rcx)
.L2937:
	movq	-672(%rbp), %rbx
	movq	-680(%rbp), %rax
	cmpq	%rax, 8(%rbx)
	je	.L2938
	cmpb	$21, 16(%rax)
	je	.L12148
.L2939:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L2941
	cmpq	$0, 32(%rax)
	je	.L2940
.L2941:
	movq	lang_name_cplusplus(%rip), %rdi
	cmpq	%rdi, current_lang_name(%rip)
	je	.L12149
.L2942:
	xorl	%ecx, %ecx
.L2977:
	testq	%rcx, %rcx
	jne	.L2978
.L10235:
	movq	-672(%rbp), %rsi
	movq	-680(%rbp), %rdx
	movl	$32, %edi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-680(%rbp), %rdi
	movq	%rax, -2088(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-2088(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L2979
	movq	-672(%rbp), %r10
	movq	8(%r10), %rsi
	movq	%r10, %rdi
.L11025:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L2980:
	movq	-680(%rbp), %rcx
	movq	-672(%rbp), %rdx
	movq	%rcx, 8(%rdx)
.L2983:
	movq	-672(%rbp), %r11
	movq	32(%r11), %rax
	cmpb	$36, (%rax)
	je	.L12150
.L2985:
	movq	-680(%rbp), %r9
	movq	80(%r9), %rdx
	testq	%rdx, %rdx
	je	.L3016
	cmpb	$32, 16(%rdx)
	je	.L12151
.L2986:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3005
	movq	-2088(%rbp), %rcx
	movq	56(%rcx), %r12
	testq	%r12, %r12
	je	.L10465
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L3007
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L3007:
	movq	decl_obstack+24(%rip), %rdx
	movq	-2088(%rbp), %rdi
	leaq	8(%rdx), %rsi
	movq	%rdi, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rsi
	ja	.L12152
.L3009:
	movq	-2088(%rbp), %rbx
	movq	%rdx, %r10
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%r10)
	cmpb	$32, 16(%rbx)
	je	.L12153
.L10466:
	movq	-672(%rbp), %r8
	movq	32(%r8), %rax
.L3016:
	cmpb	$36, (%rax)
	je	.L12154
.L3030:
	movq	current_class_type(%rip), %rdx
	movq	-2088(%rbp), %rcx
	movq	-680(%rbp), %r9
	testq	%rdx, %rdx
	movq	%rcx, 80(%r9)
	jne	.L3033
	cmpq	$0, current_function_decl(%rip)
	je	.L3032
.L3033:
	movq	lang_name_cplusplus(%rip), %r10
	cmpq	%r10, current_lang_name(%rip)
	je	.L3031
.L3032:
	movq	-672(%rbp), %r12
	movq	-2088(%rbp), %rdi
	movq	%r12, 72(%rdi)
.L2938:
	movq	-2080(%rbp), %rax
	movzbl	66(%rax), %ecx
	andl	$15, %ecx
	cmpl	$2, %ecx
	je	.L12155
.L2936:
	movq	-680(%rbp), %rdx
	movq	80(%rdx), %rax
	cmpb	$32, 16(%rax)
	je	.L12156
	movq	-680(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-680(%rbp), %rcx
	movq	%rax, (%rcx)
	movq	-2096(%rbp), %r9
	movzbl	16(%r9), %eax
	jmp	.L2925
.L12156:
	movq	%rax, (%rdx)
	movq	-2096(%rbp), %rsi
	movzbl	16(%rsi), %eax
	jmp	.L2925
.L12155:
	movq	-680(%rbp), %rdi
	orb	$64, 18(%rdi)
	movq	80(%rdi), %r12
	movq	-672(%rbp), %r10
	movq	current_class_type(%rip), %rax
	movq	%r12, 56(%r10)
	cmpq	$0, 32(%rax)
	jne	.L2936
	movq	-2080(%rbp), %r11
	movq	144(%rax), %r8
	movq	8(%r11), %rdx
	movq	%rdx, 72(%r8)
	jmp	.L2936
.L3031:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L12157
	cmpq	$0, 32(%rdx)
	jne	.L2938
	movq	-2088(%rbp), %r11
	movq	80(%rdx), %r9
	movl	$136, %esi
	cmpb	$32, 16(%r11)
	movq	72(%r9), %rbx
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L3041
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-672(%rbp), %rdi
	cmpb	$1, 16(%rdi)
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-672(%rbp), %r10
	movl	24(%r10), %eax
	movq	32(%r10), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2088(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-680(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L3043:
	movq	-2088(%rbp), %rbx
	movq	current_class_type(%rip), %r9
	movq	152(%rbx), %r11
	movq	%r9, 64(%rbx)
	movq	%r9, 16(%r11)
	jmp	.L2938
.L3041:
	movq	-672(%rbp), %r8
	movq	-2088(%rbp), %rsi
	movq	%r8, 72(%rsi)
	jmp	.L3043
.L12157:
	movq	-2088(%rbp), %rdx
	movq	112(%rax), %rbx
	cmpb	$32, 16(%rdx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$136, %esi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L3036
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-672(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-672(%rbp), %r9
	movl	24(%r9), %eax
	movq	32(%r9), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2088(%rbp), %r8
	movq	%rax, 72(%r8)
	movq	-680(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L3038:
	movq	current_function_decl(%rip), %rsi
	movq	-2088(%rbp), %rdx
	movq	%rsi, 64(%rdx)
	jmp	.L2938
.L3036:
	movq	-672(%rbp), %r12
	movq	-2088(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L3038
.L12154:
	cmpb	$95, 1(%rax)
	jne	.L3030
	movq	-2088(%rbp), %rax
	orb	$64, 53(%rax)
	jmp	.L3030
.L12153:
	cmpq	$0, 72(%rbx)
	je	.L12158
.L10467:
	movq	-672(%rbp), %r11
	movq	32(%r11), %rax
	jmp	.L3016
.L12158:
	movq	-2088(%rbp), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%rax), %rdx
	xorl	%eax, %eax
	movq	%rdx, -688(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L3011
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2088(%rbp), %r8
	movq	%rax, 72(%r8)
	movq	-688(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L10464:
	movq	-672(%rbp), %rdx
	movq	32(%rdx), %rax
	jmp	.L3016
.L3011:
	movq	-2088(%rbp), %rcx
	movq	%r12, 72(%rcx)
	jmp	.L10466
.L12152:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L3009
.L10465:
	movq	-672(%rbp), %rbx
	movq	32(%rbx), %rax
	jmp	.L3016
.L3005:
	movq	-2088(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -2088(%rbp)
	jmp	.L10467
.L12151:
	movq	global_binding_level(%rip), %rsi
	movl	$1, %r12d
	cmpq	%rsi, current_binding_level(%rip)
	je	.L2987
	movq	-672(%rbp), %rbx
	movq	48(%rbx), %rdi
	testq	%rdi, %rdi
	movq	%rdi, %rcx
	jne	.L2988
.L2987:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L2989
	movq	-672(%rbp), %r10
	movq	56(%r10), %rcx
	testq	%rcx, %rcx
	jne	.L10073
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L2990
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L12159
.L2990:
	testq	%rcx, %rcx
	jne	.L10073
.L10074:
	movq	-672(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10073
	movq	-672(%rbp), %rax
	movq	40(%rax), %rcx
.L2988:
	testq	%rcx, %rcx
	je	.L2992
.L10073:
	cmpb	$32, 16(%rcx)
	je	.L2992
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L2992
	movq	-672(%rbp), %r11
	movq	8(%r11), %rax
	testq	%rax, %rax
	je	.L3000
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11026
	testl	%r12d, %r12d
	jle	.L12160
.L11026:
	movq	%rax, %rcx
.L2992:
	movq	-680(%rbp), %r9
	cmpq	80(%r9), %rcx
	jne	.L2986
	jmp	.L10464
.L12160:
	testl	%edx, %edx
	jg	.L11026
	testl	%r12d, %r12d
	je	.L2992
	movq	-672(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11026
.L3000:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L2992
.L12159:
	xorl	%ecx, %ecx
	movq	-672(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L2992
	testq	%rax, %rax
	je	.L10074
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L2990
.L2989:
	movq	-672(%rbp), %r8
	movq	40(%r8), %rcx
	jmp	.L2988
.L12150:
	cmpb	$95, 1(%rax)
	jne	.L2985
	jmp	.L3016
.L2979:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2980
	movq	-672(%rbp), %rax
	movq	8(%rax), %rsi
	movq	%rax, %rdi
	jmp	.L11025
.L2978:
	movq	80(%rcx), %r8
	movq	%r8, -2088(%rbp)
	jmp	.L2983
.L12149:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L2944
	movq	80(%rax), %rbx
.L2944:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L2977
.L2976:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L2953
	cmpl	$32, %eax
	je	.L12161
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L2947:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L2977
	jmp	.L2976
.L12161:
	movq	8(%rbx), %rcx
	movq	-680(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%rcx), %r10
	movq	72(%r10), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10880
	movq	64(%rbx), %rbx
	jmp	.L2947
.L10880:
	movq	32(%rax), %rcx
	jmp	.L2977
.L2953:
	movq	-680(%rbp), %r8
	movq	80(%r8), %rdx
	movq	56(%rdx), %rbx
	testq	%rbx, %rbx
	je	.L2942
	movq	global_binding_level(%rip), %r11
	cmpq	%r11, current_binding_level(%rip)
	je	.L2956
	movq	48(%rbx), %r9
	testq	%r9, %r9
	movq	%r9, %rcx
	jne	.L2957
.L2956:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L2958
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10071
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L2959
	movq	144(%rdi), %rsi
	testb	$1, 3(%rsi)
	jne	.L12162
.L2959:
	testq	%rcx, %rcx
	jne	.L10071
.L10072:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10071
.L2958:
	movq	40(%rbx), %rcx
.L2957:
	testq	%rcx, %rcx
	je	.L10235
.L10071:
	cmpb	$32, 16(%rcx)
	je	.L2977
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L2977
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L2969
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11024
	movl	$1, %r12d
	testl	%r12d, %r12d
	jle	.L12163
.L11024:
	movq	%rax, %rcx
	jmp	.L2977
.L12163:
	testl	%edx, %edx
	jg	.L11024
	movl	$1, %edi
	testl	%edi, %edi
	je	.L2977
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11024
.L2969:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L2977
	jmp	.L11024
.L12162:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L2977
	testq	%rax, %rax
	je	.L10072
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L2959
.L2940:
	movq	-672(%rbp), %rsi
	movq	-680(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -696(%rbp)
	je	.L3017
	movq	-672(%rbp), %r12
	movq	8(%r12), %rsi
	movq	%r12, %rdi
.L11027:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L3018:
	movq	-680(%rbp), %rdx
	movq	-672(%rbp), %rsi
	movq	%rdx, 8(%rsi)
	movq	-696(%rbp), %rdi
	movq	56(%rdi), %r12
	testq	%r12, %r12
	je	.L3021
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L3022
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L3022:
	movq	decl_obstack+24(%rip), %rdx
	movq	-696(%rbp), %r8
	leaq	8(%rdx), %rbx
	movq	%r8, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rbx
	ja	.L12164
.L3024:
	movq	%rdx, %r11
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	-696(%rbp), %rdx
	movq	%rdx, (%r11)
	cmpb	$32, 16(%rdx)
	je	.L12165
.L3021:
	movq	-696(%rbp), %r12
	movq	%r12, -2088(%rbp)
	jmp	.L10467
.L12165:
	cmpq	$0, 72(%rdx)
	jne	.L3021
	movq	8(%rdx), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	%rax, -704(%rbp)
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L3026
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-696(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-704(%rbp), %r9
	movq	%r9, 8(%rax)
	jmp	.L3021
.L3026:
	movq	-696(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L3021
.L12164:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L3024
.L3017:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L3018
	movq	-672(%rbp), %r10
	movq	8(%r10), %rsi
	movq	%r10, %rdi
	jmp	.L11027
.L12148:
	cmpq	$0, class_binding_level(%rip)
	je	.L2939
	movq	144(%rax), %rsi
	testb	$16, 3(%rsi)
	jne	.L2938
	jmp	.L2939
.L12147:
	movq	-672(%rbp), %rdi
	movq	-680(%rbp), %rsi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%rbx)
	jmp	.L2935
	.p2align 6,,7
.L2906:
	movq	-2112(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10458
	movl	flag_traditional(%rip), %esi
	testl	%esi, %esi
	jne	.L10462
	testb	$8, 18(%r14)
	je	.L10462
	testb	$8, 18(%r13)
	jne	.L10462
	testb	$9, 53(%r13)
	jne	.L10462
	cmpq	%r13, current_function_decl(%rip)
	je	.L12166
.L2915:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L2916
	cmpq	$0, 8(%rax)
	jne	.L12167
.L2916:
	movq	-2112(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11023:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-2112(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L10462
.L12167:
	movq	-2112(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11023
.L12166:
	movq	-2112(%rbp), %r13
	movq	%r13, current_function_decl(%rip)
	jmp	.L2915
	.p2align 6,,7
.L12125:
	cmpq	$0, 64(%rcx)
	jne	.L2904
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L2904
.L12124:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -2112(%rbp)
	call	error_with_decl
	jmp	.L2902
.L2895:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L2897
.L2901:
	cmpq	%r14, 56(%rax)
	je	.L2897
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L2901
.L2897:
	movq	%rax, -2112(%rbp)
	jmp	.L2894
.L12123:
	movq	40(%r14), %rax
	jmp	.L2897
.L12122:
	movq	56(%r13), %r14
	jmp	.L2891
.L12121:
	testb	$32, 53(%r13)
	jne	.L2889
	jmp	.L2890
.L10454:
	movzbl	16(%r13), %edx
	jmp	.L2889
.L11270:
	leal	(%rcx,%rcx), %edx
	movq	builtin_type_tdescs_arr(%rip), %rdi
	xorl	%eax, %eax
	movslq	%edx,%rsi
	movl	%edx, builtin_type_tdescs_max(%rip)
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L2882
.L2872:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2873
	movq	8, %rsi
	xorl	%edi, %edi
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	jmp	.L11021
.L2871:
	xorl	%esi, %esi
	movl	$32, %edi
	movq	%r14, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12168
.L11022:
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L2878:
	movq	$0, 8
	jmp	.L2870
.L12168:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2878
	jmp	.L11022
	.p2align 6,,7
.L11269:
	movq	-2024(%rbp), %rsi
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r14, %rdx
	call	build_decl
	movq	current_binding_level(%rip), %rcx
	movq	%rax, %r13
	movq	112(%rax), %r15
	movq	current_function_decl(%rip), %rax
	movq	%rcx, -2056(%rbp)
	cmpq	%rax, %r13
	je	.L10435
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L12169
.L2590:
	movq	%rax, 64(%r13)
.L2589:
	cmpb	$32, %dl
	je	.L12170
.L2591:
	testq	%r15, %r15
	je	.L2592
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L12171
	cmpq	$0, 48(%r15)
	jne	.L2595
	movq	$0, -2064(%rbp)
.L2594:
	cmpq	$0, -2064(%rbp)
	je	.L2612
	movq	-2064(%rbp), %rax
	cmpq	error_mark_node(%rip), %rax
	je	.L12172
.L2602:
	cmpq	$0, -2064(%rbp)
	je	.L10439
	movq	-2064(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L12173
.L2604:
	movq	-2064(%rbp), %r8
	testq	%r8, %r8
	movq	24(%r8), %r12
	movq	%r8, %rsi
	movl	32(%r8), %ebx
	je	.L10439
	movzbl	16(%r8), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L2606
	cmpb	$32, %al
	je	.L2612
	cmpb	$32, %dl
	je	.L10905
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10439
.L10443:
	movq	global_binding_level(%rip), %rax
.L2611:
	movq	current_binding_level(%rip), %rbx
	cmpq	%rax, %rbx
	je	.L2865
	movq	-2024(%rbp), %r13
	movq	8(%r13), %rsi
	movq	%r13, %rdi
.L11020:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L2866:
	movq	-2024(%rbp), %rdx
	movl	$32, %eax
	cmpl	$31, %eax
	movq	$0, 8(%rdx)
	jg	.L2588
	movq	-2064(%rbp), %r12
	movq	%r12, 40(%rdx)
	jmp	.L2588
.L2865:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2866
	movq	-2024(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
	jmp	.L11020
.L10439:
	movzbl	16(%r13), %edx
.L2612:
	cmpb	$32, %dl
	je	.L10905
.L2620:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L2758
	movq	40(%r15), %rax
	testq	%rax, %rax
	je	.L2758
	testb	$1, 53(%rax)
	jne	.L2759
	testb	$8, 18(%rax)
	je	.L2758
.L2759:
	andb	$8, %dl
	je	.L12174
.L2758:
	movl	flag_traditional(%rip), %r12d
	testl	%r12d, %r12d
	je	.L10451
	testb	$1, 53(%r13)
	je	.L10451
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L2762
	movq	48(%r15), %r10
	testq	%r10, %r10
	movq	%r10, %rcx
	jne	.L2763
.L2762:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L2764
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L10069
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L2765
	movq	144(%rdi), %rsi
	testb	$1, 3(%rsi)
	jne	.L12175
.L2765:
	testq	%rcx, %rcx
	jne	.L10069
.L10070:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10069
.L2764:
	movq	40(%r15), %rcx
.L2763:
	testq	%rcx, %rcx
	je	.L10234
.L10069:
	cmpb	$32, 16(%rcx)
	je	.L2767
	movl	looking_for_typename(%rip), %esi
	testl	%esi, %esi
	js	.L2767
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L2775
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11017
	testl	%ebx, %ebx
	jle	.L12176
.L11017:
	movq	%rax, %rcx
.L2767:
	testq	%rcx, %rcx
	jne	.L10451
.L10234:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -2056(%rbp)
.L2761:
	cmpq	%rax, -2056(%rbp)
	je	.L12177
	movq	current_binding_level(%rip), %rbx
	movq	48(%r15), %r12
	movq	40(%r15), %r8
	cmpq	%rax, %rbx
	je	.L12178
.L11018:
	movq	16(%rbx), %rdx
	movq	%r15, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	movq	%r8, -2808(%rbp)
	call	tree_cons
	movq	-2808(%rbp), %r8
	movq	%rax, 16(%rbx)
.L2806:
	testq	%r12, %r12
	movq	%r13, 48(%r15)
	je	.L12179
.L2817:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L2819
	testq	%r12, %r12
	je	.L2820
	testb	$1, 53(%r13)
	jne	.L2820
	cmpb	$34, 16(%r12)
	je	.L12180
.L2820:
	movl	warn_shadow(%rip), %ebx
	testl	%ebx, %ebx
	je	.L2819
	testb	$1, 53(%r13)
	jne	.L2819
	movl	32(%r13), %r11d
	testl	%r11d, %r11d
	je	.L2819
	testq	%rax, %rax
	jne	.L2819
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L2825
	cmpb	$34, 16(%r12)
	je	.L12181
.L2825:
	cmpq	$0, 56(%r15)
	je	.L2827
	movl	$.LC41, %edi
.L2826:
	testq	%rdi, %rdi
	jne	.L11019
.L2819:
	testq	%r12, %r12
	je	.L10452
	movq	%r12, %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	-2056(%rbp), %r12
	movq	16(%r12), %rdx
	call	tree_cons
	movq	%rax, 16(%r12)
.L10452:
	movzbl	16(%r13), %edx
.L2804:
	leal	-128(%rdx), %ecx
	cmpb	$1, %cl
	jbe	.L2592
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L2592
	cmpb	$18, 16(%rcx)
	je	.L12182
.L2836:
	testb	$64, 46(%rcx)
	je	.L2592
.L2835:
	movq	-2056(%rbp), %rdx
	movzwl	64(%rdx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rdx)
	je	.L12183
.L10453:
	movzbl	16(%r13), %edx
.L2592:
	cmpb	$32, %dl
	je	.L12184
.L2838:
	movq	-2056(%rbp), %rbx
	movq	global_binding_level(%rip), %rax
	movq	(%rbx), %r11
	cmpq	%rax, %rbx
	movq	%r11, (%r13)
	movq	%r13, (%rbx)
	je	.L12185
.L2864:
	movq	%r13, -2064(%rbp)
	jmp	.L2611
.L12185:
	testb	$4, 17(%r13)
	jne	.L2864
	xorl	%eax, %eax
	movl	$124, %edi
	call	my_friendly_abort
	movq	global_binding_level(%rip), %rax
	jmp	.L2864
.L12184:
	testq	%r15, %r15
	je	.L2838
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L2839
	cmpq	class_binding_level(%rip), %rax
	je	.L2840
	movq	48(%r15), %rax
	testq	%rax, %rax
	je	.L2844
	cmpb	$32, 16(%rax)
	je	.L2842
.L2844:
	cmpq	$0, current_class_type(%rip)
	je	.L2839
	movq	56(%r15), %rax
	testq	%rax, %rax
	je	.L2839
	cmpb	$32, 16(%rax)
	je	.L2842
.L2839:
	movq	40(%r15), %rax
	testq	%rax, %rax
	je	.L2843
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L2842
	cmpb	$-127, %dl
	je	.L12186
.L2843:
	movq	current_class_name(%rip), %r15
	testq	%r15, %r15
	je	.L2838
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L12187
.L2850:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L2854
	cmpq	class_binding_level(%rip), %rax
	je	.L2855
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L2859
	cmpb	$32, 16(%rax)
	je	.L2857
.L2859:
	cmpq	$0, current_class_type(%rip)
	je	.L2854
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L2854
	cmpb	$32, 16(%rax)
	je	.L2857
.L2854:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L2838
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L2857
	cmpb	$-127, %dl
	jne	.L2838
	movq	$0, 8(%rbx)
	jmp	.L2838
.L2857:
	movq	8(%rax), %r15
	movq	%r15, 8(%rbx)
	jmp	.L2838
.L2855:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L2859
.L12187:
	cmpb	$32, 16(%r13)
	movq	56(%r13), %rbx
	sete	%sil
	movq	8(%r13), %r12
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$136, %esi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r15)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r15), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r15), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r12, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L2850
.L12186:
	movq	$0, 8(%r15)
	jmp	.L2843
.L2842:
	movq	8(%rax), %r10
	movq	%r10, 8(%r15)
	jmp	.L2843
.L2840:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L2844
.L12183:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10453
.L12182:
	movq	8(%rcx), %rdi
	testb	$64, 46(%rdi)
	jne	.L2835
	jmp	.L2836
.L11019:
	movq	32(%r15), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L2819
.L2827:
	testq	%r12, %r12
	je	.L2829
	movl	$.LC42, %edi
	jmp	.L2826
.L2829:
	testq	%r8, %r8
	movl	$.LC43, %r9d
	cmovne	%r9, %rdi
	jmp	.L2826
.L12181:
	movl	$.LC40, %edi
	jmp	.L2826
.L12180:
	cmpb	$34, 16(%r13)
	je	.L2820
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r8
	movq	56(%r8), %rax
	je	.L2821
	movq	56(%rax), %rax
.L2821:
	movzbl	66(%rax), %esi
	andl	$15, %esi
	decl	%esi
	jne	.L2819
	movl	$.LC40, %edi
	jmp	.L11019
	.p2align 6,,7
.L12179:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L12188
.L2809:
	testq	%r12, %r12
	jne	.L2817
	testq	%r8, %r8
	jne	.L2817
	testb	$1, 53(%r13)
	je	.L2817
	testb	$8, 18(%r13)
	je	.L2817
	orb	$8, 18(%r15)
	jmp	.L2817
	.p2align 6,,7
.L12188:
	testq	%r8, %r8
	je	.L2809
	cmpb	$29, 16(%r13)
	jne	.L2809
	cmpb	$29, 16(%r8)
	jne	.L2809
	movq	8(%r8), %rsi
	movq	8(%r13), %rdi
	xorl	%eax, %eax
	movl	$1, %edx
	movq	%r8, -2808(%rbp)
	call	comptypes
	movq	-2808(%rbp), %r8
	testl	%eax, %eax
	je	.L12189
	movzbl	53(%r8), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L2812
	movzbl	53(%r13), %ecx
	leal	0(,%rax,8), %edi
	leaq	88(%r13), %rdx
	andb	$-9, %cl
	orb	%dil, %cl
	movb	%cl, 53(%r13)
	cmpq	%r8, current_function_decl(%rip)
	je	.L2813
	movq	88(%r8), %rax
.L2814:
	movq	%rax, (%rdx)
	movq	136(%r8), %rcx
	movq	80(%r8), %r9
	movq	72(%r8), %rdx
	movzbl	17(%r13), %r10d
	movq	%rcx, 136(%r13)
	movq	%r9, 80(%r13)
	movq	%rdx, 72(%r13)
	movzbl	17(%r8), %r11d
	movq	%r8, 96(%r13)
	andb	$127, %r10b
	shrb	$7, %r11b
	movzbl	%r11b, %ebx
	movl	%ebx, %esi
	salb	$7, %sil
	orb	%sil, %r10b
	movb	%r10b, 17(%r13)
	movzbl	53(%r8), %ecx
.L2812:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L2815
	movzbl	53(%r13), %edi
	salb	$4, %al
	andb	$-17, %dil
	orb	%al, %dil
	movb	%dil, 53(%r13)
	movl	128(%r8), %eax
	movl	%eax, 128(%r13)
.L2815:
	movq	8(%r8), %rdx
	cmpq	$0, 24(%rdx)
	je	.L2809
	cmpq	$0, 88(%r8)
	je	.L2809
	movq	8(%r13), %r10
	cmpq	$0, 24(%r10)
	jne	.L2809
	movq	%rdx, 8(%r13)
	jmp	.L2809
.L2813:
	xorl	%eax, %eax
	jmp	.L2814
.L12189:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	movq	-2808(%rbp), %r8
	jmp	.L2809
	.p2align 6,,7
.L12178:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2806
	jmp	.L11018
.L12177:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L12190
.L2781:
	cmpq	$0, 40(%r15)
	jne	.L2782
	testb	$8, 18(%r13)
	je	.L2782
	orb	$8, 18(%r15)
.L2782:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L12191
.L2784:
	movq	%r13, 40(%r15)
	movzbl	16(%r13), %edx
.L2783:
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L2795
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L2785
	testb	$1, 18(%rcx)
	je	.L2785
	orb	$1, 18(%r13)
	movq	72(%r15), %rax
.L2785:
	testq	%rax, %rax
	je	.L2795
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L2790
	testb	$8, 17(%rcx)
	je	.L2790
	orb	$8, 17(%r13)
	movq	72(%r15), %rax
.L2790:
	testq	%rax, %rax
	je	.L2795
	cmpq	$0, 8(%rax)
	je	.L2795
	cmpb	$29, %dl
	je	.L12192
.L2798:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L2795:
	testb	$8, 18(%r15)
	je	.L2804
	cmpb	$32, %dl
	je	.L2804
	testb	$8, 18(%r13)
	jne	.L2804
	testb	$1, 53(%r13)
	jne	.L2804
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L2800
	cmpq	$0, 8(%rax)
	jne	.L12193
.L2800:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11231:
	xorl	%eax, %eax
	call	warning
	jmp	.L10452
.L12193:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11231
.L12192:
	movq	8(%r13), %r9
	movq	integer_type_node(%rip), %r8
	cmpq	%r8, 8(%r9)
	jne	.L2798
	jmp	.L2795
	.p2align 6,,7
.L12191:
	cmpq	$0, -2064(%rbp)
	je	.L2784
	movq	-2064(%rbp), %r11
	cmpb	$32, 16(%r11)
	jne	.L2783
	jmp	.L2784
.L12190:
	testb	$8, 54(%r13)
	jne	.L2781
	andb	$-9, 18(%r13)
	jmp	.L2781
	.p2align 6,,7
.L10451:
	movq	global_binding_level(%rip), %rax
	jmp	.L2761
.L12176:
	testl	%esi, %esi
	jg	.L11017
	testl	%ebx, %ebx
	je	.L2767
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11017
	.p2align 6,,7
.L2775:
	movq	8(%rcx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rcx
	jmp	.L2767
.L12175:
	xorl	%ecx, %ecx
	movq	%r15, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L2767
	testq	%rax, %rax
	je	.L10070
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L2765
	.p2align 6,,7
.L12174:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L2758
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r15), %rdi
	call	warning_with_decl
	jmp	.L2758
	.p2align 6,,7
.L10905:
	movq	8(%r13), %rdx
	movq	80(%rdx), %rcx
	testq	%rcx, %rcx
	movq	%rcx, -2048(%rbp)
	je	.L2622
	movzbl	16(%rcx), %eax
	cmpb	$32, %al
	je	.L2621
.L2622:
	movq	global_binding_level(%rip), %r10
	movq	%r13, -2048(%rbp)
	cmpq	%r10, current_binding_level(%rip)
	jne	.L10444
	movq	%r13, 80(%rdx)
.L10444:
	movzbl	16(%r13), %eax
.L2625:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%bl
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	movq	-2048(%rbp), %rax
	movq	56(%rax), %rbx
	testq	%rbx, %rbx
	je	.L2749
	cmpq	$0, 72(%rax)
	je	.L12194
.L2749:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L2620
	cmpq	$0, 56(%rax)
	je	.L2620
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %r8
	cmpq	global_binding_level(%rip), %rbx
	movq	%r8, -664(%rbp)
	je	.L2754
	movq	-664(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
.L11016:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L2755:
	movq	-664(%rbp), %rdi
	movq	%r12, 8(%rdi)
	jmp	.L2620
.L2754:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2755
	movq	-664(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
	jmp	.L11016
.L12194:
	movq	8(%r13), %r10
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	movq	%r10, -656(%rbp)
	cmpb	$32, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L2750
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	-656(%rbp), %rsi
	movq	%rsi, 8(%rax)
	jmp	.L2749
.L2750:
	movq	%rbx, 72(%r13)
	jmp	.L2749
.L2621:
	movq	-2048(%rbp), %r12
	movq	current_binding_level(%rip), %rsi
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%r12), %rbx
	movq	%rbx, -616(%rbp)
	jne	.L2625
	movq	-616(%rbp), %r11
	movq	32(%r11), %rcx
	cmpb	$36, (%rcx)
	jne	.L2625
	cmpb	$95, 1(%rcx)
	jne	.L2625
	movq	class_binding_level(%rip), %rdi
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rdx
	testq	%rdi, %rdi
	movq	%rdi, -2032(%rbp)
	movq	%rdx, -624(%rbp)
	jne	.L2629
	testb	$-128, 66(%rsi)
	movq	%rsi, -2032(%rbp)
	je	.L2629
.L2633:
	movq	-2032(%rbp), %rax
	movq	56(%rax), %rsi
	testb	$-128, 66(%rsi)
	movq	%rsi, -2032(%rbp)
	jne	.L2633
.L2629:
	movq	-2032(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12195
	movq	-2032(%rbp), %r8
	movq	-616(%rbp), %rdi
	xorl	%eax, %eax
	movq	-624(%rbp), %rsi
	movq	8(%r8), %rdx
	call	saveable_tree_cons
	movq	-2032(%rbp), %rcx
	movq	%rax, 8(%rcx)
.L2635:
	cmpq	$0, -616(%rbp)
	je	.L2636
	movq	-624(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L2637
	movq	-616(%rbp), %r9
	movq	%r9, 80(%rcx)
.L2637:
	movq	-616(%rbp), %r10
	movq	-624(%rbp), %rax
	cmpq	%rax, 8(%r10)
	je	.L2638
	cmpb	$21, 16(%rax)
	je	.L12196
.L2639:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L2641
	cmpq	$0, 32(%rax)
	je	.L2640
.L2641:
	movq	lang_name_cplusplus(%rip), %r11
	cmpq	%r11, current_lang_name(%rip)
	je	.L12197
.L2642:
	xorl	%ecx, %ecx
.L2677:
	testq	%rcx, %rcx
	jne	.L2678
.L10233:
	movq	-616(%rbp), %rsi
	movq	-624(%rbp), %rdx
	movl	$32, %edi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-624(%rbp), %rdi
	movq	%rax, -2040(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-2040(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L2679
	movq	-616(%rbp), %r11
	movq	8(%r11), %rsi
	movq	%r11, %rdi
.L11013:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L2680:
	movq	-624(%rbp), %rdi
	movq	-616(%rbp), %rdx
	movq	%rdi, 8(%rdx)
.L2683:
	movq	-616(%rbp), %rcx
	movq	32(%rcx), %rax
	cmpb	$36, (%rax)
	je	.L12198
.L2685:
	movq	-624(%rbp), %r8
	movq	80(%r8), %rdx
	testq	%rdx, %rdx
	je	.L2716
	cmpb	$32, 16(%rdx)
	je	.L12199
.L2686:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2705
	movq	-2040(%rbp), %rcx
	movq	56(%rcx), %r12
	testq	%r12, %r12
	je	.L10446
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L2707
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L2707:
	movq	decl_obstack+24(%rip), %rdx
	movq	-2040(%rbp), %r10
	leaq	8(%rdx), %r9
	movq	%r10, 56(%r12)
	cmpq	decl_obstack+32(%rip), %r9
	ja	.L12200
.L2709:
	movq	-2040(%rbp), %rbx
	movq	%rdx, %r11
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%r11)
	cmpb	$32, 16(%rbx)
	je	.L12201
.L10447:
	movq	-616(%rbp), %rdi
	movq	32(%rdi), %rax
.L2716:
	cmpb	$36, (%rax)
	je	.L12202
.L2730:
	movq	current_class_type(%rip), %rdx
	movq	-2040(%rbp), %rsi
	movq	-624(%rbp), %rcx
	testq	%rdx, %rdx
	movq	%rsi, 80(%rcx)
	jne	.L2733
	cmpq	$0, current_function_decl(%rip)
	je	.L2732
.L2733:
	movq	lang_name_cplusplus(%rip), %r9
	cmpq	%r9, current_lang_name(%rip)
	je	.L2731
.L2732:
	movq	-616(%rbp), %r11
	movq	-2040(%rbp), %r10
	movq	%r11, 72(%r10)
.L2638:
	movq	-2032(%rbp), %rax
	movzbl	66(%rax), %ecx
	andl	$15, %ecx
	cmpl	$2, %ecx
	je	.L12203
.L2636:
	movq	-624(%rbp), %rdx
	movq	80(%rdx), %rax
	cmpb	$32, 16(%rax)
	je	.L12204
	movq	-624(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-624(%rbp), %rcx
	movq	%rax, (%rcx)
	movq	-2048(%rbp), %r9
	movzbl	16(%r9), %eax
	jmp	.L2625
.L12204:
	movq	%rax, (%rdx)
	movq	-2048(%rbp), %rdi
	movzbl	16(%rdi), %eax
	jmp	.L2625
.L12203:
	movq	-624(%rbp), %r11
	orb	$64, 18(%r11)
	movq	80(%r11), %rsi
	movq	-616(%rbp), %r10
	movq	current_class_type(%rip), %rax
	movq	%rsi, 56(%r10)
	cmpq	$0, 32(%rax)
	jne	.L2636
	movq	-2032(%rbp), %r8
	movq	144(%rax), %r12
	movq	8(%r8), %rdx
	movq	%rdx, 72(%r12)
	jmp	.L2636
.L2731:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L12205
	cmpq	$0, 32(%rdx)
	jne	.L2638
	movq	-2040(%rbp), %rdi
	movq	80(%rdx), %r9
	movl	$136, %esi
	cmpb	$32, 16(%rdi)
	movq	72(%r9), %rbx
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L2741
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	movq	-616(%rbp), %r11
	cmpb	$1, 16(%r11)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-616(%rbp), %r10
	movl	24(%r10), %eax
	movq	32(%r10), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2040(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-624(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L2743:
	movq	-2040(%rbp), %rbx
	movq	current_class_type(%rip), %r9
	movq	152(%rbx), %rdi
	movq	%r9, 64(%rbx)
	movq	%r9, 16(%rdi)
	jmp	.L2638
.L2741:
	movq	-616(%rbp), %r8
	movq	-2040(%rbp), %rdx
	movq	%r8, 72(%rdx)
	jmp	.L2743
.L12205:
	movq	-2040(%rbp), %rdx
	movq	112(%rax), %rbx
	movl	$136, %esi
	cmpb	$32, 16(%rdx)
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L2736
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-616(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-616(%rbp), %r9
	movl	24(%r9), %eax
	movq	32(%r9), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2040(%rbp), %rdi
	movq	%rax, 72(%rdi)
	movq	-624(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L2738:
	movq	current_function_decl(%rip), %rdx
	movq	-2040(%rbp), %r12
	movq	%rdx, 64(%r12)
	jmp	.L2638
.L2736:
	movq	-616(%rbp), %r11
	movq	-2040(%rbp), %r10
	movq	%r11, 72(%r10)
	jmp	.L2738
.L12202:
	cmpb	$95, 1(%rax)
	jne	.L2730
	movq	-2040(%rbp), %rax
	orb	$64, 53(%rax)
	jmp	.L2730
.L12201:
	cmpq	$0, 72(%rbx)
	je	.L12206
.L10448:
	movq	-616(%rbp), %r8
	movq	32(%r8), %rax
	jmp	.L2716
.L12206:
	movq	-2040(%rbp), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%rax), %rdx
	xorl	%eax, %eax
	movq	%rdx, -632(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L2711
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-2040(%rbp), %rdi
	movq	%rax, 72(%rdi)
	movq	-632(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L10445:
	movq	-616(%rbp), %rdx
	movq	32(%rdx), %rax
	jmp	.L2716
.L2711:
	movq	-2040(%rbp), %rcx
	movq	%r12, 72(%rcx)
	jmp	.L10447
.L12200:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L2709
.L10446:
	movq	-616(%rbp), %rbx
	movq	32(%rbx), %rax
	jmp	.L2716
.L2705:
	movq	-2040(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -2040(%rbp)
	jmp	.L10448
.L12199:
	movq	global_binding_level(%rip), %r9
	movl	$1, %r12d
	cmpq	%r9, current_binding_level(%rip)
	je	.L2687
	movq	-616(%rbp), %rbx
	movq	48(%rbx), %r10
	testq	%r10, %r10
	movq	%r10, %rcx
	jne	.L2688
.L2687:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L2689
	movq	-616(%rbp), %r11
	movq	56(%r11), %rcx
	testq	%rcx, %rcx
	jne	.L10067
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L2690
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L12207
.L2690:
	testq	%rcx, %rcx
	jne	.L10067
.L10068:
	movq	-616(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10067
	movq	-616(%rbp), %rax
	movq	40(%rax), %rcx
.L2688:
	testq	%rcx, %rcx
	je	.L2692
.L10067:
	cmpb	$32, 16(%rcx)
	je	.L2692
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L2692
	movq	-616(%rbp), %r8
	movq	8(%r8), %rax
	testq	%rax, %rax
	je	.L2700
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11014
	testl	%r12d, %r12d
	jle	.L12208
.L11014:
	movq	%rax, %rcx
.L2692:
	movq	-624(%rbp), %rsi
	cmpq	80(%rsi), %rcx
	jne	.L2686
	jmp	.L10445
.L12208:
	testl	%edx, %edx
	jg	.L11014
	testl	%r12d, %r12d
	je	.L2692
	movq	-616(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11014
.L2700:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L2692
.L12207:
	xorl	%ecx, %ecx
	movq	-616(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L2692
	testq	%rax, %rax
	je	.L10068
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L2690
.L2689:
	movq	-616(%rbp), %rdi
	movq	40(%rdi), %rcx
	jmp	.L2688
.L12198:
	cmpb	$95, 1(%rax)
	jne	.L2685
	jmp	.L2716
.L2679:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2680
	movq	-616(%rbp), %rax
	movq	8(%rax), %rsi
	movq	%rax, %rdi
	jmp	.L11013
.L2678:
	movq	80(%rcx), %rsi
	movq	%rsi, -2040(%rbp)
	jmp	.L2683
.L12197:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L2644
	movq	80(%rax), %rbx
.L2644:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L2677
.L2676:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L2653
	cmpl	$32, %eax
	je	.L12209
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L2647:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L2677
	jmp	.L2676
.L12209:
	movq	8(%rbx), %rdi
	xorl	%eax, %eax
	movq	144(%rdi), %rdx
	movq	-624(%rbp), %rdi
	movq	72(%rdx), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10879
	movq	64(%rbx), %rbx
	jmp	.L2647
.L10879:
	movq	32(%rax), %rcx
	jmp	.L2677
.L2653:
	movq	-624(%rbp), %rax
	movq	80(%rax), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L2642
	movq	global_binding_level(%rip), %rcx
	cmpq	%rcx, current_binding_level(%rip)
	je	.L2656
	movq	48(%rbx), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L2657
.L2656:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L2658
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10065
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L2659
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L12210
.L2659:
	testq	%rcx, %rcx
	jne	.L10065
.L10066:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10065
.L2658:
	movq	40(%rbx), %rcx
.L2657:
	testq	%rcx, %rcx
	je	.L10233
.L10065:
	cmpb	$32, 16(%rcx)
	je	.L2677
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L2677
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L2669
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11012
	movl	$1, %r10d
	testl	%r10d, %r10d
	jle	.L12211
.L11012:
	movq	%rax, %rcx
	jmp	.L2677
.L12211:
	testl	%edx, %edx
	jg	.L11012
	movl	$1, %r12d
	testl	%r12d, %r12d
	je	.L2677
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11012
.L2669:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L2677
	jmp	.L11012
.L12210:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L2677
	testq	%rax, %rax
	je	.L10066
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L2659
.L2640:
	movq	-616(%rbp), %rsi
	movq	-624(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -640(%rbp)
	je	.L2717
	movq	-616(%rbp), %r12
	movq	8(%r12), %rsi
	movq	%r12, %rdi
.L11015:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L2718:
	movq	-624(%rbp), %rdx
	movq	-616(%rbp), %r11
	movq	%rdx, 8(%r11)
	movq	-640(%rbp), %r10
	movq	56(%r10), %r12
	testq	%r12, %r12
	je	.L2721
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L2722
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L2722:
	movq	decl_obstack+24(%rip), %rdx
	movq	-640(%rbp), %rdi
	leaq	8(%rdx), %rbx
	movq	%rdi, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rbx
	ja	.L12212
.L2724:
	movq	%rdx, %r8
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	-640(%rbp), %rdx
	movq	%rdx, (%r8)
	cmpb	$32, 16(%rdx)
	je	.L12213
.L2721:
	movq	-640(%rbp), %r12
	movq	%r12, -2040(%rbp)
	jmp	.L10448
.L12213:
	cmpq	$0, 72(%rdx)
	jne	.L2721
	movq	8(%rdx), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	%rax, -648(%rbp)
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L2726
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-640(%rbp), %rsi
	movq	%rax, 72(%rsi)
	movq	-648(%rbp), %rcx
	movq	%rcx, 8(%rax)
	jmp	.L2721
.L2726:
	movq	-640(%rbp), %r11
	movq	%r12, 72(%r11)
	jmp	.L2721
.L12212:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L2724
.L2717:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2718
	movq	-616(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
	jmp	.L11015
.L12196:
	cmpq	$0, class_binding_level(%rip)
	je	.L2639
	movq	144(%rax), %rbx
	testb	$16, 3(%rbx)
	jne	.L2638
	jmp	.L2639
.L12195:
	movq	-616(%rbp), %rdi
	movq	-624(%rbp), %rsi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%rbx)
	jmp	.L2635
	.p2align 6,,7
.L2606:
	movq	-2064(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10439
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	jne	.L10443
	testb	$8, 18(%r15)
	je	.L10443
	testb	$8, 18(%r13)
	jne	.L10443
	testb	$9, 53(%r13)
	jne	.L10443
	cmpq	%r13, current_function_decl(%rip)
	je	.L12214
.L2615:
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L2616
	cmpq	$0, 8(%rax)
	jne	.L12215
.L2616:
	movq	-2064(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11011:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-2064(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L10443
.L12215:
	movq	-2064(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11011
.L12214:
	movq	-2064(%rbp), %r9
	movq	%r9, current_function_decl(%rip)
	jmp	.L2615
	.p2align 6,,7
.L12173:
	cmpq	$0, 64(%rcx)
	jne	.L2604
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L2604
.L12172:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -2064(%rbp)
	call	error_with_decl
	jmp	.L2602
.L2595:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L2597
.L2601:
	cmpq	%r15, 56(%rax)
	je	.L2597
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L2601
.L2597:
	movq	%rax, -2064(%rbp)
	jmp	.L2594
.L12171:
	movq	40(%r15), %rax
	jmp	.L2597
.L12170:
	movq	56(%r13), %r15
	jmp	.L2591
.L12169:
	testb	$32, 53(%r13)
	jne	.L2589
	jmp	.L2590
.L10435:
	movzbl	16(%r13), %edx
	jmp	.L2589
.L11268:
	leal	(%rcx,%rcx), %edi
	xorl	%eax, %eax
	movl	%edi, builtin_type_tdescs_max(%rip)
	movslq	%edi,%rsi
	movq	builtin_type_tdescs_arr(%rip), %rdi
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L2582
.L2572:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2573
	movq	8, %rsi
	xorl	%edi, %edi
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	jmp	.L11009
.L2571:
	xorl	%esi, %esi
	movl	$32, %edi
	movq	%r14, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12216
.L11010:
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L2578:
	movq	$0, 8
	jmp	.L2570
.L12216:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2578
	jmp	.L11010
	.p2align 6,,7
.L11267:
	movq	-1976(%rbp), %rsi
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r14, %rdx
	call	build_decl
	movq	current_binding_level(%rip), %r9
	movq	%rax, %r13
	movq	112(%rax), %r15
	movq	current_function_decl(%rip), %rax
	movq	%r9, -2008(%rbp)
	cmpq	%rax, %r13
	je	.L10416
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L12217
.L2290:
	movq	%rax, 64(%r13)
.L2289:
	cmpb	$32, %dl
	je	.L12218
.L2291:
	testq	%r15, %r15
	je	.L2292
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L12219
	cmpq	$0, 48(%r15)
	jne	.L2295
	movq	$0, -2016(%rbp)
.L2294:
	cmpq	$0, -2016(%rbp)
	je	.L2312
	movq	-2016(%rbp), %r10
	cmpq	error_mark_node(%rip), %r10
	je	.L12220
.L2302:
	cmpq	$0, -2016(%rbp)
	je	.L10420
	movq	-2016(%rbp), %rdx
	cmpb	$34, 16(%rdx)
	je	.L12221
.L2304:
	movq	-2016(%rbp), %rcx
	testq	%rcx, %rcx
	movq	24(%rcx), %r12
	movl	32(%rcx), %ebx
	je	.L10420
	movzbl	16(%rcx), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L2306
	cmpb	$32, %al
	je	.L2312
	cmpb	$32, %dl
	je	.L10904
	xorl	%eax, %eax
	movq	%r13, %rdi
	movq	%rcx, %rsi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10420
.L10424:
	movq	global_binding_level(%rip), %rax
.L2311:
	movq	current_binding_level(%rip), %rbx
	cmpq	%rax, %rbx
	je	.L2565
	movq	-1976(%rbp), %r13
	movq	8(%r13), %rsi
	movq	%r13, %rdi
.L11008:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L2566:
	movq	-1976(%rbp), %rdx
	movl	$32, %eax
	cmpl	$31, %eax
	movq	$0, 8(%rdx)
	jg	.L2288
	movq	-2016(%rbp), %r12
	movq	%r12, 40(%rdx)
	jmp	.L2288
.L2565:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2566
	movq	-1976(%rbp), %r10
	movq	8(%r10), %rsi
	movq	%r10, %rdi
	jmp	.L11008
.L10420:
	movzbl	16(%r13), %edx
.L2312:
	cmpb	$32, %dl
	je	.L10904
.L2320:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L2458
	movq	40(%r15), %rax
	testq	%rax, %rax
	je	.L2458
	testb	$1, 53(%rax)
	jne	.L2459
	testb	$8, 18(%rax)
	je	.L2458
.L2459:
	andb	$8, %dl
	je	.L12222
.L2458:
	movl	flag_traditional(%rip), %ecx
	testl	%ecx, %ecx
	je	.L10432
	testb	$1, 53(%r13)
	je	.L10432
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L2462
	movq	48(%r15), %rdi
	testq	%rdi, %rdi
	movq	%rdi, %rcx
	jne	.L2463
.L2462:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L2464
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L10063
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L2465
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L12223
.L2465:
	testq	%rcx, %rcx
	jne	.L10063
.L10064:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10063
.L2464:
	movq	40(%r15), %rcx
.L2463:
	testq	%rcx, %rcx
	je	.L10232
.L10063:
	cmpb	$32, 16(%rcx)
	je	.L2467
	movl	looking_for_typename(%rip), %esi
	testl	%esi, %esi
	js	.L2467
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L2475
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11005
	testl	%ebx, %ebx
	jle	.L12224
.L11005:
	movq	%rax, %rcx
.L2467:
	testq	%rcx, %rcx
	jne	.L10432
.L10232:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -2008(%rbp)
.L2461:
	cmpq	%rax, -2008(%rbp)
	je	.L12225
	movq	current_binding_level(%rip), %rbx
	movq	48(%r15), %r12
	movq	40(%r15), %r8
	cmpq	%rax, %rbx
	je	.L12226
.L11006:
	movq	16(%rbx), %rdx
	movq	%r15, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	movq	%r8, -2808(%rbp)
	call	tree_cons
	movq	-2808(%rbp), %r8
	movq	%rax, 16(%rbx)
.L2506:
	testq	%r12, %r12
	movq	%r13, 48(%r15)
	je	.L12227
.L2517:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L2519
	testq	%r12, %r12
	je	.L2520
	testb	$1, 53(%r13)
	jne	.L2520
	cmpb	$34, 16(%r12)
	je	.L12228
.L2520:
	movl	warn_shadow(%rip), %edx
	testl	%edx, %edx
	je	.L2519
	testb	$1, 53(%r13)
	jne	.L2519
	movl	32(%r13), %r9d
	testl	%r9d, %r9d
	je	.L2519
	testq	%rax, %rax
	jne	.L2519
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L2525
	cmpb	$34, 16(%r12)
	je	.L12229
.L2525:
	cmpq	$0, 56(%r15)
	je	.L2527
	movl	$.LC41, %edi
.L2526:
	testq	%rdi, %rdi
	jne	.L11007
.L2519:
	testq	%r12, %r12
	je	.L10433
	movq	%r12, %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	-2008(%rbp), %r12
	movq	16(%r12), %rdx
	call	tree_cons
	movq	%rax, 16(%r12)
.L10433:
	movzbl	16(%r13), %edx
.L2504:
	leal	-128(%rdx), %r11d
	cmpb	$1, %r11b
	jbe	.L2292
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L2292
	cmpb	$18, 16(%rcx)
	je	.L12230
.L2536:
	testb	$64, 46(%rcx)
	je	.L2292
.L2535:
	movq	-2008(%rbp), %rcx
	movzwl	64(%rcx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rcx)
	je	.L12231
.L10434:
	movzbl	16(%r13), %edx
.L2292:
	cmpb	$32, %dl
	je	.L12232
.L2538:
	movq	-2008(%rbp), %rbx
	movq	global_binding_level(%rip), %rax
	movq	(%rbx), %r9
	cmpq	%rax, %rbx
	movq	%r9, (%r13)
	movq	%r13, (%rbx)
	je	.L12233
.L2564:
	movq	%r13, -2016(%rbp)
	jmp	.L2311
.L12233:
	testb	$4, 17(%r13)
	jne	.L2564
	xorl	%eax, %eax
	movl	$124, %edi
	call	my_friendly_abort
	movq	global_binding_level(%rip), %rax
	jmp	.L2564
.L12232:
	testq	%r15, %r15
	je	.L2538
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L2539
	cmpq	class_binding_level(%rip), %rax
	je	.L2540
	movq	48(%r15), %rax
	testq	%rax, %rax
	je	.L2544
	cmpb	$32, 16(%rax)
	je	.L2542
.L2544:
	cmpq	$0, current_class_type(%rip)
	je	.L2539
	movq	56(%r15), %rax
	testq	%rax, %rax
	je	.L2539
	cmpb	$32, 16(%rax)
	je	.L2542
.L2539:
	movq	40(%r15), %rax
	testq	%rax, %rax
	je	.L2543
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L2542
	cmpb	$-127, %dl
	je	.L12234
.L2543:
	movq	current_class_name(%rip), %r15
	testq	%r15, %r15
	je	.L2538
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L12235
.L2550:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L2554
	cmpq	class_binding_level(%rip), %rax
	je	.L2555
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L2559
	cmpb	$32, 16(%rax)
	je	.L2557
.L2559:
	cmpq	$0, current_class_type(%rip)
	je	.L2554
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L2554
	cmpb	$32, 16(%rax)
	je	.L2557
.L2554:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L2538
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L2557
	cmpb	$-127, %dl
	jne	.L2538
	movq	$0, 8(%rbx)
	jmp	.L2538
.L2557:
	movq	8(%rax), %r15
	movq	%r15, 8(%rbx)
	jmp	.L2538
.L2555:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L2559
.L12235:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %rbx
	sete	%dl
	movq	8(%r13), %r12
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r15)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r15), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r15), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r12, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L2550
.L12234:
	movq	$0, 8(%r15)
	jmp	.L2543
.L2542:
	movq	8(%rax), %rdi
	movq	%rdi, 8(%r15)
	jmp	.L2543
.L2540:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L2544
.L12231:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10434
.L12230:
	movq	8(%rcx), %rsi
	testb	$64, 46(%rsi)
	jne	.L2535
	jmp	.L2536
.L11007:
	movq	32(%r15), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L2519
.L2527:
	testq	%r12, %r12
	je	.L2529
	movl	$.LC42, %edi
	jmp	.L2526
.L2529:
	testq	%r8, %r8
	movl	$.LC43, %r10d
	cmovne	%r10, %rdi
	jmp	.L2526
.L12229:
	movl	$.LC40, %edi
	jmp	.L2526
.L12228:
	cmpb	$34, 16(%r13)
	je	.L2520
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r8
	movq	56(%r8), %rax
	je	.L2521
	movq	56(%rax), %rax
.L2521:
	movzbl	66(%rax), %ebx
	andl	$15, %ebx
	decl	%ebx
	jne	.L2519
	movl	$.LC40, %edi
	jmp	.L11007
	.p2align 6,,7
.L12227:
	movzbl	53(%r13), %r11d
	andb	$9, %r11b
	decb	%r11b
	je	.L12236
.L2509:
	testq	%r12, %r12
	jne	.L2517
	testq	%r8, %r8
	jne	.L2517
	testb	$1, 53(%r13)
	je	.L2517
	testb	$8, 18(%r13)
	je	.L2517
	orb	$8, 18(%r15)
	jmp	.L2517
	.p2align 6,,7
.L12236:
	testq	%r8, %r8
	je	.L2509
	cmpb	$29, 16(%r13)
	jne	.L2509
	cmpb	$29, 16(%r8)
	jne	.L2509
	movq	8(%r8), %rsi
	movq	8(%r13), %rdi
	xorl	%eax, %eax
	movl	$1, %edx
	movq	%r8, -2808(%rbp)
	call	comptypes
	movq	-2808(%rbp), %r8
	testl	%eax, %eax
	je	.L12237
	movzbl	53(%r8), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L2512
	movzbl	53(%r13), %esi
	leal	0(,%rax,8), %ecx
	leaq	88(%r13), %rdx
	andb	$-9, %sil
	orb	%cl, %sil
	movb	%sil, 53(%r13)
	cmpq	%r8, current_function_decl(%rip)
	je	.L2513
	movq	88(%r8), %rax
.L2514:
	movq	136(%r8), %rsi
	movq	72(%r8), %r11
	movq	%rax, (%rdx)
	movq	80(%r8), %r10
	movzbl	17(%r13), %edi
	movq	%rsi, 136(%r13)
	movq	%r11, 72(%r13)
	movq	%r10, 80(%r13)
	movzbl	17(%r8), %r9d
	movq	%r8, 96(%r13)
	andb	$127, %dil
	shrb	$7, %r9b
	movzbl	%r9b, %edx
	movl	%edx, %ebx
	salb	$7, %bl
	orb	%bl, %dil
	movb	%dil, 17(%r13)
	movzbl	53(%r8), %ecx
.L2512:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L2515
	movzbl	53(%r13), %ecx
	salb	$4, %al
	andb	$-17, %cl
	orb	%al, %cl
	movb	%cl, 53(%r13)
	movl	128(%r8), %eax
	movl	%eax, 128(%r13)
.L2515:
	movq	8(%r8), %rdx
	cmpq	$0, 24(%rdx)
	je	.L2509
	cmpq	$0, 88(%r8)
	je	.L2509
	movq	8(%r13), %rdi
	cmpq	$0, 24(%rdi)
	jne	.L2509
	movq	%rdx, 8(%r13)
	jmp	.L2509
.L2513:
	xorl	%eax, %eax
	jmp	.L2514
.L12237:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	movq	-2808(%rbp), %r8
	jmp	.L2509
	.p2align 6,,7
.L12226:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2506
	jmp	.L11006
.L12225:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L12238
.L2481:
	cmpq	$0, 40(%r15)
	jne	.L2482
	testb	$8, 18(%r13)
	je	.L2482
	orb	$8, 18(%r15)
.L2482:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L12239
.L2484:
	movq	%r13, 40(%r15)
	movzbl	16(%r13), %edx
.L2483:
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L2495
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L2485
	testb	$1, 18(%rcx)
	je	.L2485
	orb	$1, 18(%r13)
	movq	72(%r15), %rax
.L2485:
	testq	%rax, %rax
	je	.L2495
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L2490
	testb	$8, 17(%rcx)
	je	.L2490
	orb	$8, 17(%r13)
	movq	72(%r15), %rax
.L2490:
	testq	%rax, %rax
	je	.L2495
	cmpq	$0, 8(%rax)
	je	.L2495
	cmpb	$29, %dl
	je	.L12240
.L2498:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L2495:
	testb	$8, 18(%r15)
	je	.L2504
	cmpb	$32, %dl
	je	.L2504
	testb	$8, 18(%r13)
	jne	.L2504
	testb	$1, 53(%r13)
	jne	.L2504
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L2500
	cmpq	$0, 8(%rax)
	jne	.L12241
.L2500:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11230:
	xorl	%eax, %eax
	call	warning
	jmp	.L10433
.L12241:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11230
.L12240:
	movq	8(%r13), %r10
	movq	integer_type_node(%rip), %r9
	cmpq	%r9, 8(%r10)
	jne	.L2498
	jmp	.L2495
	.p2align 6,,7
.L12239:
	cmpq	$0, -2016(%rbp)
	je	.L2484
	movq	-2016(%rbp), %r12
	cmpb	$32, 16(%r12)
	jne	.L2483
	jmp	.L2484
.L12238:
	testb	$8, 54(%r13)
	jne	.L2481
	andb	$-9, 18(%r13)
	jmp	.L2481
	.p2align 6,,7
.L10432:
	movq	global_binding_level(%rip), %rax
	jmp	.L2461
.L12224:
	testl	%esi, %esi
	jg	.L11005
	testl	%ebx, %ebx
	je	.L2467
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11005
	.p2align 6,,7
.L2475:
	movq	8(%rcx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rcx
	jmp	.L2467
.L12223:
	xorl	%ecx, %ecx
	movq	%r15, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L2467
	testq	%rax, %rax
	je	.L10064
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L2465
	.p2align 6,,7
.L12222:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L2458
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r15), %rdi
	call	warning_with_decl
	jmp	.L2458
	.p2align 6,,7
.L10904:
	movq	8(%r13), %rdx
	movq	80(%rdx), %rax
	testq	%rax, %rax
	movq	%rax, -2000(%rbp)
	je	.L2322
	movzbl	16(%rax), %eax
	cmpb	$32, %al
	je	.L2321
.L2322:
	movq	global_binding_level(%rip), %rcx
	movq	%r13, -2000(%rbp)
	cmpq	%rcx, current_binding_level(%rip)
	jne	.L10425
	movq	%r13, 80(%rdx)
.L10425:
	movzbl	16(%r13), %eax
.L2325:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%bl
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	movq	-2000(%rbp), %rax
	movq	56(%rax), %rbx
	testq	%rbx, %rbx
	je	.L2449
	cmpq	$0, 72(%rax)
	je	.L12242
.L2449:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L2320
	cmpq	$0, 56(%rax)
	je	.L2320
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %r10
	cmpq	global_binding_level(%rip), %rbx
	movq	%r10, -608(%rbp)
	je	.L2454
	movq	-608(%rbp), %r8
	movq	8(%r8), %rsi
	movq	%r8, %rdi
.L11004:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L2455:
	movq	-608(%rbp), %rsi
	movq	%r12, 8(%rsi)
	jmp	.L2320
.L2454:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2455
	movq	-608(%rbp), %r11
	movq	8(%r11), %rsi
	movq	%r11, %rdi
	jmp	.L11004
.L12242:
	movq	8(%r13), %rdi
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	movq	%rdi, -600(%rbp)
	cmpb	$32, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L2450
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	-600(%rbp), %r12
	movq	%r12, 8(%rax)
	jmp	.L2449
.L2450:
	movq	%rbx, 72(%r13)
	jmp	.L2449
.L2321:
	movq	-2000(%rbp), %rbx
	movq	current_binding_level(%rip), %rsi
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%rbx), %r11
	movq	%r11, -560(%rbp)
	jne	.L2325
	movq	-560(%rbp), %rdi
	movq	32(%rdi), %rcx
	cmpb	$36, (%rcx)
	jne	.L2325
	cmpb	$95, 1(%rcx)
	jne	.L2325
	movq	class_binding_level(%rip), %rax
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rdx
	testq	%rax, %rax
	movq	%rax, -1984(%rbp)
	movq	%rdx, -568(%rbp)
	jne	.L2329
	testb	$-128, 66(%rsi)
	movq	%rsi, -1984(%rbp)
	je	.L2329
.L2333:
	movq	-1984(%rbp), %r12
	movq	56(%r12), %r9
	testb	$-128, 66(%r9)
	movq	%r9, -1984(%rbp)
	jne	.L2333
.L2329:
	movq	-1984(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12243
	movq	-1984(%rbp), %r8
	movq	-560(%rbp), %rdi
	xorl	%eax, %eax
	movq	-568(%rbp), %rsi
	movq	8(%r8), %rdx
	call	saveable_tree_cons
	movq	-1984(%rbp), %r10
	movq	%rax, 8(%r10)
.L2335:
	cmpq	$0, -560(%rbp)
	je	.L2336
	movq	-568(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L2337
	movq	-560(%rbp), %rsi
	movq	%rsi, 80(%rcx)
.L2337:
	movq	-560(%rbp), %rcx
	movq	-568(%rbp), %rax
	cmpq	%rax, 8(%rcx)
	je	.L2338
	cmpb	$21, 16(%rax)
	je	.L12244
.L2339:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L2341
	cmpq	$0, 32(%rax)
	je	.L2340
.L2341:
	movq	lang_name_cplusplus(%rip), %rdi
	cmpq	%rdi, current_lang_name(%rip)
	je	.L12245
.L2342:
	xorl	%ecx, %ecx
.L2377:
	testq	%rcx, %rcx
	jne	.L2378
.L10231:
	movq	-560(%rbp), %rsi
	movq	-568(%rbp), %rdx
	movl	$32, %edi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-568(%rbp), %rdi
	movq	%rax, -1992(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-1992(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L2379
	movq	-560(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
.L11001:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L2380:
	movq	-568(%rbp), %r12
	movq	-560(%rbp), %rdx
	movq	%r12, 8(%rdx)
.L2383:
	movq	-560(%rbp), %r10
	movq	32(%r10), %rax
	cmpb	$36, (%rax)
	je	.L12246
.L2385:
	movq	-568(%rbp), %r8
	movq	80(%r8), %rdx
	testq	%rdx, %rdx
	je	.L2416
	cmpb	$32, 16(%rdx)
	je	.L12247
.L2386:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2405
	movq	-1992(%rbp), %rcx
	movq	56(%rcx), %r12
	testq	%r12, %r12
	je	.L10427
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L2407
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L2407:
	movq	decl_obstack+24(%rip), %rdx
	movq	-1992(%rbp), %r11
	leaq	8(%rdx), %rsi
	movq	%r11, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rsi
	ja	.L12248
.L2409:
	movq	-1992(%rbp), %rbx
	movq	%rdx, %rdi
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%rdi)
	cmpb	$32, 16(%rbx)
	je	.L12249
.L10428:
	movq	-560(%rbp), %r10
	movq	32(%r10), %rax
.L2416:
	cmpb	$36, (%rax)
	je	.L12250
.L2430:
	movq	-568(%rbp), %rdx
	movq	-1992(%rbp), %rcx
	movq	%rcx, 80(%rdx)
	movq	current_class_type(%rip), %rdx
	testq	%rdx, %rdx
	jne	.L2433
	cmpq	$0, current_function_decl(%rip)
	je	.L2432
.L2433:
	movq	lang_name_cplusplus(%rip), %r11
	cmpq	%r11, current_lang_name(%rip)
	je	.L2431
.L2432:
	movq	-560(%rbp), %r12
	movq	-1992(%rbp), %rdi
	movq	%r12, 72(%rdi)
.L2338:
	movq	-1984(%rbp), %rax
	movzbl	66(%rax), %ecx
	andl	$15, %ecx
	cmpl	$2, %ecx
	je	.L12251
.L2336:
	movq	-568(%rbp), %rdx
	movq	80(%rdx), %rax
	cmpb	$32, 16(%rax)
	je	.L12252
	movq	-568(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-568(%rbp), %rcx
	movq	%rax, (%rcx)
	movq	-2000(%rbp), %r11
	movzbl	16(%r11), %eax
	jmp	.L2325
.L12252:
	movq	%rax, (%rdx)
	movq	-2000(%rbp), %rsi
	movzbl	16(%rsi), %eax
	jmp	.L2325
.L12251:
	movq	-568(%rbp), %rdi
	orb	$64, 18(%rdi)
	movq	80(%rdi), %rdx
	movq	-560(%rbp), %r12
	movq	current_class_type(%rip), %rax
	movq	%rdx, 56(%r12)
	cmpq	$0, 32(%rax)
	jne	.L2336
	movq	-1984(%rbp), %r8
	movq	144(%rax), %r9
	movq	8(%r8), %r10
	movq	%r10, 72(%r9)
	jmp	.L2336
.L2431:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L12253
	cmpq	$0, 32(%rdx)
	jne	.L2338
	movq	-1992(%rbp), %r8
	movq	80(%rdx), %r11
	movl	$136, %esi
	cmpb	$32, 16(%r8)
	movq	72(%r11), %rbx
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L2441
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-560(%rbp), %rdi
	cmpb	$1, 16(%rdi)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-560(%rbp), %r12
	movl	24(%r12), %eax
	movq	32(%r12), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1992(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-568(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L2443:
	movq	-1992(%rbp), %rbx
	movq	current_class_type(%rip), %r11
	movq	152(%rbx), %r8
	movq	%r11, 64(%rbx)
	movq	%r11, 16(%r8)
	jmp	.L2338
.L2441:
	movq	-560(%rbp), %r10
	movq	-1992(%rbp), %rsi
	movq	%r10, 72(%rsi)
	jmp	.L2443
.L12253:
	movq	-1992(%rbp), %r9
	movq	112(%rax), %rbx
	cmpb	$32, 16(%r9)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$136, %esi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L2436
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-560(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-560(%rbp), %r11
	movl	24(%r11), %eax
	movq	32(%r11), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1992(%rbp), %r10
	movq	%rax, 72(%r10)
	movq	-568(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L2438:
	movq	current_function_decl(%rip), %rsi
	movq	-1992(%rbp), %r9
	movq	%rsi, 64(%r9)
	jmp	.L2338
.L2436:
	movq	-560(%rbp), %r12
	movq	-1992(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L2438
.L12250:
	cmpb	$95, 1(%rax)
	jne	.L2430
	movq	-1992(%rbp), %rax
	orb	$64, 53(%rax)
	jmp	.L2430
.L12249:
	cmpq	$0, 72(%rbx)
	je	.L12254
.L10429:
	movq	-560(%rbp), %r8
	movq	32(%r8), %rax
	jmp	.L2416
.L12254:
	movq	-1992(%rbp), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%rax), %r9
	xorl	%eax, %eax
	movq	%r9, -576(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L2411
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1992(%rbp), %r10
	movq	%rax, 72(%r10)
	movq	-576(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L10426:
	movq	-560(%rbp), %r9
	movq	32(%r9), %rax
	jmp	.L2416
.L2411:
	movq	-1992(%rbp), %rcx
	movq	%r12, 72(%rcx)
	jmp	.L10428
.L12248:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L2409
.L10427:
	movq	-560(%rbp), %rbx
	movq	32(%rbx), %rax
	jmp	.L2416
.L2405:
	movq	-1992(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -1992(%rbp)
	jmp	.L10429
.L12247:
	movq	global_binding_level(%rip), %rsi
	movl	$1, %r12d
	cmpq	%rsi, current_binding_level(%rip)
	je	.L2387
	movq	-560(%rbp), %rdi
	movq	48(%rdi), %r11
	testq	%r11, %r11
	movq	%r11, %rcx
	jne	.L2388
.L2387:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L2389
	movq	-560(%rbp), %rbx
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10061
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L2390
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L12255
.L2390:
	testq	%rcx, %rcx
	jne	.L10061
.L10062:
	movq	-560(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10061
	movq	-560(%rbp), %rax
	movq	40(%rax), %rcx
.L2388:
	testq	%rcx, %rcx
	je	.L2392
.L10061:
	cmpb	$32, 16(%rcx)
	je	.L2392
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L2392
	movq	-560(%rbp), %r10
	movq	8(%r10), %rax
	testq	%rax, %rax
	je	.L2400
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11002
	testl	%r12d, %r12d
	jle	.L12256
.L11002:
	movq	%rax, %rcx
.L2392:
	movq	-568(%rbp), %r8
	cmpq	80(%r8), %rcx
	jne	.L2386
	jmp	.L10426
.L12256:
	testl	%edx, %edx
	jg	.L11002
	testl	%r12d, %r12d
	je	.L2392
	movq	-560(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11002
.L2400:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L2392
.L12255:
	xorl	%ecx, %ecx
	movq	-560(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L2392
	testq	%rax, %rax
	je	.L10062
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L2390
.L2389:
	movq	-560(%rbp), %rdx
	movq	40(%rdx), %rcx
	jmp	.L2388
.L12246:
	cmpb	$95, 1(%rax)
	jne	.L2385
	jmp	.L2416
.L2379:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2380
	movq	-560(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
	jmp	.L11001
.L2378:
	movq	80(%rcx), %rax
	movq	%rax, -1992(%rbp)
	jmp	.L2383
.L12245:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L2344
	movq	80(%rax), %rbx
.L2344:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L2377
.L2376:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L2353
	cmpl	$32, %eax
	je	.L12257
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L2347:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L2377
	jmp	.L2376
.L12257:
	movq	8(%rbx), %r9
	movq	-568(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%r9), %rdx
	movq	72(%rdx), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10878
	movq	64(%rbx), %rbx
	jmp	.L2347
.L10878:
	movq	32(%rax), %rcx
	jmp	.L2377
.L2353:
	movq	-568(%rbp), %rax
	movq	80(%rax), %r12
	movq	56(%r12), %rbx
	testq	%rbx, %rbx
	je	.L2342
	movq	global_binding_level(%rip), %r10
	cmpq	%r10, current_binding_level(%rip)
	je	.L2356
	movq	48(%rbx), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L2357
.L2356:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L2358
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10059
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L2359
	movq	144(%rdi), %rsi
	testb	$1, 3(%rsi)
	jne	.L12258
.L2359:
	testq	%rcx, %rcx
	jne	.L10059
.L10060:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10059
.L2358:
	movq	40(%rbx), %rcx
.L2357:
	testq	%rcx, %rcx
	je	.L10231
.L10059:
	cmpb	$32, 16(%rcx)
	je	.L2377
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L2377
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L2369
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L11000
	movl	$1, %r11d
	testl	%r11d, %r11d
	jle	.L12259
.L11000:
	movq	%rax, %rcx
	jmp	.L2377
.L12259:
	testl	%edx, %edx
	jg	.L11000
	movl	$1, %edi
	testl	%edi, %edi
	je	.L2377
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L11000
.L2369:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L2377
	jmp	.L11000
.L12258:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L2377
	testq	%rax, %rax
	je	.L10060
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L2359
.L2340:
	movq	-560(%rbp), %rsi
	movq	-568(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -584(%rbp)
	je	.L2417
	movq	-560(%rbp), %r12
	movq	8(%r12), %rsi
	movq	%r12, %rdi
.L11003:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L2418:
	movq	-568(%rbp), %r9
	movq	-560(%rbp), %rsi
	movq	%r9, 8(%rsi)
	movq	-584(%rbp), %rdi
	movq	56(%rdi), %r12
	testq	%r12, %r12
	je	.L2421
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L2422
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L2422:
	movq	decl_obstack+24(%rip), %rdx
	movq	-584(%rbp), %r10
	leaq	8(%rdx), %rbx
	movq	%r10, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rbx
	ja	.L12260
.L2424:
	movq	%rdx, %r8
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	-584(%rbp), %rdx
	movq	%rdx, (%r8)
	cmpb	$32, 16(%rdx)
	je	.L12261
.L2421:
	movq	-584(%rbp), %r12
	movq	%r12, -1992(%rbp)
	jmp	.L10429
.L12261:
	cmpq	$0, 72(%rdx)
	jne	.L2421
	movq	8(%rdx), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	%rax, -592(%rbp)
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L2426
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-584(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-592(%rbp), %rdx
	movq	%rdx, 8(%rax)
	jmp	.L2421
.L2426:
	movq	-584(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L2421
.L12260:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L2424
.L2417:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2418
	movq	-560(%rbp), %r11
	movq	8(%r11), %rsi
	movq	%r11, %rdi
	jmp	.L11003
.L12244:
	cmpq	$0, class_binding_level(%rip)
	je	.L2339
	movq	144(%rax), %r11
	testb	$16, 3(%r11)
	jne	.L2338
	jmp	.L2339
.L12243:
	movq	-560(%rbp), %rdi
	movq	-568(%rbp), %rsi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%rbx)
	jmp	.L2335
	.p2align 6,,7
.L2306:
	movq	-2016(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10420
	movl	flag_traditional(%rip), %esi
	testl	%esi, %esi
	jne	.L10424
	testb	$8, 18(%r15)
	je	.L10424
	testb	$8, 18(%r13)
	jne	.L10424
	testb	$9, 53(%r13)
	jne	.L10424
	cmpq	%r13, current_function_decl(%rip)
	je	.L12262
.L2315:
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L2316
	cmpq	$0, 8(%rax)
	jne	.L12263
.L2316:
	movq	-2016(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L10999:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-2016(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L10424
.L12263:
	movq	-2016(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L10999
.L12262:
	movq	-2016(%rbp), %r13
	movq	%r13, current_function_decl(%rip)
	jmp	.L2315
	.p2align 6,,7
.L12221:
	cmpq	$0, 64(%rdx)
	jne	.L2304
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L2304
.L12220:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -2016(%rbp)
	call	error_with_decl
	jmp	.L2302
.L2295:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L2297
.L2301:
	cmpq	%r15, 56(%rax)
	je	.L2297
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L2301
.L2297:
	movq	%rax, -2016(%rbp)
	jmp	.L2294
.L12219:
	movq	40(%r15), %r12
	movq	%r12, -2016(%rbp)
	jmp	.L2294
.L12218:
	movq	56(%r13), %r15
	jmp	.L2291
.L12217:
	testb	$32, 53(%r13)
	jne	.L2289
	jmp	.L2290
.L10416:
	movzbl	16(%r13), %edx
	jmp	.L2289
.L11266:
	leal	(%rcx,%rcx), %edi
	xorl	%eax, %eax
	movl	%edi, builtin_type_tdescs_max(%rip)
	movslq	%edi,%rsi
	movq	builtin_type_tdescs_arr(%rip), %rdi
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L2282
.L2272:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2273
	movq	-1920(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
	jmp	.L10997
.L2271:
	movq	-1920(%rbp), %rsi
	movl	$32, %edi
	movq	%r14, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L2277
	movq	-1920(%rbp), %r8
	movq	8(%r8), %rsi
	movq	%r8, %rdi
.L10998:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L2278:
	movq	-1920(%rbp), %r11
	movq	$0, 8(%r11)
	jmp	.L2270
.L2277:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2278
	movq	-1920(%rbp), %rax
	movq	8(%rax), %rsi
	movq	%rax, %rdi
	jmp	.L10998
	.p2align 6,,7
.L11265:
	movq	-1928(%rbp), %rsi
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r14, %rdx
	call	build_decl
	movq	current_binding_level(%rip), %r8
	movq	%rax, %r13
	movq	112(%rax), %r15
	movq	current_function_decl(%rip), %rax
	movq	%r8, -1960(%rbp)
	cmpq	%rax, %r13
	je	.L10397
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L12264
.L1990:
	movq	%rax, 64(%r13)
.L1989:
	cmpb	$32, %dl
	je	.L12265
.L1991:
	testq	%r15, %r15
	je	.L1992
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L12266
	cmpq	$0, 48(%r15)
	jne	.L1995
	movq	$0, -1968(%rbp)
.L1994:
	cmpq	$0, -1968(%rbp)
	je	.L2012
	movq	-1968(%rbp), %r11
	cmpq	error_mark_node(%rip), %r11
	je	.L12267
.L2002:
	cmpq	$0, -1968(%rbp)
	je	.L10401
	movq	-1968(%rbp), %rsi
	cmpb	$34, 16(%rsi)
	je	.L12268
.L2004:
	movq	-1968(%rbp), %rax
	testq	%rax, %rax
	movq	24(%rax), %r12
	movl	32(%rax), %ebx
	je	.L10401
	movzbl	16(%rax), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L2006
	cmpb	$32, %al
	je	.L2012
	cmpb	$32, %dl
	je	.L10903
	movq	-1968(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10401
.L10405:
	movq	global_binding_level(%rip), %rax
.L2011:
	movq	current_binding_level(%rip), %rbx
	cmpq	%rax, %rbx
	je	.L2265
	movq	-1928(%rbp), %r13
	movq	8(%r13), %rsi
	movq	%r13, %rdi
.L10996:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L2266:
	movq	-1928(%rbp), %rdx
	movl	$13, %eax
	cmpl	$31, %eax
	movq	$0, 8(%rdx)
	jg	.L1988
	movq	-1968(%rbp), %r12
	movq	%r12, 40(%rdx)
	jmp	.L1988
.L2265:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2266
	movq	-1928(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
	jmp	.L10996
.L10401:
	movzbl	16(%r13), %edx
.L2012:
	cmpb	$32, %dl
	je	.L10903
.L2020:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L2158
	movq	40(%r15), %rax
	testq	%rax, %rax
	je	.L2158
	testb	$1, 53(%rax)
	jne	.L2159
	testb	$8, 18(%rax)
	je	.L2158
.L2159:
	andb	$8, %dl
	je	.L12269
.L2158:
	movl	flag_traditional(%rip), %ecx
	testl	%ecx, %ecx
	je	.L10413
	testb	$1, 53(%r13)
	je	.L10413
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L2162
	movq	48(%r15), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L2163
.L2162:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L2164
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L10057
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L2165
	movq	144(%rdi), %r11
	testb	$1, 3(%r11)
	jne	.L12270
.L2165:
	testq	%rcx, %rcx
	jne	.L10057
.L10058:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10057
.L2164:
	movq	40(%r15), %rcx
.L2163:
	testq	%rcx, %rcx
	je	.L10230
.L10057:
	cmpb	$32, 16(%rcx)
	je	.L2167
	movl	looking_for_typename(%rip), %esi
	testl	%esi, %esi
	js	.L2167
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L2175
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L10993
	testl	%ebx, %ebx
	jle	.L12271
.L10993:
	movq	%rax, %rcx
.L2167:
	testq	%rcx, %rcx
	jne	.L10413
.L10230:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -1960(%rbp)
.L2161:
	cmpq	%rax, -1960(%rbp)
	je	.L12272
	movq	current_binding_level(%rip), %rbx
	movq	48(%r15), %r12
	movq	40(%r15), %r8
	cmpq	%rax, %rbx
	je	.L12273
.L10994:
	movq	16(%rbx), %rdx
	movq	%r15, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	movq	%r8, -2808(%rbp)
	call	tree_cons
	movq	-2808(%rbp), %r8
	movq	%rax, 16(%rbx)
.L2206:
	testq	%r12, %r12
	movq	%r13, 48(%r15)
	je	.L12274
.L2217:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L2219
	testq	%r12, %r12
	je	.L2220
	testb	$1, 53(%r13)
	jne	.L2220
	cmpb	$34, 16(%r12)
	je	.L12275
.L2220:
	movl	warn_shadow(%rip), %ebx
	testl	%ebx, %ebx
	je	.L2219
	testb	$1, 53(%r13)
	jne	.L2219
	movl	32(%r13), %edi
	testl	%edi, %edi
	je	.L2219
	testq	%rax, %rax
	jne	.L2219
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L2225
	cmpb	$34, 16(%r12)
	je	.L12276
.L2225:
	cmpq	$0, 56(%r15)
	je	.L2227
	movl	$.LC41, %edi
.L2226:
	testq	%rdi, %rdi
	jne	.L10995
.L2219:
	testq	%r12, %r12
	je	.L10414
	movq	%r12, %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	-1960(%rbp), %r12
	movq	16(%r12), %rdx
	call	tree_cons
	movq	%rax, 16(%r12)
.L10414:
	movzbl	16(%r13), %edx
.L2204:
	leal	-128(%rdx), %r10d
	cmpb	$1, %r10b
	jbe	.L1992
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L1992
	cmpb	$18, 16(%rcx)
	je	.L12277
.L2236:
	testb	$64, 46(%rcx)
	je	.L1992
.L2235:
	movq	-1960(%rbp), %rdx
	movzwl	64(%rdx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rdx)
	je	.L12278
.L10415:
	movzbl	16(%r13), %edx
.L1992:
	cmpb	$32, %dl
	je	.L12279
.L2238:
	movq	-1960(%rbp), %rbx
	movq	global_binding_level(%rip), %rax
	movq	(%rbx), %rdi
	cmpq	%rax, %rbx
	movq	%rdi, (%r13)
	movq	%r13, (%rbx)
	je	.L12280
.L2264:
	movq	%r13, -1968(%rbp)
	jmp	.L2011
.L12280:
	testb	$4, 17(%r13)
	jne	.L2264
	xorl	%eax, %eax
	movl	$124, %edi
	call	my_friendly_abort
	movq	global_binding_level(%rip), %rax
	jmp	.L2264
.L12279:
	testq	%r15, %r15
	je	.L2238
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L2239
	cmpq	class_binding_level(%rip), %rax
	je	.L2240
	movq	48(%r15), %rax
	testq	%rax, %rax
	je	.L2244
	cmpb	$32, 16(%rax)
	je	.L2242
.L2244:
	cmpq	$0, current_class_type(%rip)
	je	.L2239
	movq	56(%r15), %rax
	testq	%rax, %rax
	je	.L2239
	cmpb	$32, 16(%rax)
	je	.L2242
.L2239:
	movq	40(%r15), %rax
	testq	%rax, %rax
	je	.L2243
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L2242
	cmpb	$-127, %dl
	je	.L12281
.L2243:
	movq	current_class_name(%rip), %r15
	testq	%r15, %r15
	je	.L2238
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L12282
.L2250:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L2254
	cmpq	class_binding_level(%rip), %rax
	je	.L2255
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L2259
	cmpb	$32, 16(%rax)
	je	.L2257
.L2259:
	cmpq	$0, current_class_type(%rip)
	je	.L2254
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L2254
	cmpb	$32, 16(%rax)
	je	.L2257
.L2254:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L2238
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L2257
	cmpb	$-127, %dl
	jne	.L2238
	movq	$0, 8(%rbx)
	jmp	.L2238
.L2257:
	movq	8(%rax), %r15
	movq	%r15, 8(%rbx)
	jmp	.L2238
.L2255:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L2259
.L12282:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %rbx
	sete	%r11b
	movq	8(%r13), %r12
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r15)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r15), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r15), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r12, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L2250
.L12281:
	movq	$0, 8(%r15)
	jmp	.L2243
.L2242:
	movq	8(%rax), %rcx
	movq	%rcx, 8(%r15)
	jmp	.L2243
.L2240:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L2244
.L12278:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10415
.L12277:
	movq	8(%rcx), %rsi
	testb	$64, 46(%rsi)
	jne	.L2235
	jmp	.L2236
.L10995:
	movq	32(%r15), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L2219
.L2227:
	testq	%r12, %r12
	je	.L2229
	movl	$.LC42, %edi
	jmp	.L2226
.L2229:
	testq	%r8, %r8
	movl	$.LC43, %r9d
	cmovne	%r9, %rdi
	jmp	.L2226
.L12276:
	movl	$.LC40, %edi
	jmp	.L2226
.L12275:
	cmpb	$34, 16(%r13)
	je	.L2220
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r8
	movq	56(%r8), %rax
	je	.L2221
	movq	56(%rax), %rax
.L2221:
	movzbl	66(%rax), %r11d
	andl	$15, %r11d
	decl	%r11d
	jne	.L2219
	movl	$.LC40, %edi
	jmp	.L10995
	.p2align 6,,7
.L12274:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L12283
.L2209:
	testq	%r12, %r12
	jne	.L2217
	testq	%r8, %r8
	jne	.L2217
	testb	$1, 53(%r13)
	je	.L2217
	testb	$8, 18(%r13)
	je	.L2217
	orb	$8, 18(%r15)
	jmp	.L2217
	.p2align 6,,7
.L12283:
	testq	%r8, %r8
	je	.L2209
	cmpb	$29, 16(%r13)
	jne	.L2209
	cmpb	$29, 16(%r8)
	jne	.L2209
	movq	8(%r8), %rsi
	movq	8(%r13), %rdi
	xorl	%eax, %eax
	movl	$1, %edx
	movq	%r8, -2808(%rbp)
	call	comptypes
	movq	-2808(%rbp), %r8
	testl	%eax, %eax
	je	.L12284
	movzbl	53(%r8), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L2212
	movzbl	53(%r13), %r10d
	leal	0(,%rax,8), %esi
	leaq	88(%r13), %rdx
	andb	$-9, %r10b
	orb	%sil, %r10b
	movb	%r10b, 53(%r13)
	cmpq	%r8, current_function_decl(%rip)
	je	.L2213
	movq	88(%r8), %rax
.L2214:
	movq	%rax, (%rdx)
	movq	136(%r8), %r10
	movq	80(%r8), %r9
	movq	72(%r8), %rdx
	movzbl	17(%r13), %ecx
	movq	%r10, 136(%r13)
	movq	%r9, 80(%r13)
	movq	%rdx, 72(%r13)
	movzbl	17(%r8), %edi
	movq	%r8, 96(%r13)
	andb	$127, %cl
	shrb	$7, %dil
	movzbl	%dil, %ebx
	movl	%ebx, %r11d
	salb	$7, %r11b
	orb	%r11b, %cl
	movb	%cl, 17(%r13)
	movzbl	53(%r8), %ecx
.L2212:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L2215
	movzbl	53(%r13), %esi
	salb	$4, %al
	andb	$-17, %sil
	orb	%al, %sil
	movb	%sil, 53(%r13)
	movl	128(%r8), %eax
	movl	%eax, 128(%r13)
.L2215:
	movq	8(%r8), %rdx
	cmpq	$0, 24(%rdx)
	je	.L2209
	cmpq	$0, 88(%r8)
	je	.L2209
	movq	8(%r13), %rcx
	cmpq	$0, 24(%rcx)
	jne	.L2209
	movq	%rdx, 8(%r13)
	jmp	.L2209
.L2213:
	xorl	%eax, %eax
	jmp	.L2214
.L12284:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	movq	-2808(%rbp), %r8
	jmp	.L2209
	.p2align 6,,7
.L12273:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2206
	jmp	.L10994
.L12272:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L12285
.L2181:
	cmpq	$0, 40(%r15)
	jne	.L2182
	testb	$8, 18(%r13)
	je	.L2182
	orb	$8, 18(%r15)
.L2182:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L12286
.L2184:
	movq	%r13, 40(%r15)
	movzbl	16(%r13), %edx
.L2183:
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L2195
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L2185
	testb	$1, 18(%rcx)
	je	.L2185
	orb	$1, 18(%r13)
	movq	72(%r15), %rax
.L2185:
	testq	%rax, %rax
	je	.L2195
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L2190
	testb	$8, 17(%rcx)
	je	.L2190
	orb	$8, 17(%r13)
	movq	72(%r15), %rax
.L2190:
	testq	%rax, %rax
	je	.L2195
	cmpq	$0, 8(%rax)
	je	.L2195
	cmpb	$29, %dl
	je	.L12287
.L2198:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L2195:
	testb	$8, 18(%r15)
	je	.L2204
	cmpb	$32, %dl
	je	.L2204
	testb	$8, 18(%r13)
	jne	.L2204
	testb	$1, 53(%r13)
	jne	.L2204
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L2200
	cmpq	$0, 8(%rax)
	jne	.L12288
.L2200:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11229:
	xorl	%eax, %eax
	call	warning
	jmp	.L10414
.L12288:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11229
.L12287:
	movq	8(%r13), %r9
	movq	integer_type_node(%rip), %rdi
	cmpq	%rdi, 8(%r9)
	jne	.L2198
	jmp	.L2195
	.p2align 6,,7
.L12286:
	cmpq	$0, -1968(%rbp)
	je	.L2184
	movq	-1968(%rbp), %r12
	cmpb	$32, 16(%r12)
	jne	.L2183
	jmp	.L2184
.L12285:
	testb	$8, 54(%r13)
	jne	.L2181
	andb	$-9, 18(%r13)
	jmp	.L2181
	.p2align 6,,7
.L10413:
	movq	global_binding_level(%rip), %rax
	jmp	.L2161
.L12271:
	testl	%esi, %esi
	jg	.L10993
	testl	%ebx, %ebx
	je	.L2167
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L10993
	.p2align 6,,7
.L2175:
	movq	8(%rcx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rcx
	jmp	.L2167
.L12270:
	xorl	%ecx, %ecx
	movq	%r15, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L2167
	testq	%rax, %rax
	je	.L10058
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L2165
	.p2align 6,,7
.L12269:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L2158
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r15), %rdi
	call	warning_with_decl
	jmp	.L2158
	.p2align 6,,7
.L10903:
	movq	8(%r13), %rdx
	movq	80(%rdx), %rbx
	testq	%rbx, %rbx
	movq	%rbx, -1952(%rbp)
	je	.L2022
	movzbl	16(%rbx), %eax
	cmpb	$32, %al
	je	.L2021
.L2022:
	movq	global_binding_level(%rip), %r10
	movq	%r13, -1952(%rbp)
	cmpq	%r10, current_binding_level(%rip)
	jne	.L10406
	movq	%r13, 80(%rdx)
.L10406:
	movzbl	16(%r13), %eax
.L2025:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%bl
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	movq	-1952(%rbp), %rax
	movq	56(%rax), %rbx
	testq	%rbx, %rbx
	je	.L2149
	cmpq	$0, 72(%rax)
	je	.L12289
.L2149:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L2020
	cmpq	$0, 56(%rax)
	je	.L2020
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %rdi
	cmpq	global_binding_level(%rip), %rbx
	movq	%rdi, -552(%rbp)
	je	.L2154
	movq	-552(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
.L10992:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L2155:
	movq	-552(%rbp), %rsi
	movq	%r12, 8(%rsi)
	jmp	.L2020
.L2154:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2155
	movq	-552(%rbp), %r10
	movq	8(%r10), %rsi
	movq	%r10, %rdi
	jmp	.L10992
.L12289:
	movq	8(%r13), %r8
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	movq	%r8, -544(%rbp)
	cmpb	$32, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L2150
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	-544(%rbp), %r12
	movq	%r12, 8(%rax)
	jmp	.L2149
.L2150:
	movq	%rbx, 72(%r13)
	jmp	.L2149
.L2021:
	movq	-1952(%rbp), %r12
	movq	current_binding_level(%rip), %rsi
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%r12), %rcx
	movq	%rcx, -504(%rbp)
	jne	.L2025
	movq	32(%rcx), %rcx
	cmpb	$36, (%rcx)
	jne	.L2025
	cmpb	$95, 1(%rcx)
	jne	.L2025
	movq	class_binding_level(%rip), %rbx
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rcx
	testq	%rbx, %rbx
	movq	%rbx, -1936(%rbp)
	movq	%rcx, -512(%rbp)
	jne	.L2029
	testb	$-128, 66(%rsi)
	movq	%rsi, -1936(%rbp)
	je	.L2029
.L2033:
	movq	-1936(%rbp), %rsi
	movq	56(%rsi), %rdx
	testb	$-128, 66(%rdx)
	movq	%rdx, -1936(%rbp)
	jne	.L2033
.L2029:
	movq	-1936(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12290
	movq	-1936(%rbp), %r9
	movq	-504(%rbp), %rdi
	xorl	%eax, %eax
	movq	-512(%rbp), %rsi
	movq	8(%r9), %rdx
	call	saveable_tree_cons
	movq	-1936(%rbp), %r11
	movq	%rax, 8(%r11)
.L2035:
	cmpq	$0, -504(%rbp)
	je	.L2036
	movq	-512(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L2037
	movq	-504(%rbp), %rax
	movq	%rax, 80(%rcx)
.L2037:
	movq	-504(%rbp), %rdi
	movq	-512(%rbp), %rax
	cmpq	%rax, 8(%rdi)
	je	.L2038
	cmpb	$21, 16(%rax)
	je	.L12291
.L2039:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L2041
	cmpq	$0, 32(%rax)
	je	.L2040
.L2041:
	movq	lang_name_cplusplus(%rip), %r8
	cmpq	%r8, current_lang_name(%rip)
	je	.L12292
.L2042:
	xorl	%ecx, %ecx
.L2077:
	testq	%rcx, %rcx
	jne	.L2078
.L10229:
	movq	-504(%rbp), %rsi
	movq	-512(%rbp), %rdx
	movl	$32, %edi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-512(%rbp), %rdi
	movq	%rax, -1944(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-1944(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L2079
	movq	-504(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
.L10989:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L2080:
	movq	-512(%rbp), %rsi
	movq	-504(%rbp), %rdx
	movq	%rsi, 8(%rdx)
.L2083:
	movq	-504(%rbp), %r9
	movq	32(%r9), %rax
	cmpb	$36, (%rax)
	je	.L12293
.L2085:
	movq	-512(%rbp), %rdi
	movq	80(%rdi), %rdx
	testq	%rdx, %rdx
	je	.L2116
	cmpb	$32, 16(%rdx)
	je	.L12294
.L2086:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2105
	movq	-1944(%rbp), %rcx
	movq	56(%rcx), %r12
	testq	%r12, %r12
	je	.L10408
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L2107
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L2107:
	movq	decl_obstack+24(%rip), %rdx
	movq	-1944(%rbp), %r8
	leaq	8(%rdx), %r10
	movq	%r8, 56(%r12)
	cmpq	decl_obstack+32(%rip), %r10
	ja	.L12295
.L2109:
	movq	-1944(%rbp), %rbx
	movq	%rdx, %rsi
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%rsi)
	cmpb	$32, 16(%rbx)
	je	.L12296
.L10409:
	movq	-504(%rbp), %r11
	movq	32(%r11), %rax
.L2116:
	cmpb	$36, (%rax)
	je	.L12297
.L2130:
	movq	current_class_type(%rip), %rdx
	movq	-1944(%rbp), %rdi
	movq	-512(%rbp), %rcx
	testq	%rdx, %rdx
	movq	%rdi, 80(%rcx)
	jne	.L2133
	cmpq	$0, current_function_decl(%rip)
	je	.L2132
.L2133:
	movq	lang_name_cplusplus(%rip), %r10
	cmpq	%r10, current_lang_name(%rip)
	je	.L2131
.L2132:
	movq	-504(%rbp), %r12
	movq	-1944(%rbp), %r8
	movq	%r12, 72(%r8)
.L2038:
	movq	-1936(%rbp), %rax
	movzbl	66(%rax), %ecx
	andl	$15, %ecx
	cmpl	$2, %ecx
	je	.L12298
.L2036:
	movq	-512(%rbp), %rdx
	movq	80(%rdx), %rax
	cmpb	$32, 16(%rax)
	je	.L12299
	movq	-512(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-512(%rbp), %rcx
	movq	%rax, (%rcx)
	movq	-1952(%rbp), %r10
	movzbl	16(%r10), %eax
	jmp	.L2025
.L12299:
	movq	%rax, (%rdx)
	movq	-1952(%rbp), %rsi
	movzbl	16(%rsi), %eax
	jmp	.L2025
.L12298:
	movq	-512(%rbp), %rdi
	orb	$64, 18(%rdi)
	movq	80(%rdi), %r12
	movq	-504(%rbp), %r8
	movq	current_class_type(%rip), %rax
	movq	%r12, 56(%r8)
	cmpq	$0, 32(%rax)
	jne	.L2036
	movq	-1936(%rbp), %r9
	movq	144(%rax), %r11
	movq	8(%r9), %rdx
	movq	%rdx, 72(%r11)
	jmp	.L2036
.L2131:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L12300
	cmpq	$0, 32(%rdx)
	jne	.L2038
	movq	-1944(%rbp), %r9
	movq	80(%rdx), %r10
	movl	$136, %esi
	cmpb	$32, 16(%r9)
	movq	72(%r10), %rbx
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L2141
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-504(%rbp), %rdi
	cmpb	$1, 16(%rdi)
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-504(%rbp), %r8
	movl	24(%r8), %eax
	movq	32(%r8), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1944(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-512(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L2143:
	movq	-1944(%rbp), %rbx
	movq	current_class_type(%rip), %r10
	movq	152(%rbx), %r9
	movq	%r10, 64(%rbx)
	movq	%r10, 16(%r9)
	jmp	.L2038
.L2141:
	movq	-504(%rbp), %r11
	movq	-1944(%rbp), %rsi
	movq	%r11, 72(%rsi)
	jmp	.L2143
.L12300:
	movq	-1944(%rbp), %rdx
	movq	112(%rax), %rbx
	cmpb	$32, 16(%rdx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$136, %esi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L2136
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-504(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-504(%rbp), %r10
	movl	24(%r10), %eax
	movq	32(%r10), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1944(%rbp), %r11
	movq	%rax, 72(%r11)
	movq	-512(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L2138:
	movq	current_function_decl(%rip), %rsi
	movq	-1944(%rbp), %rdx
	movq	%rsi, 64(%rdx)
	jmp	.L2038
.L2136:
	movq	-504(%rbp), %r12
	movq	-1944(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L2138
.L12297:
	cmpb	$95, 1(%rax)
	jne	.L2130
	movq	-1944(%rbp), %rax
	orb	$64, 53(%rax)
	jmp	.L2130
.L12296:
	cmpq	$0, 72(%rbx)
	je	.L12301
.L10410:
	movq	-504(%rbp), %r9
	movq	32(%r9), %rax
	jmp	.L2116
.L12301:
	movq	-1944(%rbp), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%rax), %rdx
	xorl	%eax, %eax
	movq	%rdx, -520(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L2111
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1944(%rbp), %r11
	movq	%rax, 72(%r11)
	movq	-520(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L10407:
	movq	-504(%rbp), %rdx
	movq	32(%rdx), %rax
	jmp	.L2116
.L2111:
	movq	-1944(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L10409
.L12295:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L2109
.L10408:
	movq	-504(%rbp), %rbx
	movq	32(%rbx), %rax
	jmp	.L2116
.L2105:
	movq	-1944(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -1944(%rbp)
	jmp	.L10410
.L12294:
	movq	global_binding_level(%rip), %r10
	movl	$1, %r12d
	cmpq	%r10, current_binding_level(%rip)
	je	.L2087
	movq	-504(%rbp), %rbx
	movq	48(%rbx), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L2088
.L2087:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L2089
	movq	-504(%rbp), %rdx
	movq	56(%rdx), %rcx
	testq	%rcx, %rcx
	jne	.L10055
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L2090
	movq	144(%rdi), %rsi
	testb	$1, 3(%rsi)
	jne	.L12302
.L2090:
	testq	%rcx, %rcx
	jne	.L10055
.L10056:
	movq	-504(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10055
	movq	-504(%rbp), %rax
	movq	40(%rax), %rcx
.L2088:
	testq	%rcx, %rcx
	je	.L2092
.L10055:
	cmpb	$32, 16(%rcx)
	je	.L2092
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L2092
	movq	-504(%rbp), %r9
	movq	8(%r9), %rax
	testq	%rax, %rax
	je	.L2100
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L10990
	testl	%r12d, %r12d
	jle	.L12303
.L10990:
	movq	%rax, %rcx
.L2092:
	movq	-512(%rbp), %rdi
	cmpq	80(%rdi), %rcx
	jne	.L2086
	jmp	.L10407
.L12303:
	testl	%edx, %edx
	jg	.L10990
	testl	%r12d, %r12d
	je	.L2092
	movq	-504(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L10990
.L2100:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L2092
.L12302:
	xorl	%ecx, %ecx
	movq	-504(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L2092
	testq	%rax, %rax
	je	.L10056
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L2090
.L2089:
	movq	-504(%rbp), %r11
	movq	40(%r11), %rcx
	jmp	.L2088
.L12293:
	cmpb	$95, 1(%rax)
	jne	.L2085
	jmp	.L2116
.L2079:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2080
	movq	-504(%rbp), %rax
	movq	8(%rax), %rsi
	movq	%rax, %rdi
	jmp	.L10989
.L2078:
	movq	80(%rcx), %r11
	movq	%r11, -1944(%rbp)
	jmp	.L2083
.L12292:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L2044
	movq	80(%rax), %rbx
.L2044:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L2077
.L2076:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L2053
	cmpl	$32, %eax
	je	.L12304
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L2047:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L2077
	jmp	.L2076
.L12304:
	movq	8(%rbx), %rdx
	movq	-512(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%rdx), %rcx
	movq	72(%rcx), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10877
	movq	64(%rbx), %rbx
	jmp	.L2047
.L10877:
	movq	32(%rax), %rcx
	jmp	.L2077
.L2053:
	movq	-512(%rbp), %r11
	movq	80(%r11), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L2042
	movq	global_binding_level(%rip), %r9
	cmpq	%r9, current_binding_level(%rip)
	je	.L2056
	movq	48(%rbx), %rdi
	testq	%rdi, %rdi
	movq	%rdi, %rcx
	jne	.L2057
.L2056:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L2058
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10053
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L2059
	movq	144(%rdi), %r10
	testb	$1, 3(%r10)
	jne	.L12305
.L2059:
	testq	%rcx, %rcx
	jne	.L10053
.L10054:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10053
.L2058:
	movq	40(%rbx), %rcx
.L2057:
	testq	%rcx, %rcx
	je	.L10229
.L10053:
	cmpb	$32, 16(%rcx)
	je	.L2077
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L2077
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L2069
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L10988
	movl	$1, %r12d
	testl	%r12d, %r12d
	jle	.L12306
.L10988:
	movq	%rax, %rcx
	jmp	.L2077
.L12306:
	testl	%edx, %edx
	jg	.L10988
	movl	$1, %r8d
	testl	%r8d, %r8d
	je	.L2077
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L10988
.L2069:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L2077
	jmp	.L10988
.L12305:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L2077
	testq	%rax, %rax
	je	.L10054
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L2059
.L2040:
	movq	-504(%rbp), %rsi
	movq	-512(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -528(%rbp)
	je	.L2117
	movq	-504(%rbp), %r12
	movq	8(%r12), %rsi
	movq	%r12, %rdi
.L10991:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L2118:
	movq	-512(%rbp), %rdx
	movq	-504(%rbp), %rsi
	movq	%rdx, 8(%rsi)
	movq	-528(%rbp), %r8
	movq	56(%r8), %r12
	testq	%r12, %r12
	je	.L2121
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L2122
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L2122:
	movq	decl_obstack+24(%rip), %rdx
	movq	-528(%rbp), %r11
	leaq	8(%rdx), %rbx
	movq	%r11, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rbx
	ja	.L12307
.L2124:
	movq	%rdx, %r9
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	-528(%rbp), %rdx
	movq	%rdx, (%r9)
	cmpb	$32, 16(%rdx)
	je	.L12308
.L2121:
	movq	-528(%rbp), %r12
	movq	%r12, -1944(%rbp)
	jmp	.L10410
.L12308:
	cmpq	$0, 72(%rdx)
	jne	.L2121
	movq	8(%rdx), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	%rax, -536(%rbp)
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L2126
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-528(%rbp), %rdi
	movq	%rax, 72(%rdi)
	movq	-536(%rbp), %rcx
	movq	%rcx, 8(%rax)
	jmp	.L2121
.L2126:
	movq	-528(%rbp), %rsi
	movq	%r12, 72(%rsi)
	jmp	.L2121
.L12307:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L2124
.L2117:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L2118
	movq	-504(%rbp), %r10
	movq	8(%r10), %rsi
	movq	%r10, %rdi
	jmp	.L10991
.L12291:
	cmpq	$0, class_binding_level(%rip)
	je	.L2039
	movq	144(%rax), %r10
	testb	$16, 3(%r10)
	jne	.L2038
	jmp	.L2039
.L12290:
	movq	-504(%rbp), %rdi
	movq	-512(%rbp), %rsi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%rbx)
	jmp	.L2035
	.p2align 6,,7
.L2006:
	movq	-1968(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10401
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	jne	.L10405
	testb	$8, 18(%r15)
	je	.L10405
	testb	$8, 18(%r13)
	jne	.L10405
	testb	$9, 53(%r13)
	jne	.L10405
	cmpq	%r13, current_function_decl(%rip)
	je	.L12309
.L2015:
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L2016
	cmpq	$0, 8(%rax)
	jne	.L12310
.L2016:
	movq	-1968(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L10987:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-1968(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L10405
.L12310:
	movq	-1968(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L10987
.L12309:
	movq	-1968(%rbp), %rdi
	movq	%rdi, current_function_decl(%rip)
	jmp	.L2015
	.p2align 6,,7
.L12268:
	cmpq	$0, 64(%rsi)
	jne	.L2004
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L2004
.L12267:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -1968(%rbp)
	call	error_with_decl
	jmp	.L2002
.L1995:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L1997
.L2001:
	cmpq	%r15, 56(%rax)
	je	.L1997
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L2001
.L1997:
	movq	%rax, -1968(%rbp)
	jmp	.L1994
.L12266:
	movq	40(%r15), %rax
	movq	%rax, -1968(%rbp)
	jmp	.L1994
.L12265:
	movq	56(%r13), %r15
	jmp	.L1991
.L12264:
	testb	$32, 53(%r13)
	jne	.L1989
	jmp	.L1990
.L10397:
	movzbl	16(%r13), %edx
	jmp	.L1989
.L1984:
	movl	$.LC48, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	40(%rax), %rdx
	movq	8(%rdx), %rax
	jmp	.L10986
.L11264:
	leal	(%rcx,%rcx), %edx
	movq	builtin_type_tdescs_arr(%rip), %rdi
	xorl	%eax, %eax
	movslq	%edx,%rsi
	movl	%edx, builtin_type_tdescs_max(%rip)
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L1980
.L1970:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1971
	movq	8, %rsi
	xorl	%edi, %edi
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	jmp	.L10984
.L1969:
	xorl	%esi, %esi
	movl	$32, %edi
	movq	%r15, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12311
.L10985:
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1976:
	movq	$0, 8
	jmp	.L1968
.L12311:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1976
	jmp	.L10985
	.p2align 6,,7
.L11263:
	movq	-1872(%rbp), %rsi
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r15, %rdx
	call	build_decl
	movq	%rax, %r13
	movq	112(%rax), %r14
	movq	current_binding_level(%rip), %rax
	movq	%rax, -1904(%rbp)
	movq	current_function_decl(%rip), %rax
	cmpq	%rax, %r13
	je	.L10378
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L12312
.L1688:
	movq	%rax, 64(%r13)
.L1687:
	cmpb	$32, %dl
	je	.L12313
.L1689:
	testq	%r14, %r14
	je	.L1690
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L12314
	cmpq	$0, 48(%r14)
	jne	.L1693
	movq	$0, -1912(%rbp)
.L1692:
	cmpq	$0, -1912(%rbp)
	je	.L1710
	movq	-1912(%rbp), %r8
	cmpq	error_mark_node(%rip), %r8
	je	.L12315
.L1700:
	cmpq	$0, -1912(%rbp)
	je	.L10382
	movq	-1912(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L12316
.L1702:
	movq	-1912(%rbp), %rcx
	testq	%rcx, %rcx
	movq	24(%rcx), %r12
	movq	%rcx, %rsi
	movl	32(%rcx), %ebx
	je	.L10382
	movzbl	16(%rcx), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L1704
	cmpb	$32, %al
	je	.L1710
	cmpb	$32, %dl
	je	.L10902
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10382
.L10386:
	movq	global_binding_level(%rip), %rax
.L1709:
	movq	current_binding_level(%rip), %rbx
	cmpq	%rax, %rbx
	je	.L1963
	movq	-1872(%rbp), %r13
	movq	8(%r13), %rsi
	movq	%r13, %rdi
.L10983:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1964:
	movq	-1872(%rbp), %rdx
	movl	$32, %eax
	cmpl	$31, %eax
	movq	$0, 8(%rdx)
	jg	.L1686
	movq	-1912(%rbp), %r12
	movq	%r12, 40(%rdx)
	jmp	.L1686
.L1963:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1964
	movq	-1872(%rbp), %r10
	movq	8(%r10), %rsi
	movq	%r10, %rdi
	jmp	.L10983
.L10382:
	movzbl	16(%r13), %edx
.L1710:
	cmpb	$32, %dl
	je	.L10902
.L1718:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L1856
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L1856
	testb	$1, 53(%rax)
	jne	.L1857
	testb	$8, 18(%rax)
	je	.L1856
.L1857:
	andb	$8, %dl
	je	.L12317
.L1856:
	movl	flag_traditional(%rip), %r12d
	testl	%r12d, %r12d
	je	.L10394
	testb	$1, 53(%r13)
	je	.L10394
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L1860
	movq	48(%r14), %rsi
	testq	%rsi, %rsi
	movq	%rsi, %rcx
	jne	.L1861
.L1860:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L1862
	movq	56(%r14), %rcx
	testq	%rcx, %rcx
	jne	.L10051
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L1863
	movq	144(%rdi), %r11
	testb	$1, 3(%r11)
	jne	.L12318
.L1863:
	testq	%rcx, %rcx
	jne	.L10051
.L10052:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10051
.L1862:
	movq	40(%r14), %rcx
.L1861:
	testq	%rcx, %rcx
	je	.L10228
.L10051:
	cmpb	$32, 16(%rcx)
	je	.L1865
	movl	looking_for_typename(%rip), %esi
	testl	%esi, %esi
	js	.L1865
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L1873
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L10980
	testl	%ebx, %ebx
	jle	.L12319
.L10980:
	movq	%rax, %rcx
.L1865:
	testq	%rcx, %rcx
	jne	.L10394
.L10228:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -1904(%rbp)
.L1859:
	cmpq	%rax, -1904(%rbp)
	je	.L12320
	movq	current_binding_level(%rip), %rbx
	movq	48(%r14), %r12
	movq	40(%r14), %r8
	cmpq	%rax, %rbx
	je	.L12321
.L10981:
	movq	16(%rbx), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	movq	%r8, -2808(%rbp)
	call	tree_cons
	movq	-2808(%rbp), %r8
	movq	%rax, 16(%rbx)
.L1904:
	testq	%r12, %r12
	movq	%r13, 48(%r14)
	je	.L12322
.L1915:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L1917
	testq	%r12, %r12
	je	.L1918
	testb	$1, 53(%r13)
	jne	.L1918
	cmpb	$34, 16(%r12)
	je	.L12323
.L1918:
	movl	warn_shadow(%rip), %r9d
	testl	%r9d, %r9d
	je	.L1917
	testb	$1, 53(%r13)
	jne	.L1917
	movl	32(%r13), %edi
	testl	%edi, %edi
	je	.L1917
	testq	%rax, %rax
	jne	.L1917
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L1923
	cmpb	$34, 16(%r12)
	je	.L12324
.L1923:
	cmpq	$0, 56(%r14)
	je	.L1925
	movl	$.LC41, %edi
.L1924:
	testq	%rdi, %rdi
	jne	.L10982
.L1917:
	testq	%r12, %r12
	je	.L10395
	movq	%r12, %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	-1904(%rbp), %r12
	movq	16(%r12), %rdx
	call	tree_cons
	movq	%rax, 16(%r12)
.L10395:
	movzbl	16(%r13), %edx
.L1902:
	leal	-128(%rdx), %ecx
	cmpb	$1, %cl
	jbe	.L1690
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L1690
	cmpb	$18, 16(%rcx)
	je	.L12325
.L1934:
	testb	$64, 46(%rcx)
	je	.L1690
.L1933:
	movq	-1904(%rbp), %rdx
	movzwl	64(%rdx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rdx)
	je	.L12326
.L10396:
	movzbl	16(%r13), %edx
.L1690:
	cmpb	$32, %dl
	je	.L12327
.L1936:
	movq	-1904(%rbp), %r9
	movq	global_binding_level(%rip), %rax
	movq	(%r9), %rdi
	cmpq	%rax, %r9
	movq	%rdi, (%r13)
	movq	%r13, (%r9)
	je	.L12328
.L1962:
	movq	%r13, -1912(%rbp)
	jmp	.L1709
.L12328:
	testb	$4, 17(%r13)
	jne	.L1962
	xorl	%eax, %eax
	movl	$124, %edi
	call	my_friendly_abort
	movq	global_binding_level(%rip), %rax
	jmp	.L1962
.L12327:
	testq	%r14, %r14
	je	.L1936
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L1937
	cmpq	class_binding_level(%rip), %rax
	je	.L1938
	movq	48(%r14), %rax
	testq	%rax, %rax
	je	.L1942
	cmpb	$32, 16(%rax)
	je	.L1940
.L1942:
	cmpq	$0, current_class_type(%rip)
	je	.L1937
	movq	56(%r14), %rax
	testq	%rax, %rax
	je	.L1937
	cmpb	$32, 16(%rax)
	je	.L1940
.L1937:
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L1941
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L1940
	cmpb	$-127, %dl
	je	.L12329
.L1941:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L1936
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L12330
.L1948:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L1952
	cmpq	class_binding_level(%rip), %rax
	je	.L1953
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L1957
	cmpb	$32, 16(%rax)
	je	.L1955
.L1957:
	cmpq	$0, current_class_type(%rip)
	je	.L1952
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L1952
	cmpb	$32, 16(%rax)
	je	.L1955
.L1952:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L1936
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L1955
	cmpb	$-127, %dl
	jne	.L1936
	movq	$0, 8(%rbx)
	jmp	.L1936
.L1955:
	movq	8(%rax), %r14
	movq	%r14, 8(%rbx)
	jmp	.L1936
.L1953:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L1957
.L12330:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %rbx
	sete	%r11b
	movq	8(%r13), %r12
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r14)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r14), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r12, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L1948
.L12329:
	movq	$0, 8(%r14)
	jmp	.L1941
.L1940:
	movq	8(%rax), %rsi
	movq	%rsi, 8(%r14)
	jmp	.L1941
.L1938:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L1942
.L12326:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10396
.L12325:
	movq	8(%rcx), %rbx
	testb	$64, 46(%rbx)
	jne	.L1933
	jmp	.L1934
.L10982:
	movq	32(%r14), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L1917
.L1925:
	testq	%r12, %r12
	je	.L1927
	movl	$.LC42, %edi
	jmp	.L1924
.L1927:
	testq	%r8, %r8
	movl	$.LC43, %r10d
	cmovne	%r10, %rdi
	jmp	.L1924
.L12324:
	movl	$.LC40, %edi
	jmp	.L1924
.L12323:
	cmpb	$34, 16(%r13)
	je	.L1918
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r8
	movq	56(%r8), %rax
	je	.L1919
	movq	56(%rax), %rax
.L1919:
	movzbl	66(%rax), %r11d
	andl	$15, %r11d
	decl	%r11d
	jne	.L1917
	movl	$.LC40, %edi
	jmp	.L10982
	.p2align 6,,7
.L12322:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L12331
.L1907:
	testq	%r12, %r12
	jne	.L1915
	testq	%r8, %r8
	jne	.L1915
	testb	$1, 53(%r13)
	je	.L1915
	testb	$8, 18(%r13)
	je	.L1915
	orb	$8, 18(%r14)
	jmp	.L1915
	.p2align 6,,7
.L12331:
	testq	%r8, %r8
	je	.L1907
	cmpb	$29, 16(%r13)
	jne	.L1907
	cmpb	$29, 16(%r8)
	jne	.L1907
	movq	8(%r8), %rsi
	movq	8(%r13), %rdi
	xorl	%eax, %eax
	movl	$1, %edx
	movq	%r8, -2808(%rbp)
	call	comptypes
	movq	-2808(%rbp), %r8
	testl	%eax, %eax
	je	.L12332
	movzbl	53(%r8), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L1910
	movzbl	53(%r13), %ecx
	leal	0(,%rax,8), %ebx
	leaq	88(%r13), %rdx
	andb	$-9, %cl
	orb	%bl, %cl
	movb	%cl, 53(%r13)
	cmpq	%r8, current_function_decl(%rip)
	je	.L1911
	movq	88(%r8), %rax
.L1912:
	movq	%rax, (%rdx)
	movq	136(%r8), %rcx
	movq	80(%r8), %r10
	movq	72(%r8), %rdx
	movzbl	17(%r13), %esi
	movq	%rcx, 136(%r13)
	movq	%r10, 80(%r13)
	movq	%rdx, 72(%r13)
	movzbl	17(%r8), %edi
	movq	%r8, 96(%r13)
	andb	$127, %sil
	shrb	$7, %dil
	movzbl	%dil, %r9d
	movl	%r9d, %r11d
	salb	$7, %r11b
	orb	%r11b, %sil
	movb	%sil, 17(%r13)
	movzbl	53(%r8), %ecx
.L1910:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L1913
	movzbl	53(%r13), %ebx
	salb	$4, %al
	andb	$-17, %bl
	orb	%al, %bl
	movb	%bl, 53(%r13)
	movl	128(%r8), %eax
	movl	%eax, 128(%r13)
.L1913:
	movq	8(%r8), %rdx
	cmpq	$0, 24(%rdx)
	je	.L1907
	cmpq	$0, 88(%r8)
	je	.L1907
	movq	8(%r13), %rsi
	cmpq	$0, 24(%rsi)
	jne	.L1907
	movq	%rdx, 8(%r13)
	jmp	.L1907
.L1911:
	xorl	%eax, %eax
	jmp	.L1912
.L12332:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	movq	-2808(%rbp), %r8
	jmp	.L1907
	.p2align 6,,7
.L12321:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1904
	jmp	.L10981
.L12320:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L12333
.L1879:
	cmpq	$0, 40(%r14)
	jne	.L1880
	testb	$8, 18(%r13)
	je	.L1880
	orb	$8, 18(%r14)
.L1880:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L12334
.L1882:
	movq	%r13, 40(%r14)
	movzbl	16(%r13), %edx
.L1881:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L1893
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L1883
	testb	$1, 18(%rcx)
	je	.L1883
	orb	$1, 18(%r13)
	movq	72(%r14), %rax
.L1883:
	testq	%rax, %rax
	je	.L1893
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L1888
	testb	$8, 17(%rcx)
	je	.L1888
	orb	$8, 17(%r13)
	movq	72(%r14), %rax
.L1888:
	testq	%rax, %rax
	je	.L1893
	cmpq	$0, 8(%rax)
	je	.L1893
	cmpb	$29, %dl
	je	.L12335
.L1896:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L1893:
	testb	$8, 18(%r14)
	je	.L1902
	cmpb	$32, %dl
	je	.L1902
	testb	$8, 18(%r13)
	jne	.L1902
	testb	$1, 53(%r13)
	jne	.L1902
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L1898
	cmpq	$0, 8(%rax)
	jne	.L12336
.L1898:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11228:
	xorl	%eax, %eax
	call	warning
	jmp	.L10395
.L12336:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11228
.L12335:
	movq	8(%r13), %r10
	movq	integer_type_node(%rip), %rdi
	cmpq	%rdi, 8(%r10)
	jne	.L1896
	jmp	.L1893
	.p2align 6,,7
.L12334:
	cmpq	$0, -1912(%rbp)
	je	.L1882
	movq	-1912(%rbp), %r8
	cmpb	$32, 16(%r8)
	jne	.L1881
	jmp	.L1882
.L12333:
	testb	$8, 54(%r13)
	jne	.L1879
	andb	$-9, 18(%r13)
	jmp	.L1879
	.p2align 6,,7
.L10394:
	movq	global_binding_level(%rip), %rax
	jmp	.L1859
.L12319:
	testl	%esi, %esi
	jg	.L10980
	testl	%ebx, %ebx
	je	.L1865
	movq	%rax, %rdx
	movq	%r14, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L10980
	.p2align 6,,7
.L1873:
	movq	8(%rcx), %r9
	cmpq	error_mark_node(%rip), %r9
	cmove	%r9, %rcx
	jmp	.L1865
.L12318:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L1865
	testq	%rax, %rax
	je	.L10052
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L1863
	.p2align 6,,7
.L12317:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L1856
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r14), %rdi
	call	warning_with_decl
	jmp	.L1856
	.p2align 6,,7
.L10902:
	movq	8(%r13), %rdx
	movq	80(%rdx), %rcx
	testq	%rcx, %rcx
	movq	%rcx, -1896(%rbp)
	je	.L1720
	movzbl	16(%rcx), %eax
	cmpb	$32, %al
	je	.L1719
.L1720:
	movq	global_binding_level(%rip), %r12
	movq	%r13, -1896(%rbp)
	cmpq	%r12, current_binding_level(%rip)
	jne	.L10387
	movq	%r13, 80(%rdx)
.L10387:
	movzbl	16(%r13), %eax
.L1723:
	cmpb	$32, %al
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$140, %esi
	call	my_friendly_assert
	movq	-1896(%rbp), %rax
	movq	56(%rax), %rbx
	testq	%rbx, %rbx
	je	.L1847
	cmpq	$0, 72(%rax)
	je	.L12337
.L1847:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L1718
	cmpq	$0, 56(%rax)
	je	.L1718
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %rdi
	cmpq	global_binding_level(%rip), %rbx
	movq	%rdi, -496(%rbp)
	je	.L1852
	movq	-496(%rbp), %r10
	movq	8(%r10), %rsi
	movq	%r10, %rdi
.L10979:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1853:
	movq	-496(%rbp), %rbx
	movq	%r12, 8(%rbx)
	jmp	.L1718
.L1852:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1853
	movq	-496(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
	jmp	.L10979
.L12337:
	movq	8(%r13), %r11
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	movq	%r11, -488(%rbp)
	cmpb	$32, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L1848
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	-488(%rbp), %r9
	movq	%r9, 8(%rax)
	jmp	.L1847
.L1848:
	movq	%rbx, 72(%r13)
	jmp	.L1847
.L1719:
	movq	-1896(%rbp), %rdi
	movq	current_binding_level(%rip), %rsi
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%rdi), %rbx
	movq	%rbx, -448(%rbp)
	jne	.L1723
	movq	-448(%rbp), %r11
	movq	32(%r11), %rcx
	cmpb	$36, (%rcx)
	jne	.L1723
	cmpb	$95, 1(%rcx)
	jne	.L1723
	movq	class_binding_level(%rip), %r9
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rdx
	testq	%r9, %r9
	movq	%r9, -1880(%rbp)
	movq	%rdx, -456(%rbp)
	jne	.L1727
	testb	$-128, 66(%rsi)
	movq	%rsi, -1880(%rbp)
	je	.L1727
.L1731:
	movq	-1880(%rbp), %rax
	movq	56(%rax), %rsi
	testb	$-128, 66(%rsi)
	movq	%rsi, -1880(%rbp)
	jne	.L1731
.L1727:
	movq	-1880(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12338
	movq	-1880(%rbp), %rcx
	movq	-448(%rbp), %rdi
	xorl	%eax, %eax
	movq	-456(%rbp), %rsi
	movq	8(%rcx), %rdx
	call	saveable_tree_cons
	movq	-1880(%rbp), %r8
	movq	%rax, 8(%r8)
.L1733:
	cmpq	$0, -448(%rbp)
	je	.L1734
	movq	-456(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L1735
	movq	-448(%rbp), %r10
	movq	%r10, 80(%rcx)
.L1735:
	movq	-448(%rbp), %r12
	movq	-456(%rbp), %rax
	cmpq	%rax, 8(%r12)
	je	.L1736
	cmpb	$21, 16(%rax)
	je	.L12339
.L1737:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L1739
	cmpq	$0, 32(%rax)
	je	.L1738
.L1739:
	movq	lang_name_cplusplus(%rip), %r11
	cmpq	%r11, current_lang_name(%rip)
	je	.L12340
.L1740:
	xorl	%ecx, %ecx
.L1775:
	testq	%rcx, %rcx
	jne	.L1776
.L10227:
	movq	-448(%rbp), %rsi
	movq	-456(%rbp), %rdx
	movl	$32, %edi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-456(%rbp), %rdi
	movq	%rax, -1888(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-1888(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L1777
	movq	-448(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
.L10976:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1778:
	movq	-456(%rbp), %rsi
	movq	-448(%rbp), %rdx
	movq	%rsi, 8(%rdx)
.L1781:
	movq	-448(%rbp), %r8
	movq	32(%r8), %rax
	cmpb	$36, (%rax)
	je	.L12341
.L1783:
	movq	-456(%rbp), %r10
	movq	80(%r10), %rdx
	testq	%rdx, %rdx
	je	.L1814
	cmpb	$32, 16(%rdx)
	je	.L12342
.L1784:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1803
	movq	-1888(%rbp), %rcx
	movq	56(%rcx), %r12
	testq	%r12, %r12
	je	.L10389
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L1805
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L1805:
	movq	decl_obstack+24(%rip), %rdx
	movq	-1888(%rbp), %rdi
	leaq	8(%rdx), %r11
	movq	%rdi, 56(%r12)
	cmpq	decl_obstack+32(%rip), %r11
	ja	.L12343
.L1807:
	movq	-1888(%rbp), %rbx
	movq	%rdx, %r9
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%r9)
	cmpb	$32, 16(%rbx)
	je	.L12344
.L10390:
	movq	-448(%rbp), %rsi
	movq	32(%rsi), %rax
.L1814:
	cmpb	$36, (%rax)
	je	.L12345
.L1828:
	movq	current_class_type(%rip), %rdx
	movq	-1888(%rbp), %rcx
	movq	-456(%rbp), %r10
	testq	%rdx, %rdx
	movq	%rcx, 80(%r10)
	jne	.L1831
	cmpq	$0, current_function_decl(%rip)
	je	.L1830
.L1831:
	movq	lang_name_cplusplus(%rip), %r11
	cmpq	%r11, current_lang_name(%rip)
	je	.L1829
.L1830:
	movq	-448(%rbp), %rdi
	movq	-1888(%rbp), %r9
	movq	%rdi, 72(%r9)
.L1736:
	movq	-1880(%rbp), %rax
	movzbl	66(%rax), %esi
	andl	$15, %esi
	cmpl	$2, %esi
	je	.L12346
.L1734:
	movq	-456(%rbp), %rdx
	movq	80(%rdx), %rax
	cmpb	$32, 16(%rax)
	je	.L12347
	movq	-456(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-456(%rbp), %rcx
	movq	%rax, (%rcx)
	movq	-1896(%rbp), %rbx
	movzbl	16(%rbx), %eax
	jmp	.L1723
.L12347:
	movq	%rax, (%rdx)
	movq	-1896(%rbp), %r10
	movzbl	16(%r10), %eax
	jmp	.L1723
.L12346:
	movq	-456(%rbp), %rdi
	orb	$64, 18(%rdi)
	movq	80(%rdi), %r9
	movq	-448(%rbp), %r11
	movq	current_class_type(%rip), %rax
	movq	%r9, 56(%r11)
	cmpq	$0, 32(%rax)
	jne	.L1734
	movq	-1880(%rbp), %r8
	movq	144(%rax), %r12
	movq	8(%r8), %rdx
	movq	%rdx, 72(%r12)
	jmp	.L1734
.L1829:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L12348
	cmpq	$0, 32(%rdx)
	jne	.L1736
	movq	-1888(%rbp), %r10
	movq	80(%rdx), %rsi
	cmpb	$32, 16(%r10)
	movq	72(%rsi), %rbx
	movl	$136, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L1839
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-448(%rbp), %rdi
	cmpb	$1, 16(%rdi)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-448(%rbp), %r11
	movl	24(%r11), %eax
	movq	32(%r11), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1888(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-456(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L1841:
	movq	-1888(%rbp), %rcx
	movq	current_class_type(%rip), %rbx
	movq	152(%rcx), %r10
	movq	%rbx, 64(%rcx)
	movq	%rbx, 16(%r10)
	jmp	.L1736
.L1839:
	movq	-448(%rbp), %r8
	movq	-1888(%rbp), %rdx
	movq	%r8, 72(%rdx)
	jmp	.L1841
.L12348:
	movq	-1888(%rbp), %rdx
	movq	112(%rax), %rbx
	movl	$136, %esi
	cmpb	$32, 16(%rdx)
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L1834
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	-448(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-448(%rbp), %r10
	movl	24(%r10), %eax
	movq	32(%r10), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1888(%rbp), %r8
	movq	%rax, 72(%r8)
	movq	-456(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L1836:
	movq	current_function_decl(%rip), %rdx
	movq	-1888(%rbp), %r12
	movq	%rdx, 64(%r12)
	jmp	.L1736
.L1834:
	movq	-448(%rbp), %rdi
	movq	-1888(%rbp), %r9
	movq	%rdi, 72(%r9)
	jmp	.L1836
.L12345:
	cmpb	$95, 1(%rax)
	jne	.L1828
	movq	-1888(%rbp), %rax
	orb	$64, 53(%rax)
	jmp	.L1828
.L12344:
	cmpq	$0, 72(%rbx)
	je	.L12349
.L10391:
	movq	-448(%rbp), %r8
	movq	32(%r8), %rax
	jmp	.L1814
.L12349:
	movq	-1888(%rbp), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%rax), %rdx
	xorl	%eax, %eax
	movq	%rdx, -464(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L1809
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1888(%rbp), %rsi
	movq	%rax, 72(%rsi)
	movq	-464(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L10388:
	movq	-448(%rbp), %rdx
	movq	32(%rdx), %rax
	jmp	.L1814
.L1809:
	movq	-1888(%rbp), %rcx
	movq	%r12, 72(%rcx)
	jmp	.L10390
.L12343:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L1807
.L10389:
	movq	-448(%rbp), %rbx
	movq	32(%rbx), %rax
	jmp	.L1814
.L1803:
	movq	-1888(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -1888(%rbp)
	jmp	.L10391
.L12342:
	movq	global_binding_level(%rip), %r11
	movl	$1, %r12d
	cmpq	%r11, current_binding_level(%rip)
	je	.L1785
	movq	-448(%rbp), %rbx
	movq	48(%rbx), %rdi
	testq	%rdi, %rdi
	movq	%rdi, %rcx
	jne	.L1786
.L1785:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L1787
	movq	-448(%rbp), %r9
	movq	56(%r9), %rcx
	testq	%rcx, %rcx
	jne	.L10049
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L1788
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L12350
.L1788:
	testq	%rcx, %rcx
	jne	.L10049
.L10050:
	movq	-448(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10049
	movq	-448(%rbp), %rsi
	movq	40(%rsi), %rcx
.L1786:
	testq	%rcx, %rcx
	je	.L1790
.L10049:
	cmpb	$32, 16(%rcx)
	je	.L1790
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L1790
	movq	-448(%rbp), %r8
	movq	8(%r8), %rax
	testq	%rax, %rax
	je	.L1798
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L10977
	testl	%r12d, %r12d
	jle	.L12351
.L10977:
	movq	%rax, %rcx
.L1790:
	movq	-456(%rbp), %r10
	cmpq	80(%r10), %rcx
	jne	.L1784
	jmp	.L10388
.L12351:
	testl	%edx, %edx
	jg	.L10977
	testl	%r12d, %r12d
	je	.L1790
	movq	-448(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L10977
.L1798:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L1790
.L12350:
	xorl	%ecx, %ecx
	movq	-448(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L1790
	testq	%rax, %rax
	je	.L10050
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L1788
.L1787:
	movq	-448(%rbp), %rax
	movq	40(%rax), %rcx
	jmp	.L1786
.L12341:
	cmpb	$95, 1(%rax)
	jne	.L1783
	jmp	.L1814
.L1777:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1778
	movq	-448(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
	jmp	.L10976
.L1776:
	movq	80(%rcx), %rax
	movq	%rax, -1888(%rbp)
	jmp	.L1781
.L12340:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L1742
	movq	80(%rax), %rbx
.L1742:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L1775
.L1774:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L1751
	cmpl	$32, %eax
	je	.L12352
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L1745:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L1775
	jmp	.L1774
.L12352:
	movq	8(%rbx), %rdx
	movq	-456(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%rdx), %r9
	movq	72(%r9), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10876
	movq	64(%rbx), %rbx
	jmp	.L1745
.L10876:
	movq	32(%rax), %rcx
	jmp	.L1775
.L1751:
	movq	-456(%rbp), %rax
	movq	80(%rax), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L1740
	movq	global_binding_level(%rip), %r8
	cmpq	%r8, current_binding_level(%rip)
	je	.L1754
	movq	48(%rbx), %r10
	testq	%r10, %r10
	movq	%r10, %rcx
	jne	.L1755
.L1754:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L1756
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10047
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L1757
	movq	144(%rdi), %r11
	testb	$1, 3(%r11)
	jne	.L12353
.L1757:
	testq	%rcx, %rcx
	jne	.L10047
.L10048:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10047
.L1756:
	movq	40(%rbx), %rcx
.L1755:
	testq	%rcx, %rcx
	je	.L10227
.L10047:
	cmpb	$32, 16(%rcx)
	je	.L1775
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L1775
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L1767
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L10975
	movl	$1, %r12d
	testl	%r12d, %r12d
	jle	.L12354
.L10975:
	movq	%rax, %rcx
	jmp	.L1775
.L12354:
	testl	%edx, %edx
	jg	.L10975
	movl	$1, %edi
	testl	%edi, %edi
	je	.L1775
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L10975
.L1767:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L1775
	jmp	.L10975
.L12353:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L1775
	testq	%rax, %rax
	je	.L10048
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L1757
.L1738:
	movq	-448(%rbp), %rsi
	movq	-456(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -472(%rbp)
	je	.L1815
	movq	-448(%rbp), %r12
	movq	8(%r12), %rsi
	movq	%r12, %rdi
.L10978:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1816:
	movq	-456(%rbp), %rdx
	movq	-448(%rbp), %r9
	movq	%rdx, 8(%r9)
	movq	-472(%rbp), %rdi
	movq	56(%rdi), %r12
	testq	%r12, %r12
	je	.L1819
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L1820
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L1820:
	movq	decl_obstack+24(%rip), %rdx
	movq	-472(%rbp), %rsi
	leaq	8(%rdx), %rbx
	movq	%rsi, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rbx
	ja	.L12355
.L1822:
	movq	%rdx, %r8
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	-472(%rbp), %rdx
	movq	%rdx, (%r8)
	cmpb	$32, 16(%rdx)
	je	.L12356
.L1819:
	movq	-472(%rbp), %r12
	movq	%r12, -1888(%rbp)
	jmp	.L10391
.L12356:
	cmpq	$0, 72(%rdx)
	jne	.L1819
	movq	8(%rdx), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	%rax, -480(%rbp)
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L1824
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-472(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-480(%rbp), %r10
	movq	%r10, 8(%rax)
	jmp	.L1819
.L1824:
	movq	-472(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L1819
.L12355:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L1822
.L1815:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1816
	movq	-448(%rbp), %r11
	movq	8(%r11), %rsi
	movq	%r11, %rdi
	jmp	.L10978
.L12339:
	cmpq	$0, class_binding_level(%rip)
	je	.L1737
	movq	144(%rax), %rbx
	testb	$16, 3(%rbx)
	jne	.L1736
	jmp	.L1737
.L12338:
	movq	-448(%rbp), %rdi
	movq	-456(%rbp), %rsi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%rbx)
	jmp	.L1733
	.p2align 6,,7
.L1704:
	movq	-1912(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10382
	movl	flag_traditional(%rip), %r10d
	testl	%r10d, %r10d
	jne	.L10386
	testb	$8, 18(%r14)
	je	.L10386
	testb	$8, 18(%r13)
	jne	.L10386
	testb	$9, 53(%r13)
	jne	.L10386
	cmpq	%r13, current_function_decl(%rip)
	je	.L12357
.L1713:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L1714
	cmpq	$0, 8(%rax)
	jne	.L12358
.L1714:
	movq	-1912(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L10974:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-1912(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L10386
.L12358:
	movq	-1912(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L10974
.L12357:
	movq	-1912(%rbp), %r13
	movq	%r13, current_function_decl(%rip)
	jmp	.L1713
	.p2align 6,,7
.L12316:
	cmpq	$0, 64(%rcx)
	jne	.L1702
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L1702
.L12315:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -1912(%rbp)
	call	error_with_decl
	jmp	.L1700
.L1693:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L1695
.L1699:
	cmpq	%r14, 56(%rax)
	je	.L1695
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L1699
.L1695:
	movq	%rax, -1912(%rbp)
	jmp	.L1692
.L12314:
	movq	40(%r14), %rax
	jmp	.L1695
.L12313:
	movq	56(%r13), %r14
	jmp	.L1689
.L12312:
	testb	$32, 53(%r13)
	jne	.L1687
	jmp	.L1688
.L10378:
	movzbl	16(%r13), %edx
	jmp	.L1687
.L11262:
	leal	(%rcx,%rcx), %eax
	movq	builtin_type_tdescs_arr(%rip), %rdi
	movslq	%eax,%rsi
	movl	%eax, builtin_type_tdescs_max(%rip)
	xorl	%eax, %eax
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L1680
.L1670:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1671
	movq	8, %rsi
	xorl	%edi, %edi
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	jmp	.L10972
.L1669:
	xorl	%esi, %esi
	movl	$32, %edi
	movq	%r14, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12359
.L10973:
	movq	8, %rsi
	movq	32(%rbx), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1676:
	movq	$0, 8
	jmp	.L1668
.L12359:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1676
	jmp	.L10973
	.p2align 6,,7
.L11261:
	movq	-1824(%rbp), %rsi
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r14, %rdx
	call	build_decl
	movq	current_binding_level(%rip), %r10
	movq	%rax, %r13
	movq	112(%rax), %r15
	movq	current_function_decl(%rip), %rax
	movq	%r10, -1856(%rbp)
	cmpq	%rax, %r13
	je	.L10359
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L12360
.L1388:
	movq	%rax, 64(%r13)
.L1387:
	cmpb	$32, %dl
	je	.L12361
.L1389:
	testq	%r15, %r15
	je	.L1390
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L12362
	cmpq	$0, 48(%r15)
	jne	.L1393
	movq	$0, -1864(%rbp)
.L1392:
	cmpq	$0, -1864(%rbp)
	je	.L1410
	movq	-1864(%rbp), %rcx
	cmpq	error_mark_node(%rip), %rcx
	je	.L12363
.L1400:
	cmpq	$0, -1864(%rbp)
	je	.L10363
	movq	-1864(%rbp), %rdx
	cmpb	$34, 16(%rdx)
	je	.L12364
.L1402:
	movq	-1864(%rbp), %rcx
	testq	%rcx, %rcx
	movq	24(%rcx), %r12
	movl	32(%rcx), %ebx
	je	.L10363
	movzbl	16(%rcx), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L1404
	cmpb	$32, %al
	je	.L1410
	cmpb	$32, %dl
	je	.L10901
	xorl	%eax, %eax
	movq	%r13, %rdi
	movq	%rcx, %rsi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10363
.L10367:
	movq	global_binding_level(%rip), %rax
.L1409:
	movq	current_binding_level(%rip), %rbx
	cmpq	%rax, %rbx
	je	.L1663
	movq	-1824(%rbp), %r13
	movq	8(%r13), %rsi
	movq	%r13, %rdi
.L10971:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1664:
	movq	-1824(%rbp), %rdx
	movl	$32, %eax
	cmpl	$31, %eax
	movq	$0, 8(%rdx)
	jg	.L1386
	movq	-1864(%rbp), %r12
	movq	%r12, 40(%rdx)
	jmp	.L1386
.L1663:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1664
	movq	-1824(%rbp), %rdx
	movq	8(%rdx), %rsi
	movq	%rdx, %rdi
	jmp	.L10971
.L10363:
	movzbl	16(%r13), %edx
.L1410:
	cmpb	$32, %dl
	je	.L10901
.L1418:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L1556
	movq	40(%r15), %rax
	testq	%rax, %rax
	je	.L1556
	testb	$1, 53(%rax)
	jne	.L1557
	testb	$8, 18(%rax)
	je	.L1556
.L1557:
	andb	$8, %dl
	je	.L12365
.L1556:
	movl	flag_traditional(%rip), %r12d
	testl	%r12d, %r12d
	je	.L10375
	testb	$1, 53(%r13)
	je	.L10375
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L1560
	movq	48(%r15), %r9
	testq	%r9, %r9
	movq	%r9, %rcx
	jne	.L1561
.L1560:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L1562
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L10045
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L1563
	movq	144(%rdi), %rsi
	testb	$1, 3(%rsi)
	jne	.L12366
.L1563:
	testq	%rcx, %rcx
	jne	.L10045
.L10046:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10045
.L1562:
	movq	40(%r15), %rcx
.L1561:
	testq	%rcx, %rcx
	je	.L10226
.L10045:
	cmpb	$32, 16(%rcx)
	je	.L1565
	movl	looking_for_typename(%rip), %esi
	testl	%esi, %esi
	js	.L1565
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L1573
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L10968
	testl	%ebx, %ebx
	jle	.L12367
.L10968:
	movq	%rax, %rcx
.L1565:
	testq	%rcx, %rcx
	jne	.L10375
.L10226:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -1856(%rbp)
.L1559:
	cmpq	%rax, -1856(%rbp)
	je	.L12368
	movq	current_binding_level(%rip), %rbx
	movq	48(%r15), %r12
	movq	40(%r15), %r8
	cmpq	%rax, %rbx
	je	.L12369
.L10969:
	movq	16(%rbx), %rdx
	movq	%r15, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	movq	%r8, -2808(%rbp)
	call	tree_cons
	movq	-2808(%rbp), %r8
	movq	%rax, 16(%rbx)
.L1604:
	testq	%r12, %r12
	movq	%r13, 48(%r15)
	je	.L12370
.L1615:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L1617
	testq	%r12, %r12
	je	.L1618
	testb	$1, 53(%r13)
	jne	.L1618
	cmpb	$34, 16(%r12)
	je	.L12371
.L1618:
	movl	warn_shadow(%rip), %ecx
	testl	%ecx, %ecx
	je	.L1617
	testb	$1, 53(%r13)
	jne	.L1617
	movl	32(%r13), %r10d
	testl	%r10d, %r10d
	je	.L1617
	testq	%rax, %rax
	jne	.L1617
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L1623
	cmpb	$34, 16(%r12)
	je	.L12372
.L1623:
	cmpq	$0, 56(%r15)
	je	.L1625
	movl	$.LC41, %edi
.L1624:
	testq	%rdi, %rdi
	jne	.L10970
.L1617:
	testq	%r12, %r12
	je	.L10376
	movq	%r12, %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	-1856(%rbp), %r12
	movq	16(%r12), %rdx
	call	tree_cons
	movq	%rax, 16(%r12)
.L10376:
	movzbl	16(%r13), %edx
.L1602:
	leal	-128(%rdx), %edi
	cmpb	$1, %dil
	jbe	.L1390
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L1390
	cmpb	$18, 16(%rcx)
	je	.L12373
.L1634:
	testb	$64, 46(%rcx)
	je	.L1390
.L1633:
	movq	-1856(%rbp), %r9
	movzwl	64(%r9), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%r9)
	je	.L12374
.L10377:
	movzbl	16(%r13), %edx
.L1390:
	cmpb	$32, %dl
	je	.L12375
.L1636:
	movq	-1856(%rbp), %rbx
	movq	global_binding_level(%rip), %rax
	movq	(%rbx), %r10
	cmpq	%rax, %rbx
	movq	%r10, (%r13)
	movq	%r13, (%rbx)
	je	.L12376
.L1662:
	movq	%r13, -1864(%rbp)
	jmp	.L1409
.L12376:
	testb	$4, 17(%r13)
	jne	.L1662
	xorl	%eax, %eax
	movl	$124, %edi
	call	my_friendly_abort
	movq	global_binding_level(%rip), %rax
	jmp	.L1662
.L12375:
	testq	%r15, %r15
	je	.L1636
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L1637
	cmpq	class_binding_level(%rip), %rax
	je	.L1638
	movq	48(%r15), %rax
	testq	%rax, %rax
	je	.L1642
	cmpb	$32, 16(%rax)
	je	.L1640
.L1642:
	cmpq	$0, current_class_type(%rip)
	je	.L1637
	movq	56(%r15), %rax
	testq	%rax, %rax
	je	.L1637
	cmpb	$32, 16(%rax)
	je	.L1640
.L1637:
	movq	40(%r15), %rax
	testq	%rax, %rax
	je	.L1641
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L1640
	cmpb	$-127, %dl
	je	.L12377
.L1641:
	movq	current_class_name(%rip), %r15
	testq	%r15, %r15
	je	.L1636
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L12378
.L1648:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L1652
	cmpq	class_binding_level(%rip), %rax
	je	.L1653
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L1657
	cmpb	$32, 16(%rax)
	je	.L1655
.L1657:
	cmpq	$0, current_class_type(%rip)
	je	.L1652
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L1652
	cmpb	$32, 16(%rax)
	je	.L1655
.L1652:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L1636
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L1655
	cmpb	$-127, %dl
	jne	.L1636
	movq	$0, 8(%rbx)
	jmp	.L1636
.L1655:
	movq	8(%rax), %r15
	movq	%r15, 8(%rbx)
	jmp	.L1636
.L1653:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L1657
.L12378:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %rbx
	sete	%cl
	movq	8(%r13), %r12
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r15)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r15), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r15), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r12, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L1648
.L12377:
	movq	$0, 8(%r15)
	jmp	.L1641
.L1640:
	movq	8(%rax), %rsi
	movq	%rsi, 8(%r15)
	jmp	.L1641
.L1638:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L1642
.L12374:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10377
.L12373:
	movq	8(%rcx), %r11
	testb	$64, 46(%r11)
	jne	.L1633
	jmp	.L1634
.L10970:
	movq	32(%r15), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L1617
.L1625:
	testq	%r12, %r12
	je	.L1627
	movl	$.LC42, %edi
	jmp	.L1624
.L1627:
	testq	%r8, %r8
	movl	$.LC43, %edx
	cmovne	%rdx, %rdi
	jmp	.L1624
.L12372:
	movl	$.LC40, %edi
	jmp	.L1624
.L12371:
	cmpb	$34, 16(%r13)
	je	.L1618
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r8
	movq	56(%r8), %rax
	je	.L1619
	movq	56(%rax), %rax
.L1619:
	movzbl	66(%rax), %ebx
	andl	$15, %ebx
	decl	%ebx
	jne	.L1617
	movl	$.LC40, %edi
	jmp	.L10970
	.p2align 6,,7
.L12370:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L12379
.L1607:
	testq	%r12, %r12
	jne	.L1615
	testq	%r8, %r8
	jne	.L1615
	testb	$1, 53(%r13)
	je	.L1615
	testb	$8, 18(%r13)
	je	.L1615
	orb	$8, 18(%r15)
	jmp	.L1615
	.p2align 6,,7
.L12379:
	testq	%r8, %r8
	je	.L1607
	cmpb	$29, 16(%r13)
	jne	.L1607
	cmpb	$29, 16(%r8)
	jne	.L1607
	movq	8(%r8), %rsi
	movq	8(%r13), %rdi
	xorl	%eax, %eax
	movl	$1, %edx
	movq	%r8, -2808(%rbp)
	call	comptypes
	movq	-2808(%rbp), %r8
	testl	%eax, %eax
	je	.L12380
	movzbl	53(%r8), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L1610
	movzbl	53(%r13), %r11d
	leal	0(,%rax,8), %r9d
	leaq	88(%r13), %rdx
	andb	$-9, %r11b
	orb	%r9b, %r11b
	movb	%r11b, 53(%r13)
	cmpq	%r8, current_function_decl(%rip)
	je	.L1611
	movq	88(%r8), %rax
.L1612:
	movq	%rax, (%rdx)
	movq	136(%r8), %r11
	movq	80(%r8), %rdi
	movq	72(%r8), %rdx
	movzbl	17(%r13), %esi
	movq	%r11, 136(%r13)
	movq	%rdi, 80(%r13)
	movq	%rdx, 72(%r13)
	movzbl	17(%r8), %r10d
	movq	%r8, 96(%r13)
	andb	$127, %sil
	shrb	$7, %r10b
	movzbl	%r10b, %ecx
	movl	%ecx, %ebx
	salb	$7, %bl
	orb	%bl, %sil
	movb	%sil, 17(%r13)
	movzbl	53(%r8), %ecx
.L1610:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L1613
	movzbl	53(%r13), %r9d
	salb	$4, %al
	andb	$-17, %r9b
	orb	%al, %r9b
	movb	%r9b, 53(%r13)
	movl	128(%r8), %eax
	movl	%eax, 128(%r13)
.L1613:
	movq	8(%r8), %rdx
	cmpq	$0, 24(%rdx)
	je	.L1607
	cmpq	$0, 88(%r8)
	je	.L1607
	movq	8(%r13), %rsi
	cmpq	$0, 24(%rsi)
	jne	.L1607
	movq	%rdx, 8(%r13)
	jmp	.L1607
.L1611:
	xorl	%eax, %eax
	jmp	.L1612
.L12380:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	movq	-2808(%rbp), %r8
	jmp	.L1607
	.p2align 6,,7
.L12369:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1604
	jmp	.L10969
.L12368:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L12381
.L1579:
	cmpq	$0, 40(%r15)
	jne	.L1580
	testb	$8, 18(%r13)
	je	.L1580
	orb	$8, 18(%r15)
.L1580:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L12382
.L1582:
	movq	%r13, 40(%r15)
	movzbl	16(%r13), %edx
.L1581:
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L1593
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L1583
	testb	$1, 18(%rcx)
	je	.L1583
	orb	$1, 18(%r13)
	movq	72(%r15), %rax
.L1583:
	testq	%rax, %rax
	je	.L1593
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L1588
	testb	$8, 17(%rcx)
	je	.L1588
	orb	$8, 17(%r13)
	movq	72(%r15), %rax
.L1588:
	testq	%rax, %rax
	je	.L1593
	cmpq	$0, 8(%rax)
	je	.L1593
	cmpb	$29, %dl
	je	.L12383
.L1596:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L1593:
	testb	$8, 18(%r15)
	je	.L1602
	cmpb	$32, %dl
	je	.L1602
	testb	$8, 18(%r13)
	jne	.L1602
	testb	$1, 53(%r13)
	jne	.L1602
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L1598
	cmpq	$0, 8(%rax)
	jne	.L12384
.L1598:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11227:
	xorl	%eax, %eax
	call	warning
	jmp	.L10376
.L12384:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11227
.L12383:
	movq	8(%r13), %rdi
	movq	integer_type_node(%rip), %r10
	cmpq	%r10, 8(%rdi)
	jne	.L1596
	jmp	.L1593
	.p2align 6,,7
.L12382:
	cmpq	$0, -1864(%rbp)
	je	.L1582
	movq	-1864(%rbp), %rcx
	cmpb	$32, 16(%rcx)
	jne	.L1581
	jmp	.L1582
.L12381:
	testb	$8, 54(%r13)
	jne	.L1579
	andb	$-9, 18(%r13)
	jmp	.L1579
	.p2align 6,,7
.L10375:
	movq	global_binding_level(%rip), %rax
	jmp	.L1559
.L12367:
	testl	%esi, %esi
	jg	.L10968
	testl	%ebx, %ebx
	je	.L1565
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L10968
	.p2align 6,,7
.L1573:
	movq	8(%rcx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rcx
	jmp	.L1565
.L12366:
	xorl	%ecx, %ecx
	movq	%r15, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L1565
	testq	%rax, %rax
	je	.L10046
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L1563
	.p2align 6,,7
.L12365:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L1556
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r15), %rdi
	call	warning_with_decl
	jmp	.L1556
	.p2align 6,,7
.L10901:
	movq	8(%r13), %rdx
	movq	80(%rdx), %rax
	testq	%rax, %rax
	movq	%rax, -1848(%rbp)
	je	.L1420
	movzbl	16(%rax), %eax
	cmpb	$32, %al
	je	.L1419
.L1420:
	movq	global_binding_level(%rip), %rdi
	movq	%r13, -1848(%rbp)
	cmpq	%rdi, current_binding_level(%rip)
	jne	.L10368
	movq	%r13, 80(%rdx)
.L10368:
	movzbl	16(%r13), %eax
.L1423:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%bl
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	movq	-1848(%rbp), %rax
	movq	56(%rax), %rbx
	testq	%rbx, %rbx
	je	.L1547
	cmpq	$0, 72(%rax)
	je	.L12385
.L1547:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L1418
	cmpq	$0, 56(%rax)
	je	.L1418
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %rdi
	cmpq	global_binding_level(%rip), %rbx
	movq	%rdi, -440(%rbp)
	je	.L1552
	movq	-440(%rbp), %rdx
	movq	8(%rdx), %rsi
	movq	%rdx, %rdi
.L10967:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1553:
	movq	-440(%rbp), %r8
	movq	%r12, 8(%r8)
	jmp	.L1418
.L1552:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1553
	movq	-440(%rbp), %r11
	movq	8(%r11), %rsi
	movq	%r11, %rdi
	jmp	.L10967
.L12385:
	movq	8(%r13), %r9
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	movq	%r9, -432(%rbp)
	cmpb	$32, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L1548
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	-432(%rbp), %rsi
	movq	%rsi, 8(%rax)
	jmp	.L1547
.L1548:
	movq	%rbx, 72(%r13)
	jmp	.L1547
.L1419:
	movq	-1848(%rbp), %r9
	movq	current_binding_level(%rip), %rsi
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%r9), %r8
	movq	%r8, -392(%rbp)
	jne	.L1423
	movq	-392(%rbp), %r10
	movq	32(%r10), %rcx
	cmpb	$36, (%rcx)
	jne	.L1423
	cmpb	$95, 1(%rcx)
	jne	.L1423
	movq	class_binding_level(%rip), %rax
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rbx
	testq	%rax, %rax
	movq	%rax, -1832(%rbp)
	movq	%rbx, -400(%rbp)
	jne	.L1427
	testb	$-128, 66(%rsi)
	movq	%rsi, -1832(%rbp)
	je	.L1427
.L1431:
	movq	-1832(%rbp), %rdx
	movq	56(%rdx), %rsi
	testb	$-128, 66(%rsi)
	movq	%rsi, -1832(%rbp)
	jne	.L1431
.L1427:
	movq	-1832(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12386
	movq	-1832(%rbp), %rcx
	movq	-392(%rbp), %rdi
	xorl	%eax, %eax
	movq	-400(%rbp), %rsi
	movq	8(%rcx), %rdx
	call	saveable_tree_cons
	movq	-1832(%rbp), %r12
	movq	%rax, 8(%r12)
.L1433:
	cmpq	$0, -392(%rbp)
	je	.L1434
	movq	-400(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L1435
	movq	-392(%rbp), %r11
	movq	%r11, 80(%rcx)
.L1435:
	movq	-392(%rbp), %rdi
	movq	-400(%rbp), %rax
	cmpq	%rax, 8(%rdi)
	je	.L1436
	cmpb	$21, 16(%rax)
	je	.L12387
.L1437:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L1439
	cmpq	$0, 32(%rax)
	je	.L1438
.L1439:
	movq	lang_name_cplusplus(%rip), %r10
	cmpq	%r10, current_lang_name(%rip)
	je	.L12388
.L1440:
	xorl	%ecx, %ecx
.L1475:
	testq	%rcx, %rcx
	jne	.L1476
.L10225:
	movq	-392(%rbp), %rsi
	movq	-400(%rbp), %rdx
	movl	$32, %edi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-400(%rbp), %rdi
	movq	%rax, -1840(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-1840(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L1477
	movq	-392(%rbp), %r10
	movq	8(%r10), %rsi
	movq	%r10, %rdi
.L10964:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1478:
	movq	-400(%rbp), %rsi
	movq	-392(%rbp), %rdx
	movq	%rsi, 8(%rdx)
.L1481:
	movq	-392(%rbp), %rcx
	movq	32(%rcx), %rax
	cmpb	$36, (%rax)
	je	.L12389
.L1483:
	movq	-400(%rbp), %r11
	movq	80(%r11), %rdx
	testq	%rdx, %rdx
	je	.L1514
	cmpb	$32, 16(%rdx)
	je	.L12390
.L1484:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1503
	movq	-1840(%rbp), %rax
	movq	56(%rax), %r12
	testq	%r12, %r12
	je	.L10370
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L1505
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L1505:
	movq	decl_obstack+24(%rip), %rdx
	movq	-1840(%rbp), %rdi
	leaq	8(%rdx), %rcx
	movq	%rdi, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rcx
	ja	.L12391
.L1507:
	movq	-1840(%rbp), %rbx
	movq	%rdx, %r9
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%r9)
	cmpb	$32, 16(%rbx)
	je	.L12392
.L10371:
	movq	-392(%rbp), %rsi
	movq	32(%rsi), %rax
.L1514:
	cmpb	$36, (%rax)
	je	.L12393
.L1528:
	movq	current_class_type(%rip), %rdx
	movq	-1840(%rbp), %r12
	movq	-400(%rbp), %r8
	testq	%rdx, %rdx
	movq	%r12, 80(%r8)
	jne	.L1531
	cmpq	$0, current_function_decl(%rip)
	je	.L1530
.L1531:
	movq	lang_name_cplusplus(%rip), %rax
	cmpq	%rax, current_lang_name(%rip)
	je	.L1529
.L1530:
	movq	-392(%rbp), %rdi
	movq	-1840(%rbp), %rcx
	movq	%rdi, 72(%rcx)
.L1436:
	movq	-1832(%rbp), %rax
	movzbl	66(%rax), %r12d
	andl	$15, %r12d
	cmpl	$2, %r12d
	je	.L12394
.L1434:
	movq	-400(%rbp), %rdx
	movq	80(%rdx), %rax
	cmpb	$32, 16(%rax)
	je	.L12395
	movq	-400(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-400(%rbp), %r12
	movq	%rax, (%r12)
	movq	-1848(%rbp), %r8
	movzbl	16(%r8), %eax
	jmp	.L1423
.L12395:
	movq	%rax, (%rdx)
	movq	-1848(%rbp), %r11
	movzbl	16(%r11), %eax
	jmp	.L1423
.L12394:
	movq	-400(%rbp), %rdi
	orb	$64, 18(%rdi)
	movq	80(%rdi), %rsi
	movq	-392(%rbp), %r9
	movq	current_class_type(%rip), %rax
	movq	%rsi, 56(%r9)
	cmpq	$0, 32(%rax)
	jne	.L1434
	movq	-1832(%rbp), %rdx
	movq	144(%rax), %rcx
	movq	8(%rdx), %r10
	movq	%r10, 72(%rcx)
	jmp	.L1434
.L1529:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L12396
	cmpq	$0, 32(%rdx)
	jne	.L1436
	movq	-1840(%rbp), %r11
	movq	80(%rdx), %r8
	movl	$136, %esi
	cmpb	$32, 16(%r11)
	movq	72(%r8), %rbx
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L1539
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movq	-392(%rbp), %rdi
	cmpb	$1, 16(%rdi)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-392(%rbp), %r9
	movl	24(%r9), %eax
	movq	32(%r9), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1840(%rbp), %r12
	movq	%rax, 72(%r12)
	movq	-400(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L1541:
	movq	-1840(%rbp), %rbx
	movq	current_class_type(%rip), %r8
	movq	152(%rbx), %r11
	movq	%r8, 64(%rbx)
	movq	%r8, 16(%r11)
	jmp	.L1436
.L1539:
	movq	-392(%rbp), %rdx
	movq	-1840(%rbp), %r10
	movq	%rdx, 72(%r10)
	jmp	.L1541
.L12396:
	movq	-1840(%rbp), %r10
	movq	112(%rax), %rbx
	movl	$136, %esi
	cmpb	$32, 16(%r10)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L1534
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	-392(%rbp), %r12
	cmpb	$1, 16(%r12)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-392(%rbp), %r8
	movl	24(%r8), %eax
	movq	32(%r8), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1840(%rbp), %rdx
	movq	%rax, 72(%rdx)
	movq	-400(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L1536:
	movq	current_function_decl(%rip), %r10
	movq	-1840(%rbp), %r9
	movq	%r10, 64(%r9)
	jmp	.L1436
.L1534:
	movq	-392(%rbp), %rcx
	movq	-1840(%rbp), %rdi
	movq	%rcx, 72(%rdi)
	jmp	.L1536
.L12393:
	cmpb	$95, 1(%rax)
	jne	.L1528
	movq	-1840(%rbp), %r11
	orb	$64, 53(%r11)
	jmp	.L1528
.L12392:
	cmpq	$0, 72(%rbx)
	je	.L12397
.L10372:
	movq	-392(%rbp), %rdx
	movq	32(%rdx), %rax
	jmp	.L1514
.L12397:
	movq	-1840(%rbp), %rdx
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%rdx), %r10
	movq	%r10, -408(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L1509
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1840(%rbp), %rsi
	movq	%rax, 72(%rsi)
	movq	-408(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L10369:
	movq	-392(%rbp), %r10
	movq	32(%r10), %rax
	jmp	.L1514
.L1509:
	movq	-1840(%rbp), %rax
	movq	%r12, 72(%rax)
	jmp	.L10371
.L12391:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L1507
.L10370:
	movq	-392(%rbp), %rbx
	movq	32(%rbx), %rax
	jmp	.L1514
.L1503:
	movq	-1840(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -1840(%rbp)
	jmp	.L10372
.L12390:
	movq	global_binding_level(%rip), %r8
	movl	$1, %r12d
	cmpq	%r8, current_binding_level(%rip)
	je	.L1485
	movq	-392(%rbp), %r9
	movq	48(%r9), %rdi
	testq	%rdi, %rdi
	movq	%rdi, %rcx
	jne	.L1486
.L1485:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L1487
	movq	-392(%rbp), %rbx
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10043
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L1488
	movq	144(%rdi), %r10
	testb	$1, 3(%r10)
	jne	.L12398
.L1488:
	testq	%rcx, %rcx
	jne	.L10043
.L10044:
	movq	-392(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10043
	movq	-392(%rbp), %rsi
	movq	40(%rsi), %rcx
.L1486:
	testq	%rcx, %rcx
	je	.L1490
.L10043:
	cmpb	$32, 16(%rcx)
	je	.L1490
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L1490
	movq	-392(%rbp), %r11
	movq	8(%r11), %rax
	testq	%rax, %rax
	je	.L1498
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L10965
	testl	%r12d, %r12d
	jle	.L12399
.L10965:
	movq	%rax, %rcx
.L1490:
	movq	-400(%rbp), %r8
	cmpq	80(%r8), %rcx
	jne	.L1484
	jmp	.L10369
.L12399:
	testl	%edx, %edx
	jg	.L10965
	testl	%r12d, %r12d
	je	.L1490
	movq	-392(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L10965
.L1498:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L1490
.L12398:
	xorl	%ecx, %ecx
	movq	-392(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L1490
	testq	%rax, %rax
	je	.L10044
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L1488
.L1487:
	movq	-392(%rbp), %rdx
	movq	40(%rdx), %rcx
	jmp	.L1486
.L12389:
	cmpb	$95, 1(%rax)
	jne	.L1483
	jmp	.L1514
.L1477:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1478
	movq	-392(%rbp), %r12
	movq	8(%r12), %rsi
	movq	%r12, %rdi
	jmp	.L10964
.L1476:
	movq	80(%rcx), %rax
	movq	%rax, -1840(%rbp)
	jmp	.L1481
.L12388:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L1442
	movq	80(%rax), %rbx
.L1442:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L1475
.L1474:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L1451
	cmpl	$32, %eax
	je	.L12400
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L1445:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L1475
	jmp	.L1474
.L12400:
	movq	8(%rbx), %rsi
	movq	-400(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%rsi), %rdx
	movq	72(%rdx), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10875
	movq	64(%rbx), %rbx
	jmp	.L1445
.L10875:
	movq	32(%rax), %rcx
	jmp	.L1475
.L1451:
	movq	-400(%rbp), %rax
	movq	80(%rax), %r12
	movq	56(%r12), %rbx
	testq	%rbx, %rbx
	je	.L1440
	movq	global_binding_level(%rip), %rcx
	cmpq	%rcx, current_binding_level(%rip)
	je	.L1454
	movq	48(%rbx), %r11
	testq	%r11, %r11
	movq	%r11, %rcx
	jne	.L1455
.L1454:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L1456
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10041
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L1457
	movq	144(%rdi), %r8
	testb	$1, 3(%r8)
	jne	.L12401
.L1457:
	testq	%rcx, %rcx
	jne	.L10041
.L10042:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10041
.L1456:
	movq	40(%rbx), %rcx
.L1455:
	testq	%rcx, %rcx
	je	.L10225
.L10041:
	cmpb	$32, 16(%rcx)
	je	.L1475
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L1475
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L1467
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L10963
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L12402
.L10963:
	movq	%rax, %rcx
	jmp	.L1475
.L12402:
	testl	%edx, %edx
	jg	.L10963
	movl	$1, %r9d
	testl	%r9d, %r9d
	je	.L1475
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L10963
.L1467:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L1475
	jmp	.L10963
.L12401:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L1475
	testq	%rax, %rax
	je	.L10042
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L1457
.L1438:
	movq	-392(%rbp), %rsi
	movq	-400(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -416(%rbp)
	je	.L1515
	movq	-392(%rbp), %r12
	movq	8(%r12), %rsi
	movq	%r12, %rdi
.L10966:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1516:
	movq	-400(%rbp), %r10
	movq	-392(%rbp), %r9
	movq	%r10, 8(%r9)
	movq	-416(%rbp), %rdi
	movq	56(%rdi), %r12
	testq	%r12, %r12
	je	.L1519
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L1520
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L1520:
	movq	-416(%rbp), %rdx
	movq	%rdx, 56(%r12)
	movq	decl_obstack+24(%rip), %rdx
	leaq	8(%rdx), %rbx
	cmpq	decl_obstack+32(%rip), %rbx
	ja	.L12403
.L1522:
	movq	%rdx, %rsi
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	-416(%rbp), %rdx
	movq	%rdx, (%rsi)
	cmpb	$32, 16(%rdx)
	je	.L12404
.L1519:
	movq	-416(%rbp), %r9
	movq	%r9, -1840(%rbp)
	jmp	.L10372
.L12404:
	cmpq	$0, 72(%rdx)
	jne	.L1519
	movq	current_class_name(%rip), %rbx
	movq	8(%rdx), %r11
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%r11, -424(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L1524
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-416(%rbp), %r12
	movq	%rax, 72(%r12)
	movq	-424(%rbp), %r8
	movq	%r8, 8(%rax)
	jmp	.L1519
.L1524:
	movq	-416(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L1519
.L12403:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L1522
.L1515:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1516
	movq	-392(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
	jmp	.L10966
.L12387:
	cmpq	$0, class_binding_level(%rip)
	je	.L1437
	movq	144(%rax), %r8
	testb	$16, 3(%r8)
	jne	.L1436
	jmp	.L1437
.L12386:
	movq	-392(%rbp), %rdi
	movq	-400(%rbp), %rsi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%rbx)
	jmp	.L1433
	.p2align 6,,7
.L1404:
	movq	-1864(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10363
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	jne	.L10367
	testb	$8, 18(%r15)
	je	.L10367
	testb	$8, 18(%r13)
	jne	.L10367
	testb	$9, 53(%r13)
	jne	.L10367
	cmpq	%r13, current_function_decl(%rip)
	je	.L12405
.L1413:
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L1414
	cmpq	$0, 8(%rax)
	jne	.L12406
.L1414:
	movq	-1864(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L10962:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-1864(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L10367
.L12406:
	movq	-1864(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L10962
.L12405:
	movq	-1864(%rbp), %r13
	movq	%r13, current_function_decl(%rip)
	jmp	.L1413
	.p2align 6,,7
.L12364:
	cmpq	$0, 64(%rdx)
	jne	.L1402
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L1402
.L12363:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -1864(%rbp)
	call	error_with_decl
	jmp	.L1400
.L1393:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L1395
.L1399:
	cmpq	%r15, 56(%rax)
	je	.L1395
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L1399
.L1395:
	movq	%rax, -1864(%rbp)
	jmp	.L1392
.L12362:
	movq	40(%r15), %r12
	movq	%r12, -1864(%rbp)
	jmp	.L1392
.L12361:
	movq	56(%r13), %r15
	jmp	.L1389
.L12360:
	testb	$32, 53(%r13)
	jne	.L1387
	jmp	.L1388
.L10359:
	movzbl	16(%r13), %edx
	jmp	.L1387
.L11260:
	leal	(%rcx,%rcx), %ebx
	movq	builtin_type_tdescs_arr(%rip), %rdi
	xorl	%eax, %eax
	movslq	%ebx,%rsi
	movl	%ebx, builtin_type_tdescs_max(%rip)
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L1380
.L1370:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1371
	movq	-1768(%rbp), %r11
	movq	8(%r11), %rsi
	movq	%r11, %rdi
	jmp	.L10960
.L1369:
	movq	-1768(%rbp), %rsi
	movl	$32, %edi
	movq	%r14, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L1375
	movq	-1768(%rbp), %r8
	movq	8(%r8), %rsi
	movq	%r8, %rdi
.L10961:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1376:
	movq	-1768(%rbp), %r9
	movq	$0, 8(%r9)
	jmp	.L1368
.L1375:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1376
	movq	-1768(%rbp), %rax
	movq	8(%rax), %rsi
	movq	%rax, %rdi
	jmp	.L10961
	.p2align 6,,7
.L11259:
	movq	-1776(%rbp), %rsi
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r14, %rdx
	call	build_decl
	movq	current_binding_level(%rip), %r10
	movq	%rax, %r13
	movq	112(%rax), %r15
	movq	current_function_decl(%rip), %rax
	movq	%r10, -1808(%rbp)
	cmpq	%rax, %r13
	je	.L10340
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L12407
.L1088:
	movq	%rax, 64(%r13)
.L1087:
	cmpb	$32, %dl
	je	.L12408
.L1089:
	testq	%r15, %r15
	je	.L1090
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L12409
	cmpq	$0, 48(%r15)
	jne	.L1093
	movq	$0, -1816(%rbp)
.L1092:
	cmpq	$0, -1816(%rbp)
	je	.L1110
	movq	-1816(%rbp), %r12
	cmpq	error_mark_node(%rip), %r12
	je	.L12410
.L1100:
	cmpq	$0, -1816(%rbp)
	je	.L10344
	movq	-1816(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L12411
.L1102:
	movq	-1816(%rbp), %rcx
	testq	%rcx, %rcx
	movq	24(%rcx), %r12
	movq	%rcx, %rsi
	movl	32(%rcx), %ebx
	je	.L10344
	movzbl	16(%rcx), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L1104
	cmpb	$32, %al
	je	.L1110
	cmpb	$32, %dl
	je	.L10900
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10344
.L10348:
	movq	global_binding_level(%rip), %rax
.L1109:
	movq	current_binding_level(%rip), %rbx
	cmpq	%rax, %rbx
	je	.L1363
	movq	-1776(%rbp), %r13
	movq	8(%r13), %rsi
	movq	%r13, %rdi
.L10959:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1364:
	movq	-1776(%rbp), %rdx
	movl	$12, %eax
	cmpl	$31, %eax
	movq	$0, 8(%rdx)
	jg	.L1086
	movq	-1816(%rbp), %r12
	movq	%r12, 40(%rdx)
	jmp	.L1086
.L1363:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1364
	movq	-1776(%rbp), %rdx
	movq	8(%rdx), %rsi
	movq	%rdx, %rdi
	jmp	.L10959
.L10344:
	movzbl	16(%r13), %edx
.L1110:
	cmpb	$32, %dl
	je	.L10900
.L1118:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L1256
	movq	40(%r15), %rax
	testq	%rax, %rax
	je	.L1256
	testb	$1, 53(%rax)
	jne	.L1257
	testb	$8, 18(%rax)
	je	.L1256
.L1257:
	andb	$8, %dl
	je	.L12412
.L1256:
	movl	flag_traditional(%rip), %r12d
	testl	%r12d, %r12d
	je	.L10356
	testb	$1, 53(%r13)
	je	.L10356
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L1260
	movq	48(%r15), %r11
	testq	%r11, %r11
	movq	%r11, %rcx
	jne	.L1261
.L1260:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L1262
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L10039
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L1263
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L12413
.L1263:
	testq	%rcx, %rcx
	jne	.L10039
.L10040:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10039
.L1262:
	movq	40(%r15), %rcx
.L1261:
	testq	%rcx, %rcx
	je	.L10224
.L10039:
	cmpb	$32, 16(%rcx)
	je	.L1265
	movl	looking_for_typename(%rip), %esi
	testl	%esi, %esi
	js	.L1265
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L1273
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L10956
	testl	%ebx, %ebx
	jle	.L12414
.L10956:
	movq	%rax, %rcx
.L1265:
	testq	%rcx, %rcx
	jne	.L10356
.L10224:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -1808(%rbp)
.L1259:
	cmpq	%rax, -1808(%rbp)
	je	.L12415
	movq	current_binding_level(%rip), %rbx
	movq	48(%r15), %r12
	movq	40(%r15), %r8
	cmpq	%rax, %rbx
	je	.L12416
.L10957:
	movq	16(%rbx), %rdx
	movq	%r15, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	movq	%r8, -2808(%rbp)
	call	tree_cons
	movq	-2808(%rbp), %r8
	movq	%rax, 16(%rbx)
.L1304:
	testq	%r12, %r12
	movq	%r13, 48(%r15)
	je	.L12417
.L1315:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L1317
	testq	%r12, %r12
	je	.L1318
	testb	$1, 53(%r13)
	jne	.L1318
	cmpb	$34, 16(%r12)
	je	.L12418
.L1318:
	movl	warn_shadow(%rip), %ebx
	testl	%ebx, %ebx
	je	.L1317
	testb	$1, 53(%r13)
	jne	.L1317
	movl	32(%r13), %r10d
	testl	%r10d, %r10d
	je	.L1317
	testq	%rax, %rax
	jne	.L1317
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L1323
	cmpb	$34, 16(%r12)
	je	.L12419
.L1323:
	cmpq	$0, 56(%r15)
	je	.L1325
	movl	$.LC41, %edi
.L1324:
	testq	%rdi, %rdi
	jne	.L10958
.L1317:
	testq	%r12, %r12
	je	.L10357
	movq	%r12, %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	-1808(%rbp), %r12
	movq	16(%r12), %rdx
	call	tree_cons
	movq	%rax, 16(%r12)
.L10357:
	movzbl	16(%r13), %edx
.L1302:
	leal	-128(%rdx), %edi
	cmpb	$1, %dil
	jbe	.L1090
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L1090
	cmpb	$18, 16(%rcx)
	je	.L12420
.L1334:
	testb	$64, 46(%rcx)
	je	.L1090
.L1333:
	movq	-1808(%rbp), %rcx
	movzwl	64(%rcx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rcx)
	je	.L12421
.L10358:
	movzbl	16(%r13), %edx
.L1090:
	cmpb	$32, %dl
	je	.L12422
.L1336:
	movq	-1808(%rbp), %rbx
	movq	global_binding_level(%rip), %rax
	movq	(%rbx), %r10
	cmpq	%rax, %rbx
	movq	%r10, (%r13)
	movq	%r13, (%rbx)
	je	.L12423
.L1362:
	movq	%r13, -1816(%rbp)
	jmp	.L1109
.L12423:
	testb	$4, 17(%r13)
	jne	.L1362
	xorl	%eax, %eax
	movl	$124, %edi
	call	my_friendly_abort
	movq	global_binding_level(%rip), %rax
	jmp	.L1362
.L12422:
	testq	%r15, %r15
	je	.L1336
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L1337
	cmpq	class_binding_level(%rip), %rax
	je	.L1338
	movq	48(%r15), %rax
	testq	%rax, %rax
	je	.L1342
	cmpb	$32, 16(%rax)
	je	.L1340
.L1342:
	cmpq	$0, current_class_type(%rip)
	je	.L1337
	movq	56(%r15), %rax
	testq	%rax, %rax
	je	.L1337
	cmpb	$32, 16(%rax)
	je	.L1340
.L1337:
	movq	40(%r15), %rax
	testq	%rax, %rax
	je	.L1341
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L1340
	cmpb	$-127, %dl
	je	.L12424
.L1341:
	movq	current_class_name(%rip), %r15
	testq	%r15, %r15
	je	.L1336
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L12425
.L1348:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L1352
	cmpq	class_binding_level(%rip), %rax
	je	.L1353
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L1357
	cmpb	$32, 16(%rax)
	je	.L1355
.L1357:
	cmpq	$0, current_class_type(%rip)
	je	.L1352
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L1352
	cmpb	$32, 16(%rax)
	je	.L1355
.L1352:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L1336
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L1355
	cmpb	$-127, %dl
	jne	.L1336
	movq	$0, 8(%rbx)
	jmp	.L1336
.L1355:
	movq	8(%rax), %r15
	movq	%r15, 8(%rbx)
	jmp	.L1336
.L1353:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L1357
.L12425:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %rbx
	sete	%r9b
	movq	8(%r13), %r12
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r15)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r15), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r15), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r12, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L1348
.L12424:
	movq	$0, 8(%r15)
	jmp	.L1341
.L1340:
	movq	8(%rax), %r11
	movq	%r11, 8(%r15)
	jmp	.L1341
.L1338:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L1342
.L12421:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10358
.L12420:
	movq	8(%rcx), %rsi
	testb	$64, 46(%rsi)
	jne	.L1333
	jmp	.L1334
.L10958:
	movq	32(%r15), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L1317
.L1325:
	testq	%r12, %r12
	je	.L1327
	movl	$.LC42, %edi
	jmp	.L1324
.L1327:
	testq	%r8, %r8
	movl	$.LC43, %edx
	cmovne	%rdx, %rdi
	jmp	.L1324
.L12419:
	movl	$.LC40, %edi
	jmp	.L1324
.L12418:
	cmpb	$34, 16(%r13)
	je	.L1318
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r8
	movq	56(%r8), %rax
	je	.L1319
	movq	56(%rax), %rax
.L1319:
	movzbl	66(%rax), %r9d
	andl	$15, %r9d
	decl	%r9d
	jne	.L1317
	movl	$.LC40, %edi
	jmp	.L10958
	.p2align 6,,7
.L12417:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L12426
.L1307:
	testq	%r12, %r12
	jne	.L1315
	testq	%r8, %r8
	jne	.L1315
	testb	$1, 53(%r13)
	je	.L1315
	testb	$8, 18(%r13)
	je	.L1315
	orb	$8, 18(%r15)
	jmp	.L1315
	.p2align 6,,7
.L12426:
	testq	%r8, %r8
	je	.L1307
	cmpb	$29, 16(%r13)
	jne	.L1307
	cmpb	$29, 16(%r8)
	jne	.L1307
	movq	8(%r8), %rsi
	movq	8(%r13), %rdi
	xorl	%eax, %eax
	movl	$1, %edx
	movq	%r8, -2808(%rbp)
	call	comptypes
	movq	-2808(%rbp), %r8
	testl	%eax, %eax
	je	.L12427
	movzbl	53(%r8), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L1310
	movzbl	53(%r13), %ecx
	leal	0(,%rax,8), %esi
	leaq	88(%r13), %rdx
	andb	$-9, %cl
	orb	%sil, %cl
	movb	%cl, 53(%r13)
	cmpq	%r8, current_function_decl(%rip)
	je	.L1311
	movq	88(%r8), %rax
.L1312:
	movq	%rax, (%rdx)
	movq	136(%r8), %rcx
	movq	80(%r8), %rdi
	movq	72(%r8), %rdx
	movzbl	17(%r13), %r11d
	movq	%rcx, 136(%r13)
	movq	%rdi, 80(%r13)
	movq	%rdx, 72(%r13)
	movzbl	17(%r8), %r10d
	movq	%r8, 96(%r13)
	andb	$127, %r11b
	shrb	$7, %r10b
	movzbl	%r10b, %ebx
	movl	%ebx, %r9d
	salb	$7, %r9b
	orb	%r9b, %r11b
	movb	%r11b, 17(%r13)
	movzbl	53(%r8), %ecx
.L1310:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L1313
	movzbl	53(%r13), %esi
	salb	$4, %al
	andb	$-17, %sil
	orb	%al, %sil
	movb	%sil, 53(%r13)
	movl	128(%r8), %eax
	movl	%eax, 128(%r13)
.L1313:
	movq	8(%r8), %rdx
	cmpq	$0, 24(%rdx)
	je	.L1307
	cmpq	$0, 88(%r8)
	je	.L1307
	movq	8(%r13), %r11
	cmpq	$0, 24(%r11)
	jne	.L1307
	movq	%rdx, 8(%r13)
	jmp	.L1307
.L1311:
	xorl	%eax, %eax
	jmp	.L1312
.L12427:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	movq	-2808(%rbp), %r8
	jmp	.L1307
	.p2align 6,,7
.L12416:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1304
	jmp	.L10957
.L12415:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L12428
.L1279:
	cmpq	$0, 40(%r15)
	jne	.L1280
	testb	$8, 18(%r13)
	je	.L1280
	orb	$8, 18(%r15)
.L1280:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L12429
.L1282:
	movq	%r13, 40(%r15)
	movzbl	16(%r13), %edx
.L1281:
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L1293
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L1283
	testb	$1, 18(%rcx)
	je	.L1283
	orb	$1, 18(%r13)
	movq	72(%r15), %rax
.L1283:
	testq	%rax, %rax
	je	.L1293
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L1288
	testb	$8, 17(%rcx)
	je	.L1288
	orb	$8, 17(%r13)
	movq	72(%r15), %rax
.L1288:
	testq	%rax, %rax
	je	.L1293
	cmpq	$0, 8(%rax)
	je	.L1293
	cmpb	$29, %dl
	je	.L12430
.L1296:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L1293:
	testb	$8, 18(%r15)
	je	.L1302
	cmpb	$32, %dl
	je	.L1302
	testb	$8, 18(%r13)
	jne	.L1302
	testb	$1, 53(%r13)
	jne	.L1302
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L1298
	cmpq	$0, 8(%rax)
	jne	.L12431
.L1298:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11226:
	xorl	%eax, %eax
	call	warning
	jmp	.L10357
.L12431:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11226
.L12430:
	movq	8(%r13), %r8
	movq	integer_type_node(%rip), %rdi
	cmpq	%rdi, 8(%r8)
	jne	.L1296
	jmp	.L1293
	.p2align 6,,7
.L12429:
	cmpq	$0, -1816(%rbp)
	je	.L1282
	movq	-1816(%rbp), %r10
	cmpb	$32, 16(%r10)
	jne	.L1281
	jmp	.L1282
.L12428:
	testb	$8, 54(%r13)
	jne	.L1279
	andb	$-9, 18(%r13)
	jmp	.L1279
	.p2align 6,,7
.L10356:
	movq	global_binding_level(%rip), %rax
	jmp	.L1259
.L12414:
	testl	%esi, %esi
	jg	.L10956
	testl	%ebx, %ebx
	je	.L1265
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L10956
	.p2align 6,,7
.L1273:
	movq	8(%rcx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rcx
	jmp	.L1265
.L12413:
	xorl	%ecx, %ecx
	movq	%r15, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L1265
	testq	%rax, %rax
	je	.L10040
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L1263
	.p2align 6,,7
.L12412:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L1256
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r15), %rdi
	call	warning_with_decl
	jmp	.L1256
	.p2align 6,,7
.L10900:
	movq	8(%r13), %rdx
	movq	80(%rdx), %rcx
	testq	%rcx, %rcx
	movq	%rcx, -1800(%rbp)
	je	.L1120
	movzbl	16(%rcx), %eax
	cmpb	$32, %al
	je	.L1119
.L1120:
	movq	global_binding_level(%rip), %r8
	movq	%r13, -1800(%rbp)
	cmpq	%r8, current_binding_level(%rip)
	jne	.L10349
	movq	%r13, 80(%rdx)
.L10349:
	movzbl	16(%r13), %eax
.L1123:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%bl
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	movq	-1800(%rbp), %rax
	movq	56(%rax), %rbx
	testq	%rbx, %rbx
	je	.L1247
	cmpq	$0, 72(%rax)
	je	.L12432
.L1247:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L1118
	cmpq	$0, 56(%rax)
	je	.L1118
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %rdi
	cmpq	global_binding_level(%rip), %rbx
	movq	%rdi, -384(%rbp)
	je	.L1252
	movq	-384(%rbp), %r8
	movq	8(%r8), %rsi
	movq	%r8, %rdi
.L10955:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1253:
	movq	-384(%rbp), %rsi
	movq	%r12, 8(%rsi)
	jmp	.L1118
.L1252:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1253
	movq	-384(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
	jmp	.L10955
.L12432:
	movq	8(%r13), %r11
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	movq	%r11, -376(%rbp)
	cmpb	$32, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L1248
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	-376(%rbp), %r9
	movq	%r9, 8(%rax)
	jmp	.L1247
.L1248:
	movq	%rbx, 72(%r13)
	jmp	.L1247
.L1119:
	movq	-1800(%rbp), %rbx
	movq	current_binding_level(%rip), %rsi
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%rbx), %r11
	movq	%r11, -336(%rbp)
	jne	.L1123
	movq	-336(%rbp), %r9
	movq	32(%r9), %rcx
	cmpb	$36, (%rcx)
	jne	.L1123
	cmpb	$95, 1(%rcx)
	jne	.L1123
	movq	class_binding_level(%rip), %rdi
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rdx
	testq	%rdi, %rdi
	movq	%rdi, -1784(%rbp)
	movq	%rdx, -344(%rbp)
	jne	.L1127
	testb	$-128, 66(%rsi)
	movq	%rsi, -1784(%rbp)
	je	.L1127
.L1131:
	movq	-1784(%rbp), %r12
	movq	56(%r12), %r10
	testb	$-128, 66(%r10)
	movq	%r10, -1784(%rbp)
	jne	.L1131
.L1127:
	movq	-1784(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12433
	movq	-1784(%rbp), %r8
	movq	-336(%rbp), %rdi
	xorl	%eax, %eax
	movq	-344(%rbp), %rsi
	movq	8(%r8), %rdx
	call	saveable_tree_cons
	movq	-1784(%rbp), %rcx
	movq	%rax, 8(%rcx)
.L1133:
	cmpq	$0, -336(%rbp)
	je	.L1134
	movq	-344(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L1135
	movq	-336(%rbp), %rax
	movq	%rax, 80(%rcx)
.L1135:
	movq	-336(%rbp), %r11
	movq	-344(%rbp), %rax
	cmpq	%rax, 8(%r11)
	je	.L1136
	cmpb	$21, 16(%rax)
	je	.L12434
.L1137:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L1139
	cmpq	$0, 32(%rax)
	je	.L1138
.L1139:
	movq	lang_name_cplusplus(%rip), %r9
	cmpq	%r9, current_lang_name(%rip)
	je	.L12435
.L1140:
	xorl	%ecx, %ecx
.L1175:
	testq	%rcx, %rcx
	jne	.L1176
.L10223:
	movq	-336(%rbp), %rsi
	movq	-344(%rbp), %rdx
	movl	$32, %edi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-344(%rbp), %rdi
	movq	%rax, -1792(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-1792(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L1177
	movq	-336(%rbp), %rdx
	movq	8(%rdx), %rsi
	movq	%rdx, %rdi
.L10952:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1178:
	movq	-344(%rbp), %r10
	movq	-336(%rbp), %rdi
	movq	%r10, 8(%rdi)
.L1181:
	movq	-336(%rbp), %rcx
	movq	32(%rcx), %rax
	cmpb	$36, (%rax)
	je	.L12436
.L1183:
	movq	-344(%rbp), %r8
	movq	80(%r8), %rdx
	testq	%rdx, %rdx
	je	.L1214
	cmpb	$32, 16(%rdx)
	je	.L12437
.L1184:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1203
	movq	-1792(%rbp), %rcx
	movq	56(%rcx), %r12
	testq	%r12, %r12
	je	.L10351
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L1205
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L1205:
	movq	decl_obstack+24(%rip), %rdx
	movq	-1792(%rbp), %r9
	leaq	8(%rdx), %r11
	movq	%r9, 56(%r12)
	cmpq	decl_obstack+32(%rip), %r11
	ja	.L12438
.L1207:
	movq	-1792(%rbp), %rbx
	movq	%rdx, %rsi
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%rsi)
	cmpb	$32, 16(%rbx)
	je	.L12439
.L10352:
	movq	-336(%rbp), %rdi
	movq	32(%rdi), %rax
.L1214:
	cmpb	$36, (%rax)
	je	.L12440
.L1228:
	movq	current_class_type(%rip), %rdx
	movq	-1792(%rbp), %rcx
	movq	-344(%rbp), %r8
	testq	%rdx, %rdx
	movq	%rcx, 80(%r8)
	jne	.L1231
	cmpq	$0, current_function_decl(%rip)
	je	.L1230
.L1231:
	movq	lang_name_cplusplus(%rip), %r11
	cmpq	%r11, current_lang_name(%rip)
	je	.L1229
.L1230:
	movq	-336(%rbp), %r12
	movq	-1792(%rbp), %r9
	movq	%r12, 72(%r9)
.L1136:
	movq	-1784(%rbp), %rax
	movzbl	66(%rax), %ecx
	andl	$15, %ecx
	cmpl	$2, %ecx
	je	.L12441
.L1134:
	movq	-344(%rbp), %rdx
	movq	80(%rdx), %rax
	cmpb	$32, 16(%rax)
	je	.L12442
	movq	-344(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-344(%rbp), %rcx
	movq	%rax, (%rcx)
	movq	-1800(%rbp), %r8
	movzbl	16(%r8), %eax
	jmp	.L1123
.L12442:
	movq	%rax, (%rdx)
	movq	-1800(%rbp), %rsi
	movzbl	16(%rsi), %eax
	jmp	.L1123
.L12441:
	movq	-344(%rbp), %r12
	orb	$64, 18(%r12)
	movq	80(%r12), %r9
	movq	-336(%rbp), %r11
	movq	current_class_type(%rip), %rax
	movq	%r9, 56(%r11)
	cmpq	$0, 32(%rax)
	jne	.L1134
	movq	-1784(%rbp), %rdi
	movq	144(%rax), %r10
	movq	8(%rdi), %rdx
	movq	%rdx, 72(%r10)
	jmp	.L1134
.L1229:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L12443
	cmpq	$0, 32(%rdx)
	jne	.L1136
	movq	-1792(%rbp), %rdi
	movq	80(%rdx), %r8
	movl	$136, %esi
	cmpb	$32, 16(%rdi)
	movq	72(%r8), %rbx
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L1239
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-336(%rbp), %r12
	cmpb	$1, 16(%r12)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-336(%rbp), %r11
	movl	24(%r11), %eax
	movq	32(%r11), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1792(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-344(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L1241:
	movq	-1792(%rbp), %rbx
	movq	current_class_type(%rip), %r8
	movq	152(%rbx), %rdi
	movq	%r8, 64(%rbx)
	movq	%r8, 16(%rdi)
	jmp	.L1136
.L1239:
	movq	-336(%rbp), %r10
	movq	-1792(%rbp), %rsi
	movq	%r10, 72(%rsi)
	jmp	.L1241
.L12443:
	movq	-1792(%rbp), %rdx
	movq	112(%rax), %rbx
	cmpb	$32, 16(%rdx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$136, %esi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L1234
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-336(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-336(%rbp), %r8
	movl	24(%r8), %eax
	movq	32(%r8), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1792(%rbp), %rdi
	movq	%rax, 72(%rdi)
	movq	-344(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L1236:
	movq	current_function_decl(%rip), %rsi
	movq	-1792(%rbp), %rdx
	movq	%rsi, 64(%rdx)
	jmp	.L1136
.L1234:
	movq	-336(%rbp), %r12
	movq	-1792(%rbp), %r9
	movq	%r12, 72(%r9)
	jmp	.L1236
.L12440:
	cmpb	$95, 1(%rax)
	jne	.L1228
	movq	-1792(%rbp), %rax
	orb	$64, 53(%rax)
	jmp	.L1228
.L12439:
	cmpq	$0, 72(%rbx)
	je	.L12444
.L10353:
	movq	-336(%rbp), %r10
	movq	32(%r10), %rax
	jmp	.L1214
.L12444:
	movq	-1792(%rbp), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%rax), %rdx
	xorl	%eax, %eax
	movq	%rdx, -352(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L1209
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1792(%rbp), %rdi
	movq	%rax, 72(%rdi)
	movq	-352(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L10350:
	movq	-336(%rbp), %rdx
	movq	32(%rdx), %rax
	jmp	.L1214
.L1209:
	movq	-1792(%rbp), %rcx
	movq	%r12, 72(%rcx)
	jmp	.L10352
.L12438:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L1207
.L10351:
	movq	-336(%rbp), %rbx
	movq	32(%rbx), %rax
	jmp	.L1214
.L1203:
	movq	-1792(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -1792(%rbp)
	jmp	.L10353
.L12437:
	movq	global_binding_level(%rip), %r11
	movl	$1, %r12d
	cmpq	%r11, current_binding_level(%rip)
	je	.L1185
	movq	-336(%rbp), %rbx
	movq	48(%rbx), %r9
	testq	%r9, %r9
	movq	%r9, %rcx
	jne	.L1186
.L1185:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L1187
	movq	-336(%rbp), %rsi
	movq	56(%rsi), %rcx
	testq	%rcx, %rcx
	jne	.L10037
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L1188
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L12445
.L1188:
	testq	%rcx, %rcx
	jne	.L10037
.L10038:
	movq	-336(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10037
	movq	-336(%rbp), %rax
	movq	40(%rax), %rcx
.L1186:
	testq	%rcx, %rcx
	je	.L1190
.L10037:
	cmpb	$32, 16(%rcx)
	je	.L1190
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L1190
	movq	-336(%rbp), %r10
	movq	8(%r10), %rax
	testq	%rax, %rax
	je	.L1198
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L10953
	testl	%r12d, %r12d
	jle	.L12446
.L10953:
	movq	%rax, %rcx
.L1190:
	movq	-344(%rbp), %r8
	cmpq	80(%r8), %rcx
	jne	.L1184
	jmp	.L10350
.L12446:
	testl	%edx, %edx
	jg	.L10953
	testl	%r12d, %r12d
	je	.L1190
	movq	-336(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L10953
.L1198:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L1190
.L12445:
	xorl	%ecx, %ecx
	movq	-336(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L1190
	testq	%rax, %rax
	je	.L10038
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L1188
.L1187:
	movq	-336(%rbp), %rdi
	movq	40(%rdi), %rcx
	jmp	.L1186
.L12436:
	cmpb	$95, 1(%rax)
	jne	.L1183
	jmp	.L1214
.L1177:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1178
	movq	-336(%rbp), %rax
	movq	8(%rax), %rsi
	movq	%rax, %rdi
	jmp	.L10952
.L1176:
	movq	80(%rcx), %r12
	movq	%r12, -1792(%rbp)
	jmp	.L1181
.L12435:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L1142
	movq	80(%rax), %rbx
.L1142:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L1175
.L1174:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L1151
	cmpl	$32, %eax
	je	.L12447
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L1145:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L1175
	jmp	.L1174
.L12447:
	movq	8(%rbx), %rdi
	xorl	%eax, %eax
	movq	144(%rdi), %rdx
	movq	-344(%rbp), %rdi
	movq	72(%rdx), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10874
	movq	64(%rbx), %rbx
	jmp	.L1145
.L10874:
	movq	32(%rax), %rcx
	jmp	.L1175
.L1151:
	movq	-344(%rbp), %r12
	movq	80(%r12), %r10
	movq	56(%r10), %rbx
	testq	%rbx, %rbx
	je	.L1140
	movq	global_binding_level(%rip), %rcx
	cmpq	%rcx, current_binding_level(%rip)
	je	.L1154
	movq	48(%rbx), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L1155
.L1154:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L1156
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10035
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L1157
	movq	144(%rdi), %r11
	testb	$1, 3(%r11)
	jne	.L12448
.L1157:
	testq	%rcx, %rcx
	jne	.L10035
.L10036:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10035
.L1156:
	movq	40(%rbx), %rcx
.L1155:
	testq	%rcx, %rcx
	je	.L10223
.L10035:
	cmpb	$32, 16(%rcx)
	je	.L1175
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L1175
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L1167
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L10951
	movl	$1, %r9d
	testl	%r9d, %r9d
	jle	.L12449
.L10951:
	movq	%rax, %rcx
	jmp	.L1175
.L12449:
	testl	%edx, %edx
	jg	.L10951
	movl	$1, %esi
	testl	%esi, %esi
	je	.L1175
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L10951
.L1167:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L1175
	jmp	.L10951
.L12448:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L1175
	testq	%rax, %rax
	je	.L10036
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L1157
.L1138:
	movq	-336(%rbp), %rsi
	movq	-344(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -360(%rbp)
	je	.L1215
	movq	-336(%rbp), %r12
	movq	8(%r12), %rsi
	movq	%r12, %rdi
.L10954:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1216:
	movq	-344(%rbp), %rdx
	movq	-336(%rbp), %rsi
	movq	%rdx, 8(%rsi)
	movq	-360(%rbp), %r9
	movq	56(%r9), %r12
	testq	%r12, %r12
	je	.L1219
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L1220
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L1220:
	movq	decl_obstack+24(%rip), %rdx
	movq	-360(%rbp), %rdi
	leaq	8(%rdx), %rbx
	movq	%rdi, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rbx
	ja	.L12450
.L1222:
	movq	%rdx, %r10
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	-360(%rbp), %rdx
	movq	%rdx, (%r10)
	cmpb	$32, 16(%rdx)
	je	.L12451
.L1219:
	movq	-360(%rbp), %r12
	movq	%r12, -1792(%rbp)
	jmp	.L10353
.L12451:
	cmpq	$0, 72(%rdx)
	jne	.L1219
	movq	8(%rdx), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	%rax, -368(%rbp)
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L1224
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-360(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-368(%rbp), %r8
	movq	%r8, 8(%rax)
	jmp	.L1219
.L1224:
	movq	-360(%rbp), %rsi
	movq	%r12, 72(%rsi)
	jmp	.L1219
.L12450:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L1222
.L1215:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1216
	movq	-336(%rbp), %r11
	movq	8(%r11), %rsi
	movq	%r11, %rdi
	jmp	.L10954
.L12434:
	cmpq	$0, class_binding_level(%rip)
	je	.L1137
	movq	144(%rax), %rsi
	testb	$16, 3(%rsi)
	jne	.L1136
	jmp	.L1137
.L12433:
	movq	-336(%rbp), %rdi
	movq	-344(%rbp), %rsi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%rbx)
	jmp	.L1133
	.p2align 6,,7
.L1104:
	movq	-1816(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10344
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	jne	.L10348
	testb	$8, 18(%r15)
	je	.L10348
	testb	$8, 18(%r13)
	jne	.L10348
	testb	$9, 53(%r13)
	jne	.L10348
	cmpq	%r13, current_function_decl(%rip)
	je	.L12452
.L1113:
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L1114
	cmpq	$0, 8(%rax)
	jne	.L12453
.L1114:
	movq	-1816(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L10950:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-1816(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L10348
.L12453:
	movq	-1816(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L10950
.L12452:
	movq	-1816(%rbp), %rsi
	movq	%rsi, current_function_decl(%rip)
	jmp	.L1113
	.p2align 6,,7
.L12411:
	cmpq	$0, 64(%rcx)
	jne	.L1102
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L1102
.L12410:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -1816(%rbp)
	call	error_with_decl
	jmp	.L1100
.L1093:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L1095
.L1099:
	cmpq	%r15, 56(%rax)
	je	.L1095
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L1099
.L1095:
	movq	%rax, -1816(%rbp)
	jmp	.L1092
.L12409:
	movq	40(%r15), %rax
	jmp	.L1095
.L12408:
	movq	56(%r13), %r15
	jmp	.L1089
.L12407:
	testb	$32, 53(%r13)
	jne	.L1087
	jmp	.L1088
.L10340:
	movzbl	16(%r13), %edx
	jmp	.L1087
.L11258:
	leal	(%rcx,%rcx), %edi
	xorl	%eax, %eax
	movl	%edi, builtin_type_tdescs_max(%rip)
	movslq	%edi,%rsi
	movq	builtin_type_tdescs_arr(%rip), %rdi
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L1080
.L1070:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1071
	movq	-1712(%rbp), %rax
	movq	8(%rax), %rsi
	movq	%rax, %rdi
	jmp	.L10948
.L1069:
	movq	-1712(%rbp), %rsi
	movl	$32, %edi
	movq	%r14, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L1075
	movq	-1712(%rbp), %r8
	movq	8(%r8), %rsi
	movq	%r8, %rdi
.L10949:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1076:
	movq	-1712(%rbp), %rbx
	movq	$0, 8(%rbx)
	jmp	.L1068
.L1075:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1076
	movq	-1712(%rbp), %r11
	movq	8(%r11), %rsi
	movq	%r11, %rdi
	jmp	.L10949
	.p2align 6,,7
.L11257:
	movq	-1720(%rbp), %rsi
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r14, %rdx
	call	build_decl
	movq	current_binding_level(%rip), %r9
	movq	%rax, %r13
	movq	112(%rax), %r15
	movq	current_function_decl(%rip), %rax
	movq	%r9, -1752(%rbp)
	cmpq	%rax, %r13
	je	.L10321
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L12454
.L788:
	movq	%rax, 64(%r13)
.L787:
	cmpb	$32, %dl
	je	.L12455
.L789:
	testq	%r15, %r15
	je	.L790
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L12456
	cmpq	$0, 48(%r15)
	jne	.L793
	movq	$0, -1760(%rbp)
.L792:
	cmpq	$0, -1760(%rbp)
	je	.L810
	movq	-1760(%rbp), %rbx
	cmpq	error_mark_node(%rip), %rbx
	je	.L12457
.L800:
	cmpq	$0, -1760(%rbp)
	je	.L10325
	movq	-1760(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L12458
.L802:
	movq	-1760(%rbp), %rdi
	testq	%rdi, %rdi
	movq	24(%rdi), %r12
	movq	%rdi, %rsi
	movl	32(%rdi), %ebx
	je	.L10325
	movzbl	16(%rdi), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L804
	cmpb	$32, %al
	je	.L810
	cmpb	$32, %dl
	je	.L10899
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10325
.L10329:
	movq	global_binding_level(%rip), %rax
.L809:
	movq	current_binding_level(%rip), %rbx
	cmpq	%rax, %rbx
	je	.L1063
	movq	-1720(%rbp), %r13
	movq	8(%r13), %rsi
	movq	%r13, %rdi
.L10947:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L1064:
	movq	-1720(%rbp), %rdx
	movl	$14, %eax
	cmpl	$31, %eax
	movq	$0, 8(%rdx)
	jg	.L786
	movq	-1760(%rbp), %r12
	movq	%r12, 40(%rdx)
	jmp	.L786
.L1063:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1064
	movq	-1720(%rbp), %r10
	movq	8(%r10), %rsi
	movq	%r10, %rdi
	jmp	.L10947
.L10325:
	movzbl	16(%r13), %edx
.L810:
	cmpb	$32, %dl
	je	.L10899
.L818:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L956
	movq	40(%r15), %rax
	testq	%rax, %rax
	je	.L956
	testb	$1, 53(%rax)
	jne	.L957
	testb	$8, 18(%rax)
	je	.L956
.L957:
	andb	$8, %dl
	je	.L12459
.L956:
	movl	flag_traditional(%rip), %r12d
	testl	%r12d, %r12d
	je	.L10337
	testb	$1, 53(%r13)
	je	.L10337
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L960
	movq	48(%r15), %rsi
	testq	%rsi, %rsi
	movq	%rsi, %rcx
	jne	.L961
.L960:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L962
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L10033
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L963
	movq	144(%rdi), %r11
	testb	$1, 3(%r11)
	jne	.L12460
.L963:
	testq	%rcx, %rcx
	jne	.L10033
.L10034:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10033
.L962:
	movq	40(%r15), %rcx
.L961:
	testq	%rcx, %rcx
	je	.L10222
.L10033:
	cmpb	$32, 16(%rcx)
	je	.L965
	movl	looking_for_typename(%rip), %esi
	testl	%esi, %esi
	js	.L965
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L973
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L10944
	testl	%ebx, %ebx
	jle	.L12461
.L10944:
	movq	%rax, %rcx
.L965:
	testq	%rcx, %rcx
	jne	.L10337
.L10222:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -1752(%rbp)
.L959:
	cmpq	%rax, -1752(%rbp)
	je	.L12462
	movq	current_binding_level(%rip), %rbx
	movq	48(%r15), %r12
	movq	40(%r15), %r8
	cmpq	%rax, %rbx
	je	.L12463
.L10945:
	movq	16(%rbx), %rdx
	movq	%r15, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	movq	%r8, -2808(%rbp)
	call	tree_cons
	movq	-2808(%rbp), %r8
	movq	%rax, 16(%rbx)
.L1004:
	testq	%r12, %r12
	movq	%r13, 48(%r15)
	je	.L12464
.L1015:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L1017
	testq	%r12, %r12
	je	.L1018
	testb	$1, 53(%r13)
	jne	.L1018
	cmpb	$34, 16(%r12)
	je	.L12465
.L1018:
	movl	warn_shadow(%rip), %r9d
	testl	%r9d, %r9d
	je	.L1017
	testb	$1, 53(%r13)
	jne	.L1017
	movl	32(%r13), %edi
	testl	%edi, %edi
	je	.L1017
	testq	%rax, %rax
	jne	.L1017
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L1023
	cmpb	$34, 16(%r12)
	je	.L12466
.L1023:
	cmpq	$0, 56(%r15)
	je	.L1025
	movl	$.LC41, %edi
.L1024:
	testq	%rdi, %rdi
	jne	.L10946
.L1017:
	testq	%r12, %r12
	je	.L10338
	movq	%r12, %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	-1752(%rbp), %r12
	movq	16(%r12), %rdx
	call	tree_cons
	movq	%rax, 16(%r12)
.L10338:
	movzbl	16(%r13), %edx
.L1002:
	leal	-128(%rdx), %ecx
	cmpb	$1, %cl
	jbe	.L790
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L790
	cmpb	$18, 16(%rcx)
	je	.L12467
.L1034:
	testb	$64, 46(%rcx)
	je	.L790
.L1033:
	movq	-1752(%rbp), %rdx
	movzwl	64(%rdx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rdx)
	je	.L12468
.L10339:
	movzbl	16(%r13), %edx
.L790:
	cmpb	$32, %dl
	je	.L12469
.L1036:
	movq	-1752(%rbp), %r9
	movq	global_binding_level(%rip), %rax
	movq	(%r9), %rdi
	cmpq	%rax, %r9
	movq	%rdi, (%r13)
	movq	%r13, (%r9)
	je	.L12470
.L1062:
	movq	%r13, -1760(%rbp)
	jmp	.L809
.L12470:
	testb	$4, 17(%r13)
	jne	.L1062
	xorl	%eax, %eax
	movl	$124, %edi
	call	my_friendly_abort
	movq	global_binding_level(%rip), %rax
	jmp	.L1062
.L12469:
	testq	%r15, %r15
	je	.L1036
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L1037
	cmpq	class_binding_level(%rip), %rax
	je	.L1038
	movq	48(%r15), %rax
	testq	%rax, %rax
	je	.L1042
	cmpb	$32, 16(%rax)
	je	.L1040
.L1042:
	cmpq	$0, current_class_type(%rip)
	je	.L1037
	movq	56(%r15), %rax
	testq	%rax, %rax
	je	.L1037
	cmpb	$32, 16(%rax)
	je	.L1040
.L1037:
	movq	40(%r15), %rax
	testq	%rax, %rax
	je	.L1041
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L1040
	cmpb	$-127, %dl
	je	.L12471
.L1041:
	movq	current_class_name(%rip), %r15
	testq	%r15, %r15
	je	.L1036
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L12472
.L1048:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L1052
	cmpq	class_binding_level(%rip), %rax
	je	.L1053
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L1057
	cmpb	$32, 16(%rax)
	je	.L1055
.L1057:
	cmpq	$0, current_class_type(%rip)
	je	.L1052
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L1052
	cmpb	$32, 16(%rax)
	je	.L1055
.L1052:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L1036
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L1055
	cmpb	$-127, %dl
	jne	.L1036
	movq	$0, 8(%rbx)
	jmp	.L1036
.L1055:
	movq	8(%rax), %r15
	movq	%r15, 8(%rbx)
	jmp	.L1036
.L1053:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L1057
.L12472:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %rbx
	sete	%r11b
	movq	8(%r13), %r12
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r15)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r15), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r15), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r12, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L1048
.L12471:
	movq	$0, 8(%r15)
	jmp	.L1041
.L1040:
	movq	8(%rax), %rsi
	movq	%rsi, 8(%r15)
	jmp	.L1041
.L1038:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L1042
.L12468:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10339
.L12467:
	movq	8(%rcx), %rbx
	testb	$64, 46(%rbx)
	jne	.L1033
	jmp	.L1034
.L10946:
	movq	32(%r15), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L1017
.L1025:
	testq	%r12, %r12
	je	.L1027
	movl	$.LC42, %edi
	jmp	.L1024
.L1027:
	testq	%r8, %r8
	movl	$.LC43, %r10d
	cmovne	%r10, %rdi
	jmp	.L1024
.L12466:
	movl	$.LC40, %edi
	jmp	.L1024
.L12465:
	cmpb	$34, 16(%r13)
	je	.L1018
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r8
	movq	56(%r8), %rax
	je	.L1019
	movq	56(%rax), %rax
.L1019:
	movzbl	66(%rax), %r11d
	andl	$15, %r11d
	decl	%r11d
	jne	.L1017
	movl	$.LC40, %edi
	jmp	.L10946
	.p2align 6,,7
.L12464:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L12473
.L1007:
	testq	%r12, %r12
	jne	.L1015
	testq	%r8, %r8
	jne	.L1015
	testb	$1, 53(%r13)
	je	.L1015
	testb	$8, 18(%r13)
	je	.L1015
	orb	$8, 18(%r15)
	jmp	.L1015
	.p2align 6,,7
.L12473:
	testq	%r8, %r8
	je	.L1007
	cmpb	$29, 16(%r13)
	jne	.L1007
	cmpb	$29, 16(%r8)
	jne	.L1007
	movq	8(%r8), %rsi
	movq	8(%r13), %rdi
	xorl	%eax, %eax
	movl	$1, %edx
	movq	%r8, -2808(%rbp)
	call	comptypes
	movq	-2808(%rbp), %r8
	testl	%eax, %eax
	je	.L12474
	movzbl	53(%r8), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L1010
	movzbl	53(%r13), %ecx
	leal	0(,%rax,8), %ebx
	leaq	88(%r13), %rdx
	andb	$-9, %cl
	orb	%bl, %cl
	movb	%cl, 53(%r13)
	cmpq	%r8, current_function_decl(%rip)
	je	.L1011
	movq	88(%r8), %rax
.L1012:
	movq	%rax, (%rdx)
	movq	136(%r8), %rcx
	movq	80(%r8), %r10
	movq	72(%r8), %rdx
	movzbl	17(%r13), %esi
	movq	%rcx, 136(%r13)
	movq	%r10, 80(%r13)
	movq	%rdx, 72(%r13)
	movzbl	17(%r8), %edi
	movq	%r8, 96(%r13)
	andb	$127, %sil
	shrb	$7, %dil
	movzbl	%dil, %r9d
	movl	%r9d, %r11d
	salb	$7, %r11b
	orb	%r11b, %sil
	movb	%sil, 17(%r13)
	movzbl	53(%r8), %ecx
.L1010:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L1013
	movzbl	53(%r13), %ebx
	salb	$4, %al
	andb	$-17, %bl
	orb	%al, %bl
	movb	%bl, 53(%r13)
	movl	128(%r8), %eax
	movl	%eax, 128(%r13)
.L1013:
	movq	8(%r8), %rdx
	cmpq	$0, 24(%rdx)
	je	.L1007
	cmpq	$0, 88(%r8)
	je	.L1007
	movq	8(%r13), %rsi
	cmpq	$0, 24(%rsi)
	jne	.L1007
	movq	%rdx, 8(%r13)
	jmp	.L1007
.L1011:
	xorl	%eax, %eax
	jmp	.L1012
.L12474:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	movq	-2808(%rbp), %r8
	jmp	.L1007
	.p2align 6,,7
.L12463:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L1004
	jmp	.L10945
.L12462:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L12475
.L979:
	cmpq	$0, 40(%r15)
	jne	.L980
	testb	$8, 18(%r13)
	je	.L980
	orb	$8, 18(%r15)
.L980:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L12476
.L982:
	movq	%r13, 40(%r15)
	movzbl	16(%r13), %edx
.L981:
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L993
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L983
	testb	$1, 18(%rcx)
	je	.L983
	orb	$1, 18(%r13)
	movq	72(%r15), %rax
.L983:
	testq	%rax, %rax
	je	.L993
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L988
	testb	$8, 17(%rcx)
	je	.L988
	orb	$8, 17(%r13)
	movq	72(%r15), %rax
.L988:
	testq	%rax, %rax
	je	.L993
	cmpq	$0, 8(%rax)
	je	.L993
	cmpb	$29, %dl
	je	.L12477
.L996:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L993:
	testb	$8, 18(%r15)
	je	.L1002
	cmpb	$32, %dl
	je	.L1002
	testb	$8, 18(%r13)
	jne	.L1002
	testb	$1, 53(%r13)
	jne	.L1002
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L998
	cmpq	$0, 8(%rax)
	jne	.L12478
.L998:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11225:
	xorl	%eax, %eax
	call	warning
	jmp	.L10338
.L12478:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11225
.L12477:
	movq	8(%r13), %r10
	movq	integer_type_node(%rip), %rdi
	cmpq	%rdi, 8(%r10)
	jne	.L996
	jmp	.L993
	.p2align 6,,7
.L12476:
	cmpq	$0, -1760(%rbp)
	je	.L982
	movq	-1760(%rbp), %r9
	cmpb	$32, 16(%r9)
	jne	.L981
	jmp	.L982
.L12475:
	testb	$8, 54(%r13)
	jne	.L979
	andb	$-9, 18(%r13)
	jmp	.L979
	.p2align 6,,7
.L10337:
	movq	global_binding_level(%rip), %rax
	jmp	.L959
.L12461:
	testl	%esi, %esi
	jg	.L10944
	testl	%ebx, %ebx
	je	.L965
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L10944
	.p2align 6,,7
.L973:
	movq	8(%rcx), %r8
	cmpq	error_mark_node(%rip), %r8
	cmove	%r8, %rcx
	jmp	.L965
.L12460:
	xorl	%ecx, %ecx
	movq	%r15, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L965
	testq	%rax, %rax
	je	.L10034
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L963
	.p2align 6,,7
.L12459:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L956
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r15), %rdi
	call	warning_with_decl
	jmp	.L956
	.p2align 6,,7
.L10899:
	movq	8(%r13), %rdx
	movq	80(%rdx), %rcx
	testq	%rcx, %rcx
	movq	%rcx, -1744(%rbp)
	je	.L820
	movzbl	16(%rcx), %eax
	cmpb	$32, %al
	je	.L819
.L820:
	movq	global_binding_level(%rip), %r10
	movq	%r13, -1744(%rbp)
	cmpq	%r10, current_binding_level(%rip)
	jne	.L10330
	movq	%r13, 80(%rdx)
.L10330:
	movzbl	16(%r13), %eax
.L823:
	cmpb	$32, %al
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$140, %esi
	call	my_friendly_assert
	movq	-1744(%rbp), %rax
	movq	56(%rax), %rbx
	testq	%rbx, %rbx
	je	.L947
	cmpq	$0, 72(%rax)
	je	.L12479
.L947:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L818
	cmpq	$0, 56(%rax)
	je	.L818
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %rdi
	cmpq	global_binding_level(%rip), %rbx
	movq	%rdi, -328(%rbp)
	je	.L952
	movq	-328(%rbp), %r10
	movq	8(%r10), %rsi
	movq	%r10, %rdi
.L10943:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L953:
	movq	-328(%rbp), %rbx
	movq	%r12, 8(%rbx)
	jmp	.L818
.L952:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L953
	movq	-328(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
	jmp	.L10943
.L12479:
	movq	8(%r13), %r11
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	movq	%r11, -320(%rbp)
	cmpb	$32, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L948
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	-320(%rbp), %r8
	movq	%r8, 8(%rax)
	jmp	.L947
.L948:
	movq	%rbx, 72(%r13)
	jmp	.L947
.L819:
	movq	-1744(%rbp), %r11
	movq	current_binding_level(%rip), %rsi
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%r11), %r12
	movq	%r12, -280(%rbp)
	jne	.L823
	movq	-280(%rbp), %r8
	movq	32(%r8), %rcx
	cmpb	$36, (%rcx)
	jne	.L823
	cmpb	$95, 1(%rcx)
	jne	.L823
	movq	class_binding_level(%rip), %rcx
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rdx
	testq	%rcx, %rcx
	movq	%rcx, -1728(%rbp)
	movq	%rdx, -288(%rbp)
	jne	.L827
	testb	$-128, 66(%rsi)
	movq	%rsi, -1728(%rbp)
	je	.L827
.L831:
	movq	-1728(%rbp), %rax
	movq	56(%rax), %rsi
	testb	$-128, 66(%rsi)
	movq	%rsi, -1728(%rbp)
	jne	.L831
.L827:
	movq	-1728(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12480
	movq	-1728(%rbp), %rbx
	movq	-280(%rbp), %rdi
	xorl	%eax, %eax
	movq	-288(%rbp), %rsi
	movq	8(%rbx), %rdx
	call	saveable_tree_cons
	movq	-1728(%rbp), %r9
	movq	%rax, 8(%r9)
.L833:
	cmpq	$0, -280(%rbp)
	je	.L834
	movq	-288(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L835
	movq	-280(%rbp), %rdi
	movq	%rdi, 80(%rcx)
.L835:
	movq	-280(%rbp), %r10
	movq	-288(%rbp), %rax
	cmpq	%rax, 8(%r10)
	je	.L836
	cmpb	$21, 16(%rax)
	je	.L12481
.L837:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L839
	cmpq	$0, 32(%rax)
	je	.L838
.L839:
	movq	lang_name_cplusplus(%rip), %r8
	cmpq	%r8, current_lang_name(%rip)
	je	.L12482
.L840:
	xorl	%ecx, %ecx
.L875:
	testq	%rcx, %rcx
	jne	.L876
.L10221:
	movq	-280(%rbp), %rsi
	movq	-288(%rbp), %rdx
	movl	$32, %edi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-288(%rbp), %rdi
	movq	%rax, -1736(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-1736(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L877
	movq	-280(%rbp), %r8
	movq	8(%r8), %rsi
	movq	%r8, %rdi
.L10940:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L878:
	movq	-288(%rbp), %rsi
	movq	-280(%rbp), %rdx
	movq	%rsi, 8(%rdx)
.L881:
	movq	-280(%rbp), %r9
	movq	32(%r9), %rax
	cmpb	$36, (%rax)
	je	.L12483
.L883:
	movq	-288(%rbp), %rdi
	movq	80(%rdi), %rdx
	testq	%rdx, %rdx
	je	.L914
	cmpb	$32, 16(%rdx)
	je	.L12484
.L884:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L903
	movq	-1736(%rbp), %rcx
	movq	56(%rcx), %r12
	testq	%r12, %r12
	je	.L10332
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L905
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L905:
	movq	decl_obstack+24(%rip), %rdx
	movq	-1736(%rbp), %r11
	leaq	8(%rdx), %r10
	movq	%r11, 56(%r12)
	cmpq	decl_obstack+32(%rip), %r10
	ja	.L12485
.L907:
	movq	-1736(%rbp), %rbx
	movq	%rdx, %r8
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%r8)
	cmpb	$32, 16(%rbx)
	je	.L12486
.L10333:
	movq	-280(%rbp), %rsi
	movq	32(%rsi), %rax
.L914:
	cmpb	$36, (%rax)
	je	.L12487
.L928:
	movq	current_class_type(%rip), %rdx
	movq	-1736(%rbp), %rdi
	movq	-288(%rbp), %rcx
	testq	%rdx, %rdx
	movq	%rdi, 80(%rcx)
	jne	.L931
	cmpq	$0, current_function_decl(%rip)
	je	.L930
.L931:
	movq	lang_name_cplusplus(%rip), %r10
	cmpq	%r10, current_lang_name(%rip)
	je	.L929
.L930:
	movq	-280(%rbp), %r8
	movq	-1736(%rbp), %r11
	movq	%r8, 72(%r11)
.L836:
	movq	-1728(%rbp), %rax
	movzbl	66(%rax), %esi
	andl	$15, %esi
	cmpl	$2, %esi
	je	.L12488
.L834:
	movq	-288(%rbp), %rdx
	movq	80(%rdx), %rax
	cmpb	$32, 16(%rax)
	je	.L12489
	movq	-288(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-288(%rbp), %rcx
	movq	%rax, (%rcx)
	movq	-1744(%rbp), %rbx
	movzbl	16(%rbx), %eax
	jmp	.L823
.L12489:
	movq	%rax, (%rdx)
	movq	-1744(%rbp), %r10
	movzbl	16(%r10), %eax
	jmp	.L823
.L12488:
	movq	-288(%rbp), %rdi
	orb	$64, 18(%rdi)
	movq	80(%rdi), %r8
	movq	-280(%rbp), %r11
	movq	current_class_type(%rip), %rax
	movq	%r8, 56(%r11)
	cmpq	$0, 32(%rax)
	jne	.L834
	movq	-1728(%rbp), %r9
	movq	144(%rax), %r12
	movq	8(%r9), %rdx
	movq	%rdx, 72(%r12)
	jmp	.L834
.L929:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L12490
	cmpq	$0, 32(%rdx)
	jne	.L836
	movq	-1736(%rbp), %r10
	movq	80(%rdx), %rsi
	cmpb	$32, 16(%r10)
	movq	72(%rsi), %rbx
	movl	$136, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L939
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-280(%rbp), %rdi
	cmpb	$1, 16(%rdi)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-280(%rbp), %r11
	movl	24(%r11), %eax
	movq	32(%r11), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1736(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-288(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L941:
	movq	-1736(%rbp), %rcx
	movq	current_class_type(%rip), %rbx
	movq	152(%rcx), %r10
	movq	%rbx, 64(%rcx)
	movq	%rbx, 16(%r10)
	jmp	.L836
.L939:
	movq	-280(%rbp), %r9
	movq	-1736(%rbp), %rdx
	movq	%r9, 72(%rdx)
	jmp	.L941
.L12490:
	movq	-1736(%rbp), %rdx
	movq	112(%rax), %rbx
	movl	$136, %esi
	cmpb	$32, 16(%rdx)
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L934
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	-280(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-280(%rbp), %r10
	movl	24(%r10), %eax
	movq	32(%r10), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1736(%rbp), %r9
	movq	%rax, 72(%r9)
	movq	-288(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L936:
	movq	current_function_decl(%rip), %rdx
	movq	-1736(%rbp), %r12
	movq	%rdx, 64(%r12)
	jmp	.L836
.L934:
	movq	-280(%rbp), %r8
	movq	-1736(%rbp), %rdi
	movq	%r8, 72(%rdi)
	jmp	.L936
.L12487:
	cmpb	$95, 1(%rax)
	jne	.L928
	movq	-1736(%rbp), %rax
	orb	$64, 53(%rax)
	jmp	.L928
.L12486:
	cmpq	$0, 72(%rbx)
	je	.L12491
.L10334:
	movq	-280(%rbp), %r9
	movq	32(%r9), %rax
	jmp	.L914
.L12491:
	movq	-1736(%rbp), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%rax), %rdx
	xorl	%eax, %eax
	movq	%rdx, -296(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L909
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1736(%rbp), %rsi
	movq	%rax, 72(%rsi)
	movq	-296(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L10331:
	movq	-280(%rbp), %rdx
	movq	32(%rdx), %rax
	jmp	.L914
.L909:
	movq	-1736(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L10333
.L12485:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L907
.L10332:
	movq	-280(%rbp), %rbx
	movq	32(%rbx), %rax
	jmp	.L914
.L903:
	movq	-1736(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -1736(%rbp)
	jmp	.L10334
.L12484:
	movq	global_binding_level(%rip), %r10
	movl	$1, %r12d
	cmpq	%r10, current_binding_level(%rip)
	je	.L885
	movq	-280(%rbp), %rbx
	movq	48(%rbx), %r11
	testq	%r11, %r11
	movq	%r11, %rcx
	jne	.L886
.L885:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L887
	movq	-280(%rbp), %r8
	movq	56(%r8), %rcx
	testq	%rcx, %rcx
	jne	.L10031
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L888
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L12492
.L888:
	testq	%rcx, %rcx
	jne	.L10031
.L10032:
	movq	-280(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10031
	movq	-280(%rbp), %rsi
	movq	40(%rsi), %rcx
.L886:
	testq	%rcx, %rcx
	je	.L890
.L10031:
	cmpb	$32, 16(%rcx)
	je	.L890
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L890
	movq	-280(%rbp), %r9
	movq	8(%r9), %rax
	testq	%rax, %rax
	je	.L898
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L10941
	testl	%r12d, %r12d
	jle	.L12493
.L10941:
	movq	%rax, %rcx
.L890:
	movq	-288(%rbp), %rdi
	cmpq	80(%rdi), %rcx
	jne	.L884
	jmp	.L10331
.L12493:
	testl	%edx, %edx
	jg	.L10941
	testl	%r12d, %r12d
	je	.L890
	movq	-280(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L10941
.L898:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L890
.L12492:
	xorl	%ecx, %ecx
	movq	-280(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L890
	testq	%rax, %rax
	je	.L10032
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L888
.L887:
	movq	-280(%rbp), %rax
	movq	40(%rax), %rcx
	jmp	.L886
.L12483:
	cmpb	$95, 1(%rax)
	jne	.L883
	jmp	.L914
.L877:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L878
	movq	-280(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
	jmp	.L10940
.L876:
	movq	80(%rcx), %rax
	movq	%rax, -1736(%rbp)
	jmp	.L881
.L12482:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L842
	movq	80(%rax), %rbx
.L842:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L875
.L874:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L851
	cmpl	$32, %eax
	je	.L12494
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L845:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L875
	jmp	.L874
.L12494:
	movq	8(%rbx), %rdx
	movq	-288(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%rdx), %rcx
	movq	72(%rcx), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10873
	movq	64(%rbx), %rbx
	jmp	.L845
.L10873:
	movq	32(%rax), %rcx
	jmp	.L875
.L851:
	movq	-288(%rbp), %rax
	movq	80(%rax), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L840
	movq	global_binding_level(%rip), %r9
	cmpq	%r9, current_binding_level(%rip)
	je	.L854
	movq	48(%rbx), %rdi
	testq	%rdi, %rdi
	movq	%rdi, %rcx
	jne	.L855
.L854:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L856
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10029
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L857
	movq	144(%rdi), %r10
	testb	$1, 3(%r10)
	jne	.L12495
.L857:
	testq	%rcx, %rcx
	jne	.L10029
.L10030:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10029
.L856:
	movq	40(%rbx), %rcx
.L855:
	testq	%rcx, %rcx
	je	.L10221
.L10029:
	cmpb	$32, 16(%rcx)
	je	.L875
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L875
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L867
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L10939
	movl	$1, %r12d
	testl	%r12d, %r12d
	jle	.L12496
.L10939:
	movq	%rax, %rcx
	jmp	.L875
.L12496:
	testl	%edx, %edx
	jg	.L10939
	movl	$1, %r11d
	testl	%r11d, %r11d
	je	.L875
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L10939
.L867:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L875
	jmp	.L10939
.L12495:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L875
	testq	%rax, %rax
	je	.L10030
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L857
.L838:
	movq	-280(%rbp), %rsi
	movq	-288(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -304(%rbp)
	je	.L915
	movq	-280(%rbp), %r12
	movq	8(%r12), %rsi
	movq	%r12, %rdi
.L10942:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L916:
	movq	-288(%rbp), %rdx
	movq	-280(%rbp), %r8
	movq	%rdx, 8(%r8)
	movq	-304(%rbp), %r11
	movq	56(%r11), %r12
	testq	%r12, %r12
	je	.L919
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L920
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L920:
	movq	decl_obstack+24(%rip), %rdx
	movq	-304(%rbp), %rsi
	leaq	8(%rdx), %rbx
	movq	%rsi, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rbx
	ja	.L12497
.L922:
	movq	%rdx, %r9
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	-304(%rbp), %rdx
	movq	%rdx, (%r9)
	cmpb	$32, 16(%rdx)
	je	.L12498
.L919:
	movq	-304(%rbp), %r12
	movq	%r12, -1736(%rbp)
	jmp	.L10334
.L12498:
	cmpq	$0, 72(%rdx)
	jne	.L919
	movq	8(%rdx), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	%rax, -312(%rbp)
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L924
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-304(%rbp), %rdi
	movq	%rax, 72(%rdi)
	movq	-312(%rbp), %rcx
	movq	%rcx, 8(%rax)
	jmp	.L919
.L924:
	movq	-304(%rbp), %r8
	movq	%r12, 72(%r8)
	jmp	.L919
.L12497:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L922
.L915:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L916
	movq	-280(%rbp), %r10
	movq	8(%r10), %rsi
	movq	%r10, %rdi
	jmp	.L10942
.L12481:
	cmpq	$0, class_binding_level(%rip)
	je	.L837
	movq	144(%rax), %r12
	testb	$16, 3(%r12)
	jne	.L836
	jmp	.L837
.L12480:
	movq	-280(%rbp), %rdi
	movq	-288(%rbp), %rsi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%rbx)
	jmp	.L833
	.p2align 6,,7
.L804:
	movq	-1760(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10325
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	jne	.L10329
	testb	$8, 18(%r15)
	je	.L10329
	testb	$8, 18(%r13)
	jne	.L10329
	testb	$9, 53(%r13)
	jne	.L10329
	cmpq	%r13, current_function_decl(%rip)
	je	.L12499
.L813:
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L814
	cmpq	$0, 8(%rax)
	jne	.L12500
.L814:
	movq	-1760(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L10938:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-1760(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L10329
.L12500:
	movq	-1760(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L10938
.L12499:
	movq	-1760(%rbp), %r13
	movq	%r13, current_function_decl(%rip)
	jmp	.L813
	.p2align 6,,7
.L12458:
	cmpq	$0, 64(%rcx)
	jne	.L802
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L802
.L12457:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -1760(%rbp)
	call	error_with_decl
	jmp	.L800
.L793:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L795
.L799:
	cmpq	%r15, 56(%rax)
	je	.L795
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L799
.L795:
	movq	%rax, -1760(%rbp)
	jmp	.L792
.L12456:
	movq	40(%r15), %rax
	jmp	.L795
.L12455:
	movq	56(%r13), %r15
	jmp	.L789
.L12454:
	testb	$32, 53(%r13)
	jne	.L787
	jmp	.L788
.L10321:
	movzbl	16(%r13), %edx
	jmp	.L787
.L11256:
	leal	(%rcx,%rcx), %edx
	movq	builtin_type_tdescs_arr(%rip), %rdi
	xorl	%eax, %eax
	movslq	%edx,%rsi
	movl	%edx, builtin_type_tdescs_max(%rip)
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L780
.L11255:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L771
	jmp	.L10936
.L769:
	movq	-216(%rbp), %rdx
	movl	$32, %edi
	movq	%r15, %rsi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12501
.L10937:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L776:
	movq	$0, 8(%r15)
	jmp	.L768
.L12501:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L776
	jmp	.L10937
	.p2align 6,,7
.L11254:
	movq	-1664(%rbp), %rsi
	movq	-216(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_decl
	movq	%rax, %r13
	movq	112(%rax), %r14
	movq	current_binding_level(%rip), %rax
	movq	%rax, -1696(%rbp)
	movq	current_function_decl(%rip), %rax
	cmpq	%rax, %r13
	je	.L10302
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L12502
.L488:
	movq	%rax, 64(%r13)
.L487:
	cmpb	$32, %dl
	je	.L12503
.L489:
	testq	%r14, %r14
	je	.L490
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L12504
	cmpq	$0, 48(%r14)
	jne	.L493
	movq	$0, -1704(%rbp)
.L492:
	cmpq	$0, -1704(%rbp)
	je	.L510
	movq	-1704(%rbp), %r12
	cmpq	error_mark_node(%rip), %r12
	je	.L12505
.L500:
	cmpq	$0, -1704(%rbp)
	je	.L10306
	movq	-1704(%rbp), %rsi
	cmpb	$34, 16(%rsi)
	je	.L12506
.L502:
	movq	-1704(%rbp), %rax
	testq	%rax, %rax
	movq	24(%rax), %r12
	movl	32(%rax), %ebx
	je	.L10306
	movzbl	16(%rax), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L504
	cmpb	$32, %al
	je	.L510
	cmpb	$32, %dl
	je	.L10898
	movq	-1704(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10306
.L10310:
	movq	global_binding_level(%rip), %rax
.L509:
	movq	current_binding_level(%rip), %rbx
	cmpq	%rax, %rbx
	je	.L763
	movq	-1664(%rbp), %r13
	movq	8(%r13), %rsi
	movq	%r13, %rdi
.L10935:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L764:
	movq	-1664(%rbp), %rdx
	movl	$2, %eax
	cmpl	$31, %eax
	movq	$0, 8(%rdx)
	jg	.L486
	movq	-1704(%rbp), %r12
	movq	%r12, 40(%rdx)
	jmp	.L486
.L763:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L764
	movq	-1664(%rbp), %r10
	movq	8(%r10), %rsi
	movq	%r10, %rdi
	jmp	.L10935
.L10306:
	movzbl	16(%r13), %edx
.L510:
	cmpb	$32, %dl
	je	.L10898
.L518:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L656
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L656
	testb	$1, 53(%rax)
	jne	.L657
	testb	$8, 18(%rax)
	je	.L656
.L657:
	andb	$8, %dl
	je	.L12507
.L656:
	movl	flag_traditional(%rip), %ecx
	testl	%ecx, %ecx
	je	.L10318
	testb	$1, 53(%r13)
	je	.L10318
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L660
	movq	48(%r14), %rsi
	testq	%rsi, %rsi
	movq	%rsi, %rcx
	jne	.L661
.L660:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L662
	movq	56(%r14), %rcx
	testq	%rcx, %rcx
	jne	.L10027
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L663
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L12508
.L663:
	testq	%rcx, %rcx
	jne	.L10027
.L10028:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10027
.L662:
	movq	40(%r14), %rcx
.L661:
	testq	%rcx, %rcx
	je	.L10220
.L10027:
	cmpb	$32, 16(%rcx)
	je	.L665
	movl	looking_for_typename(%rip), %esi
	testl	%esi, %esi
	js	.L665
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L673
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L10932
	testl	%ebx, %ebx
	jle	.L12509
.L10932:
	movq	%rax, %rcx
.L665:
	testq	%rcx, %rcx
	jne	.L10318
.L10220:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -1696(%rbp)
.L659:
	cmpq	%rax, -1696(%rbp)
	je	.L12510
	movq	current_binding_level(%rip), %rbx
	movq	48(%r14), %r12
	movq	40(%r14), %r8
	cmpq	%rax, %rbx
	je	.L12511
.L10933:
	movq	16(%rbx), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	movq	%r8, -2808(%rbp)
	call	tree_cons
	movq	-2808(%rbp), %r8
	movq	%rax, 16(%rbx)
.L704:
	testq	%r12, %r12
	movq	%r13, 48(%r14)
	je	.L12512
.L715:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L717
	testq	%r12, %r12
	je	.L718
	testb	$1, 53(%r13)
	jne	.L718
	cmpb	$34, 16(%r12)
	je	.L12513
.L718:
	movl	warn_shadow(%rip), %ebx
	testl	%ebx, %ebx
	je	.L717
	testb	$1, 53(%r13)
	jne	.L717
	movl	32(%r13), %edi
	testl	%edi, %edi
	je	.L717
	testq	%rax, %rax
	jne	.L717
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L723
	cmpb	$34, 16(%r12)
	je	.L12514
.L723:
	cmpq	$0, 56(%r14)
	je	.L725
	movl	$.LC41, %edi
.L724:
	testq	%rdi, %rdi
	jne	.L10934
.L717:
	testq	%r12, %r12
	je	.L10319
	movq	%r12, %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	-1696(%rbp), %r12
	movq	16(%r12), %rdx
	call	tree_cons
	movq	%rax, 16(%r12)
.L10319:
	movzbl	16(%r13), %edx
.L702:
	leal	-128(%rdx), %r11d
	cmpb	$1, %r11b
	jbe	.L490
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L490
	cmpb	$18, 16(%rcx)
	je	.L12515
.L734:
	testb	$64, 46(%rcx)
	je	.L490
.L733:
	movq	-1696(%rbp), %rdx
	movzwl	64(%rdx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rdx)
	je	.L12516
.L10320:
	movzbl	16(%r13), %edx
.L490:
	cmpb	$32, %dl
	je	.L12517
.L736:
	movq	-1696(%rbp), %rbx
	movq	global_binding_level(%rip), %rax
	movq	(%rbx), %rdi
	cmpq	%rax, %rbx
	movq	%rdi, (%r13)
	movq	%r13, (%rbx)
	je	.L12518
.L762:
	movq	%r13, -1704(%rbp)
	jmp	.L509
.L12518:
	testb	$4, 17(%r13)
	jne	.L762
	xorl	%eax, %eax
	movl	$124, %edi
	call	my_friendly_abort
	movq	global_binding_level(%rip), %rax
	jmp	.L762
.L12517:
	testq	%r14, %r14
	je	.L736
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L737
	cmpq	class_binding_level(%rip), %rax
	je	.L738
	movq	48(%r14), %rax
	testq	%rax, %rax
	je	.L742
	cmpb	$32, 16(%rax)
	je	.L740
.L742:
	cmpq	$0, current_class_type(%rip)
	je	.L737
	movq	56(%r14), %rax
	testq	%rax, %rax
	je	.L737
	cmpb	$32, 16(%rax)
	je	.L740
.L737:
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L741
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L740
	cmpb	$-127, %dl
	je	.L12519
.L741:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L736
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L12520
.L748:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L752
	cmpq	class_binding_level(%rip), %rax
	je	.L753
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L757
	cmpb	$32, 16(%rax)
	je	.L755
.L757:
	cmpq	$0, current_class_type(%rip)
	je	.L752
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L752
	cmpb	$32, 16(%rax)
	je	.L755
.L752:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L736
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L755
	cmpb	$-127, %dl
	jne	.L736
	movq	$0, 8(%rbx)
	jmp	.L736
.L755:
	movq	8(%rax), %r14
	movq	%r14, 8(%rbx)
	jmp	.L736
.L753:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L757
.L12520:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %rbx
	sete	%r9b
	movq	8(%r13), %r12
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r14)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r14), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r12, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L748
.L12519:
	movq	$0, 8(%r14)
	jmp	.L741
.L740:
	movq	8(%rax), %rcx
	movq	%rcx, 8(%r14)
	jmp	.L741
.L738:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L742
.L12516:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L10320
.L12515:
	movq	8(%rcx), %rsi
	testb	$64, 46(%rsi)
	jne	.L733
	jmp	.L734
.L10934:
	movq	32(%r14), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L717
.L725:
	testq	%r12, %r12
	je	.L727
	movl	$.LC42, %edi
	jmp	.L724
.L727:
	testq	%r8, %r8
	movl	$.LC43, %r10d
	cmovne	%r10, %rdi
	jmp	.L724
.L12514:
	movl	$.LC40, %edi
	jmp	.L724
.L12513:
	cmpb	$34, 16(%r13)
	je	.L718
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r8
	movq	56(%r8), %rax
	je	.L719
	movq	56(%rax), %rax
.L719:
	movzbl	66(%rax), %r9d
	andl	$15, %r9d
	decl	%r9d
	jne	.L717
	movl	$.LC40, %edi
	jmp	.L10934
	.p2align 6,,7
.L12512:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L12521
.L707:
	testq	%r12, %r12
	jne	.L715
	testq	%r8, %r8
	jne	.L715
	testb	$1, 53(%r13)
	je	.L715
	testb	$8, 18(%r13)
	je	.L715
	orb	$8, 18(%r14)
	jmp	.L715
	.p2align 6,,7
.L12521:
	testq	%r8, %r8
	je	.L707
	cmpb	$29, 16(%r13)
	jne	.L707
	cmpb	$29, 16(%r8)
	jne	.L707
	movq	8(%r8), %rsi
	movq	8(%r13), %rdi
	xorl	%eax, %eax
	movl	$1, %edx
	movq	%r8, -2808(%rbp)
	call	comptypes
	movq	-2808(%rbp), %r8
	testl	%eax, %eax
	je	.L12522
	movzbl	53(%r8), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L710
	movzbl	53(%r13), %r11d
	leal	0(,%rax,8), %ecx
	leaq	88(%r13), %rdx
	andb	$-9, %r11b
	orb	%cl, %r11b
	movb	%r11b, 53(%r13)
	cmpq	%r8, current_function_decl(%rip)
	je	.L711
	movq	88(%r8), %rax
.L712:
	movq	%rax, (%rdx)
	movq	136(%r8), %r11
	movq	80(%r8), %r10
	movq	72(%r8), %rdx
	movzbl	17(%r13), %esi
	movq	%r11, 136(%r13)
	movq	%r10, 80(%r13)
	movq	%rdx, 72(%r13)
	movzbl	17(%r8), %edi
	movq	%r8, 96(%r13)
	andb	$127, %sil
	shrb	$7, %dil
	movzbl	%dil, %ebx
	movl	%ebx, %r9d
	salb	$7, %r9b
	orb	%r9b, %sil
	movb	%sil, 17(%r13)
	movzbl	53(%r8), %ecx
.L710:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L713
	movzbl	53(%r13), %ecx
	salb	$4, %al
	andb	$-17, %cl
	orb	%al, %cl
	movb	%cl, 53(%r13)
	movl	128(%r8), %eax
	movl	%eax, 128(%r13)
.L713:
	movq	8(%r8), %rdx
	cmpq	$0, 24(%rdx)
	je	.L707
	cmpq	$0, 88(%r8)
	je	.L707
	movq	8(%r13), %rsi
	cmpq	$0, 24(%rsi)
	jne	.L707
	movq	%rdx, 8(%r13)
	jmp	.L707
.L711:
	xorl	%eax, %eax
	jmp	.L712
.L12522:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	movq	-2808(%rbp), %r8
	jmp	.L707
	.p2align 6,,7
.L12511:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L704
	jmp	.L10933
.L12510:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L12523
.L679:
	cmpq	$0, 40(%r14)
	jne	.L680
	testb	$8, 18(%r13)
	je	.L680
	orb	$8, 18(%r14)
.L680:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L12524
.L682:
	movq	%r13, 40(%r14)
	movzbl	16(%r13), %edx
.L681:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L693
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L683
	testb	$1, 18(%rcx)
	je	.L683
	orb	$1, 18(%r13)
	movq	72(%r14), %rax
.L683:
	testq	%rax, %rax
	je	.L693
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L688
	testb	$8, 17(%rcx)
	je	.L688
	orb	$8, 17(%r13)
	movq	72(%r14), %rax
.L688:
	testq	%rax, %rax
	je	.L693
	cmpq	$0, 8(%rax)
	je	.L693
	cmpb	$29, %dl
	je	.L12525
.L696:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L693:
	testb	$8, 18(%r14)
	je	.L702
	cmpb	$32, %dl
	je	.L702
	testb	$8, 18(%r13)
	jne	.L702
	testb	$1, 53(%r13)
	jne	.L702
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L698
	cmpq	$0, 8(%rax)
	jne	.L12526
.L698:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L11224:
	xorl	%eax, %eax
	call	warning
	jmp	.L10319
.L12526:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L11224
.L12525:
	movq	8(%r13), %r10
	movq	integer_type_node(%rip), %rdi
	cmpq	%rdi, 8(%r10)
	jne	.L696
	jmp	.L693
	.p2align 6,,7
.L12524:
	cmpq	$0, -1704(%rbp)
	je	.L682
	movq	-1704(%rbp), %r12
	cmpb	$32, 16(%r12)
	jne	.L681
	jmp	.L682
.L12523:
	testb	$8, 54(%r13)
	jne	.L679
	andb	$-9, 18(%r13)
	jmp	.L679
	.p2align 6,,7
.L10318:
	movq	global_binding_level(%rip), %rax
	jmp	.L659
.L12509:
	testl	%esi, %esi
	jg	.L10932
	testl	%ebx, %ebx
	je	.L665
	movq	%rax, %rdx
	movq	%r14, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L10932
	.p2align 6,,7
.L673:
	movq	8(%rcx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rcx
	jmp	.L665
.L12508:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L665
	testq	%rax, %rax
	je	.L10028
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L663
	.p2align 6,,7
.L12507:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L656
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r14), %rdi
	call	warning_with_decl
	jmp	.L656
	.p2align 6,,7
.L10898:
	movq	8(%r13), %rdx
	movq	80(%rdx), %rbx
	testq	%rbx, %rbx
	movq	%rbx, -1688(%rbp)
	je	.L520
	movzbl	16(%rbx), %eax
	cmpb	$32, %al
	je	.L519
.L520:
	movq	global_binding_level(%rip), %rbx
	movq	%r13, -1688(%rbp)
	cmpq	%rbx, current_binding_level(%rip)
	jne	.L10311
	movq	%r13, 80(%rdx)
.L10311:
	movzbl	16(%r13), %eax
.L523:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%bl
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	movq	-1688(%rbp), %rax
	movq	56(%rax), %rbx
	testq	%rbx, %rbx
	je	.L647
	cmpq	$0, 72(%rax)
	je	.L12527
.L647:
	movq	8(%r13), %r12
	movq	80(%r12), %rax
	testq	%rax, %rax
	je	.L518
	cmpq	$0, 56(%rax)
	je	.L518
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %rdi
	cmpq	global_binding_level(%rip), %rbx
	movq	%rdi, -272(%rbp)
	je	.L652
	movq	-272(%rbp), %r10
	movq	8(%r10), %rsi
	movq	%r10, %rdi
.L10931:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L653:
	movq	-272(%rbp), %r8
	movq	%r12, 8(%r8)
	jmp	.L518
.L652:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L653
	movq	-272(%rbp), %r11
	movq	8(%r11), %rsi
	movq	%r11, %rdi
	jmp	.L10931
.L12527:
	movq	8(%r13), %rsi
	movq	current_class_name(%rip), %r12
	movq	%rsi, -264(%rbp)
	movl	$136, %esi
	cmpb	$32, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L648
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	-264(%rbp), %r12
	movq	%r12, 8(%rax)
	jmp	.L647
.L648:
	movq	%rbx, 72(%r13)
	jmp	.L647
.L519:
	movq	-1688(%rbp), %r8
	movq	current_binding_level(%rip), %rsi
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%r8), %rcx
	movq	%rcx, -224(%rbp)
	jne	.L523
	movq	32(%rcx), %rcx
	cmpb	$36, (%rcx)
	jne	.L523
	cmpb	$95, 1(%rcx)
	jne	.L523
	movq	class_binding_level(%rip), %rcx
	movq	%r13, 80(%rdx)
	movq	8(%r13), %rdx
	testq	%rcx, %rcx
	movq	%rcx, -1672(%rbp)
	movq	%rdx, -232(%rbp)
	jne	.L527
	testb	$-128, 66(%rsi)
	movq	%rsi, -1672(%rbp)
	je	.L527
.L531:
	movq	-1672(%rbp), %rax
	movq	56(%rax), %r10
	testb	$-128, 66(%r10)
	movq	%r10, -1672(%rbp)
	jne	.L531
.L527:
	movq	-1672(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12528
	movq	-1672(%rbp), %r12
	movq	-224(%rbp), %rdi
	xorl	%eax, %eax
	movq	-232(%rbp), %rsi
	movq	8(%r12), %rdx
	call	saveable_tree_cons
	movq	-1672(%rbp), %r11
	movq	%rax, 8(%r11)
.L533:
	cmpq	$0, -224(%rbp)
	je	.L534
	movq	-232(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L535
	movq	-224(%rbp), %rdi
	movq	%rdi, 80(%rcx)
.L535:
	movq	-224(%rbp), %rbx
	movq	-232(%rbp), %rax
	cmpq	%rax, 8(%rbx)
	je	.L536
	cmpb	$21, 16(%rax)
	je	.L12529
.L537:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L539
	cmpq	$0, 32(%rax)
	je	.L538
.L539:
	movq	lang_name_cplusplus(%rip), %r9
	cmpq	%r9, current_lang_name(%rip)
	je	.L12530
.L540:
	xorl	%ecx, %ecx
.L575:
	testq	%rcx, %rcx
	jne	.L576
.L10219:
	movq	-224(%rbp), %rsi
	movq	-232(%rbp), %rdx
	movl	$32, %edi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-232(%rbp), %rdi
	movq	%rax, -1680(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-1680(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L577
	movq	-224(%rbp), %r9
	movq	8(%r9), %rsi
	movq	%r9, %rdi
.L10928:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L578:
	movq	-232(%rbp), %r10
	movq	-224(%rbp), %rdx
	movq	%r10, 8(%rdx)
.L581:
	movq	-224(%rbp), %r11
	movq	32(%r11), %rax
	cmpb	$36, (%rax)
	je	.L12531
.L583:
	movq	-232(%rbp), %r12
	movq	80(%r12), %rdx
	testq	%rdx, %rdx
	je	.L614
	cmpb	$32, 16(%rdx)
	je	.L12532
.L584:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L603
	movq	-1680(%rbp), %rcx
	movq	56(%rcx), %r12
	testq	%r12, %r12
	je	.L10313
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L605
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L605:
	movq	decl_obstack+24(%rip), %rdx
	movq	-1680(%rbp), %rax
	leaq	8(%rdx), %rdi
	movq	%rax, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rdi
	ja	.L12533
.L607:
	movq	-1680(%rbp), %rbx
	movq	%rdx, %r8
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%r8)
	cmpb	$32, 16(%rbx)
	je	.L12534
.L10314:
	movq	-224(%rbp), %rbx
	movq	32(%rbx), %rax
.L614:
	cmpb	$36, (%rax)
	je	.L12535
.L628:
	movq	-232(%rbp), %rdx
	movq	-1680(%rbp), %rcx
	movq	%rcx, 80(%rdx)
	movq	current_class_type(%rip), %rdx
	testq	%rdx, %rdx
	jne	.L631
	cmpq	$0, current_function_decl(%rip)
	je	.L630
.L631:
	movq	lang_name_cplusplus(%rip), %rax
	cmpq	%rax, current_lang_name(%rip)
	je	.L629
.L630:
	movq	-224(%rbp), %rdi
	movq	-1680(%rbp), %r8
	movq	%rdi, 72(%r8)
.L536:
	movq	-1672(%rbp), %rax
	movzbl	66(%rax), %ecx
	andl	$15, %ecx
	cmpl	$2, %ecx
	je	.L12536
.L534:
	movq	-232(%rbp), %rdx
	movq	80(%rdx), %rax
	cmpb	$32, 16(%rax)
	je	.L12537
	movq	-232(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-232(%rbp), %rcx
	movq	%rax, (%rcx)
	movq	-1688(%rbp), %r8
	movzbl	16(%r8), %eax
	jmp	.L523
.L12537:
	movq	%rax, (%rdx)
	movq	-1688(%rbp), %r11
	movzbl	16(%r11), %eax
	jmp	.L523
.L12536:
	movq	-232(%rbp), %rdi
	orb	$64, 18(%rdi)
	movq	80(%rdi), %rsi
	movq	-224(%rbp), %r12
	movq	current_class_type(%rip), %rax
	movq	%rsi, 56(%r12)
	cmpq	$0, 32(%rax)
	jne	.L534
	movq	-1672(%rbp), %r10
	movq	144(%rax), %r9
	movq	8(%r10), %rdx
	movq	%rdx, 72(%r9)
	jmp	.L534
.L629:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L12538
	cmpq	$0, 32(%rdx)
	jne	.L536
	movq	-1680(%rbp), %r11
	movq	80(%rdx), %r8
	movl	$136, %esi
	cmpb	$32, 16(%r11)
	movq	72(%r8), %rbx
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L639
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	-224(%rbp), %rdi
	cmpb	$1, 16(%rdi)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-224(%rbp), %r12
	movl	24(%r12), %eax
	movq	32(%r12), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1680(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-232(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L641:
	movq	-1680(%rbp), %rbx
	movq	current_class_type(%rip), %r8
	movq	152(%rbx), %r11
	movq	%r8, 64(%rbx)
	movq	%r8, 16(%r11)
	jmp	.L536
.L639:
	movq	-224(%rbp), %r10
	movq	-1680(%rbp), %r9
	movq	%r10, 72(%r9)
	jmp	.L641
.L12538:
	movq	-1680(%rbp), %r9
	movq	112(%rax), %rbx
	movl	$136, %esi
	cmpb	$32, 16(%r9)
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L634
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	-224(%rbp), %rcx
	cmpb	$1, 16(%rcx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-224(%rbp), %r8
	movl	24(%r8), %eax
	movq	32(%r8), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1680(%rbp), %rbx
	movq	%rax, 72(%rbx)
	movq	-232(%rbp), %r10
	movq	%r10, 8(%rax)
.L636:
	movq	current_function_decl(%rip), %r9
	movq	-1680(%rbp), %r12
	movq	%r9, 64(%r12)
	jmp	.L536
.L634:
	movq	-224(%rbp), %rdi
	movq	-1680(%rbp), %rax
	movq	%rdi, 72(%rax)
	jmp	.L636
.L12535:
	cmpb	$95, 1(%rax)
	jne	.L628
	movq	-1680(%rbp), %rsi
	orb	$64, 53(%rsi)
	jmp	.L628
.L12534:
	cmpq	$0, 72(%rbx)
	je	.L12539
.L10315:
	movq	-224(%rbp), %r11
	movq	32(%r11), %rax
	jmp	.L614
.L12539:
	movq	-1680(%rbp), %r10
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%r10), %r9
	movq	%r9, -240(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L609
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-1680(%rbp), %r11
	movq	%rax, 72(%r11)
	movq	-240(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L10312:
	movq	-224(%rbp), %r9
	movq	32(%r9), %rax
	jmp	.L614
.L609:
	movq	-1680(%rbp), %rcx
	movq	%r12, 72(%rcx)
	jmp	.L10314
.L12533:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L607
.L10313:
	movq	-224(%rbp), %r10
	movq	32(%r10), %rax
	jmp	.L614
.L603:
	movq	-1680(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -1680(%rbp)
	jmp	.L10315
.L12532:
	movq	global_binding_level(%rip), %rsi
	movl	$1, %r12d
	cmpq	%rsi, current_binding_level(%rip)
	je	.L585
	movq	-224(%rbp), %r8
	movq	48(%r8), %rdi
	testq	%rdi, %rdi
	movq	%rdi, %rcx
	jne	.L586
.L585:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L587
	movq	-224(%rbp), %rbx
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10025
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L588
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L12540
.L588:
	testq	%rcx, %rcx
	jne	.L10025
.L10026:
	movq	-224(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10025
	movq	-224(%rbp), %r10
	movq	40(%r10), %rcx
.L586:
	testq	%rcx, %rcx
	je	.L590
.L10025:
	cmpb	$32, 16(%rcx)
	je	.L590
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L590
	movq	-224(%rbp), %r11
	movq	8(%r11), %rax
	testq	%rax, %rax
	je	.L598
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L10929
	testl	%r12d, %r12d
	jle	.L12541
.L10929:
	movq	%rax, %rcx
.L590:
	movq	-232(%rbp), %rsi
	cmpq	80(%rsi), %rcx
	jne	.L584
	jmp	.L10312
.L12541:
	testl	%edx, %edx
	jg	.L10929
	testl	%r12d, %r12d
	je	.L590
	movq	-224(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L10929
.L598:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L590
.L12540:
	xorl	%ecx, %ecx
	movq	-224(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L590
	testq	%rax, %rax
	je	.L10026
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L588
.L587:
	movq	-224(%rbp), %rdx
	movq	40(%rdx), %rcx
	jmp	.L586
.L12531:
	cmpb	$95, 1(%rax)
	jne	.L583
	jmp	.L614
.L577:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L578
	movq	-224(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
	jmp	.L10928
.L576:
	movq	80(%rcx), %rax
	movq	%rax, -1680(%rbp)
	jmp	.L581
.L12530:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L542
	movq	80(%rax), %rbx
.L542:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L575
.L574:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L551
	cmpl	$32, %eax
	je	.L12542
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L545:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L575
	jmp	.L574
.L12542:
	movq	8(%rbx), %rdx
	movq	-232(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%rdx), %rcx
	movq	72(%rcx), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L10872
	movq	64(%rbx), %rbx
	jmp	.L545
.L10872:
	movq	32(%rax), %rcx
	jmp	.L575
.L551:
	movq	-232(%rbp), %rax
	movq	80(%rax), %r10
	movq	56(%r10), %rbx
	testq	%rbx, %rbx
	je	.L540
	movq	global_binding_level(%rip), %r11
	cmpq	%r11, current_binding_level(%rip)
	je	.L554
	movq	48(%rbx), %r12
	testq	%r12, %r12
	movq	%r12, %rcx
	jne	.L555
.L554:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L556
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L10023
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L557
	movq	144(%rdi), %rsi
	testb	$1, 3(%rsi)
	jne	.L12543
.L557:
	testq	%rcx, %rcx
	jne	.L10023
.L10024:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L10023
.L556:
	movq	40(%rbx), %rcx
.L555:
	testq	%rcx, %rcx
	je	.L10219
.L10023:
	cmpb	$32, 16(%rcx)
	je	.L575
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L575
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L567
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L10927
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L12544
.L10927:
	movq	%rax, %rcx
	jmp	.L575
.L12544:
	testl	%edx, %edx
	jg	.L10927
	movl	$1, %r8d
	testl	%r8d, %r8d
	je	.L575
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L10927
.L567:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L575
	jmp	.L10927
.L12543:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L575
	testq	%rax, %rax
	je	.L10024
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L557
.L538:
	movq	-224(%rbp), %rsi
	movq	-232(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -248(%rbp)
	je	.L615
	movq	-224(%rbp), %r12
	movq	8(%r12), %rsi
	movq	%r12, %rdi
.L10930:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L616:
	movq	-232(%rbp), %r9
	movq	-224(%rbp), %r8
	movq	%r9, 8(%r8)
	movq	-248(%rbp), %rdi
	movq	56(%rdi), %r12
	testq	%r12, %r12
	je	.L619
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L620
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L620:
	movq	decl_obstack+24(%rip), %rdx
	movq	-248(%rbp), %rbx
	leaq	8(%rdx), %r10
	movq	%rbx, 56(%r12)
	cmpq	decl_obstack+32(%rip), %r10
	ja	.L12545
.L622:
	movq	%rdx, %r11
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	-248(%rbp), %rdx
	movq	%rdx, (%r11)
	cmpb	$32, 16(%rdx)
	je	.L12546
.L619:
	movq	-248(%rbp), %r12
	movq	%r12, -1680(%rbp)
	jmp	.L10315
.L12546:
	cmpq	$0, 72(%rdx)
	jne	.L619
	movq	8(%rdx), %rsi
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movq	%rsi, -256(%rbp)
	movl	$136, %esi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L624
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-248(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-256(%rbp), %rdx
	movq	%rdx, 8(%rax)
	jmp	.L619
.L624:
	movq	-248(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L619
.L12545:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L622
.L615:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L616
	movq	-224(%rbp), %rax
	movq	8(%rax), %rsi
	movq	%rax, %rdi
	jmp	.L10930
.L12529:
	cmpq	$0, class_binding_level(%rip)
	je	.L537
	movq	144(%rax), %rsi
	testb	$16, 3(%rsi)
	jne	.L536
	jmp	.L537
.L12528:
	movq	-224(%rbp), %rdi
	movq	-232(%rbp), %rsi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%rbx)
	jmp	.L533
	.p2align 6,,7
.L504:
	movq	-1704(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L10306
	movl	flag_traditional(%rip), %esi
	testl	%esi, %esi
	jne	.L10310
	testb	$8, 18(%r14)
	je	.L10310
	testb	$8, 18(%r13)
	jne	.L10310
	testb	$9, 53(%r13)
	jne	.L10310
	cmpq	%r13, current_function_decl(%rip)
	je	.L12547
.L513:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L514
	cmpq	$0, 8(%rax)
	jne	.L12548
.L514:
	movq	-1704(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L10926:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-1704(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L10310
.L12548:
	movq	-1704(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L10926
.L12547:
	movq	-1704(%rbp), %r13
	movq	%r13, current_function_decl(%rip)
	jmp	.L513
	.p2align 6,,7
.L12506:
	cmpq	$0, 64(%rsi)
	jne	.L502
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L502
.L12505:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -1704(%rbp)
	call	error_with_decl
	jmp	.L500
.L493:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L495
.L499:
	cmpq	%r14, 56(%rax)
	je	.L495
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L499
.L495:
	movq	%rax, -1704(%rbp)
	jmp	.L492
.L12504:
	movq	40(%r14), %r11
	movq	%r11, -1704(%rbp)
	jmp	.L492
.L12503:
	movq	56(%r13), %r14
	jmp	.L489
.L12502:
	testb	$32, 53(%r13)
	jne	.L487
	jmp	.L488
.L10302:
	movzbl	16(%r13), %edx
	jmp	.L487
	.p2align 6,,7
.L482:
	movl	$8, %edi
	xorl	%eax, %eax
	call	make_unsigned_type
	jmp	.L483
.L11253:
	leal	(%rcx,%rcx), %eax
	movq	builtin_type_tdescs_arr(%rip), %rdi
	movslq	%eax,%rsi
	movl	%eax, builtin_type_tdescs_max(%rip)
	xorl	%eax, %eax
	salq	$3, %rsi
	call	xrealloc
	movl	builtin_type_tdescs_len(%rip), %edx
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L478
.L468:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L469
	movq	8(%r12), %rsi
	movq	%r12, %rdi
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	jmp	.L10924
.L467:
	movl	$32, %edi
	movq	%r12, %rsi
	movq	%r13, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12549
.L10925:
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L474:
	movq	$0, 8(%r12)
	jmp	.L466
.L12549:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L474
	jmp	.L10925
	.p2align 6,,7
.L178:
	movq	current_binding_level(%rip), %rbx
	movq	%rbx, 56(%rdi)
	jmp	.L179
.L176:
	movl	$72, %edi
	xorl	%eax, %eax
	call	xmalloc
	movq	%rax, %rdi
	jmp	.L177
.L11252:
	cmpq	$0, named_labels(%rip)
	movl	$134, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	jmp	.L175
.L11251:
	movl	$800, %edi
	xorl	%eax, %eax
	movl	$100, builtin_type_tdescs_max(%rip)
	call	xmalloc
	movq	%rax, builtin_type_tdescs_arr(%rip)
	jmp	.L174
.LFE2:
.Lfe2:
	.size	init_decl_processing,.Lfe2-init_decl_processing
	.align 2
	.p2align 4,,15
.globl define_function
	.type	define_function,@function
define_function:
.LFB3:
	subq	$40, %rsp
.LCFI8:
	xorl	%eax, %eax
	movq	%rbx, 8(%rsp)
.LCFI9:
	movq	%rbp, 16(%rsp)
.LCFI10:
	movq	%r12, 24(%rsp)
.LCFI11:
	movq	%rsi, %rbx
	movq	%rcx, %rbp
	movq	%r13, 32(%rsp)
.LCFI12:
	movq	%r8, %r12
	movl	%edx, %r13d
	call	get_identifier
	movq	%rax, %rsi
	movq	%rbx, %rdx
	movl	$29, %edi
	xorl	%eax, %eax
	call	build_lang_decl
	orb	$1, 53(%rax)
	orb	$8, 18(%rax)
	movq	%rax, %rbx
	testq	%rbp, %rbp
	je	.L12551
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	*%rbp
.L12551:
	testq	%r12, %r12
	je	.L12552
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	%rax, 112(%rbx)
.L12552:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	make_function_rtl
	testl	%r13d, %r13d
	je	.L12553
	orb	$16, 53(%rbx)
	movl	%r13d, 128(%rbx)
.L12553:
	movq	%rbx, %rax
	movq	16(%rsp), %rbp
	movq	24(%rsp), %r12
	movq	8(%rsp), %rbx
	movq	32(%rsp), %r13
	addq	$40, %rsp
	ret
.LFE3:
.Lfe3:
	.size	define_function,.Lfe3-define_function
.globl debug_temp_inits
	.data
	.align 4
	.type	debug_temp_inits,@object
	.size	debug_temp_inits,4
debug_temp_inits:
	.long	1
	.section	.rodata.str1.32
	.align 32
.LC136:
	.string	"parser lost in parsing declaration of `%s'"
	.align 32
.LC134:
	.string	"storage size of `%s' isn't known"
	.align 32
.LC135:
	.string	"storage size of `%s' isn't constant"
	.section	.rodata.str1.1
.LC133:
	.string	"zero-size array `%s'"
.LC132:
	.string	"array size missing in `%s'"
	.section	.rodata.str1.32
	.align 32
.LC131:
	.string	"initializer fails to determine size of `%s'"
	.align 32
.LC127:
	.string	"`%s' must be initialized by constructor, not by `{...}'"
	.section	.rodata.str1.1
.LC130:
	.string	"uninitialized const `%s'"
	.section	.rodata.str1.32
	.align 32
.LC129:
	.string	"structure `%s' with uninitialized reference members"
	.align 32
.LC128:
	.string	"structure `%s' with uninitialized const members"
	.align 32
.LC117:
	.string	"variable declared as reference not initialized"
	.align 32
.LC123:
	.string	"invalid type conversion for reference"
	.align 32
.LC126:
	.string	"type mismatch in initialization of `%s' (use `const')"
	.align 32
.LC125:
	.string	"constructor failed to build reference initializer"
	.section	.rodata.str1.1
.LC124:
	.string	"ambiguous pointer conversion"
	.section	.rodata.str1.32
	.align 32
.LC119:
	.string	"cannot initialize a reference to a volatile T with a const T"
	.align 32
.LC120:
	.string	"cannot initialize a reference to a const T with a volatile T"
	.align 32
.LC121:
	.string	"cannot initialize a reference to T with a const T"
	.align 32
.LC122:
	.string	"cannot initialize a reference to T with a volatile T"
	.align 32
.LC118:
	.string	"initialization of `%s' from dissimilar reference type"
	.align 32
.LC116:
	.string	"shadowing previous type declaration of `%s'"
	.align 32
.LC115:
	.string	"assignment (not initialization) in declaration"
	.text
	.align 2
	.p2align 4,,15
.globl finish_decl
	.type	finish_decl,@function
finish_decl:
.LFB4:
	pushq	%rbp
.LCFI13:
	xorl	%eax, %eax
	movq	%rsp, %rbp
.LCFI14:
	pushq	%r15
.LCFI15:
	pushq	%r14
.LCFI16:
	movq	%rsi, %r14
	pushq	%r13
.LCFI17:
	movq	%rdi, %r13
	pushq	%r12
.LCFI18:
	pushq	%rbx
.LCFI19:
	movq	%rdx, %rbx
	subq	$296, %rsp
.LCFI20:
	movq	$0, -48(%rbp)
	movl	%ecx, -52(%rbp)
	call	allocation_temporary_p
	testq	%r13, %r13
	movl	$0, -316(%rbp)
	movl	%eax, -60(%rbp)
	movq	$0, -224(%rbp)
	je	.L13135
	testq	%rbx, %rbx
	je	.L12557
	movq	40(%rbx), %rax
	movq	$0, 120(%r13)
	movq	%rax, -224(%rbp)
.L12557:
	xorl	%edx, %edx
	movq	8(%r13), %r15
	cmpq	$0, 40(%r13)
	sete	%dl
	movl	%edx, -56(%rbp)
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	movl	%edx, %ecx
	je	.L13136
	cmpq	error_mark_node(%rip), %r15
	je	.L12567
	testb	$64, 46(%r15)
	je	.L12567
	movq	144(%r15), %rbx
	testb	$16, 3(%rbx)
	jne	.L13137
.L12567:
	cmpb	$29, %cl
	je	.L12568
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	target_type
	movzbl	16(%r13), %edx
	movq	%rax, -232(%rbp)
.L12568:
	movzbl	53(%r13), %edi
	testb	$1, %dil
	movl	%edi, %ecx
	jne	.L12569
	movzbl	17(%r13), %eax
	testb	$32, %al
	je	.L12569
	testb	$16, 46(%r15)
	je	.L12569
	andb	$-33, %al
	movl	$1, -316(%rbp)
	movb	%al, 17(%r13)
	.p2align 4,,7
.L12569:
	cmpb	$36, %dl
	je	.L13138
	testq	%r14, %r14
	je	.L12574
	cmpq	$0, 88(%r13)
	je	.L12583
.L12574:
	andb	$1, %cl
	jne	.L12573
	cmpb	$15, 16(%r15)
	je	.L13139
.L12573:
	movq	current_function_decl(%rip), %rdi
	xorl	%eax, %eax
	movq	%r13, %rsi
	call	GNU_xref_decl
	movzbl	16(%r13), %edx
	cmpb	$36, %dl
	movl	%edx, %ecx
	je	.L12665
	testb	$1, 53(%r13)
	jne	.L12665
	cmpb	$31, %dl
	je	.L13140
	testq	%r14, %r14
	je	.L12668
	testb	$16, 46(%r15)
	je	.L12669
	cmpb	$18, 16(%r15)
	je	.L13141
	cmpb	$43, 16(%r14)
	je	.L13142
.L12671:
	movq	global_binding_level(%rip), %rdx
	cmpq	%rdx, current_binding_level(%rip)
	je	.L12690
.L13133:
	movq	error_mark_node(%rip), %rax
.L13116:
	movq	%rax, 88(%r13)
	.p2align 4,,7
.L12665:
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L13143
.L12694:
	cmpb	$18, 16(%r15)
	je	.L13144
.L13086:
	movzbl	16(%r13), %edx
.L12695:
	cmpb	$33, %dl
	je	.L13145
	cmpb	$34, %dl
	je	.L13146
.L12719:
	cmpb	$33, %dl
	je	.L12724
	cmpb	$29, %dl
	je	.L12724
	cmpb	$35, %dl
	je	.L12724
.L12566:
	movl	-52(%rbp), %eax
	testl	%eax, %eax
	jne	.L13147
.L13064:
	movl	-316(%rbp), %r14d
	testl	%r14d, %r14d
	je	.L13065
	orb	$32, 17(%r13)
.L13065:
	movl	flag_cadillac(%rip), %ecx
	testl	%ecx, %ecx
	jne	.L13148
.L12554:
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	leave
	ret
	.p2align 6,,7
.L13148:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	cadillac_finish_decl
	jmp	.L12554
	.p2align 6,,7
.L13147:
	xorl	%eax, %eax
	call	pop_obstacks
	jmp	.L13064
	.p2align 6,,7
.L12724:
	movl	flag_traditional(%rip), %edi
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %r8
	cmpq	%r8, current_binding_level(%rip)
	sete	%bl
	xorl	%r12d, %r12d
	testl	%edi, %edi
	jne	.L12726
	testb	$4, 18(%r13)
	je	.L12725
	testb	$32, 46(%r15)
	je	.L12725
.L12726:
	xorl	%eax, %eax
	call	allocation_temporary_p
	testl	%eax, %eax
	movl	$1, %eax
	cmovne	%eax, %r12d
.L12725:
	testl	%r12d, %r12d
	jne	.L13149
.L12727:
	cmpq	$0, -48(%rbp)
	je	.L12728
	movq	current_binding_level(%rip), %r10
	movzbl	66(%r10), %r9d
	andl	$15, %r9d
	cmpl	$3, %r9d
	je	.L13150
.L12728:
	movzbl	16(%r13), %edx
	cmpb	$33, %dl
	je	.L13151
.L12730:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L13152
.L12732:
	cmpb	$33, %dl
	je	.L13153
.L12740:
	movq	%r13, %rdi
	movq	-224(%rbp), %rsi
	movl	%ebx, %edx
.L13118:
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	rest_of_decl_compilation
.L12731:
	testl	%r12d, %r12d
	jne	.L13154
.L12747:
	cmpq	error_mark_node(%rip), %r15
	je	.L12748
	movq	144(%r15), %rax
	testq	%rax, %rax
	je	.L12748
	cmpq	$0, 128(%rax)
	jne	.L13155
.L12748:
	movzbl	16(%r15), %eax
	cmpb	$23, %al
	je	.L12751
	cmpb	$16, %al
	je	.L12751
.L12749:
	cmpb	$29, 16(%r13)
	je	.L13156
	testb	$1, 53(%r13)
	jne	.L12745
	movzbl	18(%r13), %eax
	testb	$4, %al
	je	.L13040
	cmpq	error_mark_node(%rip), %r15
	je	.L13040
	movzbl	46(%r15), %eax
	testb	$16, %al
	jne	.L13042
	testq	%r14, %r14
	je	.L13041
.L13042:
	movq	%r13, %rdi
	movq	%r14, %rsi
	xorl	%eax, %eax
	call	expand_static_init
.L13043:
	movl	flag_gc(%rip), %esi
	testl	%esi, %esi
	jne	.L13157
	.p2align 4,,7
.L12745:
	movq	64(%r13), %rdx
	testq	%rdx, %rdx
	je	.L12566
	movzbq	16(%rdx), %r12
	salq	$3, %r12
	addq	tree_code_type(%rip), %r12
	movq	(%r12), %r11
	cmpb	$116, (%r11)
	jne	.L12566
	movzbl	16(%r13), %eax
	cmpb	$33, %al
	je	.L13063
	cmpb	$29, %al
	jne	.L12566
	cmpq	$0, 32(%rdx)
	je	.L12566
	movq	80(%rdx), %rbx
	movq	current_class_name(%rip), %rdx
	cmpq	%rdx, 56(%rbx)
	jne	.L12566
.L13063:
	movl	$1, %edi
	xorl	%eax, %eax
	call	popclass
	jmp	.L12566
.L13157:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	type_needs_gc_entry
	testl	%eax, %eax
	je	.L12745
	movq	%r13, %rdi
	movq	%r15, %rsi
	xorl	%eax, %eax
	call	build_static_gc_entry
	jmp	.L12745
.L13041:
	testb	$32, %al
	je	.L13043
	movq	static_aggregates(%rip), %rdx
	xorl	%edi, %edi
	movq	%r13, %rsi
	xorl	%eax, %eax
	call	perm_tree_cons
	movq	%rax, static_aggregates(%rip)
	jmp	.L13043
	.p2align 6,,7
.L13040:
	movq	global_binding_level(%rip), %r9
	cmpq	%r9, current_binding_level(%rip)
	je	.L12745
	movl	-56(%rbp), %r8d
	testl	%r8d, %r8d
	je	.L13048
	testb	$4, %al
	jne	.L13048
	movzbl	17(%r13), %r10d
	andb	$1, %al
	leal	0(,%rax,8), %edi
	andb	$-9, %r10b
	orb	%dil, %r10b
	cmpq	$0, 40(%r13)
	movb	%r10b, 17(%r13)
	jne	.L13130
	movq	$0, 88(%r13)
.L13130:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	expand_decl
.L13050:
	cmpq	$0, 40(%r13)
	je	.L12745
	cmpq	error_mark_node(%rip), %r15
	je	.L12745
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	expand_decl_init
	testq	%r14, %r14
	jne	.L13058
	movzbl	46(%r15), %eax
	testb	$16, %al
	je	.L13057
.L13058:
	movq	24(%r13), %rdi
	movl	32(%r13), %esi
	xorl	%eax, %eax
	call	emit_line_note
	xorl	%eax, %eax
	xorl	%edx, %edx
	movq	%r13, %rdi
	movq	%r14, %rsi
	call	expand_aggr_init
	movzbl	46(%r15), %eax
.L13057:
	testb	$16, %al
	je	.L13059
	andb	$-2, 18(%r13)
.L13059:
	movq	-48(%rbp), %rsi
	testq	%rsi, %rsi
	je	.L12745
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	expand_decl_cleanup
	testl	%eax, %eax
	jne	.L12745
	movq	%r13, %rdi
	movl	$.LC136, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L12745
	.p2align 6,,7
.L13048:
	testb	$-128, 17(%r13)
	jne	.L13050
	cmpq	$0, 32(%r15)
	jne	.L13052
	cmpb	$18, 16(%r15)
	jne	.L13050
.L13052:
	cmpq	$0, 120(%r13)
	je	.L13130
	movq	-48(%rbp), %rsi
	testq	%rsi, %rsi
	je	.L13050
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	expand_decl_cleanup
	movq	$0, -48(%rbp)
	jmp	.L13050
	.p2align 6,,7
.L13156:
	testb	$32, 54(%r13)
	je	.L12745
	movq	24(%r15), %rbx
	movq	56(%r13), %rdx
	xorl	%eax, %eax
	movq	152(%r13), %r14
	movq	%r13, %rdi
	xorl	%r12d, %r12d
	movq	%rbx, -272(%rbp)
	movq	%rdx, -96(%rbp)
	movq	%r14, -104(%rbp)
	call	copy_decl_lang_specific
	testq	%rbx, %rbx
	je	.L12755
	cmpq	void_list_node(%rip), %rbx
	je	.L12755
.L13036:
	movq	-272(%rbp), %rbx
	cmpq	$0, 24(%rbx)
	jne	.L13158
.L12758:
	movq	-272(%rbp), %r12
	movq	(%r12), %rsi
	testq	%rsi, %rsi
	movq	%rsi, -272(%rbp)
	je	.L12755
	cmpq	void_list_node(%rip), %rsi
	jne	.L13036
.L12755:
	movq	-104(%rbp), %r15
	movq	%r15, 152(%r13)
	jmp	.L12745
.L13158:
	testq	%r12, %r12
	leaq	24(%r15), %r14
	movq	-96(%rbp), %rdi
	cmovne	%r12, %r14
	xorl	%eax, %eax
	xorl	%edx, %edx
	movq	$0, (%r14)
	movq	24(%r15), %rsi
	call	build_decl_overload
	movq	%r15, %rdx
	movq	-272(%rbp), %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	movq	%rdi, (%r14)
	movl	$29, %edi
	call	build_decl
	movzbl	53(%r13), %ecx
	movzbl	53(%rax), %edx
	movq	%rax, %r14
	andb	$1, %cl
	andb	$-2, %dl
	orb	%cl, %dl
	movb	%dl, 53(%rax)
	movq	112(%r14), %r8
	andb	$-9, %dl
	movzbl	18(%r13), %eax
	movzbl	18(%r14), %r10d
	andb	$8, %al
	andb	$-9, %r10b
	orb	%al, %r10b
	movb	%r10b, 18(%r14)
	orb	$1, %r10b
	movzbl	53(%r13), %r11d
	orb	$-128, 17(%r14)
	movb	%r10b, 18(%r14)
	movq	$0, 88(%r14)
	andb	$8, %r11b
	orb	%r11b, %dl
	movb	%dl, 53(%r14)
	movq	current_function_decl(%rip), %rax
	movq	current_binding_level(%rip), %r12
	movq	152(%r13), %r9
	cmpq	%rax, %r14
	movq	%r9, 152(%r14)
	movq	%r12, -312(%rbp)
	movq	%r8, -280(%rbp)
	je	.L13092
	movzbl	16(%r14), %ecx
	cmpb	$29, %cl
	je	.L13159
.L12761:
	movq	%rax, 64(%r14)
.L12760:
	cmpb	$32, %cl
	je	.L13160
.L12762:
	cmpq	$0, -280(%rbp)
	je	.L12763
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L13161
	movq	-280(%rbp), %rdx
	cmpq	$0, 48(%rdx)
	jne	.L12766
	xorl	%r12d, %r12d
.L12765:
	testq	%r12, %r12
	je	.L12783
	cmpq	error_mark_node(%rip), %r12
	je	.L13162
.L12773:
	testq	%r12, %r12
	je	.L13096
	cmpb	$34, 16(%r12)
	je	.L13163
.L12775:
	movl	32(%r12), %eax
	testq	%r12, %r12
	movq	24(%r12), %rbx
	movl	%eax, -108(%rbp)
	je	.L13096
	movzbl	16(%r12), %eax
	movzbl	16(%r14), %ecx
	cmpb	%cl, %al
	je	.L12777
	cmpb	$32, %al
	je	.L12783
	cmpb	$32, %cl
	je	.L13109
	xorl	%eax, %eax
	movq	%r14, %rdi
	movq	%r12, %rsi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L13096
.L12782:
	movq	error_mark_node(%rip), %rcx
	movq	120(%r13), %r14
	movq	%rcx, 88(%r12)
	movq	%r14, 120(%r12)
	jmp	.L12758
.L13096:
	movzbl	16(%r14), %ecx
.L12783:
	cmpb	$32, %cl
	je	.L13109
.L12791:
	movzbl	53(%r14), %edx
	testb	$1, %dl
	je	.L12929
	movq	-280(%rbp), %r9
	movq	40(%r9), %rax
	testq	%rax, %rax
	je	.L12929
	testb	$1, 53(%rax)
	jne	.L12930
	testb	$8, 18(%rax)
	je	.L12929
.L12930:
	andb	$8, %dl
	je	.L13164
.L12929:
	movl	flag_traditional(%rip), %r10d
	testl	%r10d, %r10d
	je	.L13104
	testb	$1, 53(%r14)
	je	.L13104
	movq	global_binding_level(%rip), %rsi
	cmpq	%rsi, current_binding_level(%rip)
	je	.L12933
	movq	-280(%rbp), %rax
	movq	48(%rax), %r11
	testq	%r11, %r11
	movq	%r11, %rcx
	jne	.L12934
.L12933:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L12935
	movq	-280(%rbp), %r8
	movq	56(%r8), %rcx
	testq	%rcx, %rcx
	jne	.L13079
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L12936
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L13165
.L12936:
	testq	%rcx, %rcx
	jne	.L13079
.L13080:
	movq	-280(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L13079
	movq	-280(%rbp), %rbx
	movq	40(%rbx), %rcx
.L12934:
	testq	%rcx, %rcx
	je	.L13082
.L13079:
	cmpb	$32, 16(%rcx)
	je	.L12938
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L12938
	movq	-280(%rbp), %r10
	movq	8(%r10), %rax
	testq	%rax, %rax
	je	.L12946
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L13127
	xorl	%r11d, %r11d
	testl	%r11d, %r11d
	jle	.L13166
.L13127:
	movq	%rax, %rcx
.L12938:
	testq	%rcx, %rcx
	jne	.L13104
.L13082:
	movq	global_binding_level(%rip), %r9
	movq	%r9, %rax
	movq	%r9, -312(%rbp)
.L12932:
	cmpq	%rax, -312(%rbp)
	je	.L13167
	movq	current_binding_level(%rip), %rbx
	movq	-280(%rbp), %rsi
	cmpq	%rax, %rbx
	movq	48(%rsi), %r12
	movq	40(%rsi), %r8
	movq	%rsi, %rdi
	je	.L13168
.L13128:
	movq	16(%rbx), %rdx
	movq	%r12, %rsi
	xorl	%eax, %eax
	movq	%r8, -328(%rbp)
	call	tree_cons
	movq	-328(%rbp), %r8
	movq	%rax, 16(%rbx)
.L12977:
	movq	-280(%rbp), %rcx
	testq	%r12, %r12
	movq	%r14, 48(%rcx)
	je	.L13169
.L12988:
	movq	96(%r14), %rax
	testq	%rax, %rax
	jne	.L12990
	testq	%r12, %r12
	je	.L12991
	testb	$1, 53(%r14)
	jne	.L12991
	cmpb	$34, 16(%r12)
	je	.L13170
.L12991:
	movl	warn_shadow(%rip), %r11d
	testl	%r11d, %r11d
	je	.L12990
	testb	$1, 53(%r14)
	jne	.L12990
	movl	32(%r14), %ecx
	testl	%ecx, %ecx
	je	.L12990
	testq	%rax, %rax
	jne	.L12990
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L12996
	cmpb	$34, 16(%r12)
	je	.L13171
.L12996:
	movq	-280(%rbp), %rsi
	cmpq	$0, 56(%rsi)
	je	.L12998
	movl	$.LC41, %edi
.L12997:
	testq	%rdi, %rdi
	jne	.L13172
.L12990:
	testq	%r12, %r12
	je	.L13105
	movq	-312(%rbp), %rax
	movq	-280(%rbp), %rdi
	movq	%r12, %rsi
	movq	16(%rax), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	-312(%rbp), %r12
	movq	%rax, 16(%r12)
.L13105:
	movzbl	16(%r14), %ecx
.L12975:
	leal	-128(%rcx), %edi
	cmpb	$1, %dil
	jbe	.L12763
	movq	8(%r14), %rdx
	cmpq	$0, 32(%rdx)
	jne	.L12763
	cmpb	$18, 16(%rdx)
	je	.L13173
.L13007:
	testb	$64, 46(%rdx)
	je	.L12763
.L13006:
	movq	-312(%rbp), %r10
	movzwl	64(%r10), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%r10)
	je	.L13174
.L13106:
	movzbl	16(%r14), %ecx
.L12763:
	cmpb	$32, %cl
	je	.L13175
.L13009:
	movq	-312(%rbp), %rdx
	cmpq	global_binding_level(%rip), %rdx
	movq	(%rdx), %rbx
	movq	%rbx, (%r14)
	movq	%r14, (%rdx)
	je	.L13176
.L13035:
	movq	%r14, %r12
	jmp	.L12782
.L13176:
	testb	$4, 17(%r14)
	jne	.L13035
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L13035
.L13175:
	cmpq	$0, -280(%rbp)
	je	.L13009
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L13010
	cmpq	class_binding_level(%rip), %rax
	je	.L13011
	movq	-280(%rbp), %r11
	movq	48(%r11), %rax
	testq	%rax, %rax
	je	.L13015
	cmpb	$32, 16(%rax)
	je	.L13013
.L13015:
	cmpq	$0, current_class_type(%rip)
	je	.L13010
	movq	-280(%rbp), %rsi
	movq	56(%rsi), %rax
	testq	%rax, %rax
	je	.L13010
	cmpb	$32, 16(%rax)
	je	.L13013
.L13010:
	movq	-280(%rbp), %rsi
	movq	40(%rsi), %rax
	testq	%rax, %rax
	je	.L13014
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L13013
	cmpb	$-127, %dl
	je	.L13177
.L13014:
	movq	current_class_name(%rip), %r9
	testq	%r9, %r9
	movq	%r9, -216(%rbp)
	je	.L13009
	movq	72(%r14), %rbx
	testq	%rbx, %rbx
	je	.L13178
.L13021:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L13025
	cmpq	class_binding_level(%rip), %rax
	je	.L13026
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L13030
	cmpb	$32, 16(%rax)
	je	.L13028
.L13030:
	cmpq	$0, current_class_type(%rip)
	je	.L13025
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L13025
	cmpb	$32, 16(%rax)
	je	.L13028
.L13025:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L13009
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L13028
	cmpb	$-127, %dl
	jne	.L13009
	movq	$0, 8(%rbx)
	jmp	.L13009
.L13028:
	movq	8(%rax), %r12
	movq	%r12, 8(%rbx)
	jmp	.L13009
.L13026:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L13030
.L13178:
	cmpb	$32, 16(%r14)
	movl	$136, %esi
	movq	56(%r14), %rbx
	sete	%r11b
	movq	8(%r14), %r12
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$137, %esi
	movq	-216(%rbp), %rdi
	cmpb	$1, 16(%rdi)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movl	$.LC35, %esi
	movq	-216(%rbp), %r8
	movl	24(%rbx), %eax
	addl	24(%r8), %eax
	movq	32(%r8), %rdx
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r14)
	movq	%r12, 8(%rax)
	movq	72(%r14), %rbx
	jmp	.L13021
.L13177:
	movq	$0, 8(%rsi)
	jmp	.L13014
.L13013:
	movq	8(%rax), %rcx
	movq	-280(%rbp), %rdx
	movq	%rcx, 8(%rdx)
	jmp	.L13014
.L13011:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L13015
.L13174:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L13106
.L13173:
	movq	8(%rdx), %r8
	testb	$64, 46(%r8)
	jne	.L13006
	jmp	.L13007
.L13172:
	movq	-280(%rbp), %rbx
	movq	32(%rbx), %rsi
.L13129:
	xorl	%eax, %eax
	call	warning
	jmp	.L12990
.L12998:
	testq	%r12, %r12
	je	.L13000
	movl	$.LC42, %edi
	jmp	.L12997
.L13000:
	testq	%r8, %r8
	movl	$.LC43, %r9d
	cmovne	%r9, %rdi
	jmp	.L12997
	.p2align 6,,7
.L13171:
	movl	$.LC40, %edi
	jmp	.L12997
.L13170:
	cmpb	$34, 16(%r14)
	je	.L12991
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r8
	movq	56(%r8), %rax
	je	.L12992
	movq	56(%rax), %rax
.L12992:
	movzbl	66(%rax), %r10d
	andl	$15, %r10d
	decl	%r10d
	jne	.L12990
	movq	-280(%rbp), %rdx
	movl	$.LC40, %edi
	movq	32(%rdx), %rsi
	jmp	.L13129
	.p2align 6,,7
.L13169:
	movzbl	53(%r14), %esi
	andb	$9, %sil
	decb	%sil
	je	.L13179
.L12980:
	testq	%r12, %r12
	jne	.L12988
	testq	%r8, %r8
	jne	.L12988
	testb	$1, 53(%r14)
	je	.L12988
	testb	$8, 18(%r14)
	je	.L12988
	movq	-280(%rbp), %rax
	orb	$8, 18(%rax)
	jmp	.L12988
	.p2align 6,,7
.L13179:
	testq	%r8, %r8
	je	.L12980
	cmpb	$29, 16(%r14)
	jne	.L12980
	cmpb	$29, 16(%r8)
	jne	.L12980
	movq	8(%r8), %rsi
	movq	8(%r14), %rdi
	xorl	%eax, %eax
	movl	$1, %edx
	movq	%r8, -328(%rbp)
	call	comptypes
	movq	-328(%rbp), %r8
	testl	%eax, %eax
	je	.L13180
	movzbl	53(%r8), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L12983
	movzbl	53(%r14), %r9d
	leal	0(,%rax,8), %ebx
	leaq	88(%r14), %rdx
	andb	$-9, %r9b
	orb	%bl, %r9b
	movb	%r9b, 53(%r14)
	cmpq	%r8, current_function_decl(%rip)
	je	.L12984
	movq	88(%r8), %rax
.L12985:
	movq	80(%r8), %rcx
	movq	136(%r8), %r9
	movq	%rax, (%rdx)
	movq	72(%r8), %rsi
	movzbl	17(%r14), %edi
	movq	%r9, 136(%r14)
	movq	%rcx, 80(%r14)
	movq	%rsi, 72(%r14)
	movzbl	17(%r8), %r11d
	movq	%r8, 96(%r14)
	andb	$127, %dil
	shrb	$7, %r11b
	movzbl	%r11b, %edx
	movl	%edx, %r10d
	salb	$7, %r10b
	orb	%r10b, %dil
	movb	%dil, 17(%r14)
	movzbl	53(%r8), %ecx
.L12983:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L12986
	movzbl	53(%r14), %ebx
	salb	$4, %al
	andb	$-17, %bl
	orb	%al, %bl
	movb	%bl, 53(%r14)
	movl	128(%r8), %eax
	movl	%eax, 128(%r14)
.L12986:
	movq	8(%r8), %rdx
	cmpq	$0, 24(%rdx)
	je	.L12980
	cmpq	$0, 88(%r8)
	je	.L12980
	movq	8(%r14), %rdi
	cmpq	$0, 24(%rdi)
	jne	.L12980
	movq	%rdx, 8(%r14)
	jmp	.L12980
.L12984:
	xorl	%eax, %eax
	jmp	.L12985
.L13180:
	movq	%r14, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	movq	-328(%rbp), %r8
	jmp	.L12980
	.p2align 6,,7
.L13168:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L12977
	movq	-280(%rbp), %rdi
	jmp	.L13128
.L13167:
	movzwl	16(%r14), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L13181
.L12952:
	movq	-280(%rbp), %rbx
	cmpq	$0, 40(%rbx)
	jne	.L12953
	testb	$8, 18(%r14)
	je	.L12953
	orb	$8, 18(%rbx)
.L12953:
	movzbl	16(%r14), %ecx
	cmpb	$32, %cl
	je	.L13182
.L12955:
	movq	-280(%rbp), %r12
	movq	%r14, 40(%r12)
	movzbl	16(%r14), %ecx
.L12954:
	movq	-280(%rbp), %rbx
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L12966
	movq	8(%rax), %rdx
	testq	%rdx, %rdx
	je	.L12956
	testb	$1, 18(%rdx)
	je	.L12956
	orb	$1, 18(%r14)
	movq	-280(%rbp), %rdx
	movq	72(%rdx), %rax
.L12956:
	testq	%rax, %rax
	je	.L12966
	movq	8(%rax), %rdx
	testq	%rdx, %rdx
	je	.L12961
	testb	$8, 17(%rdx)
	je	.L12961
	orb	$8, 17(%r14)
	movq	-280(%rbp), %rdi
	movq	72(%rdi), %rax
.L12961:
	testq	%rax, %rax
	je	.L12966
	cmpq	$0, 8(%rax)
	je	.L12966
	cmpb	$29, %cl
	je	.L13183
.L12969:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r14), %ecx
.L12966:
	movq	-280(%rbp), %rbx
	testb	$8, 18(%rbx)
	je	.L12975
	cmpb	$32, %cl
	je	.L12975
	testb	$8, 18(%r14)
	jne	.L12975
	testb	$1, 53(%r14)
	jne	.L12975
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L12971
	cmpq	$0, 8(%rax)
	jne	.L13184
.L12971:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L13134:
	xorl	%eax, %eax
	call	warning
	jmp	.L13105
.L13184:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L13134
.L13183:
	movq	8(%r14), %r11
	movq	integer_type_node(%rip), %r10
	cmpq	%r10, 8(%r11)
	jne	.L12969
	jmp	.L12966
	.p2align 6,,7
.L13182:
	testq	%r12, %r12
	je	.L12955
	cmpb	$32, 16(%r12)
	jne	.L12954
	jmp	.L12955
.L13181:
	testb	$8, 54(%r14)
	jne	.L12952
	andb	$-9, 18(%r14)
	jmp	.L12952
	.p2align 6,,7
.L13104:
	movq	global_binding_level(%rip), %rax
	jmp	.L12932
.L13166:
	testl	%edx, %edx
	jg	.L13127
	xorl	%esi, %esi
	testl	%esi, %esi
	je	.L12938
	movq	-280(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L13127
	.p2align 6,,7
.L12946:
	movq	8(%rcx), %r8
	cmpq	error_mark_node(%rip), %r8
	cmove	%r8, %rcx
	jmp	.L12938
.L13165:
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	-280(%rbp), %rsi
	cmpl	$-1, %edx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L12938
	testq	%rax, %rax
	je	.L13080
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L12936
	.p2align 6,,7
.L12935:
	movq	-280(%rbp), %rdi
	movq	40(%rdi), %rcx
	jmp	.L12934
.L13164:
	movq	8(%rax), %rsi
	movq	8(%r14), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L12929
	movq	%r14, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	-280(%rbp), %rdx
	movq	40(%rdx), %rdi
	call	warning_with_decl
	jmp	.L12929
	.p2align 6,,7
.L13109:
	movq	8(%r14), %rdx
	movq	80(%rdx), %rbx
	testq	%rbx, %rbx
	movq	%rbx, -304(%rbp)
	je	.L12793
	movzbl	16(%rbx), %eax
	cmpb	$32, %al
	je	.L12792
.L12793:
	movq	global_binding_level(%rip), %r11
	movq	%r14, -304(%rbp)
	cmpq	%r11, current_binding_level(%rip)
	jne	.L13097
	movq	%r14, 80(%rdx)
.L13097:
	movzbl	16(%r14), %eax
.L12796:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	-304(%rbp), %rax
	movq	56(%rax), %rbx
	testq	%rbx, %rbx
	je	.L12920
	cmpq	$0, 72(%rax)
	je	.L13185
.L12920:
	movq	8(%r14), %rbx
	movq	%rbx, -200(%rbp)
	movq	80(%rbx), %rax
	testq	%rax, %rax
	je	.L12791
	cmpq	$0, 56(%rax)
	je	.L12791
	movq	current_binding_level(%rip), %rbx
	movq	56(%r14), %rax
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -208(%rbp)
	je	.L12925
	movq	8(%rax), %rsi
	movq	%rax, %rdi
.L13126:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L12926:
	movq	-200(%rbp), %rcx
	movq	-208(%rbp), %rdi
	movq	%rcx, 8(%rdi)
	jmp	.L12791
.L12925:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L12926
	movq	-208(%rbp), %r8
	movq	8(%r8), %rsi
	movq	%r8, %rdi
	jmp	.L13126
.L13185:
	movq	current_class_name(%rip), %rcx
	movl	$136, %esi
	movq	%rcx, -184(%rbp)
	movq	8(%r14), %rdi
	movq	%rdi, -192(%rbp)
	cmpb	$32, 16(%r14)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	cmpq	$0, -184(%rbp)
	je	.L12921
	movq	-184(%rbp), %rax
	movl	$137, %esi
	cmpb	$1, 16(%rax)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movl	$.LC35, %esi
	movq	-184(%rbp), %r10
	movl	24(%rbx), %eax
	addl	24(%r10), %eax
	movq	32(%r10), %rdx
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r14)
	movq	-192(%rbp), %rdx
	movq	%rdx, 8(%rax)
	jmp	.L12920
.L12921:
	movq	%rbx, 72(%r14)
	jmp	.L12920
.L12792:
	movq	-304(%rbp), %rdi
	movq	current_binding_level(%rip), %rsi
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%rdi), %rcx
	movq	%rcx, -120(%rbp)
	jne	.L12796
	movq	32(%rcx), %rcx
	cmpb	$36, (%rcx)
	jne	.L12796
	cmpb	$95, 1(%rcx)
	jne	.L12796
	movq	class_binding_level(%rip), %rax
	movq	%r14, 80(%rdx)
	movq	8(%r14), %rcx
	testq	%rax, %rax
	movq	%rax, -288(%rbp)
	movq	%rcx, -128(%rbp)
	jne	.L12800
	testb	$-128, 66(%rsi)
	movq	%rsi, -288(%rbp)
	je	.L12800
.L12804:
	movq	-288(%rbp), %rbx
	movq	56(%rbx), %rsi
	testb	$-128, 66(%rsi)
	movq	%rsi, -288(%rbp)
	jne	.L12804
.L12800:
	movq	-288(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L13186
	movq	-288(%rbp), %r10
	movq	-120(%rbp), %rdi
	xorl	%eax, %eax
	movq	-128(%rbp), %rsi
	movq	8(%r10), %rdx
	call	saveable_tree_cons
	movq	-288(%rbp), %r9
	movq	%rax, 8(%r9)
.L12806:
	cmpq	$0, -120(%rbp)
	je	.L12807
	movq	-128(%rbp), %rcx
	cmpq	$0, 80(%rcx)
	jne	.L12808
	movq	-120(%rbp), %rdx
	movq	%rdx, 80(%rcx)
.L12808:
	movq	-120(%rbp), %r11
	movq	-128(%rbp), %rax
	cmpq	%rax, 8(%r11)
	je	.L12809
	cmpb	$21, 16(%rax)
	je	.L13187
.L12810:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L12812
	cmpq	$0, 32(%rax)
	je	.L12811
.L12812:
	movq	lang_name_cplusplus(%rip), %rsi
	cmpq	%rsi, current_lang_name(%rip)
	je	.L13188
.L12813:
	xorl	%ecx, %ecx
.L12848:
	testq	%rcx, %rcx
	jne	.L12849
.L13081:
	movq	-120(%rbp), %rsi
	movq	-128(%rbp), %rdx
	movl	$32, %edi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-128(%rbp), %rdi
	movq	%rax, -296(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-296(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L12850
	movq	-120(%rbp), %rcx
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
.L13123:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L12851:
	movq	-128(%rbp), %r11
	movq	-120(%rbp), %rdx
	movq	%r11, 8(%rdx)
.L12854:
	movq	-120(%rbp), %r9
	movq	32(%r9), %rax
	cmpb	$36, (%rax)
	je	.L13189
.L12856:
	movq	-128(%rbp), %rsi
	movq	80(%rsi), %rdx
	testq	%rdx, %rdx
	je	.L12887
	cmpb	$32, 16(%rdx)
	je	.L13190
.L12857:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L12876
	movq	-296(%rbp), %rcx
	movq	56(%rcx), %rsi
	testq	%rsi, %rsi
	movq	%rsi, -144(%rbp)
	je	.L13099
	movq	%rsi, %rax
	movq	56(%rsi), %rsi
	testq	%rsi, %rsi
	je	.L12878
	movq	24(%rbx), %rdx
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L12878:
	movq	decl_obstack+24(%rip), %rdx
	movq	-296(%rbp), %r8
	movq	-144(%rbp), %rax
	leaq	8(%rdx), %r11
	cmpq	decl_obstack+32(%rip), %r11
	movq	%r8, 56(%rax)
	ja	.L13191
.L12880:
	movq	-296(%rbp), %rbx
	movq	%rdx, %r9
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%r9)
	cmpb	$32, 16(%rbx)
	je	.L13192
	movq	-120(%rbp), %rbx
	movq	32(%rbx), %rax
.L12887:
	cmpb	$36, (%rax)
	je	.L13193
.L12901:
	movq	current_class_type(%rip), %rdx
	movq	-296(%rbp), %rax
	movq	-128(%rbp), %rcx
	testq	%rdx, %rdx
	movq	%rax, 80(%rcx)
	jne	.L12904
	cmpq	$0, current_function_decl(%rip)
	je	.L12903
.L12904:
	movq	lang_name_cplusplus(%rip), %r9
	cmpq	%r9, current_lang_name(%rip)
	je	.L12902
.L12903:
	movq	-120(%rbp), %r10
	movq	-296(%rbp), %rdi
	movq	%r10, 72(%rdi)
.L12809:
	movq	-288(%rbp), %rax
	movzbl	66(%rax), %r11d
	andl	$15, %r11d
	cmpl	$2, %r11d
	je	.L13194
.L12807:
	movq	-128(%rbp), %rdx
	movq	80(%rdx), %rax
	cmpb	$32, 16(%rax)
	je	.L13195
	movq	-128(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-128(%rbp), %r11
	movq	%rax, (%r11)
	movq	-304(%rbp), %r10
	movzbl	16(%r10), %eax
	jmp	.L12796
.L13195:
	movq	%rax, (%rdx)
	movq	-304(%rbp), %rsi
	movzbl	16(%rsi), %eax
	jmp	.L12796
.L13194:
	movq	-128(%rbp), %rdx
	orb	$64, 18(%rdx)
	movq	80(%rdx), %rdi
	movq	-120(%rbp), %r8
	movq	current_class_type(%rip), %rax
	movq	%rdi, 56(%r8)
	cmpq	$0, 32(%rax)
	jne	.L12807
	movq	-288(%rbp), %r9
	movq	144(%rax), %rcx
	movq	8(%r9), %rbx
	movq	%rbx, 72(%rcx)
	jmp	.L12807
.L12902:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L13196
	cmpq	$0, 32(%rdx)
	jne	.L12809
	movq	-296(%rbp), %rsi
	movq	80(%rdx), %rcx
	cmpb	$32, 16(%rsi)
	movq	72(%rcx), %rbx
	movl	$136, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L12912
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-120(%rbp), %rdi
	cmpb	$1, 16(%rdi)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-120(%rbp), %r11
	movl	24(%r11), %eax
	movq	32(%r11), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-296(%rbp), %r10
	movq	%rax, 72(%r10)
	movq	-128(%rbp), %r9
	movq	%r9, 8(%rax)
.L12914:
	movq	-296(%rbp), %r10
	movq	current_class_type(%rip), %r9
	movq	152(%r10), %rbx
	movq	%r9, 64(%r10)
	movq	%r9, 16(%rbx)
	jmp	.L12809
.L12912:
	movq	-120(%rbp), %rcx
	movq	-296(%rbp), %rsi
	movq	%rcx, 72(%rsi)
	jmp	.L12914
.L13196:
	movq	-296(%rbp), %r8
	movq	112(%rax), %rbx
	movl	$136, %esi
	cmpb	$32, 16(%r8)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L12907
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-120(%rbp), %r9
	cmpb	$1, 16(%r9)
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movq	-120(%rbp), %rsi
	movl	24(%rsi), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	movq	-120(%rbp), %rax
	movq	%rsp, %rdi
	movq	32(%rax), %rcx
	xorl	%eax, %eax
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-296(%rbp), %rdx
	movq	%rax, 72(%rdx)
	movq	-128(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L12909:
	movq	current_function_decl(%rip), %rbx
	movq	-296(%rbp), %r8
	movq	%rbx, 64(%r8)
	jmp	.L12809
.L12907:
	movq	-120(%rbp), %r11
	movq	-296(%rbp), %rdi
	movq	%r11, 72(%rdi)
	jmp	.L12909
.L13193:
	cmpb	$95, 1(%rax)
	jne	.L12901
	movq	-296(%rbp), %rdx
	orb	$64, 53(%rdx)
	jmp	.L12901
.L13192:
	cmpq	$0, 72(%rbx)
	je	.L13197
.L13101:
	movq	-120(%rbp), %rsi
	movq	32(%rsi), %rax
	jmp	.L12887
.L13197:
	movq	-296(%rbp), %r10
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$136, %esi
	movq	8(%r10), %rdi
	movq	%rdi, -152(%rbp)
	movl	$1, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L12882
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movl	$138, %esi
	movq	-144(%rbp), %r8
	cmpb	$1, 16(%r8)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	-144(%rbp), %r11
	movq	32(%rbx), %rdx
	movq	-144(%rbp), %rcx
	movl	$.LC35, %esi
	movl	24(%rcx), %eax
	movq	32(%r11), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-296(%rbp), %rbx
	movq	%rax, 72(%rbx)
	movq	-152(%rbp), %rsi
	movq	%rsi, 8(%rax)
.L13098:
	movq	-120(%rbp), %r11
	movq	32(%r11), %rax
	jmp	.L12887
.L12882:
	movq	-144(%rbp), %rdi
	movq	-296(%rbp), %r9
	movq	%rdi, 72(%r9)
	jmp	.L13101
.L13191:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L12880
.L13099:
	movq	-120(%rbp), %r8
	movq	32(%r8), %rax
	jmp	.L12887
.L12876:
	movq	-296(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -296(%rbp)
	jmp	.L13098
.L13190:
	movq	global_binding_level(%rip), %rdi
	cmpq	%rdi, current_binding_level(%rip)
	je	.L12858
	movq	-120(%rbp), %rbx
	movq	48(%rbx), %r10
	testq	%r10, %r10
	movq	%r10, %rcx
	jne	.L12859
.L12858:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L12860
	movq	-120(%rbp), %rdx
	movq	56(%rdx), %rcx
	testq	%rcx, %rcx
	jne	.L13077
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L12861
	movq	144(%rdi), %r11
	testb	$1, 3(%r11)
	jne	.L13198
.L12861:
	testq	%rcx, %rcx
	jne	.L13077
.L13078:
	movq	-120(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L13077
	movq	-120(%rbp), %r8
	movq	40(%r8), %rcx
.L12859:
	testq	%rcx, %rcx
	je	.L12863
.L13077:
	cmpb	$32, 16(%rcx)
	je	.L12863
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L12863
	movq	-120(%rbp), %rsi
	movq	8(%rsi), %rax
	testq	%rax, %rax
	je	.L12871
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L13124
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L13199
.L13124:
	movq	%rax, %rcx
.L12863:
	movq	-128(%rbp), %rdx
	cmpq	80(%rdx), %rcx
	jne	.L12857
	jmp	.L13098
.L13199:
	testl	%edx, %edx
	jg	.L13124
	movl	$1, %r10d
	testl	%r10d, %r10d
	je	.L12863
	movq	-120(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L13124
.L12871:
	movq	8(%rcx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rcx
	jmp	.L12863
.L13198:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	-120(%rbp), %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L12863
	testq	%rax, %rax
	je	.L13078
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L12861
.L12860:
	movq	-120(%rbp), %r9
	movq	40(%r9), %rcx
	jmp	.L12859
.L13189:
	cmpb	$95, 1(%rax)
	jne	.L12856
	jmp	.L12887
.L12850:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L12851
	movq	-120(%rbp), %rax
	movq	8(%rax), %rsi
	movq	%rax, %rdi
	jmp	.L13123
.L12849:
	movq	80(%rcx), %r8
	movq	%r8, -296(%rbp)
	jmp	.L12854
.L13188:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L12815
	movq	80(%rax), %rbx
.L12815:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L12848
.L12847:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L12824
	cmpl	$32, %eax
	je	.L13200
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L12818:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L12848
	jmp	.L12847
.L13200:
	movq	8(%rbx), %r9
	movq	-128(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%r9), %rcx
	movq	72(%rcx), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L13107
	movq	64(%rbx), %rbx
	jmp	.L12818
.L13107:
	movq	32(%rax), %rcx
	jmp	.L12848
.L12824:
	movq	-128(%rbp), %rax
	movq	80(%rax), %r10
	movq	56(%r10), %rbx
	testq	%rbx, %rbx
	je	.L12813
	movq	global_binding_level(%rip), %rdx
	cmpq	%rdx, current_binding_level(%rip)
	je	.L12827
	movq	48(%rbx), %r11
	testq	%r11, %r11
	movq	%r11, %rcx
	jne	.L12828
.L12827:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L12829
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L13075
	movq	32(%rdi), %r8
	testq	%r8, %r8
	movq	%r8, -136(%rbp)
	jne	.L12830
	movq	144(%rdi), %rsi
	testb	$1, 3(%rsi)
	jne	.L13201
.L12830:
	testq	%rcx, %rcx
	jne	.L13075
.L13076:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L13075
.L12829:
	movq	40(%rbx), %rcx
.L12828:
	testq	%rcx, %rcx
	je	.L13081
.L13075:
	cmpb	$32, 16(%rcx)
	je	.L12848
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L12848
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L12840
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L13122
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L13202
.L13122:
	movq	%rax, %rcx
	jmp	.L12848
.L13202:
	testl	%edx, %edx
	jg	.L13122
	movl	$1, %r10d
	testl	%r10d, %r10d
	je	.L12848
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L13122
.L12840:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L12848
	jmp	.L13122
.L13201:
	movl	$1, %r9d
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %r9d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L12848
	testq	%rax, %rax
	je	.L13076
	cmpb	$32, 16(%rax)
	cmovne	-136(%rbp), %rcx
	jmp	.L12830
.L12811:
	movq	-120(%rbp), %rsi
	movq	-128(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -160(%rbp)
	je	.L12888
	movq	-120(%rbp), %r10
	movq	8(%r10), %rsi
	movq	%r10, %rdi
.L13125:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L12889:
	movq	-120(%rbp), %rsi
	movq	-128(%rbp), %rcx
	movq	%rcx, 8(%rsi)
	movq	-160(%rbp), %rbx
	movq	56(%rbx), %rsi
	testq	%rsi, %rsi
	movq	%rsi, -168(%rbp)
	je	.L12892
	movq	%rsi, %rax
	movq	56(%rsi), %rsi
	testq	%rsi, %rsi
	je	.L12893
	movq	class_binding_level(%rip), %rbx
	movq	%rax, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L12893:
	movq	-160(%rbp), %rdx
	movq	-168(%rbp), %rax
	movq	%rdx, 56(%rax)
	movq	decl_obstack+24(%rip), %rdx
	leaq	8(%rdx), %r8
	cmpq	decl_obstack+32(%rip), %r8
	ja	.L13203
.L12895:
	movq	-160(%rbp), %rbx
	movq	%rdx, %r9
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rbx, (%r9)
	cmpb	$32, 16(%rbx)
	je	.L13204
.L12892:
	movq	-160(%rbp), %r10
	movq	%r10, -296(%rbp)
	jmp	.L13101
.L13204:
	cmpq	$0, 72(%rbx)
	jne	.L12892
	movq	-160(%rbp), %r10
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$136, %esi
	movq	8(%r10), %rdi
	movq	%rdi, -176(%rbp)
	movl	$1, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L12897
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movl	$138, %esi
	movq	-168(%rbp), %rdx
	cmpb	$1, 16(%rdx)
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movq	-168(%rbp), %r8
	movq	32(%rbx), %rdx
	movq	-168(%rbp), %rsi
	movq	32(%r8), %rcx
	movl	24(%rsi), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-160(%rbp), %rbx
	movq	%rax, 72(%rbx)
	movq	-176(%rbp), %r11
	movq	%r11, 8(%rax)
	jmp	.L12892
.L12897:
	movq	-168(%rbp), %rdi
	movq	-160(%rbp), %r9
	movq	%rdi, 72(%r9)
	jmp	.L12892
.L13203:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L12895
.L12888:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L12889
	movq	-120(%rbp), %r11
	movq	8(%r11), %rsi
	movq	%r11, %rdi
	jmp	.L13125
.L13187:
	cmpq	$0, class_binding_level(%rip)
	je	.L12810
	movq	144(%rax), %rdi
	testb	$16, 3(%rdi)
	jne	.L12809
	jmp	.L12810
.L13186:
	movq	-120(%rbp), %rdi
	movq	-128(%rbp), %rsi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%rbx)
	jmp	.L12806
	.p2align 6,,7
.L12777:
	xorl	%eax, %eax
	movq	%r14, %rdi
	movq	%r12, %rsi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L13096
	movl	flag_traditional(%rip), %r8d
	testl	%r8d, %r8d
	jne	.L12782
	movq	-280(%rbp), %r9
	testb	$8, 18(%r9)
	je	.L12782
	testb	$8, 18(%r14)
	jne	.L12782
	testb	$9, 53(%r14)
	jne	.L12782
	cmpq	%r14, current_function_decl(%rip)
	je	.L13205
.L12786:
	movq	-280(%rbp), %r10
	movq	72(%r10), %rax
	testq	%rax, %rax
	je	.L12787
	cmpq	$0, 8(%rax)
	jne	.L13206
.L12787:
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L13121:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	%r12, %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	-108(%rbp), %esi
	movq	%rax, %rcx
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L12782
.L13206:
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L13121
.L13205:
	movq	%r12, current_function_decl(%rip)
	jmp	.L12786
	.p2align 6,,7
.L13163:
	cmpq	$0, 64(%r12)
	jne	.L12775
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L12775
.L13162:
	movq	%r14, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	xorl	%r12d, %r12d
	call	error_with_decl
	jmp	.L12773
.L12766:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L12768
.L12772:
	movq	-280(%rbp), %r12
	cmpq	%r12, 56(%rax)
	je	.L12768
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L12772
.L12768:
	movq	%rax, %r12
	jmp	.L12765
.L13161:
	movq	-280(%rbp), %rbx
	movq	40(%rbx), %r12
	jmp	.L12765
.L13160:
	movq	56(%r14), %rsi
	movq	%rsi, -280(%rbp)
	jmp	.L12762
.L13159:
	andb	$32, %dl
	jne	.L12760
	jmp	.L12761
.L13092:
	movzbl	16(%r14), %ecx
	jmp	.L12760
	.p2align 6,,7
.L12751:
	movq	8(%r15), %rsi
	movq	144(%rsi), %rax
	testq	%rax, %rax
	je	.L12749
	cmpq	$0, 128(%rax)
	je	.L12749
	movq	%r13, %rdi
.L13120:
	xorl	%eax, %eax
	call	abstract_virtuals_error
	jmp	.L12749
.L13155:
	movq	%r13, %rdi
	movq	%r15, %rsi
	jmp	.L13120
.L13154:
	xorl	%eax, %eax
	call	resume_temporary_allocation
	jmp	.L12747
	.p2align 6,,7
.L13153:
	cmpq	$0, 152(%r13)
	je	.L12740
	testb	$16, 54(%r13)
	je	.L12740
	testb	$4, 18(%r13)
	je	.L12745
	testq	%r14, %r14
	jne	.L12740
	orb	$1, 53(%r13)
	movq	%r13, %rdi
	movq	-224(%rbp), %rsi
	movl	$1, %edx
.L13119:
	xorl	%eax, %eax
	call	make_decl_rtl
	jmp	.L12731
.L13152:
	movq	88(%r13), %rdi
	testq	%rdi, %rdi
	je	.L12732
	cmpq	error_mark_node(%rip), %rdi
	je	.L12732
	cmpq	empty_init_node(%rip), %rdi
	je	.L12732
	xorl	%eax, %eax
	call	save_expr
	cmpq	$0, -224(%rbp)
	movq	%rax, 88(%r13)
	jne	.L13207
.L12733:
	testl	%ebx, %ebx
	jne	.L13074
	movl	16(%r13), %eax
	andl	$786688, %eax
	cmpl	$262144, %eax
	je	.L13208
.L12734:
	testl	%ebx, %ebx
	je	.L12736
.L13074:
	movzbl	18(%r13), %edx
	movl	%edx, %eax
	orb	$1, %al
	testb	$4, %al
	movb	%al, 18(%r13)
	je	.L12737
	movl	interface_unknown(%rip), %ecx
	testl	%ecx, %ecx
	jne	.L12737
	orb	$9, %dl
	movzbl	53(%r13), %esi
	movb	%dl, 18(%r13)
	movzbl	interface_only(%rip), %edi
	andb	$-2, %sil
	andb	$1, %dil
	orb	%dil, %sil
	movb	%sil, 53(%r13)
.L12737:
	movq	-224(%rbp), %rsi
	movq	%r13, %rdi
	movl	%ebx, %edx
	jmp	.L13119
.L12736:
	movq	-224(%rbp), %rsi
	movq	%r13, %rdi
	xorl	%edx, %edx
	jmp	.L13118
.L13208:
	testb	$1, 53(%r13)
	jne	.L12734
	testb	$32, 46(%r15)
	jne	.L12734
	movzbl	52(%r13), %eax
	cmpb	$16, %al
	je	.L12734
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	gen_reg_rtx
	xorl	%edx, %edx
	movq	88(%r13), %rdi
	movq	%rax, %rsi
	movq	%rax, 120(%r13)
	xorl	%eax, %eax
	call	store_expr
	orb	$-128, 17(%r13)
	jmp	.L12731
	.p2align 6,,7
.L13207:
	movq	-224(%rbp), %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	%rax, 112(%r13)
	jmp	.L12733
	.p2align 6,,7
.L13151:
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L12729
	testb	$4, 18(%r13)
	je	.L13209
.L12729:
	cmpb	$33, %dl
	jne	.L12730
	testb	$32, 53(%r13)
	je	.L12730
	movq	%r13, %rdi
	xorl	%esi, %esi
	movl	%ebx, %edx
	xorl	%eax, %eax
	call	make_decl_rtl
	jmp	.L12731
.L13209:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	type_needs_gc_entry
	testl	%eax, %eax
	jne	.L13210
.L13091:
	movzbl	16(%r13), %edx
	jmp	.L12729
.L13210:
	movl	current_function_obstack_index(%rip), %edi
	xorl	%eax, %eax
	incl	%edi
	movl	%edi, current_function_obstack_index(%rip)
	call	size_int
	movq	%rax, 80(%r13)
	jmp	.L13091
.L13150:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	pop_implicit_try_blocks
	movq	current_binding_level(%rip), %r11
	andb	$-5, 67(%r11)
	jmp	.L12728
.L13149:
	xorl	%eax, %eax
	call	end_temporary_allocation
	jmp	.L12727
	.p2align 6,,7
.L13146:
	testb	$32, 46(%r15)
	je	.L12719
	movl	-60(%rbp), %ebx
	testl	%ebx, %ebx
	jne	.L13211
.L12721:
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	maybe_build_cleanup
	movl	-60(%rbp), %edx
	movq	%rax, -48(%rbp)
	testl	%edx, %edx
	jne	.L13212
.L13090:
	movzbl	16(%r13), %edx
	jmp	.L12719
.L13212:
	xorl	%eax, %eax
	call	resume_temporary_allocation
	jmp	.L13090
.L13211:
	xorl	%eax, %eax
	call	end_temporary_allocation
	jmp	.L12721
	.p2align 6,,7
.L13145:
	testb	$4, 18(%r13)
	je	.L12707
	cmpq	$0, 40(%r13)
	jne	.L12707
	movzbl	53(%r13), %eax
	testb	$1, %al
	je	.L12709
	cmpq	$0, 88(%r13)
	je	.L12708
.L12709:
	movq	%r13, %rdi
	movl	$.LC134, %esi
	xorl	%eax, %eax
	call	error_with_decl
	movzbl	53(%r13), %eax
.L12708:
	xorl	%r14d, %r14d
.L12710:
	testb	$1, %al
	jne	.L12715
	testb	$4, 18(%r13)
	je	.L12714
.L12715:
	movq	40(%r13), %rdx
	testq	%rdx, %rdx
	je	.L12714
	testb	$2, 17(%rdx)
	je	.L13213
.L12714:
	testb	$1, %al
	jne	.L13090
	testb	$32, 46(%r15)
	je	.L13090
	xorl	%eax, %eax
	call	suspend_momentary
	testq	%r14, %r14
	movl	%eax, %ebx
	je	.L12717
	cmpb	$52, 16(%r14)
	je	.L13214
.L12717:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	maybe_build_cleanup
	movq	%rax, -48(%rbp)
.L12718:
	movl	%ebx, %edi
	xorl	%eax, %eax
	call	resume_momentary
	jmp	.L13090
.L13214:
	movq	8(%r13), %rdi
	movq	8(%r14), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L12717
	movq	48(%r14), %rsi
	movq	current_binding_level(%rip), %rcx
	movq	32(%r14), %r14
	movq	%rsi, -48(%rbp)
	orb	$2, 67(%rcx)
	movq	current_binding_level(%rip), %r11
	andb	$-5, 67(%r11)
	jmp	.L12718
	.p2align 6,,7
.L13213:
	movq	%r13, %rdi
	movl	$.LC135, %esi
	xorl	%eax, %eax
	call	error_with_decl
	movzbl	53(%r13), %eax
	jmp	.L12714
	.p2align 6,,7
.L12707:
	movzbl	53(%r13), %eax
	testb	$1, %al
	movl	%eax, %edx
	jne	.L12711
	cmpq	$0, 40(%r13)
	je	.L13215
.L12711:
	andb	$1, %dl
	jne	.L12710
	movq	-232(%rbp), %rsi
	testb	$64, 46(%rsi)
	je	.L12710
	movq	%rsi, %rdi
	xorl	%eax, %eax
	call	note_debug_info_needed
.L13117:
	movzbl	53(%r13), %eax
	jmp	.L12710
.L13215:
	movq	%r13, %rdi
	movl	$.LC134, %esi
	xorl	%eax, %eax
	call	error_with_decl
	movq	error_mark_node(%rip), %r10
	movq	%r10, 8(%r13)
	jmp	.L13117
	.p2align 6,,7
.L13144:
	cmpq	$0, 24(%r15)
	jne	.L13086
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L12695
	testb	$4, 18(%r13)
	je	.L12696
	movl	pedantic(%rip), %eax
	xorl	%r12d, %r12d
	testl	%eax, %eax
	je	.L12697
	testb	$1, 53(%r13)
	je	.L12697
	movl	$1, %r12d
.L12697:
	testq	%r14, %r14
	movq	%r14, %rsi
	jne	.L12699
	movq	88(%r13), %rsi
.L12699:
	xorl	%eax, %eax
	movq	%r15, %rdi
	movl	%r12d, %edx
	call	complete_array_type
	cmpl	$1, %eax
	movl	%eax, %ebx
	je	.L13216
.L12700:
	cmpl	$2, %ebx
	je	.L13217
.L13087:
	movl	pedantic(%rip), %eax
.L12701:
	testl	%eax, %eax
	je	.L12705
.L13108:
	movq	24(%r15), %rax
	testq	%rax, %rax
	jne	.L13218
.L12705:
	movq	%r13, %rdi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	layout_decl
	jmp	.L13086
.L13218:
	movq	96(%rax), %rdi
	movq	integer_zero_node(%rip), %rsi
	xorl	%eax, %eax
	call	tree_int_cst_lt
	testl	%eax, %eax
	je	.L12705
	movq	%r13, %rdi
	movl	$.LC133, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L12705
.L13217:
	testl	%r12d, %r12d
	jne	.L13219
	movl	pedantic(%rip), %eax
	testl	%eax, %eax
	jne	.L13108
	testb	$4, 18(%r13)
	je	.L12701
	orb	$1, 53(%r13)
	jmp	.L13087
.L13219:
	movq	%r13, %rdi
	movl	$.LC132, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L13087
.L13216:
	movq	%r13, %rdi
	movl	$.LC131, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L12700
.L12696:
	testb	$1, 53(%r13)
	sete	%r9b
	movzbl	%r9b, %r12d
	jmp	.L12697
	.p2align 6,,7
.L13143:
	movl	-60(%rbp), %eax
	testl	%eax, %eax
	je	.L12694
	xorl	%eax, %eax
	call	end_temporary_allocation
	jmp	.L12694
.L12690:
	movq	empty_init_node(%rip), %rsi
	movq	%r15, %rdi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	digest_init
	jmp	.L13116
.L13142:
	cmpq	$0, 40(%r14)
	je	.L12671
	movq	%r13, %rdi
	movl	$.LC127, %esi
	xorl	%eax, %eax
	call	error_with_decl
	movq	error_mark_node(%rip), %r14
	jmp	.L12671
.L13141:
	movq	%r14, %rsi
	movq	%r15, %rdi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	digest_init
	movq	%rax, %r14
	jmp	.L12671
.L12669:
	cmpb	$4, 16(%r14)
	je	.L12676
	movq	%r14, %rsi
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	store_init_value
	movq	%rax, %r14
.L12676:
	testq	%r14, %r14
	je	.L12665
	jmp	.L13133
.L12668:
	movzbl	16(%r15), %ebx
	movzbl	%bl, %r8d 
	salq	$3, %r8
	addq	tree_code_type(%rip), %r8
	movq	(%r8), %rdi
	cmpb	$116, (%rdi)
	je	.L13220
.L12679:
	cmpb	$33, %cl
	jne	.L12665
	cmpb	$15, %bl
	je	.L12665
	testb	$32, 17(%r15)
	jne	.L12693
	testb	$32, 17(%r13)
	je	.L12665
.L12693:
	movq	%r13, %rdi
	movl	$.LC130, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L12665
.L13220:
	testb	$80, 46(%r15)
	je	.L12679
	cmpb	$18, %bl
	movq	%r15, %r12
	je	.L12683
.L13068:
	movq	144(%r12), %rax
	movzbl	1(%rax), %ecx
	testb	$1, %cl
	jne	.L12684
	andb	$8, %cl
	jne	.L13221
.L12685:
	testb	$16, 1(%rax)
	jne	.L13222
.L13084:
	movzbl	16(%r13), %edx
.L12684:
	cmpb	$33, %dl
	je	.L13223
.L12687:
	movl	flag_pic(%rip), %eax
	testl	%eax, %eax
	jne	.L12665
	movzbl	18(%r13), %r12d
	andb	$12, %r12b
	cmpb	$12, %r12b
	jne	.L12665
	testb	$1, 53(%r13)
	jne	.L12665
	cmpb	$33, 16(%r13)
	jne	.L12665
	testb	$16, 46(%r15)
	je	.L12665
	movq	88(%r13), %rax
	testq	%rax, %rax
	je	.L12690
	cmpq	error_mark_node(%rip), %rax
	jne	.L12665
	jmp	.L12690
	.p2align 6,,7
.L13223:
	testb	$16, 46(%r15)
	jne	.L12687
	testb	$32, 17(%r15)
	jne	.L12688
	testb	$32, 17(%r13)
	je	.L12687
.L12688:
	movq	%r13, %rdi
	movl	$.LC130, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L12687
.L13222:
	movq	%r13, %rdi
	movl	$.LC129, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L13084
.L13221:
	movq	%r13, %rdi
	movl	$.LC128, %esi
	xorl	%eax, %eax
	call	error_with_decl
	movq	144(%r12), %rax
	jmp	.L12685
	.p2align 6,,7
.L12683:
	movq	8(%r12), %r12
	cmpb	$18, 16(%r12)
	je	.L12683
	jmp	.L13068
.L13140:
	movl	$1, %edi
	movl	$148, %esi
	xorl	%eax, %eax
	call	my_friendly_assert
	movl	$149, %esi
	testq	%r14, %r14
	setne	%bl
	movq	%r14, 88(%r13)
	xorl	%eax, %eax
	xorl	%r14d, %r14d
	movzbl	%bl, %edi
	call	my_friendly_assert
	jmp	.L12665
.L13139:
	testq	%r14, %r14
	movq	$0, -248(%rbp)
	jne	.L12579
	cmpq	$0, 152(%r13)
	je	.L12581
	testb	$16, 54(%r13)
	jne	.L12583
.L12581:
	movl	$.LC117, %edi
	xorl	%eax, %eax
	call	error
.L13131:
	cmpb	$33, 16(%r13)
	je	.L13224
	.p2align 4,,7
.L12583:
	xorl	%r14d, %r14d
	jmp	.L12573
.L13224:
	movq	error_mark_node(%rip), %r14
	movq	%r14, 72(%r13)
	jmp	.L12583
.L12579:
	cmpb	$3, 16(%r14)
	je	.L13225
.L12584:
	movq	8(%r14), %rax
	cmpb	$15, 16(%rax)
	sete	%r9b
	movzbl	%r9b, %r12d
	testl	%r12d, %r12d
	jne	.L13226
	movq	%r14, %rbx
.L12586:
	testl	%r12d, %r12d
	jne	.L13227
	movq	8(%r15), %rcx
	cmpb	$18, 16(%rcx)
	je	.L13083
	movq	8(%r14), %rdx
	cmpb	$18, 16(%rdx)
	je	.L13228
.L12592:
	movzbl	16(%rdx), %r9d
	cmpb	%r9b, 16(%rcx)
	je	.L13229
	cmpq	error_mark_node(%rip), %r14
	je	.L12591
	movq	112(%rdx), %rsi
	movq	112(%rcx), %rdi
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	comptypes
	movl	$.LC123, %r11d
	testl	%eax, %eax
	cmovne	-248(%rbp), %r11
	movq	%r11, -248(%rbp)
.L12591:
	cmpq	$0, -248(%rbp)
	je	.L12632
	movq	8(%rbx), %rcx
	testb	$64, 46(%rcx)
	jne	.L13230
	movq	8(%r15), %rdi
	movzbl	46(%rdi), %ebx
	andb	$68, %bl
	cmpb	$68, %bl
	je	.L13231
.L12606:
	cmpq	$0, -248(%rbp)
	jne	.L13232
.L12632:
	movq	8(%r15), %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	testl	%r12d, %r12d
	movq	%rax, %rbx
	je	.L12634
	testb	$1, 17(%r14)
	jne	.L13233
	movq	%r14, 88(%r13)
.L12631:
	movq	8(%r15), %rsi
	cmpq	$0, 32(%rsi)
	jne	.L13234
.L12660:
	testb	$4, 18(%r13)
	je	.L12583
	movq	88(%r13), %rsi
	testb	$2, 17(%rsi)
	jne	.L12583
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	expand_static_init
	movq	$0, 88(%r13)
	jmp	.L12583
.L13234:
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	convert_from_reference
	testb	$4, 17(%r13)
	jne	.L13235
.L12661:
	movq	%rax, 72(%r13)
	jmp	.L12660
.L13235:
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	copy_to_permanent
	jmp	.L12661
.L13233:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	save_expr
.L13113:
	movq	%rax, 88(%r13)
	jmp	.L12631
.L12634:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lvalue_p
	testl	%eax, %eax
	je	.L12638
	movq	%r14, %rsi
	xorl	%edx, %edx
	xorl	%eax, %eax
	movl	$106, %edi
	call	build_unary_op
	cmpb	$106, 16(%rax)
	movq	%rax, %rsi
	je	.L13236
.L12639:
	movq	8(%rbx), %rdi
	testb	$64, 46(%rdi)
	je	.L12640
	xorl	%eax, %eax
	call	convert_pointer_to
.L13111:
	movq	%rax, 88(%r13)
	xorl	%eax, %eax
	movq	88(%r13), %rdi
	call	save_expr
	cmpq	current_class_decl(%rip), %rax
	movq	%rax, 88(%r13)
	je	.L13237
.L12642:
	movq	88(%r13), %rax
.L13112:
	movq	%r15, 8(%rax)
	jmp	.L12631
.L13237:
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	copy_node
	movq	%rax, 88(%r13)
	jmp	.L12642
.L12640:
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	convert
	jmp	.L13111
.L13236:
	movq	32(%rax), %rax
	cmpb	$52, 16(%rax)
	jne	.L12639
	movq	48(%rax), %rcx
	movq	error_mark_node(%rip), %r11
	movq	%rcx, -48(%rbp)
	movq	32(%rsi), %r10
	movq	%r11, 48(%r10)
	jmp	.L12639
	.p2align 6,,7
.L12638:
	xorl	%eax, %eax
	movl	$106, %edi
	movq	%r14, %rsi
	call	unary_complex_lvalue
	testq	%rax, %rax
	movq	%rax, %rdx
	je	.L12644
	cmpb	$106, 16(%rax)
	je	.L13238
.L12645:
	movq	8(%rbx), %rdi
	movq	%rdx, %rsi
	xorl	%eax, %eax
	call	convert_pointer_to
	movq	%rax, %rdi
	movq	%rax, 88(%r13)
	xorl	%eax, %eax
	call	save_expr
	movq	%rax, 88(%r13)
	jmp	.L13112
.L13238:
	movq	32(%rax), %r12
	cmpb	$47, 16(%r12)
	jne	.L12645
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	save_expr
	movq	%rax, %rdx
	jmp	.L12645
	.p2align 6,,7
.L12644:
	movq	8(%r15), %rsi
	testb	$32, 17(%rsi)
	je	.L12647
	movq	8(%r13), %rdi
	movq	global_binding_level(%rip), %rax
	movq	$0, -264(%rbp)
	cmpq	%rax, current_binding_level(%rip)
	sete	%dl
	xorl	%eax, %eax
	movq	%rdi, -88(%rbp)
	movq	8(%rdi), %r12
	movzbl	%dl, %esi
	movq	%r12, %rdi
	call	get_temp_name
	xorl	%edx, %edx
	movl	$106, %edi
	movq	%rax, %rsi
	movq	%rax, -256(%rbp)
	xorl	%eax, %eax
	call	build_unary_op
	movq	%r12, %rdi
	movq	%rax, %rbx
	xorl	%eax, %eax
	call	build_pointer_type
	movq	%rbx, %rsi
	movq	%rax, 8(%rbx)
	xorl	%eax, %eax
	movq	56(%r12), %rdi
	call	convert
	movq	-88(%rbp), %rbx
	movq	%rax, 88(%r13)
	movq	%rbx, 8(%rax)
	testb	$16, 46(%r12)
	je	.L12651
	movq	global_binding_level(%rip), %r8
	cmpq	%r8, current_binding_level(%rip)
	je	.L13239
	cmpq	$0, -264(%rbp)
	je	.L13240
.L12655:
	movq	-88(%rbp), %rsi
	movq	-264(%rbp), %rdx
	movl	$44, %edi
	movq	88(%r13), %rcx
	xorl	%eax, %eax
	call	build
	movq	-256(%rbp), %rdi
	movq	%rax, 88(%r13)
	xorl	%eax, %eax
	call	maybe_build_cleanup
	movq	%rax, -48(%rbp)
.L12656:
	movq	-256(%rbp), %r14
	testb	$4, 18(%r14)
.L13132:
	je	.L12631
	xorl	%eax, %eax
	call	preserve_initializer
	jmp	.L12631
.L13240:
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	constructor_name
	movq	%r14, %rsi
	xorl	%edi, %edi
	movq	%rax, %r12
	xorl	%eax, %eax
	call	build_tree_list
	movl	$3, %r8d
	xorl	%ecx, %ecx
	movq	-256(%rbp), %rdi
	movq	%rax, %rdx
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	build_method_call
	movq	%rax, -264(%rbp)
	jmp	.L12655
.L13239:
	movq	-256(%rbp), %rdi
	xorl	%esi, %esi
	movl	$1, %edx
	xorl	%eax, %eax
	call	make_decl_rtl
	xorl	%eax, %eax
	movq	static_aggregates(%rip), %rdx
	movq	-256(%rbp), %rsi
	movq	%r14, %rdi
	call	perm_tree_cons
	movq	%rax, static_aggregates(%rip)
	jmp	.L12656
.L12651:
	movq	-256(%rbp), %r9
	movq	global_binding_level(%rip), %rcx
	movq	%r14, %rsi
	cmpq	%rcx, current_binding_level(%rip)
	sete	%r11b
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	movzbl	18(%r9), %r10d
	movq	%r14, 88(%r9)
	movq	%r9, %rdi
	xorl	%edx, %edx
	salb	$2, %r11b
	andb	$-5, %r10b
	orb	%r11b, %r10b
	movb	%r10b, 18(%r9)
	call	finish_decl
	jmp	.L12656
.L12647:
	movq	%r13, %rdi
	movl	$.LC126, %esi
	xorl	%eax, %eax
	call	error_with_decl
	movq	error_mark_node(%rip), %rax
	jmp	.L13113
.L13232:
	movq	-248(%rbp), %rsi
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L13131
.L13231:
	movq	global_binding_level(%rip), %rdx
	cmpq	%rdx, current_binding_level(%rip)
	sete	%al
	movzbl	%al, %esi
	xorl	%eax, %eax
	call	get_temp_name
	movq	8(%r15), %rdi
	movq	%rax, %rbx
	xorl	%eax, %eax
	call	constructor_name
	movq	%r14, %rsi
	xorl	%edi, %edi
	movq	%rax, %r12
	xorl	%eax, %eax
	call	build_tree_list
	movl	$3, %r8d
	xorl	%ecx, %ecx
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	build_method_call
	testq	%rax, %rax
	movq	%rax, -240(%rbp)
	je	.L12618
	cmpq	error_mark_node(%rip), %rax
	je	.L12618
	movq	8(%r13), %r8
	cmpq	$0, -240(%rbp)
	movq	%r8, -72(%rbp)
	movq	8(%r8), %rdi
	movq	%rdi, -80(%rbp)
	je	.L12620
	movq	-240(%rbp), %r10
	movq	40(%r10), %r9
	movq	32(%r9), %rbx
	movzbl	16(%rbx), %eax
	cmpb	$102, %al
	je	.L13241
.L12621:
	cmpb	$106, %al
	movl	$146, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %r12
.L12622:
	movq	-80(%rbp), %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	movq	%rbx, %rsi
	movq	%rax, 8(%rbx)
	xorl	%eax, %eax
	movq	-80(%rbp), %rdx
	movq	56(%rdx), %rdi
	call	convert
	movq	-72(%rbp), %rbx
	movq	%rax, 88(%r13)
	movq	%rbx, 8(%rax)
	movq	-80(%rbp), %rsi
	testb	$16, 46(%rsi)
	je	.L12623
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L13242
	cmpq	$0, -240(%rbp)
	je	.L13243
.L12627:
	movq	-72(%rbp), %rsi
	movq	-240(%rbp), %rdx
	movl	$44, %edi
	movq	88(%r13), %rcx
	xorl	%eax, %eax
	call	build
	movq	%r12, %rdi
	movq	%rax, 88(%r13)
	xorl	%eax, %eax
	call	maybe_build_cleanup
	movq	%rax, -48(%rbp)
.L12628:
	testb	$4, 18(%r12)
	jmp	.L13132
.L13243:
	movq	-80(%rbp), %rdi
	xorl	%eax, %eax
	call	constructor_name
	movq	%r14, %rsi
	xorl	%edi, %edi
	movq	%rax, %rbx
	xorl	%eax, %eax
	call	build_tree_list
	movl	$3, %r8d
	xorl	%ecx, %ecx
	movq	%rax, %rdx
	movq	%r12, %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	build_method_call
	movq	%rax, -240(%rbp)
	jmp	.L12627
.L13242:
	movq	%r12, %rdi
	xorl	%esi, %esi
	movl	$1, %edx
	xorl	%eax, %eax
	call	make_decl_rtl
	xorl	%eax, %eax
	movq	static_aggregates(%rip), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	call	perm_tree_cons
	movq	%rax, static_aggregates(%rip)
	jmp	.L12628
.L12623:
	movq	global_binding_level(%rip), %r9
	movzbl	18(%r12), %edi
	movq	%r14, 88(%r12)
	cmpq	%r9, current_binding_level(%rip)
	movq	%r14, %rsi
	sete	%r8b
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	xorl	%edx, %edx
	andb	$-5, %dil
	salb	$2, %r8b
	orb	%r8b, %dil
	movb	%dil, 18(%r12)
	movq	%r12, %rdi
	call	finish_decl
	jmp	.L12628
.L13241:
	movq	32(%rbx), %rbx
	movzbl	16(%rbx), %eax
	jmp	.L12621
.L12620:
	movq	global_binding_level(%rip), %r12
	movq	-80(%rbp), %rdi
	cmpq	%r12, current_binding_level(%rip)
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %esi
	call	get_temp_name
	xorl	%edx, %edx
	movl	$106, %edi
	movq	%rax, %rsi
	movq	%rax, %r12
	xorl	%eax, %eax
	call	build_unary_op
	movq	%rax, %rbx
	jmp	.L12622
.L12618:
	cmpb	$33, 16(%r13)
	je	.L13244
.L12619:
	movq	%r13, %rdi
	movl	$.LC125, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L12583
.L13244:
	movq	error_mark_node(%rip), %r14
	movq	%r14, 72(%r13)
	jmp	.L12619
	.p2align 6,,7
.L13230:
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	movl	$101, %edi
	movq	%r15, %rsi
	movq	%r14, %rdx
	call	build_type_conversion
	testq	%rax, %rax
	movq	%rax, %rbx
	je	.L12608
	cmpq	error_mark_node(%rip), %rax
	movq	$0, -248(%rbp)
	movl	$.LC124, %r12d
	cmovne	-248(%rbp), %r12
	movq	%rax, %r14
	movq	%r12, -248(%rbp)
	movl	$1, %r12d
	jmp	.L12606
.L12608:
	movq	8(%r15), %rsi
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	movl	$101, %edi
	movq	%r14, %rdx
	call	build_type_conversion
	testq	%rax, %rax
	je	.L12606
	cmpq	error_mark_node(%rip), %rax
	movl	$.LC124, %esi
	movq	%rax, %r14
	cmove	%rsi, %rbx
	xorl	%r12d, %r12d
	movq	%rbx, -248(%rbp)
	jmp	.L12606
.L13229:
	movq	112(%rdx), %rsi
	movq	112(%rcx), %rdi
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L12594
	movq	8(%r15), %r10
	testb	$16, 17(%r10)
	movq	%r10, %rax
	je	.L12595
	testb	$32, 17(%r14)
	je	.L12595
	movq	$.LC119, -248(%rbp)
	jmp	.L12591
.L12595:
	testb	$32, 17(%rax)
	je	.L12597
	testb	$16, 17(%r14)
	je	.L12597
	movq	$.LC120, -248(%rbp)
	jmp	.L12591
.L12597:
	testb	$48, 17(%rax)
	jne	.L12591
	movzbl	17(%r14), %eax
	testb	$32, %al
	je	.L12600
	movq	$.LC121, -248(%rbp)
	jmp	.L12591
.L12600:
	testb	$16, %al
	je	.L12591
	movq	$.LC122, -248(%rbp)
	jmp	.L12591
.L12594:
	movq	8(%r15), %rdi
	movq	%r14, %rsi
	xorl	%eax, %eax
	call	convert
	movq	%rax, %r14
	jmp	.L12591
.L13228:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	default_conversion
	movq	8(%r15), %rcx
	movq	8(%rax), %rdx
	movq	%rax, %r14
	jmp	.L12592
.L13083:
	movq	8(%r14), %rdx
	jmp	.L12592
.L13227:
	movq	8(%r15), %r11
	movq	8(%rbx), %r10
	xorl	%edx, %edx
	xorl	%eax, %eax
	movq	112(%r11), %rdi
	movq	112(%r10), %rsi
	call	comptypes
	testl	%eax, %eax
	jne	.L12588
	movq	$.LC118, -248(%rbp)
	jmp	.L12591
.L12588:
	movq	8(%r14), %rdi
	movq	8(%r15), %r8
	movq	8(%rdi), %rdx
	movzbl	17(%r8), %esi
	movzbl	17(%rdx), %ecx
	shrb	$5, %sil
	andl	$1, %esi
	shrb	$5, %cl
	andl	$1, %ecx
	cmpl	%ecx, %esi
	jl	.L12591
	xorl	%r12d, %r12d
	movq	%rbx, %r14
	jmp	.L12591
.L13226:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	convert_from_reference
	movq	%rax, %rbx
	jmp	.L12586
.L13225:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_compound_expr
	movq	%rax, %r14
	jmp	.L12584
	.p2align 6,,7
.L13138:
	testq	%r14, %r14
	je	.L12571
	cmpq	error_mark_node(%rip), %r14
	je	.L12571
	movzbl	17(%r14), %edi
	movl	$147, %esi
	xorl	%eax, %eax
	shrb	$2, %dil
	andl	$1, %edi
	call	my_friendly_assert
.L12571:
	cmpq	$0, -224(%rbp)
	je	.L12573
	movq	8(%r13), %r8
	xorl	%eax, %eax
	movq	$0, 120(%r8)
	movq	-224(%rbp), %rdi
	call	get_identifier
	xorl	%edx, %edx
	movq	-224(%rbp), %rsi
	movq	%rax, 112(%r13)
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	make_decl_rtl
	jmp	.L12573
.L13137:
	movq	%r13, %rsi
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	finish_exception_decl
	movq	144(%r15), %rsi
	orb	$32, 5(%rsi)
	jmp	.L12566
	.p2align 6,,7
.L13136:
	testq	%r14, %r14
	je	.L12559
	cmpq	$0, 88(%r13)
	je	.L12559
	movq	8(%r14), %r15
	movq	$0, 88(%r13)
	movq	%r15, 8(%r13)
.L12559:
	testb	$64, 46(%r15)
	je	.L12560
	movq	56(%r13), %rbx
	testq	%rbx, %rbx
	je	.L12560
	cmpq	$0, 8(%rbx)
	je	.L12561
	cmpq	%r15, 8(%r13)
	je	.L12561
	movq	32(%rbx), %rsi
	movl	$.LC116, %edi
	xorl	%eax, %eax
	call	warning
	movq	56(%r13), %rbx
.L12561:
	movq	current_binding_level(%rip), %r12
	cmpq	global_binding_level(%rip), %r12
	je	.L13245
.L13110:
	movq	8(%rbx), %rsi
	movq	32(%r12), %rdx
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%r12)
.L12563:
	movq	%r15, 8(%rbx)
	movq	144(%r15), %rcx
	orb	$32, 5(%rcx)
.L12560:
	movq	current_function_decl(%rip), %rdi
	movq	%r13, %rsi
	xorl	%eax, %eax
	call	GNU_xref_decl
	movq	%r13, %rdi
	xorl	%edx, %edx
	cmpq	$0, 64(%r13)
	sete	%dl
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	xorl	%esi, %esi
	call	rest_of_decl_compilation
	jmp	.L12566
.L13245:
	movq	class_binding_level(%rip), %r12
	testq	%r12, %r12
	je	.L12563
	jmp	.L13110
	.p2align 6,,7
.L13135:
	testq	%r14, %r14
	je	.L12554
	movl	$.LC115, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L12554
.LFE4:
.Lfe4:
	.size	finish_decl,.Lfe4-finish_decl
	.section	.rodata.str1.32
	.align 32
.LC137:
	.string	"multiple initializations given for `%s'"
	.text
	.align 2
	.p2align 4,,15
	.type	expand_static_init,@function
expand_static_init:
.LFB5:
	subq	$24, %rsp
.LCFI21:
	xorl	%eax, %eax
	movq	%rbp, 8(%rsp)
.LCFI22:
	movq	%rbx, (%rsp)
.LCFI23:
	movq	%r12, 16(%rsp)
.LCFI24:
	movq	%rsi, %rbp
	movq	%rdi, %rbx
	movq	static_aggregates(%rip), %rsi
	call	value_member
	testq	%rax, %rax
	je	.L13247
	cmpq	$0, 24(%rax)
	jne	.L13256
.L13246:
	movq	(%rsp), %rbx
	movq	8(%rsp), %rbp
	movq	16(%rsp), %r12
	addq	$24, %rsp
	ret
	.p2align 6,,7
.L13256:
	movq	%rbx, %rdi
	movq	8(%rsp), %rbp
	movq	16(%rsp), %r12
	movq	(%rsp), %rbx
	movl	$.LC137, %esi
	xorl	%eax, %eax
	addq	$24, %rsp
	jmp	error_with_decl
	.p2align 6,,7
.L13247:
	movq	global_binding_level(%rip), %rdx
	cmpq	%rdx, current_binding_level(%rip)
	je	.L13250
	movl	$permanent_obstack, %edi
	movl	$permanent_obstack, %esi
	xorl	%eax, %eax
	call	push_obstacks
	xorl	%eax, %eax
	movl	$1, %esi
	movq	integer_type_node(%rip), %rdi
	call	get_temp_name
	xorl	%ecx, %ecx
	xorl	%edx, %edx
	movq	%rax, %r12
	movq	%rax, %rdi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	rest_of_decl_compilation
	xorl	%eax, %eax
	movq	integer_zero_node(%rip), %rdx
	movl	$95, %edi
	movq	%r12, %rsi
	call	build_binary_op
	xorl	%esi, %esi
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	expand_start_cond
	movq	integer_one_node(%rip), %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	movq	%r12, %rdi
	call	expand_assignment
	movq	8(%rbx), %rdx
	testb	$16, 46(%rdx)
	je	.L13251
	movq	%rbx, %rdi
	movq	%rbp, %rsi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	expand_aggr_init
	xorl	%eax, %eax
	call	do_pending_stack_adjust
.L13252:
	xorl	%eax, %eax
	call	expand_end_cond
	movq	8(%rbx), %rcx
	testb	$32, 46(%rcx)
	jne	.L13257
.L13253:
	movq	(%rsp), %rbx
	movq	8(%rsp), %rbp
	xorl	%eax, %eax
	movq	16(%rsp), %r12
	addq	$24, %rsp
	jmp	pop_obstacks
.L13257:
	movq	static_aggregates(%rip), %rdx
	movq	%r12, %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	perm_tree_cons
	movq	%rax, static_aggregates(%rip)
	orb	$4, 18(%rax)
	jmp	.L13253
.L13251:
	movq	%rbx, %rdi
	movq	%rbp, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	expand_assignment
	jmp	.L13252
.L13250:
	movq	8(%rbx), %rsi
	testb	$16, 46(%rsi)
	je	.L13258
.L13255:
	movq	static_aggregates(%rip), %rdx
	movq	%rbp, %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	perm_tree_cons
	movq	%rax, static_aggregates(%rip)
	jmp	.L13246
.L13258:
	xorl	%eax, %eax
	call	preserve_initializer
	jmp	.L13255
.LFE5:
.Lfe5:
	.size	expand_static_init,.Lfe5-expand_static_init
	.align 2
	.p2align 4,,15
.globl complete_array_type
	.type	complete_array_type,@function
complete_array_type:
.LFB6:
	pushq	%r13
.LCFI25:
	movl	%edx, %r13d
	pushq	%r12
.LCFI26:
	movq	%rdi, %r12
	pushq	%rbp
.LCFI27:
	xorl	%ebp, %ebp
	pushq	%rbx
.LCFI28:
	xorl	%ebx, %ebx
	subq	$8, %rsp
.LCFI29:
	testq	%rsi, %rsi
	je	.L13260
	movzbl	16(%rsi), %eax
	cmpb	$28, %al
	je	.L13272
	cmpb	$43, %al
	je	.L13273
	cmpq	error_mark_node(%rip), %rsi
	movl	$1, %eax
	movl	$1, %edi
	cmovne	%eax, %ebp
.L13271:
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_int_2_wide
	movq	%rax, %rbx
.L13260:
	testq	%rbx, %rbx
	jne	.L13270
	testl	%r13d, %r13d
	jne	.L13274
.L13267:
	testq	%rbx, %rbx
	movl	$2, %ebp
	je	.L13268
.L13270:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	build_index_type
	movq	%rax, 24(%r12)
	cmpq	$0, 8(%rbx)
	jne	.L13268
	movq	%rax, 8(%rbx)
.L13268:
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	layout_type
	addq	$8, %rsp
	movl	%ebp, %eax
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	ret
	.p2align 6,,7
.L13274:
	movl	$1, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_int_2_wide
	movq	%rax, %rbx
	jmp	.L13267
	.p2align 6,,7
.L13273:
	movq	40(%rsi), %rdi
	xorl	%eax, %eax
	call	list_length
	leal	-1(%rax), %edi
	jmp	.L13271
	.p2align 6,,7
.L13272:
	movl	32(%rsi), %edi
	decl	%edi
	jmp	.L13271
.LFE6:
.Lfe6:
	.size	complete_array_type,.Lfe6-complete_array_type
	.section	.rodata.str1.1
.LC164:
	.string	"type name"
	.section	.rodata.str1.32
	.align 32
.LC176:
	.string	"short, signed or unsigned invalid for `%s'"
	.align 32
.LC177:
	.string	"long, short, signed or unsigned invalid for `%s'"
	.align 32
.LC200:
	.string	"storage class specified for parameter `%s'"
	.align 32
.LC201:
	.string	"storage class specified for typename"
	.align 32
.LC243:
	.string	"invalid type qualifier for non-method type"
	.align 32
.LC287:
	.string	"cannot explicitly declare member `%s' to have extern linkage"
	.align 32
.LC286:
	.string	"cannot declare member `%s' to have static linkage"
	.align 32
.LC283:
	.string	"`%s' is not a static member of class `%s'"
	.align 32
.LC284:
	.string	"redeclaration of type for `%s'"
	.align 32
.LC285:
	.string	"multiple initializations of static member `%s::%s'"
	.section	.rodata.str1.1
.LC251:
	.string	"invalid raises declaration"
.LC250:
	.string	"invalid friend declaration"
	.section	.rodata.str1.32
	.align 32
.LC267:
	.string	"`const' and `volatile' function specifiers invalid in field declaration"
	.section	.rodata.str1.1
.LC282:
	.string	"variable declared `inline'"
.LC281:
	.string	"variable declared `virtual'"
.LC274:
	.string	"main"
	.section	.rodata.str1.32
	.align 32
.LC279:
	.string	"inline declaration ignored for function with `...'"
	.align 32
.LC280:
	.string	"ANSI C++ does not permit `extern inline'"
	.section	.rodata.str1.1
.LC278:
	.string	"cannot inline function `main'"
	.section	.rodata.str1.32
	.align 32
.LC277:
	.string	"cannot declare function `main' to have static linkage"
	.align 32
.LC276:
	.string	"cannot declare member function `%s' to have static linkage"
	.align 32
.LC260:
	.string	"method `%s' may not be declared static"
	.align 32
.LC261:
	.string	"(since `%s' declared virtual in base class.)"
	.align 32
.LC259:
	.string	"inconsistent declarations for `%s'"
	.align 32
.LC257:
	.string	"global operator delete must be declared as taking a single argument of type void*"
	.align 32
.LC258:
	.string	"operator delete cannot be overloaded"
	.align 32
.LC256:
	.string	"functions cannot have method qualifiers"
	.section	.rodata.str1.1
.LC275:
	.string	"builtin_"
	.section	.rodata.str1.32
	.align 32
.LC273:
	.string	"virtual non-class function `%s'"
	.align 32
.LC272:
	.string	"invalid storage class for function `%s'"
	.align 32
.LC262:
	.string	"field `%s' has incomplete type"
	.align 32
.LC265:
	.string	"member functions are implicitly friends of their class"
	.section	.rodata.str1.1
.LC270:
	.string	"const member"
	.section	.rodata.str1.32
	.align 32
.LC269:
	.string	"ANSI C++ forbids initialization of %s `%s'"
	.section	.rodata.str1.1
.LC271:
	.string	"member"
	.section	.rodata.str1.32
	.align 32
.LC268:
	.string	"static member `%s' must be defined separately from its declaration"
	.section	.rodata.str1.1
.LC266:
	.string	"field declared `virtual'"
.LC263:
	.string	"field has incomplete type"
	.section	.rodata.str1.32
	.align 32
.LC264:
	.string	"`%s' is neither function nor method; cannot be declared friend"
	.section	.rodata.str1.1
.LC253:
	.string	"operator"
	.section	.rodata.str1.32
	.align 32
.LC252:
	.string	"can't make %s `%s' into a method -- not in a class"
	.section	.rodata.str1.1
.LC254:
	.string	"function"
	.section	.rodata.str1.32
	.align 32
.LC255:
	.string	"function `%s' declared virtual inside a union"
	.align 32
.LC249:
	.string	"`const' and `volatile' function specifiers invalid in parameter declaration"
	.section	.rodata.str1.1
.LC248:
	.string	"parameter declared `virtual'"
	.section	.rodata.str1.32
	.align 32
.LC247:
	.string	"cannot use `::' in parameter declaration"
	.align 32
.LC246:
	.string	"variable or field declared void"
	.align 32
.LC245:
	.string	"variable or field `%s' declared void"
	.align 32
.LC244:
	.string	"trying to make class `%s' a friend of global scope"
	.section	.rodata.str1.1
.LC184:
	.string	"duplicate `volatile'"
.LC183:
	.string	"duplicate `const'"
.LC233:
	.string	"reference"
.LC234:
	.string	"pointer"
	.section	.rodata.str1.32
	.align 32
.LC232:
	.string	"invalid type modifier within %s declarator"
	.section	.rodata.str1.1
.LC231:
	.string	"invalid type: `void &'"
	.section	.rodata.str1.32
	.align 32
.LC230:
	.string	"cannot declare references to functions; use pointer to function instead"
	.section	.rodata.str1.1
.LC229:
	.string	"pointers"
.LC228:
	.string	"references"
	.section	.rodata.str1.32
	.align 32
.LC227:
	.string	"cannot declare %s to references"
	.align 32
.LC175:
	.string	"Tried to globalize already-global type "
	.align 32
.LC226:
	.string	"destructors cannot be specified with parameters"
	.align 32
.LC225:
	.string	"friend declaration not in class definition"
	.align 32
.LC224:
	.string	"virtual functions cannot be friends"
	.align 32
.LC223:
	.string	"constructor for alien class `%s' cannot be member"
	.align 32
.LC222:
	.string	"return value type specifier for constructor ignored"
	.align 32
.LC221:
	.string	"constructors cannot be declared `volatile'"
	.align 32
.LC220:
	.string	"constructors cannot be declared `const'"
	.align 32
.LC219:
	.string	"constructors cannot be declared virtual"
	.align 32
.LC218:
	.string	"constructor cannot be static member function"
	.align 32
.LC217:
	.string	"destructor for alien class `%s' cannot be a member"
	.align 32
.LC216:
	.string	"destructors cannot be declared `volatile'"
	.align 32
.LC215:
	.string	"destructors cannot be declared `const'"
	.align 32
.LC214:
	.string	"destructor cannot be static member function"
	.align 32
.LC213:
	.string	"`%s' declared as function returning an array"
	.align 32
.LC212:
	.string	"`%s' declared as function returning a function"
	.align 32
.LC241:
	.string	"type conversion function declared to return incongruent type"
	.align 32
.LC242:
	.string	"return type specified for type conversion function"
	.align 32
.LC236:
	.string	"extra qualification `%s' on member `%s' ignored"
	.align 32
.LC235:
	.string	"cannot declare member `%s::%s' within this class"
	.align 32
.LC239:
	.string	"field `%s' is not a member of structure `%s'"
	.align 32
.LC238:
	.string	"type conversion is not a member of structure `%s'"
	.align 32
.LC237:
	.string	"class `%s' does not have any constructors"
	.align 32
.LC240:
	.string	"structure `%s' not yet defined"
	.align 32
.LC208:
	.string	"size of array `%s' has non-integer type"
	.align 32
.LC210:
	.string	"size of array `%s' is negative"
	.align 32
.LC211:
	.string	"ANSI C++ forbids variable-size array `%s'"
	.align 32
.LC209:
	.string	"ANSI C++ forbids zero-size array `%s'"
	.align 32
.LC207:
	.string	"declaration of `%s' as array of functions"
	.align 32
.LC206:
	.string	"declaration of `%s' as array of voids"
	.align 32
.LC143:
	.string	"variable `%s' has initializer but incomplete type"
	.align 32
.LC196:
	.string	"typedef of `%s' in class scope hides previous declaration"
	.align 32
.LC195:
	.string	"label `%s' defined but not used"
	.align 32
.LC190:
	.string	"label `%s' used but not defined"
	.section	.rodata.str1.1
.LC192:
	.string	"_$tmp_"
.LC193:
	.string	"invalid jump to label `%s'"
	.section	.rodata.str1.32
	.align 32
.LC194:
	.string	"crosses initialization of `%s'"
	.section	.rodata.str1.1
.LC191:
	.string	"duplicate label `%s'"
	.section	.rodata.str1.32
	.align 32
.LC153:
	.string	"non-function templates not yet supported"
	.section	.rodata.str1.1
.LC151:
	.string	"non-function declaration `%s'"
	.section	.rodata.str1.32
	.align 32
.LC152:
	.string	"conflicts with function declaration `%s'"
	.align 32
.LC149:
	.string	"conflicting language contexts for declaration of `%s';"
	.align 32
.LC150:
	.string	"conflicts with previous declaration here"
	.align 32
.LC147:
	.string	"C-language function `%s' overloaded here"
	.align 32
.LC148:
	.string	"Previous C-language version of this function was `%s'"
	.align 32
.LC2:
	.string	"`%s' redeclared as non-member function"
	.align 32
.LC1:
	.string	"`%s' redeclared as member function"
	.align 32
.LC146:
	.string	"declaration of `%s' has `extern' and is initialized"
	.align 32
.LC145:
	.string	"aggregate `%s' has incomplete type and cannot be initialized"
	.align 32
.LC144:
	.string	"elements of array `%s' have incomplete type"
	.section	.rodata.str1.1
.LC141:
	.string	"typedef `%s' is initialized"
	.section	.rodata.str1.32
	.align 32
.LC142:
	.string	"function `%s' is initialized like a variable"
	.section	.rodata.str1.1
.LC140:
	.string	"extern"
.LC199:
	.string	"structure field"
.LC198:
	.string	"member operator"
	.section	.rodata.str1.32
	.align 32
.LC197:
	.string	"storage class specified for %s `%s'"
	.align 32
.LC203:
	.string	"`%s' has both `extern' and initializer"
	.align 32
.LC202:
	.string	"`%s' initialized and declared `extern'"
	.align 32
.LC204:
	.string	"nested function `%s' declared `extern'"
	.align 32
.LC205:
	.string	"top-level declaration of `%s' specifies `auto'"
	.align 32
.LC189:
	.string	"multiple storage classes in declaration of `%s'"
	.align 32
.LC188:
	.string	"virtual outside class declaration"
	.align 32
.LC187:
	.string	"typedef declaration invalid in parameter declaration"
	.align 32
.LC186:
	.string	"storage class specifiers invalid in parameter declarations"
	.align 32
.LC185:
	.string	"member `%s' cannot be declared both virtual and static"
	.align 32
.LC178:
	.string	"long and short specified together for `%s'"
	.align 32
.LC180:
	.string	"long or short specified with floating type for `%s'"
	.align 32
.LC182:
	.string	"long, short, signed or unsigned used invalidly for `%s'"
	.align 32
.LC181:
	.string	"signed and unsigned given together for `%s'"
	.align 32
.LC179:
	.string	"long or short specified with char for `%s'"
	.align 32
.LC174:
	.string	"return type specification for constructor invalid"
	.align 32
.LC173:
	.string	"return type specification for destructor invalid"
	.align 32
.LC172:
	.string	"`%s' fails to be a typedef or built in type"
	.align 32
.LC171:
	.string	"two or more data types in declaration of `%s'"
	.align 32
.LC168:
	.string	"multiple declarations `%s' and `%s'"
	.section	.rodata.str1.1
.LC169:
	.string	"duplicate `%s'"
	.section	.rodata.str1.32
	.align 32
.LC170:
	.string	"`long long long' is too long for GCC"
	.align 32
.LC167:
	.string	"extraneous `__wchar_t' ignored"
	.section	.rodata.str1.1
.LC166:
	.string	"extraneous `char' ignored"
.LC165:
	.string	"extraneous `int' ignored"
.LC158:
	.string	"declarator name missing"
.LC159:
	.string	"<nameless>"
	.section	.rodata.str1.32
	.align 32
.LC156:
	.string	"destructors must be member functions"
	.align 32
.LC157:
	.string	"destructor `%s' must match class name `%s'"
	.align 32
.LC163:
	.string	"type `%s' is not derived from type `%s'"
	.align 32
.LC162:
	.string	"multiple `::' terms in declarator invalid"
	.section	.rodata.str1.1
.LC161:
	.string	"operator <typename>"
	.section	.rodata.str1.32
	.align 32
.LC160:
	.string	"operator `%s' must be declared as a member"
	.align 32
.LC154:
	.string	"bad parameter list specification for function `%s'"
	.align 32
.LC155:
	.string	"bad parameter list specification for function"
	.align 32
.LC139:
	.string	"arrays cannot take initializers"
	.align 32
.LC138:
	.string	"initializer lists for field declarations"
	.text
	.align 2
	.p2align 4,,15
.globl grokdeclarator
	.type	grokdeclarator,@function
grokdeclarator:
.LFB7:
	pushq	%rbp
.LCFI30:
	movq	%rsp, %rbp
.LCFI31:
	pushq	%r15
.LCFI32:
	xorl	%r15d, %r15d
	pushq	%r14
.LCFI33:
	pushq	%r13
.LCFI34:
	pushq	%r12
.LCFI35:
	pushq	%rbx
.LCFI36:
	subq	$1032, %rsp
.LCFI37:
	movq	$0, -1032(%rbp)
	movl	$0, -444(%rbp)
	movl	%edx, -484(%rbp)
	movq	%rdi, -904(%rbp)
	movq	%rsi, -592(%rbp)
	decl	%edx
	movl	%ecx, -604(%rbp)
	movq	%r8, -1048(%rbp)
	movl	$0, -580(%rbp)
	movq	$0, -1072(%rbp)
	movl	$0, -576(%rbp)
	movl	$0, -572(%rbp)
	movl	$0, -500(%rbp)
	movq	$0, -496(%rbp)
	movl	$0, -376(%rbp)
	movl	$0, -472(%rbp)
	movl	$0, -372(%rbp)
	movq	$0, -440(%rbp)
	movl	$0, -468(%rbp)
	movq	$0, -464(%rbp)
	movq	current_class_type(%rip), %r14
	movq	$0, -456(%rbp)
	movl	$0, -448(%rbp)
	je	.L17509
	cmpl	$6, -484(%rbp)
	je	.L17510
	cmpl	$4, -484(%rbp)
	je	.L17511
.L13277:
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	jne	.L17512
.L13281:
	movq	-904(%rbp), %rbx
	xorl	%r12d, %r12d
	movq	$0, -480(%rbp)
	testq	%rbx, %rbx
	je	.L13287
	cmpb	$42, 16(%rbx)
	je	.L13286
.L13283:
	testq	%rbx, %rbx
	je	.L13287
	cmpq	$0, -592(%rbp)
	je	.L13287
	cmpb	$50, 16(%rbx)
	je	.L17513
.L13314:
	.p2align 4,,7
.L13287:
	movq	-904(%rbp), %rbx
.L13764:
	testq	%rbx, %rbx
	je	.L16962
	.p2align 4,,7
.L13817:
	movzbl	16(%rbx), %r11d
	movzbl	%r11b, %eax
	cmpl	$126, %eax
	ja	.L13815
	mov	%eax, %edi
	jmp	*.L13816(,%rdi,8)
	.section	.rodata
	.align 8
	.align 4
.L13816:
	.quad	.L13814
	.quad	.L13784
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13787
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13787
	.quad	.L13787
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13780
	.quad	.L13815
	.quad	.L13815
	.quad	.L13780
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13769
	.quad	.L13815
	.quad	.L13781
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13770
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13780
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13815
	.quad	.L13793
	.quad	.L13815
	.quad	.L13791
	.text
.L13769:
	xorl	%r14d, %r14d
.L17337:
	movq	32(%rbx), %rbx
	.p2align 4,,7
.L13765:
	testq	%rbx, %rbx
	jne	.L13817
.L16962:
	cmpq	$0, -480(%rbp)
	movl	$.LC164, %ebx
	movl	-376(%rbp), %eax
	cmovne	-480(%rbp), %rbx
	testl	%eax, %eax
	movq	%rbx, -480(%rbp)
	je	.L13819
	cmpl	$50, -472(%rbp)
	je	.L13819
.L17287:
	movq	$0, -1072(%rbp)
.L13275:
	movq	-1072(%rbp), %rax
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	leave
	ret
	.p2align 6,,7
.L13819:
	movl	-484(%rbp), %eax
	testl	%eax, %eax
	jne	.L13820
	movq	current_binding_level(%rip), %r9
	movq	global_binding_level(%rip), %r14
	movl	$2, %eax
	cmpq	%r14, 56(%r9)
	cmovne	-484(%rbp), %eax
	movl	%eax, -484(%rbp)
.L13820:
	movq	-592(%rbp), %r13
	testq	%r13, %r13
	je	.L16964
	.p2align 4,,7
.L13879:
	cmpb	$3, 16(%r13)
	movq	32(%r13), %rbx
	jne	.L17287
	movzbl	16(%rbx), %edx
	cmpb	$1, %dl
	je	.L17514
.L13826:
	cmpq	$0, -1072(%rbp)
	jne	.L17515
	cmpb	$1, %dl
	je	.L17516
	testb	%dl, %dl
	cmove	-1072(%rbp), %rbx
	movq	%rbx, -1072(%rbp)
.L13830:
.L13823:
	movq	(%r13), %r13
	testq	%r13, %r13
	jne	.L13879
.L16964:
	movq	-1072(%rbp), %r13
	testq	%r13, %r13
	movq	%r13, -512(%rbp)
	jne	.L13880
	cmpl	$2, -468(%rbp)
	movl	$-1, -572(%rbp)
	je	.L17517
	cmpl	$1, -468(%rbp)
	je	.L17518
	movl	-376(%rbp), %eax
	testl	%eax, %eax
	je	.L13885
	movl	explicit_warn_return_type(%rip), %r10d
	testl	%r10d, %r10d
	je	.L13885
	movl	-468(%rbp), %edi
	testl	%edi, %edi
	jne	.L13885
	testl	$1077248, %r15d
	jne	.L13885
	movl	$1, warn_about_return_type(%rip)
.L13885:
	movq	integer_type_node(%rip), %r11
	movq	%r11, -1072(%rbp)
.L13886:
	testl	$16384, %r15d
	movq	$0, -1000(%rbp)
	je	.L14231
	movq	-1072(%rbp), %rdx
	movq	double_type_node(%rip), %r14
	cmpq	%r14, 112(%rdx)
	je	.L17519
.L14231:
	testl	$1077248, %r15d
	je	.L14232
	movq	-1072(%rbp), %r13
	xorl	%ebx, %ebx
	movl	$.LC176, %edi
	movzbl	16(%r13), %edx
	cmpb	$8, %dl
	movl	%edx, %ecx
	je	.L17352
	cmpb	$7, %dl
	je	.L17520
.L14236:
	movl	$.LC177, %edi
.L17352:
	movq	-480(%rbp), %rsi
	xorl	%eax, %eax
	call	error
.L14234:
	testl	%ebx, %ebx
	jne	.L14232
	andl	$-1077249, %r15d
	movl	$0, -576(%rbp)
.L14232:
	testl	$4096, %r15d
	jne	.L14250
	movl	-372(%rbp), %ebx
	testl	%ebx, %ebx
	je	.L14249
	movl	flag_traditional(%rip), %edx
	testl	%edx, %edx
	jne	.L14250
	movl	flag_signed_bitfields(%rip), %r9d
	testl	%r9d, %r9d
	jne	.L14249
	movl	-572(%rbp), %r14d
	testl	%r14d, %r14d
	jne	.L14252
	movl	-500(%rbp), %ecx
	testl	%ecx, %ecx
	jne	.L14252
	cmpq	$0, -496(%rbp)
	je	.L14252
	movq	-496(%rbp), %r10
	testb	$4, 54(%r10)
	jne	.L14249
.L14252:
	movq	-1072(%rbp), %r13
	cmpb	$10, 16(%r13)
	je	.L14249
	testl	$1048576, %r15d
	jne	.L14249
.L14250:
	movl	-576(%rbp), %edi
	testl	%edi, %edi
	je	.L14253
	movq	long_long_unsigned_type_node(%rip), %rcx
.L17353:
	movq	%rcx, -1072(%rbp)
.L14263:
	movq	-1072(%rbp), %rcx
	movl	%r15d, %r8d
	movzbl	17(%rcx), %r9d
	movl	$0, -892(%rbp)
	movl	%r9d, %edx
	shrb	$5, %dl
	andl	$1, %edx
	testl	$2097152, %r15d
	leal	1(%rdx), %r14d
	cmovne	%r14d, %edx
	shrb	$4, %r9b
	andl	$1, %r9d
	movl	%edx, -1060(%rbp)
	testl	$4194304, %r15d
	leal	1(%r9), %ebx
	cmovne	%ebx, %r9d
	shrl	$23, %r8d
	andl	$1, %r8d
	movl	%r9d, -1056(%rbp)
	cmpl	$1, -1060(%rbp)
	movl	%r8d, -212(%rbp)
	jg	.L17521
.L14275:
	cmpl	$1, -1056(%rbp)
	jg	.L17522
.L14276:
	movl	%r15d, %r10d
	andl	$67108864, %r10d
	testl	$65536, %r15d
	movl	%r10d, -1052(%rbp)
	je	.L14277
	xorl	%r13d, %r13d
	cmpl	$3, -484(%rbp)
	sete	%r13b
	incl	%r13d
	movl	%r13d, -892(%rbp)
.L14277:
	movl	-1052(%rbp), %eax
	testl	%eax, %eax
	je	.L14280
	cmpl	$2, -892(%rbp)
	je	.L17523
.L14280:
	movl	%r15d, %esi
	movl	%r15d, %edi
	andl	$33554432, %esi
	andl	$-100663297, %edi
	movl	%esi, -1004(%rbp)
	movl	%edi, -1064(%rbp)
	je	.L14281
	testl	$65536, %r15d
	movl	$1, %eax
	cmove	-580(%rbp), %eax
	movl	%eax, -580(%rbp)
	incl	%eax
	andl	$131072, %r15d
	cmove	-580(%rbp), %eax
	cmpl	$2, -484(%rbp)
	movl	%eax, -580(%rbp)
	je	.L17524
.L14284:
	testl	$524288, -1064(%rbp)
	je	.L14285
	cmpl	$2, -484(%rbp)
	je	.L17525
.L14286:
	incl	-580(%rbp)
.L14285:
	movl	-580(%rbp), %eax
	incl	%eax
	cmpw	$0, -1064(%rbp)
	cmovns	-580(%rbp), %eax
	movl	%eax, -580(%rbp)
	incl	%eax
	testl	$262144, -1064(%rbp)
	cmove	-580(%rbp), %eax
	movl	%eax, -580(%rbp)
.L14281:
	movl	-1052(%rbp), %eax
	testl	%eax, %eax
	je	.L14289
	cmpq	$0, current_class_name(%rip)
	je	.L17526
.L14289:
	cmpl	$1, -580(%rbp)
	jg	.L17527
	movl	-484(%rbp), %eax
	testl	%eax, %eax
	je	.L14292
	movl	-580(%rbp), %eax
	testl	%eax, %eax
	jle	.L14292
	cmpl	$2, -484(%rbp)
	je	.L14291
	cmpl	$3, -484(%rbp)
	je	.L17528
	cmpl	$2, -484(%rbp)
	movq	-480(%rbp), %rsi
	movl	$.LC200, %edi
	movl	$.LC201, %r9d
	cmovne	%r9, %rdi
	xorl	%eax, %eax
	call	error
.L14916:
	andl	$-425985, -1064(%rbp)
.L14291:
	cmpq	$0, -904(%rbp)
	je	.L14931
	movq	-904(%rbp), %rdi
	movzbl	16(%rdi), %eax
	cmpb	$1, %al
	je	.L14931
	.p2align 4,,7
.L16483:
	movq	-1072(%rbp), %r14
	movzbl	16(%r14), %edx
	testb	%dl, %dl
	jne	.L14934
	cmpb	$124, %al
	je	.L17529
	movq	-904(%rbp), %r15
	movq	32(%r15), %r13
	movq	%r13, -904(%rbp)
.L14930:
	cmpq	$0, -904(%rbp)
	je	.L14931
	movq	-904(%rbp), %r14
	movzbl	16(%r14), %eax
	cmpb	$1, %al
	jne	.L16483
.L14931:
	testl	$524288, -1064(%rbp)
	je	.L16484
	movl	-1060(%rbp), %eax
	testl	%eax, %eax
	jne	.L16486
	movl	-1056(%rbp), %eax
	testl	%eax, %eax
	je	.L17069
.L16486:
	movq	-1072(%rbp), %rdi
	movl	-1060(%rbp), %esi
	xorl	%eax, %eax
	movl	-1056(%rbp), %edx
	call	build_type_variant
	movq	%rax, %rbx
.L16485:
	movq	80(%rbx), %rdx
	testq	%rdx, %rdx
	je	.L16487
	cmpb	$32, 16(%rdx)
	je	.L17530
.L16487:
	movq	-904(%rbp), %rsi
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%rbx, %rdx
	call	build_decl
	cmpq	$0, -1032(%rbp)
	movq	%rax, -1072(%rbp)
	je	.L16501
	cmpq	$0, -1000(%rbp)
	jne	.L17126
	cmpb	$16, 16(%rbx)
	je	.L16503
	movq	%rax, %rdi
	movl	$.LC243, %esi
	xorl	%eax, %eax
	call	error_with_decl
.L16502:
	cmpq	$0, -1000(%rbp)
	je	.L16501
.L17126:
	movq	-1000(%rbp), %rdi
	movq	-1072(%rbp), %rsi
	xorl	%eax, %eax
	movq	-1032(%rbp), %rdx
	call	grok_method_quals
.L16501:
	testl	$1048576, -1064(%rbp)
	jne	.L16507
	cmpq	$0, -496(%rbp)
	je	.L13275
	movq	-496(%rbp), %r8
	testb	$4, 54(%r8)
	je	.L13275
.L16507:
	movq	-1072(%rbp), %r10
	orb	$4, 54(%r10)
	jmp	.L13275
.L16503:
	movq	96(%rbx), %rdx
	movq	%rdx, -1000(%rbp)
	jmp	.L16502
.L17530:
	movq	56(%rdx), %rcx
	movq	32(%rcx), %rax
	cmpb	$36, (%rax)
	jne	.L16487
	cmpb	$95, 1(%rax)
	jne	.L16487
	movq	current_binding_level(%rip), %rcx
	testq	%rcx, %rcx
	je	.L16498
.L16500:
	movq	8(%rcx), %rax
	testq	%rax, %rax
	je	.L17065
.L16499:
	cmpq	%rbx, 32(%rax)
	je	.L17531
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L16499
.L17065:
	movq	56(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.L16500
.L16498:
	movq	-904(%rbp), %rax
	movq	%rax, 56(%rdx)
	jmp	.L16487
.L17531:
	cmpq	$0, -904(%rbp)
	je	.L16498
	movq	-904(%rbp), %rdi
	movq	%rdi, 24(%rax)
	movq	80(%rbx), %rdx
	jmp	.L16498
	.p2align 6,,7
.L17069:
	movq	-1072(%rbp), %rbx
	jmp	.L16485
.L16484:
	movq	-512(%rbp), %r13
	cmpq	%r13, -1072(%rbp)
	je	.L17532
.L16508:
	cmpl	$5, -484(%rbp)
	je	.L17533
	movq	-1072(%rbp), %rax
	movq	void_type_node(%rip), %rdi
	cmpq	%rdi, 112(%rax)
	je	.L17534
.L16518:
	cmpl	$2, -484(%rbp)
	je	.L17127
	cmpl	$3, -484(%rbp)
	je	.L17535
	movq	-1072(%rbp), %r10
	movzbl	16(%r10), %eax
	cmpb	$23, %al
	je	.L16794
	cmpb	$16, %al
	je	.L16794
	movl	-1052(%rbp), %r12d
	testl	%r12d, %r12d
	jne	.L17536
.L16920:
	movl	-212(%rbp), %ecx
	testl	%ecx, %ecx
	jne	.L17537
.L16921:
	cmpq	$0, -1032(%rbp)
	jne	.L17538
.L16922:
	movl	-1004(%rbp), %edi
	testl	%edi, %edi
	jne	.L17539
.L16923:
	cmpq	$0, -1048(%rbp)
	jne	.L17540
.L16924:
	movq	-1072(%rbp), %rdx
	cmpb	$14, 16(%rdx)
	je	.L17541
	movq	-904(%rbp), %rsi
	movq	-1072(%rbp), %rdx
	movl	$33, %edi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %r12
.L16938:
	testl	$131072, -1064(%rbp)
	je	.L16939
	orb	$8, 54(%r12)
	movzbl	53(%r12), %r14d
	movl	-604(%rbp), %ebx
	testl	%ebx, %ebx
	sete	%r8b
	andb	$-2, %r14b
	orb	%r8b, %r14b
	movb	%r14b, 53(%r12)
.L16939:
	movq	64(%r12), %rax
	testq	%rax, %rax
	je	.L16940
	testb	$64, 46(%rax)
	je	.L16940
	orb	$12, 18(%r12)
	movzbl	53(%r12), %r15d
	movl	-604(%rbp), %eax
	testl	%eax, %eax
	sete	%sil
	andb	$-2, %r15b
	orb	%sil, %r15b
	movb	%r15b, 53(%r12)
.L16941:
	cmpq	$0, -1000(%rbp)
	je	.L16543
	cmpl	$1, -892(%rbp)
	je	.L17542
.L16946:
	testl	$131072, -1064(%rbp)
	jne	.L17543
.L16543:
	testl	$262144, -1064(%rbp)
	je	.L16948
	orb	$4, 53(%r12)
.L16948:
	movl	-1060(%rbp), %eax
	testl	%eax, %eax
	je	.L16949
	movq	-1072(%rbp), %rax
	movzbl	17(%r12), %r15d
	cmpb	$15, 16(%rax)
	setne	%sil
	andb	$-33, %r15b
	salb	$5, %sil
	orb	%sil, %r15b
	movb	%r15b, 17(%r12)
.L16949:
	movl	-1056(%rbp), %eax
	testl	%eax, %eax
	je	.L16950
	orb	$17, 17(%r12)
.L16950:
	movq	%r12, -1072(%rbp)
	jmp	.L13275
.L17543:
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC287, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	error
	andl	$-131073, -1064(%rbp)
	jmp	.L16543
.L17542:
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC286, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	error
	andl	$-65537, -1064(%rbp)
	jmp	.L16946
	.p2align 6,,7
.L16940:
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L17544
	movl	-1064(%rbp), %eax
	movzbl	18(%r12), %ecx
	shrl	$16, %eax
	movl	%eax, %edx
	andb	$-13, %cl
	movzbl	53(%r12), %eax
	andb	$1, %dl
	salb	$2, %dl
	andb	$1, %al
	salb	$3, %al
.L17444:
	orb	%dl, %cl
	orb	%al, %cl
	movb	%cl, 18(%r12)
	jmp	.L16941
.L17544:
	movl	-1064(%rbp), %eax
	movzbl	18(%r12), %ecx
	shrl	$16, %eax
	xorl	$1, %eax
	andb	$-13, %cl
	movl	%eax, %edx
	andb	$1, %dl
	salb	$3, %dl
	testb	$1, 53(%r12)
	sete	%al
	salb	$2, %al
	jmp	.L17444
.L17541:
	movq	96(%rdx), %rdi
	movq	-904(%rbp), %rsi
	xorl	%ecx, %ecx
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	lookup_field
	testq	%rax, %rax
	movq	%rax, %r12
	je	.L16927
	cmpb	$33, 16(%rax)
	je	.L16926
.L16927:
	movq	-1072(%rbp), %rax
	movq	-904(%rbp), %r15
	movl	$.LC283, %edi
	movq	96(%rax), %r14
	xorl	%eax, %eax
	movq	80(%r14), %rsi
	movq	56(%rsi), %rbx
	movq	32(%r15), %rsi
	movq	32(%rbx), %rdx
	call	error
	xorl	%eax, %eax
	movq	-904(%rbp), %rsi
	movq	-1072(%rbp), %r8
	movl	$33, %edi
	movq	8(%r8), %rdx
	call	build_lang_field_decl
	movq	152(%rax), %r11
	movq	%rax, %r12
	movq	%r14, 64(%rax)
	movq	%r14, 16(%r11)
	jmp	.L16938
.L16926:
	movq	8(%rax), %rax
	movq	-1072(%rbp), %r13
	cmpq	$0, 32(%rax)
	movq	8(%r13), %rdx
	jne	.L16929
	movzbl	16(%rax), %ecx
	cmpb	16(%rdx), %cl
	je	.L17545
.L16931:
	movq	-904(%rbp), %r9
	movl	$.LC284, %edi
	movq	32(%r9), %rsi
.L17443:
	xorl	%eax, %eax
	call	error
.L16934:
	movl	-604(%rbp), %edi
	testl	%edi, %edi
	je	.L16938
	movq	88(%r12), %rax
	testq	%rax, %rax
	je	.L16938
	cmpb	$43, 16(%rax)
	je	.L17546
.L16937:
	movq	56(%r12), %r11
	movq	64(%r12), %rdi
	movl	$.LC285, %esi
	xorl	%eax, %eax
	movq	32(%r11), %rdx
	call	error_with_aggr_type
	jmp	.L16938
.L17546:
	cmpq	$0, 40(%rax)
	je	.L16938
	jmp	.L16937
.L17545:
	cmpb	$18, %cl
	je	.L17547
.L16930:
	cmpq	$0, 32(%rdx)
	je	.L16934
	movq	-1072(%rbp), %rcx
	movq	%rcx, 8(%r12)
	jmp	.L16934
.L17547:
	movq	8(%rdx), %r10
	cmpq	%r10, 8(%rax)
	jne	.L16931
	jmp	.L16930
	.p2align 6,,7
.L16929:
	cmpq	%rdx, %rax
	je	.L16934
	movq	-904(%rbp), %rdx
	movl	$.LC284, %edi
	movq	32(%rdx), %rsi
	jmp	.L17443
	.p2align 6,,7
.L17540:
	movl	$.LC251, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L16924
.L17539:
	movl	$.LC250, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L16923
.L17538:
	movl	$.LC267, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L16922
.L17537:
	movl	$.LC282, %edi
	xorl	%eax, %eax
	call	warning
	jmp	.L16921
.L17536:
	movl	$.LC281, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L16920
.L16794:
	movq	-904(%rbp), %rcx
	movl	$0, -1008(%rbp)
	testq	%rcx, %rcx
	movq	%rcx, -360(%rbp)
	je	.L17287
	testl	$294912, -1064(%rbp)
	jne	.L17548
.L16796:
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L16797
	testl	$8454144, -1064(%rbp)
	je	.L16797
	movl	pedantic(%rip), %r12d
	testl	%r12d, %r12d
	jne	.L17549
.L16797:
	cmpq	$0, -1000(%rbp)
	jne	.L16798
	movl	-1052(%rbp), %eax
	testl	%eax, %eax
	jne	.L17550
.L16799:
	movq	lang_name_cplusplus(%rip), %rdx
	cmpq	%rdx, current_lang_name(%rip)
	je	.L17551
.L16803:
	movl	processing_template_decl(%rip), %eax
	movq	-1072(%rbp), %r15
	testl	%eax, %eax
	jne	.L16805
	movl	-1004(%rbp), %eax
	testl	%eax, %eax
	setne	%r13b
	movzbl	%r13b, %r14d
	incl	%r14d
.L16806:
	cmpq	$0, -1000(%rbp)
	movl	$0, -1012(%rbp)
	je	.L16810
	movq	-1072(%rbp), %rsi
	movl	$1, %eax
	movq	-1000(%rbp), %r8
	cmpb	$23, 16(%rsi)
	cmovne	-1012(%rbp), %eax
	movl	%eax, -1012(%rbp)
	movq	80(%r8), %rsi
	cmpb	$32, 16(%rsi)
	je	.L17552
.L16811:
	movq	%rsi, -1024(%rbp)
.L16813:
	cmpq	$0, -1048(%rbp)
	jne	.L17553
.L16814:
	movq	-360(%rbp), %rsi
	xorl	%eax, %eax
	movl	$29, %edi
	movq	%r15, %rdx
	call	build_lang_decl
	testb	$16, 17(%r15)
	movq	%rax, %r12
	je	.L16815
	orb	$16, 17(%rax)
.L16815:
	movl	-1012(%rbp), %eax
	testl	%eax, %eax
	je	.L16816
	movq	152(%r12), %rcx
	orb	$32, 1(%rcx)
	movq	-1000(%rbp), %rax
	movq	152(%r12), %rdx
	movq	%rax, 64(%r12)
	movq	%rax, 16(%rdx)
.L16816:
	orb	$1, 53(%r12)
	cmpq	$0, -1032(%rbp)
	je	.L16817
	cmpb	$23, 16(%r15)
	je	.L17554
.L16817:
	movq	-360(%rbp), %r9
	cmpq	ansi_opname+984(%rip), %r9
	je	.L17555
.L17314:
	movl	-448(%rbp), %eax
	testl	%eax, %eax
	jne	.L16828
	cmpq	$0, -1000(%rbp)
	jne	.L17556
.L16854:
	movq	56(%r12), %rsi
	testb	$1, 19(%rsi)
	jne	.L17557
.L16855:
	cmpq	$0, -1000(%rbp)
	je	.L17313
	testl	%r14d, %r14d
	jne	.L17558
.L16856:
	testl	%r14d, %r14d
	jne	.L16827
	movq	global_binding_level(%rip), %r10
	movq	112(%r12), %r13
	cmpq	%r10, current_binding_level(%rip)
	je	.L16859
	movq	48(%r13), %rdx
	testq	%rdx, %rdx
	movq	%rdx, %rbx
	jne	.L16860
.L16859:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L16861
	movq	56(%r13), %rbx
	testq	%rbx, %rbx
	jne	.L17138
	movq	32(%rdi), %r14
	testq	%r14, %r14
	jne	.L16862
	movq	144(%rdi), %rcx
	testb	$1, 3(%rcx)
	jne	.L17559
.L16862:
	testq	%rbx, %rbx
	jne	.L17138
.L17139:
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rbx
	jne	.L17138
.L16861:
	movq	40(%r13), %rbx
.L16860:
	testq	%rbx, %rbx
	je	.L17159
.L17138:
	cmpb	$32, 16(%rbx)
	je	.L16864
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L16864
	movq	8(%r13), %rax
	testq	%rax, %rax
	je	.L16872
	movq	80(%rax), %rax
	cmpq	%rax, %rbx
	je	.L17440
	xorl	%r9d, %r9d
	testl	%r9d, %r9d
	jle	.L17560
.L17440:
	movq	%rax, %rbx
.L16864:
	testq	%rbx, %rbx
	jne	.L16877
.L17159:
	movq	112(%r12), %r11
	movq	%r12, 40(%r11)
.L16878:
	xorl	%esi, %esi
	xorl	%eax, %eax
	movq	%r12, %rdi
	movl	$1, %edx
	call	make_decl_rtl
	movq	-1000(%rbp), %rax
	movq	120(%rax), %rbx
	movq	64(%rbx), %rax
	movl	$0, -1036(%rbp)
	testq	%rax, %rax
	movq	%rax, -368(%rbp)
	je	.L16882
	movl	24(%rax), %r8d
	movl	%r8d, -1036(%rbp)
.L16882:
	xorl	%r14d, %r14d
	cmpl	-1036(%rbp), %r14d
	jge	.L16884
.L16895:
	movq	-368(%rbp), %r10
	movslq	%r14d,%rdx
	movq	32(%r10,%rdx,8), %rbx
	movq	8(%rbx), %rsi
	testb	$1, 19(%rsi)
	jne	.L16888
	cmpl	$1, flag_all_virtual(%rip)
	je	.L16888
.L16885:
	incl	%r14d
	cmpl	-1036(%rbp), %r14d
	jl	.L16895
.L16884:
	movl	-1052(%rbp), %r14d
	testl	%r14d, %r14d
	je	.L16827
	cmpq	$0, 144(%r12)
	jne	.L16897
	movq	error_mark_node(%rip), %r15
	movq	%r15, 144(%r12)
.L16897:
	movq	56(%r12), %r13
	orb	$-128, 18(%r13)
	cmpq	$0, -1000(%rbp)
	je	.L17313
	movq	-1000(%rbp), %rsi
	movq	144(%rsi), %rdx
	testb	$1, 2(%rdx)
	je	.L16827
	movq	80(%rsi), %r9
	movq	56(%r9), %r10
	cmpq	$0, 64(%r10)
	jne	.L16827
	movl	write_virtuals(%rip), %eax
	cmpl	$2, %eax
	je	.L16899
	cmpl	$3, %eax
	je	.L17561
.L16827:
	cmpq	$0, -1000(%rbp)
	jne	.L16900
.L17313:
	movq	-904(%rbp), %rdx
	movq	%rdx, 112(%r12)
.L16900:
	cmpl	$1, -892(%rbp)
	je	.L17562
.L16901:
	xorl	%edx, %edx
	cmpq	$0, -1000(%rbp)
	je	.L16908
	movq	-1000(%rbp), %rsi
	movq	144(%rsi), %r8
	testb	$6, 3(%r8)
	je	.L16907
.L16908:
	testl	$8454144, -1064(%rbp)
	jne	.L16906
.L16907:
	movl	$1, %edx
.L16906:
	movzbl	18(%r12), %r14d
	salb	$3, %dl
	andb	$-9, %r14b
	orb	%dl, %r14b
	movb	%r14b, 18(%r12)
	movl	-212(%rbp), %ebx
	testl	%ebx, %ebx
	jne	.L17563
.L16909:
	movl	-1008(%rbp), %edx
	testl	%edx, %edx
	je	.L16543
	orb	$32, 54(%r12)
	jmp	.L16543
.L17563:
	movq	-1072(%rbp), %r15
	xorl	%eax, %eax
	movq	24(%r15), %rdi
	call	tree_last
	movq	%rax, %r8
	movl	-1008(%rbp), %eax
	testl	%eax, %eax
	jne	.L16910
	cmpq	$0, -1000(%rbp)
	jne	.L16910
	movq	-360(%rbp), %r13
	movl	$.LC274, %edi
	movl	$5, %ecx
	cld
	movq	32(%r13), %rsi
	repz
	cmpsb
	je	.L17564
.L16910:
	testq	%r8, %r8
	je	.L16912
	cmpq	void_list_node(%rip), %r8
	je	.L16912
	movl	$.LC279, %edi
.L17442:
	xorl	%eax, %eax
	call	warning
.L16911:
	testl	$131072, -1064(%rbp)
	je	.L16909
	movl	pedantic(%rip), %r10d
	movl	$1, current_extern_inline(%rip)
	testl	%r10d, %r10d
	jne	.L17565
	movl	flag_ansi(%rip), %r9d
	testl	%r9d, %r9d
	je	.L16909
	movl	$.LC280, %edi
	xorl	%eax, %eax
	call	warning
	jmp	.L16909
.L17565:
	movl	$.LC280, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L16909
.L16912:
	orb	$8, 53(%r12)
	jmp	.L16911
.L17564:
	movl	$.LC278, %edi
	jmp	.L17442
.L17562:
	movq	-1072(%rbp), %rdi
	xorl	%r8d, %r8d
	cmpb	$16, 16(%rdi)
	je	.L17566
	movl	-1008(%rbp), %ecx
	testl	%ecx, %ecx
	jne	.L16903
	cmpq	$0, -1000(%rbp)
	jne	.L16903
	movq	-360(%rbp), %r11
	movl	$.LC274, %edi
	movl	$5, %ecx
	cld
	movq	32(%r11), %rsi
	repz
	cmpsb
	je	.L17567
.L16903:
	movl	-1064(%rbp), %eax
	andl	$-65537, %eax
	testl	%r8d, %r8d
	cmove	-1064(%rbp), %eax
	movl	%eax, -1064(%rbp)
	jmp	.L16901
.L17567:
	movl	$.LC277, %edi
	xorl	%eax, %eax
	call	error
.L17441:
	movl	$1, %r8d
	jmp	.L16903
.L17566:
	movq	%r12, %rdi
	movl	$.LC276, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L17441
.L17561:
	testb	$4, 3(%rdx)
	jne	.L16827
.L16899:
	orb	$8, 18(%r12)
	jmp	.L16827
	.p2align 6,,7
.L16888:
	xorl	%edx, %edx
	movq	%rbx, %rdi
	movq	%r12, %rsi
	cmpl	$1, -448(%rbp)
	sete	%dl
	xorl	%eax, %eax
	call	get_first_matching_virtual
	testq	%rax, %rax
	movq	%rax, %r13
	je	.L16885
	movl	-1012(%rbp), %eax
	testl	%eax, %eax
	jne	.L17304
	movl	$1, -1052(%rbp)
	movq	8(%rbx), %rdx
	testb	$2, 19(%rdx)
	jne	.L16892
	movq	-1000(%rbp), %rdi
	movq	144(%rdi), %r9
	testb	$4, 1(%r9)
	je	.L16891
.L16892:
	movq	64(%r13), %rax
	cmpq	%rax, %rdx
	je	.L16891
	xorl	%edx, %edx
	movq	120(%rax), %rdi
	movq	%r12, %rsi
	cmpl	$1, -448(%rbp)
	sete	%dl
	xorl	%eax, %eax
	call	get_first_matching_virtual
	movq	%rax, %r13
.L16891:
	movq	144(%r12), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	value_member
	testq	%rax, %rax
	jne	.L16885
	movq	8(%r12), %rbx
	movq	8(%r13), %r8
	xorl	%eax, %eax
	movq	24(%rbx), %rcx
	movq	24(%r8), %r11
	movq	32(%rcx), %rsi
	movq	(%r11), %rdi
	movq	8(%rsi), %rbx
	movq	(%rcx), %rsi
	call	commonparms
	movq	8(%r15), %rsi
	movq	%rbx, %rdi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	build_cplus_method_type
	cmpq	$0, -1048(%rbp)
	movq	%rax, %r15
	jne	.L17568
.L16894:
	movq	144(%r12), %rdx
	movq	%r15, 8(%r12)
	xorl	%edi, %edi
	movq	%r13, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 144(%r12)
	jmp	.L16885
.L17568:
	movq	-1000(%rbp), %rdi
	movq	-1048(%rbp), %rdx
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_exception_variant
	movq	%rax, %r15
	movq	128(%rax), %rax
	movq	%rax, -1048(%rbp)
	jmp	.L16894
.L17304:
	movq	%r12, %rdi
	movl	$.LC260, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC261, %esi
	movq	%r13, %rdi
	call	error_with_decl
	jmp	.L16884
	.p2align 6,,7
.L16877:
	movzbl	16(%r12), %r13d
	cmpb	%r13b, 16(%rbx)
	je	.L16879
	movq	%r12, %rdi
	movl	$.LC259, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L16878
.L16879:
	movq	%r12, %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	duplicate_decls
	movq	%rbx, %r12
	jmp	.L16878
.L17560:
	testl	%edx, %edx
	jg	.L17440
	xorl	%r14d, %r14d
	testl	%r14d, %r14d
	je	.L16864
	movq	%rax, %rdx
	movq	%r13, %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17440
	.p2align 6,,7
.L16872:
	movq	8(%rbx), %rdi
	cmpq	error_mark_node(%rip), %rdi
	cmove	%rdi, %rbx
	jmp	.L16864
.L17559:
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%r13, %rsi
	cmpl	$-1, %edx
	sete	%cl
	xorl	%eax, %eax
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rbx
	je	.L16864
	testq	%rax, %rax
	je	.L17139
	cmpb	$32, 16(%rax)
	cmovne	%r14, %rbx
	jmp	.L16862
	.p2align 6,,7
.L17558:
	movq	-1000(%rbp), %rdi
	movq	-1024(%rbp), %rsi
	movq	%r12, %rdx
	movl	-448(%rbp), %ecx
	xorl	%eax, %eax
	call	check_classfn
	jmp	.L16856
.L17557:
	movl	-1052(%rbp), %esi
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	grok_op_properties
	jmp	.L16855
.L17556:
	movq	-1024(%rbp), %rdi
	xorl	%eax, %eax
	call	constructor_name
	cmpq	-360(%rbp), %rax
	je	.L17569
.L16828:
	cmpq	$0, -1000(%rbp)
	je	.L16854
	movq	-1000(%rbp), %rdi
	movq	-1024(%rbp), %rsi
	movq	%r12, %rdx
	movl	-448(%rbp), %ecx
	movq	-1032(%rbp), %r8
	xorl	%eax, %eax
	call	grokclassfn
	jmp	.L16854
.L17569:
	movq	152(%r12), %r15
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	movq	%r12, %rdx
	orb	$2, 1(%r15)
	movq	-1000(%rbp), %rdi
	movq	-360(%rbp), %rsi
	movq	-1032(%rbp), %r8
	call	grokclassfn
	testl	%r14d, %r14d
	jne	.L17570
.L16829:
	movq	-1000(%rbp), %rdi
	xorl	%eax, %eax
	movq	%r12, %rsi
	call	grok_ctor_properties
	testl	%r14d, %r14d
	jne	.L16827
	xorl	%r15d, %r15d
	movq	global_binding_level(%rip), %r14
	movq	112(%r12), %r13
	cmpq	%r14, current_binding_level(%rip)
	je	.L16831
	movq	48(%r13), %rdi
	testq	%rdi, %rdi
	movq	%rdi, %rbx
	jne	.L16832
.L16831:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L16833
	movq	56(%r13), %rbx
	testq	%rbx, %rbx
	jne	.L17136
	movq	32(%rdi), %r14
	testq	%r14, %r14
	jne	.L16834
	movq	144(%rdi), %r11
	testb	$1, 3(%r11)
	jne	.L17571
.L16834:
	testq	%rbx, %rbx
	jne	.L17136
.L17137:
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rbx
	jne	.L17136
.L16833:
	movq	40(%r13), %rbx
.L16832:
	testq	%rbx, %rbx
	je	.L17158
.L17136:
	cmpb	$32, 16(%rbx)
	je	.L16836
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L16836
	movq	8(%r13), %rax
	testq	%rax, %rax
	je	.L16844
	movq	80(%rax), %rax
	cmpq	%rax, %rbx
	je	.L17439
	testl	%r15d, %r15d
	jle	.L17572
.L17439:
	movq	%rax, %rbx
.L16836:
	testq	%rbx, %rbx
	jne	.L16849
.L17158:
	movq	112(%r12), %rbx
	movq	%r12, 40(%rbx)
.L16850:
	movq	%r12, %rdi
	xorl	%esi, %esi
	movl	$1, %edx
	xorl	%eax, %eax
	call	make_decl_rtl
	jmp	.L16827
.L16849:
	movzbl	16(%r12), %r8d
	cmpb	%r8b, 16(%rbx)
	je	.L16851
	movq	%r12, %rdi
	movl	$.LC259, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L16850
.L16851:
	movq	%r12, %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	duplicate_decls
	movq	%rbx, %r12
	jmp	.L16850
.L17572:
	testl	%edx, %edx
	jg	.L17439
	testl	%r15d, %r15d
	je	.L16836
	movq	%rax, %rdx
	movq	%r13, %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17439
.L16844:
	movq	8(%rbx), %r13
	cmpq	error_mark_node(%rip), %r13
	cmove	%r13, %rbx
	jmp	.L16836
.L17571:
	xorl	%ecx, %ecx
	movq	%r13, %rsi
	cmpl	$-1, %r15d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rbx
	je	.L16836
	testq	%rax, %rax
	je	.L17137
	cmpb	$32, 16(%rax)
	cmovne	%r14, %rbx
	jmp	.L16834
.L17570:
	movq	-1000(%rbp), %rdi
	movq	-360(%rbp), %rsi
	movq	%r12, %rdx
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	check_classfn
	jmp	.L16829
	.p2align 6,,7
.L17555:
	cmpq	$0, -1000(%rbp)
	movq	24(%r15), %r13
	je	.L16819
	testq	%r13, %r13
	je	.L16819
	cmpb	$16, 16(%r15)
	je	.L17573
.L16819:
	movq	ptr_type_node(%rip), %rsi
	movq	void_list_node(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	tree_cons
	movq	%r13, %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	type_list_equal
	testl	%eax, %eax
	movl	%eax, %ebx
	je	.L17574
	xorl	%eax, %eax
.L16821:
	cmpq	$0, -1000(%rbp)
	jne	.L16822
	testl	%ebx, %ebx
	movl	$.LC257, %edi
	jne	.L17314
.L17438:
	xorl	%eax, %eax
	call	error
	jmp	.L17314
.L16822:
	testl	%ebx, %ebx
	jne	.L17314
	testl	%eax, %eax
	jne	.L17314
	movl	$.LC258, %edi
	jmp	.L17438
	.p2align 6,,7
.L17574:
	movq	sizetype(%rip), %rsi
	movq	void_list_node(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	tree_cons
	movq	ptr_type_node(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%r13, %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	type_list_equal
	jmp	.L16821
.L17573:
	movq	(%r13), %r13
	jmp	.L16819
	.p2align 6,,7
.L17554:
	movl	$.LC256, %edi
	xorl	%eax, %eax
	call	error
	movq	$0, -1032(%rbp)
	jmp	.L16817
.L17553:
	movq	-1000(%rbp), %rdi
	movq	-1072(%rbp), %rsi
	xorl	%eax, %eax
	movq	-1048(%rbp), %rdx
	call	build_exception_variant
	movq	128(%rax), %r10
	movq	%rax, %r15
	movq	%r10, -1048(%rbp)
	jmp	.L16814
.L17552:
	movq	56(%rsi), %rsi
	jmp	.L16811
.L16810:
	movq	$0, -1024(%rbp)
	jmp	.L16813
.L16805:
	xorl	%r14d, %r14d
	jmp	.L16806
.L17551:
	movq	-904(%rbp), %rbx
	movl	24(%rbx), %r8d
	cmpl	$4, %r8d
	je	.L17575
.L16801:
	cmpl	$10, %r8d
	jle	.L16802
	movq	-904(%rbp), %r9
	movq	32(%r9), %rax
	cmpb	$95, (%rax)
	je	.L17576
.L16802:
	movq	-1072(%rbp), %rbx
	movq	-464(%rbp), %rdi
	xorl	%edx, %edx
	xorl	%eax, %eax
	movq	24(%rbx), %rsi
	call	build_decl_overload
	movl	$1, -1008(%rbp)
	movq	%rax, -904(%rbp)
	jmp	.L16803
.L17576:
	cmpb	$95, 1(%rax)
	jne	.L16802
	leaq	2(%rax), %rsi
	movl	$.LC275, %edi
	movl	$8, %ecx
	cld
	repz
	cmpsb
	je	.L16803
	jmp	.L16802
	.p2align 6,,7
.L17575:
	movq	32(%rbx), %rsi
	cmpb	$109, (%rsi)
	jne	.L16801
	movl	$.LC274, %edi
	movl	$5, %ecx
	cld
	repz
	cmpsb
	je	.L16803
	jmp	.L16801
	.p2align 6,,7
.L17550:
	movq	-480(%rbp), %rsi
	movl	$.LC273, %edi
	xorl	%eax, %eax
	call	error
	movl	$0, -1052(%rbp)
	jmp	.L16799
.L16798:
	movq	-1072(%rbp), %rdi
	cmpb	$23, 16(%rdi)
	jne	.L16803
	cmpl	$1, -892(%rbp)
	jg	.L16803
	movq	-1000(%rbp), %rdi
	movl	-1060(%rbp), %esi
	xorl	%eax, %eax
	movl	-1056(%rbp), %edx
	call	build_type_variant
	movq	-1072(%rbp), %r11
	movq	%rax, %rdi
	xorl	%eax, %eax
	movq	8(%r11), %rsi
	movq	24(%r11), %rdx
	call	build_cplus_method_type
	movq	%rax, -1072(%rbp)
	jmp	.L16803
.L17549:
	movq	-480(%rbp), %rsi
	movl	$.LC272, %edi
	xorl	%eax, %eax
	call	pedwarn
	jmp	.L16797
.L17548:
	movq	-480(%rbp), %rsi
	movl	$.LC272, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L16796
.L17535:
	movq	-1072(%rbp), %r12
	cmpq	error_mark_node(%rip), %r12
	je	.L16765
	movq	-1072(%rbp), %r9
	movzbl	16(%r9), %edx
	cmpb	$23, %dl
	je	.L17577
	cmpb	$16, %dl
	je	.L17578
	cmpb	$21, %dl
	je	.L17579
.L16753:
	movq	-1072(%rbp), %rdi
	cmpq	$0, 32(%rdi)
	jne	.L16760
	movl	-892(%rbp), %eax
	testl	%eax, %eax
	jne	.L16760
	cmpb	$18, %dl
	je	.L17580
.L16761:
	cmpq	$0, -904(%rbp)
	je	.L16762
	movq	-904(%rbp), %rbx
	movl	$.LC262, %edi
	xorl	%eax, %eax
	movq	32(%rbx), %rsi
	call	error
.L16763:
	movq	error_mark_node(%rip), %r11
	movq	%r11, -1072(%rbp)
.L16765:
	xorl	%r12d, %r12d
.L16546:
	movl	-1004(%rbp), %eax
	testl	%eax, %eax
	je	.L16768
	movq	-1000(%rbp), %r15
	cmpq	current_class_type(%rip), %r15
	je	.L17581
	testq	%r12, %r12
	je	.L17447
	cmpq	$0, 56(%r12)
	jne	.L17582
.L17447:
	movq	void_type_node(%rip), %rax
.L17448:
	movq	%rax, -1072(%rbp)
	jmp	.L13275
.L17582:
	movq	-1000(%rbp), %rdi
	movq	-904(%rbp), %rsi
	movq	%r12, %rdx
	movq	last_function_parms(%rip), %rcx
	movl	-448(%rbp), %r8d
	xorl	%eax, %eax
	movq	-1032(%rbp), %r9
	call	do_friend
	jmp	.L17448
.L17581:
	movl	$.LC265, %edi
	xorl	%eax, %eax
	call	warning
.L16768:
	testq	%r12, %r12
	jne	.L16543
	movl	-1052(%rbp), %eax
	testl	%eax, %eax
	jne	.L17583
.L16774:
	cmpq	$0, -1032(%rbp)
	jne	.L17584
.L16775:
	movl	-1004(%rbp), %r14d
	testl	%r14d, %r14d
	jne	.L17585
.L16776:
	cmpq	$0, -1048(%rbp)
	jne	.L17586
.L16777:
	movl	-604(%rbp), %esi
	testl	%esi, %esi
	je	.L16778
	movl	-892(%rbp), %r8d
	testl	%r8d, %r8d
	jne	.L17587
	movl	-1060(%rbp), %ecx
	testl	%ecx, %ecx
	je	.L16785
	movl	pedantic(%rip), %eax
	testl	%eax, %eax
	je	.L16778
	movl	-1060(%rbp), %r12d
	testl	%r12d, %r12d
	je	.L16785
	movl	pedantic(%rip), %edx
	testl	%edx, %edx
	je	.L16785
	movl	$.LC270, %esi
.L16786:
	movq	-904(%rbp), %r9
	movl	$.LC269, %edi
	xorl	%eax, %eax
	movq	32(%r9), %rdx
	call	error
.L16778:
	movl	-892(%rbp), %edi
	testl	%edi, %edi
	jne	.L16788
	movl	-1060(%rbp), %ebx
	testl	%ebx, %ebx
	je	.L16787
	movl	-604(%rbp), %r11d
	testl	%r11d, %r11d
	je	.L16787
.L16788:
	movq	-904(%rbp), %rsi
	movq	-1072(%rbp), %rdx
	xorl	%eax, %eax
	movl	$33, %edi
	call	build_lang_field_decl
	movl	-892(%rbp), %r13d
	movq	%rax, %r12
	testl	%r13d, %r13d
	jne	.L16790
	movq	-1072(%rbp), %r15
	cmpb	$18, 16(%r15)
	je	.L16790
.L16789:
	orb	$8, 18(%r12)
	movzbl	53(%r12), %r14d
	movl	-604(%rbp), %r8d
	testl	%r8d, %r8d
	sete	%sil
	andb	$-2, %r14b
	orb	%sil, %r14b
	movb	%r14b, 53(%r12)
	jmp	.L16543
.L16790:
	orb	$4, 18(%r12)
	jmp	.L16789
.L16787:
	movq	-904(%rbp), %rsi
	movq	-1072(%rbp), %rdx
	movl	$36, %edi
	xorl	%eax, %eax
	call	build_lang_field_decl
	movq	%rax, %r12
	jmp	.L16543
.L16785:
	movl	$.LC271, %esi
	jmp	.L16786
.L17587:
	movq	-904(%rbp), %r10
	movl	$.LC268, %edi
	xorl	%eax, %eax
	movq	32(%r10), %rsi
	call	error
	jmp	.L16778
.L17586:
	movl	$.LC251, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L16777
.L17585:
	movl	$.LC250, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L16776
.L17584:
	movl	$.LC267, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L16775
.L17583:
	movl	$.LC266, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L16774
.L16762:
	movl	$.LC263, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L16763
.L17580:
	movl	-604(%rbp), %eax
	testl	%eax, %eax
	je	.L16761
.L16760:
	movl	-1004(%rbp), %eax
	testl	%eax, %eax
	je	.L16765
	cmpq	$0, -904(%rbp)
	jne	.L16951
	movl	$.LC250, %edi
.L17466:
	xorl	%eax, %eax
	call	error
.L17446:
	movq	void_type_node(%rip), %rbx
	movq	%rbx, -1072(%rbp)
	jmp	.L13275
.L16951:
	movq	-904(%rbp), %r13
	movl	$.LC264, %edi
	xorl	%eax, %eax
	movq	32(%r13), %rsi
	call	error
	movl	$0, -1004(%rbp)
	jmp	.L16765
.L17579:
	movq	-1072(%rbp), %rbx
	movq	144(%rbx), %r12
	testb	$16, 3(%r12)
	je	.L16753
	movq	-904(%rbp), %rsi
	xorl	%eax, %eax
	movl	$33, %edi
	movq	%rbx, %rdx
	call	build_lang_field_decl
	cmpq	$0, -1000(%rbp)
	movq	%rax, %rsi
	jne	.L16754
	movq	current_class_type(%rip), %rdx
	movq	%rdx, -1000(%rbp)
.L16754:
	movq	-1000(%rbp), %r9
	movq	80(%r9), %rdi
	cmpb	$32, 16(%rdi)
	je	.L17588
.L16758:
	xorl	%eax, %eax
	call	finish_exception_decl
	jmp	.L17446
.L17588:
	movq	56(%rdi), %rdi
	jmp	.L16758
.L17578:
	movl	-1004(%rbp), %esi
	movl	-1052(%rbp), %r13d
	movq	-1032(%rbp), %r8
	movq	-1048(%rbp), %rcx
	movq	-1072(%rbp), %r15
	testl	%esi, %esi
	movl	%r13d, -988(%rbp)
	sete	%r12b
	movq	%r8, -968(%rbp)
	movq	%rcx, -984(%rbp)
	movzbl	%r12b, %r14d
	decl	%r14d
	cmpq	$0, -1000(%rbp)
	je	.L16662
	movq	-1000(%rbp), %rdi
	movq	80(%rdi), %rsi
	cmpb	$32, 16(%rsi)
	je	.L17589
.L16663:
	movq	%rsi, -960(%rbp)
.L16665:
	cmpq	$0, -1048(%rbp)
	jne	.L17590
.L16666:
	movq	-904(%rbp), %rsi
	xorl	%eax, %eax
	movl	$29, %edi
	movq	%r15, %rdx
	call	build_lang_decl
	testb	$16, 17(%r15)
	movq	%rax, %r12
	je	.L16667
	orb	$16, 17(%rax)
.L16667:
	xorl	%r10d, %r10d
	testl	%r10d, %r10d
	je	.L16668
	movq	152(%r12), %r11
	orb	$32, 1(%r11)
	movq	-1000(%rbp), %rax
	movq	152(%r12), %r9
	movq	%rax, 64(%r12)
	movq	%rax, 16(%r9)
.L16668:
	orb	$1, 53(%r12)
	cmpq	$0, -1032(%rbp)
	je	.L16669
	cmpb	$23, 16(%r15)
	je	.L17591
.L16669:
	movq	-904(%rbp), %rdx
	cmpq	ansi_opname+984(%rip), %rdx
	je	.L17592
.L16670:
	testl	%r14d, %r14d
	js	.L16679
	movl	-448(%rbp), %esi
	testl	%esi, %esi
	jne	.L16680
	cmpq	$0, -1000(%rbp)
	jne	.L17593
.L16706:
	movq	56(%r12), %rbx
	testb	$1, 19(%rbx)
	jne	.L17594
.L16707:
	cmpq	$0, -1000(%rbp)
	je	.L16679
	testl	%r14d, %r14d
	jne	.L17595
.L16708:
	testl	%r14d, %r14d
	jne	.L16679
	movq	global_binding_level(%rip), %r9
	movq	112(%r12), %r13
	cmpq	%r9, current_binding_level(%rip)
	je	.L16711
	movq	48(%r13), %r11
	testq	%r11, %r11
	movq	%r11, %rbx
	jne	.L16712
.L16711:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L16713
	movq	56(%r13), %rbx
	testq	%rbx, %rbx
	jne	.L17134
	movq	32(%rdi), %r14
	testq	%r14, %r14
	jne	.L16714
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L17596
.L16714:
	testq	%rbx, %rbx
	jne	.L17134
.L17135:
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rbx
	jne	.L17134
.L16713:
	movq	40(%r13), %rbx
.L16712:
	testq	%rbx, %rbx
	je	.L17157
.L17134:
	cmpb	$32, 16(%rbx)
	je	.L16716
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L16716
	movq	8(%r13), %rax
	testq	%rax, %rax
	je	.L16724
	movq	80(%rax), %rax
	cmpq	%rax, %rbx
	je	.L17436
	xorl	%r14d, %r14d
	testl	%r14d, %r14d
	jle	.L17597
.L17436:
	movq	%rax, %rbx
.L16716:
	testq	%rbx, %rbx
	jne	.L16729
.L17157:
	movq	112(%r12), %r8
	movq	%r12, 40(%r8)
.L16730:
	movq	%r12, %rdi
	xorl	%esi, %esi
	xorl	%eax, %eax
	movl	$1, %edx
	call	make_decl_rtl
	movq	-1000(%rbp), %r10
	movq	120(%r10), %rdi
	movq	64(%rdi), %r14
	movl	$0, -972(%rbp)
	testq	%r14, %r14
	je	.L16734
	movl	24(%r14), %r9d
	movl	%r9d, -972(%rbp)
.L16734:
	movl	$0, -976(%rbp)
	movl	-972(%rbp), %ebx
	cmpl	%ebx, -976(%rbp)
	jge	.L16736
.L16747:
	movslq	-976(%rbp),%rdx
	movq	32(%r14,%rdx,8), %rbx
	movq	8(%rbx), %r11
	testb	$1, 19(%r11)
	jne	.L16740
	cmpl	$1, flag_all_virtual(%rip)
	je	.L16740
.L16737:
	incl	-976(%rbp)
	movl	-972(%rbp), %r13d
	cmpl	%r13d, -976(%rbp)
	jl	.L16747
.L16736:
	movl	-988(%rbp), %eax
	testl	%eax, %eax
	je	.L16679
	cmpq	$0, 144(%r12)
	jne	.L16749
	movq	error_mark_node(%rip), %r15
	movq	%r15, 144(%r12)
.L16749:
	movq	56(%r12), %r14
	orb	$-128, 18(%r14)
	cmpq	$0, -1000(%rbp)
	je	.L16679
	movq	-1000(%rbp), %rax
	movq	144(%rax), %rdx
	testb	$1, 2(%rdx)
	je	.L16679
	movq	80(%rax), %r8
	movq	56(%r8), %rsi
	cmpq	$0, 64(%rsi)
	jne	.L16679
	movl	write_virtuals(%rip), %eax
	cmpl	$2, %eax
	je	.L16751
	cmpl	$3, %eax
	je	.L17598
.L16679:
	movzbl	-212(%rbp), %eax
	movzbl	53(%r12), %ecx
	salb	$3, %al
	andb	$-9, %cl
	orb	%al, %cl
	movb	%cl, 53(%r12)
.L17437:
	orb	$8, 18(%r12)
	jmp	.L16546
.L17598:
	testb	$4, 3(%rdx)
	jne	.L16679
.L16751:
	orb	$8, 18(%r12)
	jmp	.L16679
	.p2align 6,,7
.L16740:
	xorl	%edx, %edx
	movq	%rbx, %rdi
	movq	%r12, %rsi
	cmpl	$1, -448(%rbp)
	sete	%dl
	xorl	%eax, %eax
	call	get_first_matching_virtual
	testq	%rax, %rax
	movq	%rax, %r13
	je	.L16737
	xorl	%esi, %esi
	testl	%esi, %esi
	jne	.L17303
	movl	$1, -988(%rbp)
	movq	8(%rbx), %rdx
	testb	$2, 19(%rdx)
	jne	.L16744
	movq	-1000(%rbp), %rax
	movq	144(%rax), %r8
	testb	$4, 1(%r8)
	je	.L16743
.L16744:
	movq	64(%r13), %rax
	cmpq	%rax, %rdx
	je	.L16743
	xorl	%edx, %edx
	movq	120(%rax), %rdi
	movq	%r12, %rsi
	cmpl	$1, -448(%rbp)
	sete	%dl
	xorl	%eax, %eax
	call	get_first_matching_virtual
	movq	%rax, %r13
.L16743:
	movq	144(%r12), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	value_member
	testq	%rax, %rax
	jne	.L16737
	movq	8(%r12), %rbx
	movq	8(%r13), %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rcx
	movq	24(%rdi), %r10
	movq	32(%rcx), %r9
	movq	(%rcx), %rsi
	movq	(%r10), %rdi
	movq	8(%r9), %rbx
	call	commonparms
	movq	8(%r15), %rsi
	movq	%rax, %rdx
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	build_cplus_method_type
	cmpq	$0, -984(%rbp)
	movq	%rax, %r15
	jne	.L17599
.L16746:
	movq	144(%r12), %rdx
	movq	%r15, 8(%r12)
	xorl	%edi, %edi
	movq	%r13, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 144(%r12)
	jmp	.L16737
.L17599:
	movq	-1000(%rbp), %rdi
	movq	-984(%rbp), %rdx
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_exception_variant
	movq	128(%rax), %r11
	movq	%rax, %r15
	movq	%r11, -984(%rbp)
	jmp	.L16746
.L17303:
	movq	%r12, %rdi
	movl	$.LC260, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC261, %esi
	movq	%r13, %rdi
	call	error_with_decl
	jmp	.L16736
	.p2align 6,,7
.L16729:
	movzbl	16(%r12), %r13d
	cmpb	%r13b, 16(%rbx)
	je	.L16731
	movq	%r12, %rdi
	movl	$.LC259, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L16730
.L16731:
	movq	%r12, %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	duplicate_decls
	movq	%rbx, %r12
	jmp	.L16730
.L17597:
	testl	%edx, %edx
	jg	.L17436
	xorl	%esi, %esi
	testl	%esi, %esi
	je	.L16716
	movq	%rax, %rdx
	movq	%r13, %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17436
.L16724:
	movq	8(%rbx), %rcx
	cmpq	error_mark_node(%rip), %rcx
	cmove	%rcx, %rbx
	jmp	.L16716
.L17596:
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	movq	%r13, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rbx
	je	.L16716
	testq	%rax, %rax
	je	.L17135
	cmpb	$32, 16(%rax)
	cmovne	%r14, %rbx
	jmp	.L16714
	.p2align 6,,7
.L17595:
	movq	-1000(%rbp), %rdi
	movq	-960(%rbp), %rsi
	movq	%r12, %rdx
	movl	-448(%rbp), %ecx
	xorl	%eax, %eax
	call	check_classfn
	jmp	.L16708
.L17594:
	movl	-1052(%rbp), %esi
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	grok_op_properties
	jmp	.L16707
.L17593:
	movq	-960(%rbp), %rdi
	xorl	%eax, %eax
	call	constructor_name
	cmpq	-904(%rbp), %rax
	je	.L17600
.L16680:
	cmpq	$0, -1000(%rbp)
	je	.L16706
	movq	-1000(%rbp), %rdi
	movq	-960(%rbp), %rsi
	movq	%r12, %rdx
	movl	-448(%rbp), %ecx
	movq	-968(%rbp), %r8
	xorl	%eax, %eax
	call	grokclassfn
	jmp	.L16706
.L17600:
	movq	152(%r12), %r15
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	movq	%r12, %rdx
	orb	$2, 1(%r15)
	movq	-1000(%rbp), %rdi
	movq	-904(%rbp), %rsi
	movq	-968(%rbp), %r8
	call	grokclassfn
	testl	%r14d, %r14d
	jne	.L17601
.L16681:
	movq	-1000(%rbp), %rdi
	xorl	%eax, %eax
	movq	%r12, %rsi
	call	grok_ctor_properties
	testl	%r14d, %r14d
	jne	.L16679
	xorl	%r15d, %r15d
	movq	global_binding_level(%rip), %r14
	movq	112(%r12), %r13
	cmpq	%r14, current_binding_level(%rip)
	je	.L16683
	movq	48(%r13), %rcx
	testq	%rcx, %rcx
	movq	%rcx, %rbx
	jne	.L16684
.L16683:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L16685
	movq	56(%r13), %rbx
	testq	%rbx, %rbx
	jne	.L17132
	movq	32(%rdi), %r14
	testq	%r14, %r14
	jne	.L16686
	movq	144(%rdi), %r8
	testb	$1, 3(%r8)
	jne	.L17602
.L16686:
	testq	%rbx, %rbx
	jne	.L17132
.L17133:
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rbx
	jne	.L17132
.L16685:
	movq	40(%r13), %rbx
.L16684:
	testq	%rbx, %rbx
	je	.L17156
.L17132:
	cmpb	$32, 16(%rbx)
	je	.L16688
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L16688
	movq	8(%r13), %rax
	testq	%rax, %rax
	je	.L16696
	movq	80(%rax), %rax
	cmpq	%rax, %rbx
	je	.L17435
	testl	%r15d, %r15d
	jle	.L17603
.L17435:
	movq	%rax, %rbx
.L16688:
	testq	%rbx, %rbx
	jne	.L16701
.L17156:
	movq	112(%r12), %rdi
	movq	%r12, 40(%rdi)
.L16702:
	movq	%r12, %rdi
	xorl	%esi, %esi
	movl	$1, %edx
	xorl	%eax, %eax
	call	make_decl_rtl
	jmp	.L16679
.L16701:
	movzbl	16(%r12), %r10d
	cmpb	%r10b, 16(%rbx)
	je	.L16703
	movq	%r12, %rdi
	movl	$.LC259, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L16702
.L16703:
	movq	%r12, %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	duplicate_decls
	movq	%rbx, %r12
	jmp	.L16702
.L17603:
	testl	%edx, %edx
	jg	.L17435
	testl	%r15d, %r15d
	je	.L16688
	movq	%rax, %rdx
	movq	%r13, %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17435
.L16696:
	movq	8(%rbx), %r13
	cmpq	error_mark_node(%rip), %r13
	cmove	%r13, %rbx
	jmp	.L16688
.L17602:
	xorl	%ecx, %ecx
	movq	%r13, %rsi
	cmpl	$-1, %r15d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rbx
	je	.L16688
	testq	%rax, %rax
	je	.L17133
	cmpb	$32, 16(%rax)
	cmovne	%r14, %rbx
	jmp	.L16686
.L17601:
	movq	-1000(%rbp), %rdi
	movq	-904(%rbp), %rsi
	movq	%r12, %rdx
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	check_classfn
	jmp	.L16681
	.p2align 6,,7
.L17592:
	cmpq	$0, -1000(%rbp)
	movq	24(%r15), %r13
	je	.L16671
	testq	%r13, %r13
	je	.L16671
	cmpb	$16, 16(%r15)
	je	.L17604
.L16671:
	movq	ptr_type_node(%rip), %rsi
	movq	void_list_node(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	tree_cons
	movq	%r13, %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	type_list_equal
	testl	%eax, %eax
	movl	%eax, %ebx
	je	.L17605
	xorl	%eax, %eax
.L16673:
	cmpq	$0, -1000(%rbp)
	jne	.L16674
	testl	%ebx, %ebx
	movl	$.LC257, %edi
	jne	.L16670
.L17434:
	xorl	%eax, %eax
	call	error
	jmp	.L16670
	.p2align 6,,7
.L16674:
	testl	%ebx, %ebx
	jne	.L16670
	testl	%eax, %eax
	jne	.L16670
	movl	$.LC258, %edi
	jmp	.L17434
	.p2align 6,,7
.L17605:
	movq	sizetype(%rip), %rsi
	movq	void_list_node(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	tree_cons
	movq	ptr_type_node(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%r13, %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	type_list_equal
	jmp	.L16673
.L17604:
	movq	(%r13), %r13
	jmp	.L16671
	.p2align 6,,7
.L17591:
	movl	$.LC256, %edi
	xorl	%eax, %eax
	call	error
	movq	$0, -968(%rbp)
	jmp	.L16669
.L17590:
	movq	-1000(%rbp), %rdi
	movq	-1072(%rbp), %rsi
	xorl	%eax, %eax
	movq	-1048(%rbp), %rdx
	call	build_exception_variant
	movq	128(%rax), %rbx
	movq	%rax, %r15
	movq	%rbx, -984(%rbp)
	jmp	.L16666
.L17589:
	movq	56(%rsi), %rsi
	jmp	.L16663
.L16662:
	movq	$0, -960(%rbp)
	jmp	.L16665
.L17577:
	movl	-1004(%rbp), %edx
	testl	%edx, %edx
	jne	.L16548
	cmpq	$0, -1000(%rbp)
	jne	.L16550
	movq	current_class_type(%rip), %r11
	testq	%r11, %r11
	movq	%r11, -1000(%rbp)
	jne	.L16550
	movq	-904(%rbp), %rcx
	movzbl	19(%rcx), %esi
	movl	%esi, %ebx
	andl	$1, %ebx
	jne	.L17606
	movq	-904(%rbp), %r15
	movq	32(%r15), %rdx
.L16556:
	testl	%ebx, %ebx
	movl	$.LC253, %esi
	movl	$.LC252, %edi
	movl	$.LC254, %ebx
	cmove	%rbx, %rsi
.L17471:
	xorl	%eax, %eax
	call	error
	jmp	.L17447
.L17606:
	movq	%rcx, %rdi
	xorl	%eax, %eax
	call	operator_name_string
	movq	%rax, %rdx
	jmp	.L16556
	.p2align 6,,7
.L16550:
	movl	-1052(%rbp), %r14d
	testl	%r14d, %r14d
	je	.L16559
	movq	-1000(%rbp), %rcx
	cmpb	$22, 16(%rcx)
	je	.L17607
.L16559:
	cmpl	$1, -892(%rbp)
	jle	.L17608
.L16548:
	movl	-1004(%rbp), %r10d
	movl	-1052(%rbp), %r9d
	movl	$0, -908(%rbp)
	movq	-1032(%rbp), %r12
	movq	-1048(%rbp), %r13
	movq	-1072(%rbp), %r15
	testl	%r10d, %r10d
	movl	%r9d, -948(%rbp)
	sete	%dil
	movq	%r12, -928(%rbp)
	movq	%r13, -944(%rbp)
	movzbl	%dil, %r14d
	decl	%r14d
	cmpq	$0, -1000(%rbp)
	je	.L16564
	cmpb	$23, 16(%r15)
	movl	$1, %eax
	movq	-1000(%rbp), %rdx
	cmovne	-908(%rbp), %eax
	movl	%eax, -908(%rbp)
	movq	80(%rdx), %rsi
	cmpb	$32, 16(%rsi)
	je	.L17609
.L16565:
	movq	%rsi, -920(%rbp)
.L16567:
	cmpq	$0, -1048(%rbp)
	jne	.L17610
.L16568:
	movq	-904(%rbp), %rsi
	xorl	%eax, %eax
	movl	$29, %edi
	movq	%r15, %rdx
	call	build_lang_decl
	testb	$16, 17(%r15)
	movq	%rax, %r12
	je	.L16569
	orb	$16, 17(%rax)
.L16569:
	movl	-908(%rbp), %esi
	testl	%esi, %esi
	je	.L16570
	movq	152(%r12), %rcx
	orb	$32, 1(%rcx)
	movq	-1000(%rbp), %rax
	movq	152(%r12), %rbx
	movq	%rax, 64(%r12)
	movq	%rax, 16(%rbx)
.L16570:
	orb	$1, 53(%r12)
	cmpq	$0, -1032(%rbp)
	je	.L16571
	cmpb	$23, 16(%r15)
	je	.L17611
.L16571:
	movq	-904(%rbp), %r8
	cmpq	ansi_opname+984(%rip), %r8
	je	.L17612
.L16572:
	testl	%r14d, %r14d
	js	.L16581
	movl	-448(%rbp), %edi
	testl	%edi, %edi
	jne	.L16582
	cmpq	$0, -1000(%rbp)
	jne	.L17613
.L16608:
	movq	56(%r12), %rsi
	testb	$1, 19(%rsi)
	jne	.L17614
.L16609:
	cmpq	$0, -1000(%rbp)
	je	.L16581
	testl	%r14d, %r14d
	jne	.L17615
.L16610:
	testl	%r14d, %r14d
	jne	.L16581
	movq	global_binding_level(%rip), %rbx
	movq	112(%r12), %r13
	cmpq	%rbx, current_binding_level(%rip)
	je	.L16613
	movq	48(%r13), %rcx
	testq	%rcx, %rcx
	movq	%rcx, %rbx
	jne	.L16614
.L16613:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L16615
	movq	56(%r13), %rbx
	testq	%rbx, %rbx
	jne	.L17130
	movq	32(%rdi), %r14
	testq	%r14, %r14
	jne	.L16616
	movq	144(%rdi), %r8
	testb	$1, 3(%r8)
	jne	.L17616
.L16616:
	testq	%rbx, %rbx
	jne	.L17130
.L17131:
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rbx
	jne	.L17130
.L16615:
	movq	40(%r13), %rbx
.L16614:
	testq	%rbx, %rbx
	je	.L17155
.L17130:
	cmpb	$32, 16(%rbx)
	je	.L16618
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L16618
	movq	8(%r13), %rax
	testq	%rax, %rax
	je	.L16626
	movq	80(%rax), %rax
	cmpq	%rax, %rbx
	je	.L17433
	xorl	%edi, %edi
	testl	%edi, %edi
	jle	.L17617
.L17433:
	movq	%rax, %rbx
.L16618:
	testq	%rbx, %rbx
	jne	.L16631
.L17155:
	movq	112(%r12), %r9
	movq	%r12, 40(%r9)
.L16632:
	xorl	%esi, %esi
	xorl	%eax, %eax
	movq	%r12, %rdi
	movl	$1, %edx
	call	make_decl_rtl
	movq	-1000(%rbp), %rax
	movq	120(%rax), %r11
	movq	64(%r11), %r14
	movl	$0, -932(%rbp)
	testq	%r14, %r14
	je	.L16636
	movl	24(%r14), %edx
	movl	%edx, -932(%rbp)
.L16636:
	movl	$0, -936(%rbp)
	movl	-932(%rbp), %esi
	cmpl	%esi, -936(%rbp)
	jge	.L16638
.L16649:
	movslq	-936(%rbp),%r8
	movq	32(%r14,%r8,8), %rbx
	movq	8(%rbx), %rcx
	testb	$1, 19(%rcx)
	jne	.L16642
	cmpl	$1, flag_all_virtual(%rip)
	je	.L16642
.L16639:
	incl	-936(%rbp)
	movl	-932(%rbp), %r13d
	cmpl	%r13d, -936(%rbp)
	jl	.L16649
.L16638:
	movl	-948(%rbp), %r15d
	testl	%r15d, %r15d
	je	.L16581
	cmpq	$0, 144(%r12)
	jne	.L16651
	movq	error_mark_node(%rip), %r14
	movq	%r14, 144(%r12)
.L16651:
	movq	56(%r12), %rdi
	orb	$-128, 18(%rdi)
	cmpq	$0, -1000(%rbp)
	je	.L16581
	movq	-1000(%rbp), %rcx
	movq	144(%rcx), %rdx
	testb	$1, 2(%rdx)
	je	.L16581
	movq	80(%rcx), %r10
	movq	56(%r10), %rbx
	cmpq	$0, 64(%rbx)
	jne	.L16581
	movl	write_virtuals(%rip), %eax
	cmpl	$2, %eax
	je	.L16653
	cmpl	$3, %eax
	je	.L17618
.L16581:
	movzbl	-212(%rbp), %eax
	movzbl	53(%r12), %r9d
	salb	$3, %al
	andb	$-9, %r9b
	orb	%al, %r9b
	movb	%r9b, 53(%r12)
	testl	$131072, -1064(%rbp)
	jne	.L17437
	cmpq	$0, -1000(%rbp)
	je	.L16656
	movl	-376(%rbp), %r11d
	testl	%r11d, %r11d
	jns	.L17437
.L16656:
	movl	-1004(%rbp), %edx
	testl	%edx, %edx
	je	.L16768
	testl	$8454144, -1064(%rbp)
	jne	.L16546
	jmp	.L17437
.L17618:
	testb	$4, 3(%rdx)
	jne	.L16581
.L16653:
	orb	$8, 18(%r12)
	jmp	.L16581
	.p2align 6,,7
.L16642:
	xorl	%edx, %edx
	movq	%rbx, %rdi
	movq	%r12, %rsi
	cmpl	$1, -448(%rbp)
	sete	%dl
	xorl	%eax, %eax
	call	get_first_matching_virtual
	testq	%rax, %rax
	movq	%rax, %r13
	je	.L16639
	movl	-908(%rbp), %edi
	testl	%edi, %edi
	jne	.L17302
	movl	$1, -948(%rbp)
	movq	8(%rbx), %rdx
	testb	$2, 19(%rdx)
	jne	.L16646
	movq	-1000(%rbp), %r10
	movq	144(%r10), %rbx
	testb	$4, 1(%rbx)
	je	.L16645
.L16646:
	movq	64(%r13), %rax
	cmpq	%rax, %rdx
	je	.L16645
	xorl	%edx, %edx
	movq	120(%rax), %rdi
	movq	%r12, %rsi
	cmpl	$1, -448(%rbp)
	sete	%dl
	xorl	%eax, %eax
	call	get_first_matching_virtual
	movq	%rax, %r13
.L16645:
	movq	144(%r12), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	value_member
	testq	%rax, %rax
	jne	.L16639
	movq	8(%r12), %rcx
	movq	8(%r13), %rdx
	xorl	%eax, %eax
	movq	24(%rcx), %r9
	movq	24(%rdx), %r11
	movq	32(%r9), %rsi
	movq	(%r11), %rdi
	movq	8(%rsi), %rbx
	movq	(%r9), %rsi
	call	commonparms
	movq	8(%r15), %rsi
	movq	%rbx, %rdi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	build_cplus_method_type
	cmpq	$0, -944(%rbp)
	movq	%rax, %r15
	jne	.L17619
.L16648:
	movq	144(%r12), %rdx
	movq	%r15, 8(%r12)
	xorl	%edi, %edi
	movq	%r13, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 144(%r12)
	jmp	.L16639
.L17619:
	movq	-1000(%rbp), %rdi
	movq	-944(%rbp), %rdx
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_exception_variant
	movq	128(%rax), %r8
	movq	%rax, %r15
	movq	%r8, -944(%rbp)
	jmp	.L16648
.L17302:
	movq	%r12, %rdi
	movl	$.LC260, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC261, %esi
	movq	%r13, %rdi
	call	error_with_decl
	jmp	.L16638
	.p2align 6,,7
.L16631:
	movzbl	16(%r12), %r13d
	cmpb	%r13b, 16(%rbx)
	je	.L16633
	movq	%r12, %rdi
	movl	$.LC259, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L16632
.L16633:
	movq	%r12, %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	duplicate_decls
	movq	%rbx, %r12
	jmp	.L16632
.L17617:
	testl	%edx, %edx
	jg	.L17433
	xorl	%r14d, %r14d
	testl	%r14d, %r14d
	je	.L16618
	movq	%rax, %rdx
	movq	%r13, %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17433
.L16626:
	movq	8(%rbx), %r10
	cmpq	error_mark_node(%rip), %r10
	cmove	%r10, %rbx
	jmp	.L16618
.L17616:
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%r13, %rsi
	cmpl	$-1, %edx
	sete	%cl
	xorl	%eax, %eax
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rbx
	je	.L16618
	testq	%rax, %rax
	je	.L17131
	cmpb	$32, 16(%rax)
	cmovne	%r14, %rbx
	jmp	.L16616
	.p2align 6,,7
.L17615:
	movq	-1000(%rbp), %rdi
	movq	-920(%rbp), %rsi
	movq	%r12, %rdx
	movl	-448(%rbp), %ecx
	xorl	%eax, %eax
	call	check_classfn
	jmp	.L16610
.L17614:
	movl	-1052(%rbp), %esi
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	grok_op_properties
	jmp	.L16609
.L17613:
	movq	-920(%rbp), %rdi
	xorl	%eax, %eax
	call	constructor_name
	cmpq	-904(%rbp), %rax
	je	.L17620
.L16582:
	cmpq	$0, -1000(%rbp)
	je	.L16608
	movq	-1000(%rbp), %rdi
	movq	-920(%rbp), %rsi
	movq	%r12, %rdx
	movl	-448(%rbp), %ecx
	movq	-928(%rbp), %r8
	xorl	%eax, %eax
	call	grokclassfn
	jmp	.L16608
.L17620:
	movq	152(%r12), %r15
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	movq	%r12, %rdx
	orb	$2, 1(%r15)
	movq	-1000(%rbp), %rdi
	movq	-904(%rbp), %rsi
	movq	-928(%rbp), %r8
	call	grokclassfn
	testl	%r14d, %r14d
	jne	.L17621
.L16583:
	movq	-1000(%rbp), %rdi
	xorl	%eax, %eax
	movq	%r12, %rsi
	call	grok_ctor_properties
	testl	%r14d, %r14d
	jne	.L16581
	xorl	%r15d, %r15d
	movq	global_binding_level(%rip), %r14
	movq	112(%r12), %r13
	cmpq	%r14, current_binding_level(%rip)
	je	.L16585
	movq	48(%r13), %r10
	testq	%r10, %r10
	movq	%r10, %rbx
	jne	.L16586
.L16585:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L16587
	movq	56(%r13), %rbx
	testq	%rbx, %rbx
	jne	.L17128
	movq	32(%rdi), %r14
	testq	%r14, %r14
	jne	.L16588
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L17622
.L16588:
	testq	%rbx, %rbx
	jne	.L17128
.L17129:
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rbx
	jne	.L17128
.L16587:
	movq	40(%r13), %rbx
.L16586:
	testq	%rbx, %rbx
	je	.L17154
.L17128:
	cmpb	$32, 16(%rbx)
	je	.L16590
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L16590
	movq	8(%r13), %rax
	testq	%rax, %rax
	je	.L16598
	movq	80(%rax), %rax
	cmpq	%rax, %rbx
	je	.L17432
	testl	%r15d, %r15d
	jle	.L17623
.L17432:
	movq	%rax, %rbx
.L16590:
	testq	%rbx, %rbx
	jne	.L16603
.L17154:
	movq	112(%r12), %rdx
	movq	%r12, 40(%rdx)
.L16604:
	movq	%r12, %rdi
	xorl	%esi, %esi
	movl	$1, %edx
	xorl	%eax, %eax
	call	make_decl_rtl
	jmp	.L16581
.L16603:
	movzbl	16(%r12), %r11d
	cmpb	%r11b, 16(%rbx)
	je	.L16605
	movq	%r12, %rdi
	movl	$.LC259, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L16604
.L16605:
	movq	%r12, %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	duplicate_decls
	movq	%rbx, %r12
	jmp	.L16604
.L17623:
	testl	%edx, %edx
	jg	.L17432
	testl	%r15d, %r15d
	je	.L16590
	movq	%rax, %rdx
	movq	%r13, %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17432
.L16598:
	movq	8(%rbx), %r13
	cmpq	error_mark_node(%rip), %r13
	cmove	%r13, %rbx
	jmp	.L16590
.L17622:
	xorl	%ecx, %ecx
	movq	%r13, %rsi
	cmpl	$-1, %r15d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rbx
	je	.L16590
	testq	%rax, %rax
	je	.L17129
	cmpb	$32, 16(%rax)
	cmovne	%r14, %rbx
	jmp	.L16588
.L17621:
	movq	-1000(%rbp), %rdi
	movq	-904(%rbp), %rsi
	movq	%r12, %rdx
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	check_classfn
	jmp	.L16583
	.p2align 6,,7
.L17612:
	cmpq	$0, -1000(%rbp)
	movq	24(%r15), %r13
	je	.L16573
	testq	%r13, %r13
	je	.L16573
	cmpb	$16, 16(%r15)
	je	.L17624
.L16573:
	movq	ptr_type_node(%rip), %rsi
	movq	void_list_node(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	tree_cons
	movq	%r13, %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	type_list_equal
	testl	%eax, %eax
	movl	%eax, %ebx
	je	.L17625
	xorl	%eax, %eax
.L16575:
	cmpq	$0, -1000(%rbp)
	jne	.L16576
	testl	%ebx, %ebx
	movl	$.LC257, %edi
	jne	.L16572
.L17431:
	xorl	%eax, %eax
	call	error
	jmp	.L16572
	.p2align 6,,7
.L16576:
	testl	%ebx, %ebx
	jne	.L16572
	testl	%eax, %eax
	jne	.L16572
	movl	$.LC258, %edi
	jmp	.L17431
	.p2align 6,,7
.L17625:
	movq	sizetype(%rip), %rsi
	movq	void_list_node(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	tree_cons
	movq	ptr_type_node(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%r13, %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	type_list_equal
	jmp	.L16575
.L17624:
	movq	(%r13), %r13
	jmp	.L16573
	.p2align 6,,7
.L17611:
	movl	$.LC256, %edi
	xorl	%eax, %eax
	call	error
	movq	$0, -928(%rbp)
	jmp	.L16571
.L17610:
	movq	-1000(%rbp), %rdi
	movq	-1072(%rbp), %rsi
	xorl	%eax, %eax
	movq	-1048(%rbp), %rdx
	call	build_exception_variant
	movq	128(%rax), %r11
	movq	%rax, %r15
	movq	%r11, -944(%rbp)
	jmp	.L16568
.L17609:
	movq	56(%rsi), %rsi
	jmp	.L16565
.L16564:
	movq	$0, -920(%rbp)
	jmp	.L16567
.L17608:
	movq	-904(%rbp), %rsi
	cmpq	ansi_opname+1016(%rip), %rsi
	je	.L16548
	cmpq	ansi_opname+984(%rip), %rsi
	je	.L16548
	movq	-1000(%rbp), %rdi
	movl	-1060(%rbp), %esi
	xorl	%eax, %eax
	movl	-1056(%rbp), %edx
	call	build_type_variant
	movq	-1072(%rbp), %r8
	movq	%rax, %rdi
	xorl	%eax, %eax
	movq	8(%r8), %rsi
	movq	24(%r8), %rdx
	call	build_cplus_method_type
	movq	%rax, -1072(%rbp)
	jmp	.L16548
.L17607:
	movq	-904(%rbp), %rax
	movl	$.LC255, %edi
	movq	32(%rax), %rsi
	xorl	%eax, %eax
	call	error
.L17296:
	movq	void_type_node(%rip), %rbx
.L17449:
	movq	%rbx, -1072(%rbp)
	jmp	.L13275
.L17127:
	cmpq	$0, -1000(%rbp)
	movq	-1072(%rbp), %rbx
	jne	.L17626
.L16522:
	movl	-1052(%rbp), %eax
	testl	%eax, %eax
	jne	.L17627
.L16523:
	cmpq	$0, -1032(%rbp)
	jne	.L17628
.L16524:
	movl	-1004(%rbp), %r10d
	testl	%r10d, %r10d
	jne	.L17629
.L16525:
	cmpq	$0, -1048(%rbp)
	jne	.L17630
.L16526:
	movq	-1072(%rbp), %rax
	movzbl	16(%rax), %edx
	cmpb	$15, %dl
	je	.L17631
.L16527:
	cmpb	$18, %dl
	je	.L17632
	cmpb	$23, %dl
	je	.L17429
	cmpb	$14, %dl
	je	.L17429
.L16531:
	cmpb	$15, 16(%rbx)
	je	.L17633
.L16535:
	movq	-904(%rbp), %rsi
	movq	-1072(%rbp), %rdx
	xorl	%eax, %eax
	movl	$34, %edi
	call	build_decl
	movq	-1072(%rbp), %rbx
	movq	%rax, %r12
	movq	%rbx, 88(%rax)
	movq	112(%rbx), %rax
	cmpq	float_type_node(%rip), %rax
	je	.L17634
	movq	-1072(%rbp), %rcx
	cmpb	$7, 16(%rcx)
	jne	.L16543
	cmpq	char_type_node(%rip), %rax
	je	.L16539
	cmpq	signed_char_type_node(%rip), %rax
	je	.L16539
	cmpq	unsigned_char_type_node(%rip), %rax
	je	.L16539
	cmpq	short_integer_type_node(%rip), %rax
	je	.L16539
	cmpq	short_unsigned_type_node(%rip), %rax
	jne	.L16543
.L16539:
	movq	-1072(%rbp), %rdi
	movzbl	17(%rdi), %edx
	testb	$64, %dl
	je	.L17284
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	jne	.L16541
	movq	integer_type_node(%rip), %rdi
	movq	-1072(%rbp), %r10
	movzbl	45(%rdi), %r8d
	cmpb	%r8b, 45(%r10)
	je	.L16541
.L16542:
	movl	%edx, %r13d
	shrb	$4, %dl
	shrb	$5, %r13b
	andl	$1, %edx
	movl	%r13d, %esi
	andl	$1, %esi
.L17445:
	xorl	%eax, %eax
	call	build_type_variant
	movq	%rax, 88(%r12)
	jmp	.L16543
.L16541:
	movq	unsigned_type_node(%rip), %rdi
	jmp	.L16542
.L17284:
	movq	integer_type_node(%rip), %rdi
	jmp	.L16542
.L17634:
	movq	-1072(%rbp), %r14
	movq	double_type_node(%rip), %rdi
	movzbl	17(%r14), %edx
	movl	%edx, %r15d
	shrb	$4, %dl
	shrb	$5, %r15b
	andl	$1, %edx
	movl	%r15d, %esi
	andl	$1, %esi
	jmp	.L17445
.L17633:
	movq	-1072(%rbp), %rdi
	xorl	%eax, %eax
	call	build_reference_type
	movl	-1056(%rbp), %edx
	movl	-1060(%rbp), %esi
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	build_type_variant
	movl	$0, -1060(%rbp)
	movl	$0, -1056(%rbp)
	movq	%rax, -1072(%rbp)
	jmp	.L16535
.L17429:
	movq	-1072(%rbp), %rdi
.L17430:
	xorl	%eax, %eax
	call	build_pointer_type
	movq	%rax, -1072(%rbp)
	jmp	.L16531
.L17632:
	cmpq	-1072(%rbp), %rbx
	je	.L17635
	movq	-1072(%rbp), %rsi
	movq	8(%rsi), %rdi
	jmp	.L17430
.L17635:
	movq	-1072(%rbp), %r11
	movl	-1060(%rbp), %esi
	xorl	%eax, %eax
	movl	-1056(%rbp), %edx
	movq	8(%r11), %rdi
	call	build_type_variant
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	movl	$0, -1056(%rbp)
	movl	$0, -1060(%rbp)
	movq	%rax, -1072(%rbp)
	jmp	.L16531
.L17631:
	movq	8(%rax), %r9
	movq	%r9, -1072(%rbp)
	movzbl	16(%r9), %edx
	jmp	.L16527
.L17630:
	movl	$.LC251, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L16526
.L17629:
	movl	$.LC250, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L16525
.L17628:
	movl	$.LC249, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L16524
.L17627:
	movl	$.LC248, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L16523
.L17626:
	movl	$.LC247, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L16522
.L17534:
	cmpl	$2, -484(%rbp)
	je	.L17127
	cmpq	$0, -904(%rbp)
	je	.L16519
	movq	-904(%rbp), %rdx
	cmpb	$1, 16(%rdx)
	je	.L17636
.L16519:
	movl	$.LC246, %edi
	xorl	%eax, %eax
	call	error
.L16520:
	movq	integer_type_node(%rip), %r8
	movq	%r8, -1072(%rbp)
	jmp	.L16518
.L17636:
	movq	-480(%rbp), %rsi
	movl	$.LC245, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L16520
	.p2align 6,,7
.L17533:
	movl	-1060(%rbp), %eax
	testl	%eax, %eax
	jne	.L16511
	movl	-1056(%rbp), %eax
	testl	%eax, %eax
	je	.L16510
.L16511:
	movq	-1072(%rbp), %rdi
	movl	-1060(%rbp), %esi
	xorl	%eax, %eax
	movl	-1056(%rbp), %edx
	call	build_type_variant
	movq	%rax, -1072(%rbp)
.L16510:
	movl	-1004(%rbp), %eax
	testl	%eax, %eax
	je	.L16512
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L16513
	movq	-1072(%rbp), %r9
	xorl	%eax, %eax
	movq	112(%r9), %rsi
	call	make_friend_class
	jmp	.L17446
.L16513:
	movq	-1072(%rbp), %rbx
	movl	$.LC244, %edi
	xorl	%eax, %eax
	movq	80(%rbx), %rsi
	movq	56(%rsi), %r11
	movq	32(%r11), %rsi
	call	error
	jmp	.L17446
.L16512:
	cmpq	$0, -1032(%rbp)
	je	.L13275
	movq	-904(%rbp), %rsi
	movq	-1072(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_decl
	cmpq	$0, -1000(%rbp)
	movq	%rax, %rbx
	je	.L17637
.L16517:
	movq	-1000(%rbp), %rdi
	movq	-1032(%rbp), %rdx
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	grok_method_quals
	movq	8(%rbx), %rbx
	jmp	.L17449
.L17637:
	movq	-1072(%rbp), %rcx
	movl	$159, %esi
	cmpb	$16, 16(%rcx)
	sete	%r14b
	xorl	%eax, %eax
	movzbl	%r14b, %edi
	call	my_friendly_assert
	movq	-1072(%rbp), %r12
	movq	96(%r12), %r15
	movq	%r15, -1000(%rbp)
	jmp	.L16517
	.p2align 6,,7
.L17532:
	movq	-1072(%rbp), %rbx
	cmpb	$18, 16(%rbx)
	jne	.L16508
	cmpq	$0, 24(%rbx)
	jne	.L16508
	movq	8(%rbx), %rdi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_cplus_array_type
	movq	%rax, -1072(%rbp)
	jmp	.L16508
	.p2align 6,,7
.L17529:
	movq	-904(%rbp), %rax
	movq	40(%rax), %rbx
.L17428:
	movq	%rbx, -904(%rbp)
	jmp	.L14930
	.p2align 6,,7
.L14934:
	cmpq	$0, -1032(%rbp)
	je	.L14937
	cmpq	$0, -904(%rbp)
	je	.L14938
	cmpb	$124, %al
	je	.L14937
.L14938:
	cmpq	$0, -1000(%rbp)
	jne	.L17099
	cmpb	$16, %dl
	je	.L17638
.L14939:
	cmpq	$0, -1000(%rbp)
	je	.L14937
.L17099:
	movq	-1072(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	-1032(%rbp), %rdx
	movq	-1000(%rbp), %rdi
	movq	%rax, %rsi
	movq	%rax, %r14
	xorl	%eax, %eax
	call	grok_method_quals
	movq	-904(%rbp), %rsi
	movq	%rax, -1000(%rbp)
	movq	8(%r14), %rcx
	movq	$0, -1032(%rbp)
	movq	%rcx, -1072(%rbp)
	movzbl	16(%rsi), %eax
.L14937:
	movzbl	%al, %eax
	cmpl	$42, %eax
	je	.L14942
	cmpl	$42, %eax
	ja	.L16480
	cmpl	$22, %eax
	ja	.L16481
	cmpl	$21, %eax
	jae	.L16477
	testl	%eax, %eax
	je	.L16477
	cmpl	$10, %eax
	je	.L16477
.L16478:
	xorl	%edi, %edi
	movl	$158, %esi
	xorl	%eax, %eax
	call	my_friendly_assert
	jmp	.L14930
.L16477:
	movq	$0, -904(%rbp)
	jmp	.L14930
.L16481:
	cmpl	$39, %eax
	jne	.L16478
.L15701:
	movq	-1072(%rbp), %rbx
	movzbl	16(%rbx), %edx
	leal	-21(%rdx), %esi
	cmpb	$1, %sil
	ja	.L15704
	movq	144(%rbx), %r12
	testb	$64, 3(%r12)
	je	.L15703
.L15704:
	cmpb	$10, %dl
	je	.L15703
.L16044:
	cmpb	$15, %dl
	je	.L17639
	movl	-1060(%rbp), %esi
	testl	%esi, %esi
	jne	.L16051
	movl	-1056(%rbp), %r10d
	testl	%r10d, %r10d
	je	.L16050
.L16051:
	movq	-1072(%rbp), %rdi
	movl	-1060(%rbp), %esi
	xorl	%eax, %eax
	movl	-1056(%rbp), %edx
	call	build_type_variant
	movq	%rax, -1072(%rbp)
	testb	$64, 46(%rax)
	jne	.L17640
.L16052:
	movl	$0, -1060(%rbp)
	movl	$0, -1056(%rbp)
.L16050:
	movq	-904(%rbp), %r9
	cmpb	$106, 16(%r9)
	je	.L17641
	movq	-1072(%rbp), %rdi
.L17413:
	xorl	%eax, %eax
	call	build_pointer_type
.L17412:
	movq	%rax, -1072(%rbp)
.L16058:
	movq	-904(%rbp), %r15
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L16059
	xorl	%r12d, %r12d
	movq	%rax, %rbx
	.p2align 4,,7
.L16073:
	movq	32(%rbx), %rax
	cmpq	ridpointers+168(%rip), %rax
	je	.L17642
	cmpq	ridpointers+176(%rip), %rax
	je	.L17643
	testl	%r12d, %r12d
	je	.L17644
.L16062:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L16073
	cmpl	$1, -1060(%rbp)
	jg	.L17645
.L16074:
	cmpl	$1, -1056(%rbp)
	jg	.L17646
.L16059:
	movq	-904(%rbp), %r14
	movq	32(%r14), %r12
	movq	%r12, -904(%rbp)
.L17427:
	movq	$0, -1000(%rbp)
	jmp	.L14930
.L17646:
	movl	$.LC184, %edi
	xorl	%eax, %eax
	call	warning
	jmp	.L16059
.L17645:
	movl	$.LC183, %edi
	xorl	%eax, %eax
	call	warning
	jmp	.L16074
.L17644:
	movq	-904(%rbp), %r13
	movl	$.LC233, %esi
	movl	$.LC234, %r8d
	movl	$.LC232, %edi
	movl	$1, %r12d
	cmpb	$106, 16(%r13)
	cmovne	%r8, %rsi
	xorl	%eax, %eax
	call	error
	jmp	.L16062
.L17643:
	incl	-1056(%rbp)
	jmp	.L16062
.L17642:
	incl	-1060(%rbp)
	jmp	.L16062
.L17641:
	movq	-1072(%rbp), %rbx
	cmpb	$23, 16(%rbx)
	je	.L17647
	movq	-1072(%rbp), %rdx
	movq	void_type_node(%rip), %r11
	cmpq	%r11, 112(%rdx)
	je	.L17648
	movq	-1072(%rbp), %rdi
	xorl	%eax, %eax
	call	build_reference_type
	jmp	.L17412
.L17648:
	movl	$.LC231, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L16058
.L17647:
	movl	$.LC230, %edi
	xorl	%eax, %eax
	call	error
	movq	%rbx, %rdi
	jmp	.L17413
.L17640:
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	jmp	.L16052
.L17639:
	movq	-904(%rbp), %rbx
	movl	$.LC229, %ecx
	movl	$.LC228, %esi
	movl	$.LC227, %edi
	cmpb	$106, 16(%rbx)
	cmovne	%rcx, %rsi
	xorl	%eax, %eax
	call	error
.L16126:
	movq	-904(%rbp), %r13
	movq	32(%r13), %r8
	movq	%r8, -904(%rbp)
	jmp	.L14930
.L15703:
	movq	-1072(%rbp), %rsi
	cmpq	$0, 32(%rsi)
	jne	.L16044
	movq	80(%rsi), %rax
	testq	%rax, %rax
	movq	%rax, %r14
	je	.L15705
	movq	56(%rax), %rax
	testq	%rax, %rax
	je	.L15705
	cmpq	$0, 8(%rax)
	je	.L16044
.L15705:
	cmpb	$32, 16(%r14)
	movl	$144, %esi
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movq	56(%r14), %rax
	cmpq	%r14, 40(%rax)
	je	.L17268
	cmpq	$0, 8(%rax)
	jne	.L17649
.L15708:
	movq	current_binding_level(%rip), %rbx
	movq	72(%r14), %r12
	cmpq	global_binding_level(%rip), %rbx
	je	.L17650
.L17400:
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L15711:
	movq	class_binding_level(%rip), %rbx
	movq	$0, 8(%r12)
	movq	$0, 64(%r14)
	movq	56(%r14), %rdi
	testq	%rbx, %rbx
	movq	%rdi, 72(%r14)
	jne	.L15715
	movq	current_binding_level(%rip), %rbx
.L15715:
	movq	global_binding_level(%rip), %r15
	cmpq	%r15, %rbx
	movq	%r15, %rdx
	je	.L17035
.L15727:
	movzbl	66(%rbx), %r8d
	xorl	%r13d, %r13d
	andl	$15, %r8d
	cmpl	$2, %r8d
	je	.L17651
.L15719:
	movq	56(%rbx), %rbx
	cmpq	%rdx, %rbx
	jne	.L15727
.L17035:
	movzbl	66(%rbx), %r9d
	xorl	%r13d, %r13d
	andl	$15, %r9d
	cmpl	$2, %r9d
	je	.L17652
.L17251:
	movq	-1072(%rbp), %rcx
.L17411:
	movzbl	16(%rcx), %edx
	jmp	.L16044
.L17652:
	movq	8(%rbx), %r12
	testq	%r12, %r12
	je	.L17252
.L15735:
	movq	-1072(%rbp), %rdx
	cmpq	%rdx, 32(%r12)
	je	.L15734
	movq	%r12, %r13
	movq	%rdx, %rcx
	movq	(%r12), %r12
	testq	%r12, %r12
	je	.L17411
	jmp	.L15735
.L15734:
	movq	-1072(%rbp), %rdx
	movq	$_iob+112, %rdi
	movl	$.LC175, %esi
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	print_node_brief
	xorl	%eax, %eax
	movl	$11, %edi
	call	my_friendly_abort
.L15725:
	testq	%r13, %r13
	je	.L15736
	movq	(%r12), %rbx
	movq	%rbx, (%r13)
.L15737:
	movq	current_binding_level(%rip), %rbx
	movq	24(%r12), %r13
	cmpq	global_binding_level(%rip), %rbx
	movq	32(%r12), %r15
	je	.L17653
.L17401:
	movq	8(%r13), %rsi
	movq	32(%rbx), %rdx
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L15739:
	movq	%r15, 8(%r13)
	xorl	%eax, %eax
	movq	32(%r12), %rsi
	movq	global_binding_level(%rip), %r15
	movq	24(%r12), %rdi
	movq	8(%r15), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%r15)
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	movq	%rax, %rcx
	je	.L15742
	movq	144(%rax), %r11
	xorl	%edx, %edx
	movq	72(%r11), %rax
	testq	%rax, %rax
	je	.L15742
.L15748:
	movq	-1072(%rbp), %rsi
	cmpq	%rsi, 32(%rax)
	je	.L15744
	movq	%rax, %rdx
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L15748
.L15742:
	movq	current_binding_level(%rip), %rax
	movq	global_binding_level(%rip), %rdx
	movq	%rax, -840(%rbp)
	movq	%rdx, current_binding_level(%rip)
	movq	current_function_decl(%rip), %rax
	movq	112(%r14), %r8
	movq	%rdx, -832(%rbp)
	cmpq	%rax, %r14
	movq	%r8, -800(%rbp)
	je	.L17253
	movzbl	16(%r14), %ecx
	cmpb	$29, %cl
	je	.L17654
.L15753:
	movq	%rax, 64(%r14)
.L15752:
	cmpb	$32, %cl
	je	.L17655
.L15754:
	cmpq	$0, -800(%rbp)
	je	.L15755
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L17656
	movq	-800(%rbp), %rbx
	cmpq	$0, 48(%rbx)
	jne	.L15758
	movq	$0, -808(%rbp)
.L15757:
	cmpq	$0, -808(%rbp)
	je	.L15775
	movq	-808(%rbp), %r11
	cmpq	error_mark_node(%rip), %r11
	je	.L17657
.L15765:
	cmpq	$0, -808(%rbp)
	je	.L17257
	movq	-808(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L17658
.L15767:
	movq	-808(%rbp), %rsi
	testq	%rsi, %rsi
	movq	24(%rsi), %rbx
	movl	32(%rsi), %r12d
	je	.L17257
	movzbl	16(%rsi), %eax
	movzbl	16(%r14), %ecx
	cmpb	%cl, %al
	je	.L15769
	cmpb	$32, %al
	je	.L15775
	cmpb	$32, %cl
	je	.L17311
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L17257
.L15774:
	movq	class_binding_level(%rip), %r9
	movq	-840(%rbp), %r11
	testq	%r9, %r9
	movq	%r11, current_binding_level(%rip)
	cmove	%r11, %r9
	movq	%r9, -840(%rbp)
	cmpb	$32, 16(%r14)
	je	.L17659
.L17268:
	movq	-1072(%rbp), %rax
	movzbl	16(%rax), %edx
	jmp	.L16044
.L17659:
	movq	global_binding_level(%rip), %rdx
	xorl	%ecx, %ecx
	movq	56(%r14), %rsi
	cmpq	%rdx, -840(%rbp)
	movq	%rdx, %rdi
	je	.L17044
.L16040:
	movq	-840(%rbp), %r15
	movq	32(%r15), %rdx
	testq	%rdx, %rdx
	je	.L17046
.L16039:
	cmpq	%rsi, 24(%rdx)
	leaq	32(%rdx), %r12
	movq	(%rdx), %rdx
	cmove	%r12, %rcx
	testq	%rdx, %rdx
	jne	.L16039
.L17046:
	movq	-840(%rbp), %r13
	movq	56(%r13), %r8
	cmpq	%rdi, %r8
	movq	%r8, -840(%rbp)
	jne	.L16040
.L17044:
	testq	%rcx, %rcx
	movq	8(%r14), %rax
	jne	.L16041
	movq	%rax, 8(%rsi)
	jmp	.L17251
.L16041:
	movq	%rax, (%rcx)
.L17252:
	movq	-1072(%rbp), %rdi
	movzbl	16(%rdi), %edx
	jmp	.L16044
.L17257:
	movzbl	16(%r14), %ecx
.L15775:
	cmpb	$32, %cl
	je	.L17311
.L15783:
	movzbl	53(%r14), %edx
	testb	$1, %dl
	je	.L15921
	movq	-800(%rbp), %r12
	movq	40(%r12), %rax
	testq	%rax, %rax
	je	.L15921
	testb	$1, 53(%rax)
	jne	.L15922
	testb	$8, 18(%rax)
	je	.L15921
.L15922:
	andb	$8, %dl
	je	.L17660
.L15921:
	movl	flag_traditional(%rip), %edi
	testl	%edi, %edi
	je	.L17265
	testb	$1, 53(%r14)
	je	.L17265
	xorl	%r12d, %r12d
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L15925
	movq	-800(%rbp), %rbx
	movq	48(%rbx), %r13
	testq	%r13, %r13
	movq	%r13, %rcx
	jne	.L15926
.L15925:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L15927
	movq	-800(%rbp), %r10
	movq	56(%r10), %rcx
	testq	%rcx, %rcx
	jne	.L17118
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L15928
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L17661
.L15928:
	testq	%rcx, %rcx
	jne	.L17118
.L17119:
	movq	-800(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17118
	movq	-800(%rbp), %r11
	movq	40(%r11), %rcx
.L15926:
	testq	%rcx, %rcx
	je	.L17151
.L17118:
	cmpb	$32, 16(%rcx)
	je	.L15930
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L15930
	movq	-800(%rbp), %rsi
	movq	8(%rsi), %rax
	testq	%rax, %rax
	je	.L15938
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17408
	testl	%r12d, %r12d
	jle	.L17662
.L17408:
	movq	%rax, %rcx
.L15930:
	testq	%rcx, %rcx
	jne	.L17265
.L17151:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -832(%rbp)
.L15924:
	cmpq	%rax, -832(%rbp)
	je	.L17663
	movq	current_binding_level(%rip), %rbx
	movq	-800(%rbp), %rsi
	cmpq	%rax, %rbx
	movq	48(%rsi), %r13
	movq	40(%rsi), %r12
	movq	%rsi, %rdi
	je	.L17664
.L17409:
	movq	16(%rbx), %rdx
	movq	%r13, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%rbx)
.L15969:
	movq	-800(%rbp), %rbx
	testq	%r13, %r13
	movq	%r14, 48(%rbx)
	je	.L17665
.L15980:
	movq	96(%r14), %rax
	testq	%rax, %rax
	jne	.L15982
	testq	%r13, %r13
	je	.L15983
	testb	$1, 53(%r14)
	jne	.L15983
	cmpb	$34, 16(%r13)
	je	.L17666
.L15983:
	movl	warn_shadow(%rip), %esi
	testl	%esi, %esi
	je	.L15982
	testb	$1, 53(%r14)
	jne	.L15982
	movl	32(%r14), %edx
	testl	%edx, %edx
	je	.L15982
	testq	%rax, %rax
	jne	.L15982
	xorl	%edi, %edi
	testq	%r13, %r13
	je	.L15988
	cmpb	$34, 16(%r13)
	je	.L17667
.L15988:
	movq	-800(%rbp), %rcx
	cmpq	$0, 56(%rcx)
	je	.L15990
	movl	$.LC41, %edi
.L15989:
	testq	%rdi, %rdi
	jne	.L17668
.L15982:
	testq	%r13, %r13
	je	.L17266
	movq	-832(%rbp), %r10
	movq	-800(%rbp), %rdi
	movq	%r13, %rsi
	xorl	%eax, %eax
	movq	16(%r10), %rdx
	call	tree_cons
	movq	-832(%rbp), %r13
	movq	%rax, 16(%r13)
.L17266:
	movzbl	16(%r14), %ecx
.L15967:
	leal	-128(%rcx), %edi
	cmpb	$1, %dil
	jbe	.L15755
	movq	8(%r14), %rdx
	cmpq	$0, 32(%rdx)
	jne	.L15755
	cmpb	$18, 16(%rdx)
	je	.L17669
.L15999:
	testb	$64, 46(%rdx)
	je	.L15755
.L15998:
	movq	-832(%rbp), %r12
	movzwl	64(%r12), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%r12)
	je	.L17670
.L17267:
	movzbl	16(%r14), %ecx
.L15755:
	cmpb	$32, %cl
	je	.L17671
.L16001:
	movq	-832(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	(%rbx), %r10
	movq	%r10, (%r14)
	movq	%r14, (%rbx)
	jne	.L15774
	testb	$4, 17(%r14)
	jne	.L15774
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L15774
.L17671:
	cmpq	$0, -800(%rbp)
	je	.L16001
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L16002
	cmpq	class_binding_level(%rip), %rax
	je	.L16003
	movq	-800(%rbp), %r11
	movq	48(%r11), %rax
	testq	%rax, %rax
	je	.L16007
	cmpb	$32, 16(%rax)
	je	.L16005
.L16007:
	cmpq	$0, current_class_type(%rip)
	je	.L16002
	movq	-800(%rbp), %rdx
	movq	56(%rdx), %rax
	testq	%rax, %rax
	je	.L16002
	cmpb	$32, 16(%rax)
	je	.L16005
.L16002:
	movq	-800(%rbp), %rsi
	movq	40(%rsi), %rax
	testq	%rax, %rax
	je	.L16006
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L16005
	cmpb	$-127, %dl
	je	.L17672
.L16006:
	movq	current_class_name(%rip), %r13
	testq	%r13, %r13
	je	.L16001
	movq	72(%r14), %rbx
	testq	%rbx, %rbx
	je	.L17673
.L16013:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L16017
	cmpq	class_binding_level(%rip), %rax
	je	.L16018
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L16022
	cmpb	$32, 16(%rax)
	je	.L16020
.L16022:
	cmpq	$0, current_class_type(%rip)
	je	.L16017
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L16017
	cmpb	$32, 16(%rax)
	je	.L16020
.L16017:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L16001
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L16020
	cmpb	$-127, %dl
	jne	.L16001
	movq	$0, 8(%rbx)
	jmp	.L16001
.L16020:
	movq	8(%rax), %r13
	movq	%r13, 8(%rbx)
	jmp	.L16001
.L16018:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L16022
.L17673:
	cmpb	$32, 16(%r14)
	movl	$136, %esi
	movq	56(%r14), %r12
	sete	%r8b
	movq	8(%r14), %r15
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r13)
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%r13), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%r13), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r14)
	movq	%r15, 8(%rax)
	movq	72(%r14), %rbx
	jmp	.L16013
.L17672:
	movq	$0, 8(%rsi)
	jmp	.L16006
.L16005:
	movq	8(%rax), %rsi
	movq	-800(%rbp), %r15
	movq	%rsi, 8(%r15)
	jmp	.L16006
.L16003:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L16007
.L17670:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L17267
.L17669:
	movq	8(%rdx), %r9
	testb	$64, 46(%r9)
	jne	.L15998
	jmp	.L15999
.L17668:
	movq	-800(%rbp), %rbx
	movq	32(%rbx), %rsi
.L17410:
	xorl	%eax, %eax
	call	warning
	jmp	.L15982
.L15990:
	testq	%r13, %r13
	je	.L15992
	movl	$.LC42, %edi
	jmp	.L15989
.L15992:
	testq	%r12, %r12
	movl	$.LC43, %r8d
	cmovne	%r8, %rdi
	jmp	.L15989
.L17667:
	movl	$.LC40, %edi
	jmp	.L15989
.L17666:
	cmpb	$34, 16(%r14)
	je	.L15983
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r12
	movq	56(%r12), %rax
	je	.L15984
	movq	56(%rax), %rax
.L15984:
	movzbl	66(%rax), %r11d
	andl	$15, %r11d
	decl	%r11d
	jne	.L15982
	movq	-800(%rbp), %r15
	movl	$.LC40, %edi
	movq	32(%r15), %rsi
	jmp	.L17410
	.p2align 6,,7
.L17665:
	movzbl	53(%r14), %r10d
	andb	$9, %r10b
	decb	%r10b
	je	.L17674
.L15972:
	testq	%r13, %r13
	jne	.L15980
	testq	%r12, %r12
	jne	.L15980
	testb	$1, 53(%r14)
	je	.L15980
	testb	$8, 18(%r14)
	je	.L15980
	movq	-800(%rbp), %rax
	orb	$8, 18(%rax)
	jmp	.L15980
.L17674:
	testq	%r12, %r12
	je	.L15972
	cmpb	$29, 16(%r14)
	jne	.L15972
	cmpb	$29, 16(%r12)
	jne	.L15972
	movq	8(%r14), %rdi
	movq	8(%r12), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L17675
	movzbl	53(%r12), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L15975
	movzbl	53(%r14), %r9d
	leal	0(,%rax,8), %r11d
	leaq	88(%r14), %rdx
	andb	$-9, %r9b
	orb	%r11b, %r9b
	movb	%r9b, 53(%r14)
	cmpq	%r12, current_function_decl(%rip)
	je	.L15976
	movq	88(%r12), %rax
.L15977:
	movq	136(%r12), %rbx
	movq	72(%r12), %rdi
	movq	%rax, (%rdx)
	movq	80(%r12), %r8
	movzbl	17(%r14), %esi
	movq	%rbx, 136(%r14)
	movq	%rdi, 72(%r14)
	movq	%r8, 80(%r14)
	movzbl	17(%r12), %ecx
	movq	%r12, 96(%r14)
	andb	$127, %sil
	shrb	$7, %cl
	movzbl	%cl, %edx
	movl	%edx, %r15d
	salb	$7, %r15b
	orb	%r15b, %sil
	movb	%sil, 17(%r14)
	movzbl	53(%r12), %ecx
.L15975:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L15978
	movzbl	53(%r14), %r10d
	salb	$4, %al
	andb	$-17, %r10b
	orb	%al, %r10b
	movb	%r10b, 53(%r14)
	movl	128(%r12), %eax
	movl	%eax, 128(%r14)
.L15978:
	movq	8(%r12), %rdx
	cmpq	$0, 24(%rdx)
	je	.L15972
	cmpq	$0, 88(%r12)
	je	.L15972
	movq	8(%r14), %r9
	cmpq	$0, 24(%r9)
	jne	.L15972
	movq	%rdx, 8(%r14)
	jmp	.L15972
.L15976:
	xorl	%eax, %eax
	jmp	.L15977
.L17675:
	movq	%r14, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L15972
	.p2align 6,,7
.L17664:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L15969
	movq	-800(%rbp), %rdi
	jmp	.L17409
.L17663:
	movzwl	16(%r14), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L17676
.L15944:
	movq	-800(%rbp), %rsi
	cmpq	$0, 40(%rsi)
	jne	.L15945
	testb	$8, 18(%r14)
	je	.L15945
	orb	$8, 18(%rsi)
.L15945:
	movzbl	16(%r14), %ecx
	cmpb	$32, %cl
	je	.L17677
.L15947:
	movq	-800(%rbp), %rcx
	movq	%r14, 40(%rcx)
	movzbl	16(%r14), %ecx
.L15946:
	movq	-800(%rbp), %rbx
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L15958
	movq	8(%rax), %rdx
	testq	%rdx, %rdx
	je	.L15948
	testb	$1, 18(%rdx)
	je	.L15948
	orb	$1, 18(%r14)
	movq	72(%rbx), %rax
.L15948:
	testq	%rax, %rax
	je	.L15958
	movq	8(%rax), %rdx
	testq	%rdx, %rdx
	je	.L15953
	testb	$8, 17(%rdx)
	je	.L15953
	orb	$8, 17(%r14)
	movq	-800(%rbp), %r8
	movq	72(%r8), %rax
.L15953:
	testq	%rax, %rax
	je	.L15958
	cmpq	$0, 8(%rax)
	je	.L15958
	cmpb	$29, %cl
	je	.L17678
.L15961:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r14), %ecx
.L15958:
	movq	-800(%rbp), %rbx
	testb	$8, 18(%rbx)
	je	.L15967
	cmpb	$32, %cl
	je	.L15967
	testb	$8, 18(%r14)
	jne	.L15967
	testb	$1, 53(%r14)
	jne	.L15967
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L15963
	cmpq	$0, 8(%rax)
	jne	.L17679
.L15963:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L17461:
	xorl	%eax, %eax
	call	warning
	jmp	.L17266
.L17679:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L17461
.L17678:
	movq	8(%r14), %r13
	movq	integer_type_node(%rip), %rdi
	cmpq	%rdi, 8(%r13)
	jne	.L15961
	jmp	.L15958
.L17677:
	cmpq	$0, -808(%rbp)
	je	.L15947
	movq	-808(%rbp), %r12
	cmpb	$32, 16(%r12)
	jne	.L15946
	jmp	.L15947
.L17676:
	testb	$8, 54(%r14)
	jne	.L15944
	andb	$-9, 18(%r14)
	jmp	.L15944
	.p2align 6,,7
.L17265:
	movq	global_binding_level(%rip), %rax
	jmp	.L15924
.L17662:
	testl	%edx, %edx
	jg	.L17408
	testl	%r12d, %r12d
	je	.L15930
	movq	-800(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17408
.L15938:
	movq	8(%rcx), %r15
	cmpq	error_mark_node(%rip), %r15
	cmove	%r15, %rcx
	jmp	.L15930
.L17661:
	xorl	%ecx, %ecx
	movq	-800(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L15930
	testq	%rax, %rax
	je	.L17119
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L15928
.L15927:
	movq	-800(%rbp), %rdx
	movq	40(%rdx), %rcx
	jmp	.L15926
.L17660:
	movq	8(%rax), %rsi
	movq	8(%r14), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L15921
	movq	%r14, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	-800(%rbp), %r8
	movq	40(%r8), %rdi
	call	warning_with_decl
	jmp	.L15921
	.p2align 6,,7
.L17311:
	movq	8(%r14), %rcx
	movq	80(%rcx), %rbx
	testq	%rbx, %rbx
	movq	%rbx, -824(%rbp)
	je	.L15785
	movzbl	16(%rbx), %edx
	cmpb	$32, %dl
	je	.L15784
.L15785:
	movq	global_binding_level(%rip), %r12
	movq	%r14, -824(%rbp)
	cmpq	%r12, current_binding_level(%rip)
	jne	.L17258
	movq	%r14, 80(%rcx)
.L17258:
	movzbl	16(%r14), %edx
.L15788:
	cmpb	$32, %dl
	movl	$140, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	-824(%rbp), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L15912
	cmpq	$0, 72(%rsi)
	je	.L17680
.L15912:
	movq	8(%r14), %r13
	movq	80(%r13), %rax
	testq	%rax, %rax
	je	.L15783
	cmpq	$0, 56(%rax)
	je	.L15783
	movq	current_binding_level(%rip), %rbx
	movq	56(%r14), %r12
	cmpq	global_binding_level(%rip), %rbx
	je	.L17681
.L17407:
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L15918:
	movq	%r13, 8(%r12)
	jmp	.L15783
.L17681:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L15918
	jmp	.L17407
.L17680:
	cmpb	$32, 16(%r14)
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	sete	%dl
	movq	8(%r14), %r13
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L15913
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%r15b
	xorl	%eax, %eax
	movzbl	%r15b, %edi
	call	my_friendly_assert
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r14)
	movq	%r13, 8(%rax)
	jmp	.L15912
.L15913:
	movq	%rbx, 72(%r14)
	jmp	.L15912
.L15784:
	movq	current_binding_level(%rip), %rsi
	movq	-824(%rbp), %r8
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%r8), %r13
	jne	.L15788
	movq	32(%r13), %rax
	cmpb	$36, (%rax)
	jne	.L15788
	cmpb	$95, 1(%rax)
	jne	.L15788
	movq	class_binding_level(%rip), %rax
	movq	%r14, 80(%rcx)
	movq	8(%r14), %r10
	testq	%rax, %rax
	movq	%rax, -816(%rbp)
	movq	%r10, -312(%rbp)
	jne	.L15792
	testb	$-128, 66(%rsi)
	movq	%rsi, -816(%rbp)
	je	.L15792
.L15796:
	movq	-816(%rbp), %r15
	movq	56(%r15), %r9
	testb	$-128, 66(%r9)
	movq	%r9, -816(%rbp)
	jne	.L15796
.L15792:
	movq	-816(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L17682
	movq	-816(%rbp), %r12
	movq	-312(%rbp), %rsi
	movq	%r13, %rdi
	xorl	%eax, %eax
	movq	8(%r12), %rdx
	call	saveable_tree_cons
	movq	-816(%rbp), %rdi
	movq	%rax, 8(%rdi)
.L15798:
	testq	%r13, %r13
	je	.L15799
	movq	-312(%rbp), %rsi
	cmpq	$0, 80(%rsi)
	jne	.L15800
	movq	%r13, 80(%rsi)
.L15800:
	movq	-312(%rbp), %rax
	cmpq	%rax, 8(%r13)
	je	.L15801
	cmpb	$21, 16(%rax)
	je	.L17683
.L15802:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L15804
	cmpq	$0, 32(%rax)
	je	.L15803
.L15804:
	movq	lang_name_cplusplus(%rip), %rdx
	cmpq	%rdx, current_lang_name(%rip)
	je	.L17684
.L15805:
	xorl	%ecx, %ecx
.L15840:
	testq	%rcx, %rcx
	jne	.L15841
.L17150:
	movq	-312(%rbp), %rdx
	movl	$32, %edi
	movq	%r13, %rsi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-312(%rbp), %rdi
	movq	%rax, %r15
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	current_binding_level(%rip), %rbx
	movl	$0, 32(%r15)
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, 112(%r15)
	je	.L17685
.L17404:
	movq	8(%r13), %rsi
	movq	32(%rbx), %rdx
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L15843:
	movq	-312(%rbp), %rbx
	movq	%rbx, 8(%r13)
.L15846:
	movq	32(%r13), %rax
	cmpb	$36, (%rax)
	je	.L17686
.L15848:
	movq	-312(%rbp), %r12
	movq	80(%r12), %rdx
	testq	%rdx, %rdx
	je	.L15879
	cmpb	$32, 16(%rdx)
	je	.L17687
.L15849:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L15868
	movq	56(%r15), %r12
	testq	%r12, %r12
	je	.L17262
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L15870
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L15870:
	movq	decl_obstack+24(%rip), %rdx
	movq	%r15, 56(%r12)
	leaq	8(%rdx), %r11
	cmpq	decl_obstack+32(%rip), %r11
	ja	.L17688
.L15872:
	movq	%rdx, %rdi
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%r15, (%rdi)
	cmpb	$32, 16(%r15)
	je	.L17689
.L17262:
	movq	32(%r13), %rax
.L15879:
	cmpb	$36, (%rax)
	je	.L17690
.L15893:
	movq	current_class_type(%rip), %rdx
	movq	-312(%rbp), %r12
	testq	%rdx, %rdx
	movq	%r15, 80(%r12)
	jne	.L15896
	cmpq	$0, current_function_decl(%rip)
	je	.L15895
.L15896:
	movq	lang_name_cplusplus(%rip), %rdi
	cmpq	%rdi, current_lang_name(%rip)
	je	.L15894
.L15895:
	movq	%r13, 72(%r15)
.L15801:
	movq	-816(%rbp), %rcx
	movzbl	66(%rcx), %r15d
	andl	$15, %r15d
	cmpl	$2, %r15d
	je	.L17691
.L15799:
	movq	-312(%rbp), %rsi
	movq	80(%rsi), %rax
	cmpb	$32, 16(%rax)
	je	.L17692
	movq	-312(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-312(%rbp), %r9
	movq	%rax, (%r9)
	movq	-824(%rbp), %r10
	movzbl	16(%r10), %edx
	jmp	.L15788
.L17692:
	movq	%rax, (%rsi)
	movq	-824(%rbp), %rcx
	movzbl	16(%rcx), %edx
	jmp	.L15788
.L17691:
	movq	-312(%rbp), %rax
	orb	$64, 18(%rax)
	movq	80(%rax), %r8
	movq	current_class_type(%rip), %rax
	movq	%r8, 56(%r13)
	cmpq	$0, 32(%rax)
	jne	.L15799
	movq	144(%rax), %r13
	movq	8(%rcx), %rbx
	movq	%rbx, 72(%r13)
	jmp	.L15799
.L15894:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L17693
	cmpq	$0, 32(%rdx)
	jne	.L15801
	cmpb	$32, 16(%r15)
	movq	80(%rdx), %r9
	movl	$136, %esi
	sete	%r10b
	xorl	%eax, %eax
	movq	72(%r9), %rbx
	movzbl	%r10b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L15904
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r13)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	32(%r13), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r13), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-312(%rbp), %r11
	movq	%r11, 8(%rax)
.L15906:
	movq	current_class_type(%rip), %rsi
	movq	152(%r15), %rdi
	movq	%rsi, 64(%r15)
	movq	%rsi, 16(%rdi)
	jmp	.L15801
.L15904:
	movq	%r13, 72(%r15)
	jmp	.L15906
.L17693:
	cmpb	$32, 16(%r15)
	movq	112(%rax), %rbx
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$136, %esi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L15899
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r13), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r13), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-312(%rbp), %rcx
	movq	%rcx, 8(%rax)
.L15901:
	movq	current_function_decl(%rip), %rbx
	movq	%rbx, 64(%r15)
	jmp	.L15801
.L15899:
	movq	%r13, 72(%r15)
	jmp	.L15901
.L17690:
	cmpb	$95, 1(%rax)
	jne	.L15893
	orb	$64, 53(%r15)
	jmp	.L15893
.L17689:
	cmpq	$0, 72(%r15)
	jne	.L17262
	movq	8(%r15), %rsi
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movq	%rsi, -320(%rbp)
	movl	$136, %esi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L15889
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-320(%rbp), %rdx
.L17460:
	movq	%rdx, 8(%rax)
	jmp	.L17262
.L15889:
	movq	%r12, 72(%r15)
	jmp	.L17262
.L17688:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L15872
.L15868:
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, %r15
	jmp	.L17262
.L17687:
	movq	global_binding_level(%rip), %rcx
	movl	$1, %r12d
	cmpq	%rcx, current_binding_level(%rip)
	je	.L15850
	movq	48(%r13), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L15851
.L15850:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L15852
	movq	56(%r13), %rcx
	testq	%rcx, %rcx
	jne	.L17116
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L15853
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L17694
.L15853:
	testq	%rcx, %rcx
	jne	.L17116
.L17117:
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17116
.L15852:
	movq	40(%r13), %rcx
.L15851:
	testq	%rcx, %rcx
	je	.L15855
.L17116:
	cmpb	$32, 16(%rcx)
	je	.L15855
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L15855
	movq	8(%r13), %rax
	testq	%rax, %rax
	je	.L15863
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17405
	testl	%r12d, %r12d
	jle	.L17695
.L17405:
	movq	%rax, %rcx
.L15855:
	movq	-312(%rbp), %r9
	cmpq	80(%r9), %rcx
	jne	.L15849
	jmp	.L17262
.L17695:
	testl	%edx, %edx
	jg	.L17405
	testl	%r12d, %r12d
	je	.L15855
	movq	%rax, %rdx
	movq	%r13, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17405
.L15863:
	movq	8(%rcx), %r10
	cmpq	error_mark_node(%rip), %r10
	cmove	%r10, %rcx
	jmp	.L15855
.L17694:
	xorl	%ecx, %ecx
	movq	%r13, %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L15855
	testq	%rax, %rax
	je	.L17117
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L15853
.L17686:
	cmpb	$95, 1(%rax)
	jne	.L15848
	jmp	.L15879
.L17685:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L15843
	jmp	.L17404
.L15841:
	movq	80(%rcx), %r15
	jmp	.L15846
.L17684:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L15807
	movq	80(%rax), %rbx
.L15807:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L15840
.L15839:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L15816
	cmpl	$32, %eax
	je	.L17696
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L15810:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L15840
	jmp	.L15839
.L17696:
	movq	8(%rbx), %r9
	movq	-312(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%r9), %r10
	movq	72(%r10), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L17297
	movq	64(%rbx), %rbx
	jmp	.L15810
.L17297:
	movq	32(%rax), %rcx
	jmp	.L15840
.L15816:
	movq	-312(%rbp), %rax
	movq	80(%rax), %r15
	movq	56(%r15), %rbx
	testq	%rbx, %rbx
	je	.L15805
	movq	global_binding_level(%rip), %r11
	movl	$1, %r15d
	cmpq	%r11, current_binding_level(%rip)
	je	.L15819
	movq	48(%rbx), %rdi
	testq	%rdi, %rdi
	movq	%rdi, %rcx
	jne	.L15820
.L15819:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L15821
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L17114
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L15822
	movq	144(%rdi), %rsi
	testb	$1, 3(%rsi)
	jne	.L17697
.L15822:
	testq	%rcx, %rcx
	jne	.L17114
.L17115:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17114
.L15821:
	movq	40(%rbx), %rcx
.L15820:
	testq	%rcx, %rcx
	je	.L17150
.L17114:
	cmpb	$32, 16(%rcx)
	je	.L15840
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L15840
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L15832
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17403
	testl	%r15d, %r15d
	jle	.L17698
.L17403:
	movq	%rax, %rcx
	jmp	.L15840
.L17698:
	testl	%edx, %edx
	jg	.L17403
	testl	%r15d, %r15d
	je	.L15840
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17403
.L15832:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L15840
	jmp	.L17403
.L17697:
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %r15d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L15840
	testq	%rax, %rax
	je	.L17115
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L15822
.L15803:
	movq	-312(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r13, %rsi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, %r15
	je	.L17699
.L17406:
	movq	8(%r13), %rsi
	movq	32(%rbx), %rdx
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L15881:
	movq	-312(%rbp), %rbx
	movq	%rbx, 8(%r13)
	movq	56(%r15), %r12
	testq	%r12, %r12
	je	.L17262
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L15885
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L15885:
	movq	decl_obstack+24(%rip), %rdx
	movq	%r15, 56(%r12)
	leaq	8(%rdx), %r8
	cmpq	decl_obstack+32(%rip), %r8
	ja	.L17700
.L15887:
	movq	%rdx, %r10
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%r15, (%r10)
	cmpb	$32, 16(%r15)
	jne	.L17262
	cmpq	$0, 72(%r15)
	jne	.L17262
	movq	current_class_name(%rip), %rbx
	movq	8(%r15), %rdx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%rdx, -328(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L15889
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-328(%rbp), %rdx
	jmp	.L17460
.L17700:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L15887
.L17699:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L15881
	jmp	.L17406
.L17683:
	cmpq	$0, class_binding_level(%rip)
	je	.L15802
	movq	144(%rax), %rsi
	testb	$16, 3(%rsi)
	jne	.L15801
	jmp	.L15802
.L17682:
	movq	-816(%rbp), %rcx
	movq	-312(%rbp), %rsi
	movq	%r13, %rdi
	xorl	%eax, %eax
	movq	8(%rcx), %rdx
	call	perm_tree_cons
	movq	-816(%rbp), %r11
	movq	%rax, 8(%r11)
	jmp	.L15798
.L15769:
	movq	-808(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L17257
	movl	flag_traditional(%rip), %edi
	testl	%edi, %edi
	jne	.L15774
	movq	-800(%rbp), %rsi
	testb	$8, 18(%rsi)
	je	.L15774
	testb	$8, 18(%r14)
	jne	.L15774
	testb	$9, 53(%r14)
	jne	.L15774
	cmpq	%r14, current_function_decl(%rip)
	je	.L17701
.L15778:
	movq	-800(%rbp), %rdx
	movq	72(%rdx), %rax
	testq	%rax, %rax
	je	.L15779
	cmpq	$0, 8(%rax)
	jne	.L17702
.L15779:
	movq	-808(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L17402:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-808(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%r12d, %esi
	movq	%rax, %rcx
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L15774
.L17702:
	movq	-808(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L17402
.L17701:
	movq	-808(%rbp), %rcx
	movq	%rcx, current_function_decl(%rip)
	jmp	.L15778
.L17658:
	cmpq	$0, 64(%rcx)
	jne	.L15767
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L15767
.L17657:
	movq	%r14, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -808(%rbp)
	call	error_with_decl
	jmp	.L15765
	.p2align 6,,7
.L15758:
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.L15760
.L15764:
	movq	-800(%rbp), %r15
	cmpq	%r15, 56(%rdi)
	je	.L15760
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L15764
.L15760:
	movq	%rdi, -808(%rbp)
	jmp	.L15757
.L17656:
	movq	-800(%rbp), %r13
	movq	40(%r13), %r9
	movq	%r9, -808(%rbp)
	jmp	.L15757
.L17655:
	movq	56(%r14), %r10
	movq	%r10, -800(%rbp)
	jmp	.L15754
.L17654:
	testb	$32, 53(%r14)
	jne	.L15752
	jmp	.L15753
.L17253:
	movzbl	16(%r14), %ecx
	jmp	.L15752
.L15744:
	testq	%rax, %rax
	je	.L15742
	testq	%rdx, %rdx
	je	.L15750
	movq	(%rax), %r12
	movq	%r12, (%rdx)
	jmp	.L15742
.L15750:
	movq	144(%rcx), %rdi
	movq	(%rax), %rcx
	movq	%rcx, 72(%rdi)
	jmp	.L15742
	.p2align 6,,7
.L17653:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L15739
	jmp	.L17401
.L15736:
	movq	(%r12), %r13
	movq	%r13, 8(%rbx)
	jmp	.L15737
.L17651:
	movq	8(%rbx), %r12
	testq	%r12, %r12
	je	.L15719
.L15726:
	movq	-1072(%rbp), %r10
	cmpq	%r10, 32(%r12)
	je	.L15725
	movq	%r12, %r13
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L15726
	jmp	.L15719
.L17650:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L15711
	jmp	.L17400
.L17649:
	movq	global_binding_level(%rip), %rdx
	movq	-1072(%rbp), %rdi
	xorl	%eax, %eax
	movq	8(%rdx), %rsi
	call	value_member
	testq	%rax, %rax
	je	.L15708
	movq	-1072(%rbp), %r14
	movzbl	16(%r14), %edx
	jmp	.L16044
	.p2align 6,,7
.L16480:
	cmpl	$106, %eax
	je	.L15701
	cmpl	$106, %eax
	ja	.L16482
	cmpl	$50, %eax
	je	.L15304
	cmpl	$85, %eax
	je	.L16126
	jmp	.L16478
.L15304:
	movq	-1072(%rbp), %rbx
	movzbl	16(%rbx), %edx
	leal	-21(%rdx), %ecx
	cmpb	$1, %cl
	ja	.L15307
	movq	144(%rbx), %r11
	testb	$64, 3(%r11)
	je	.L15306
.L15307:
	cmpb	$10, %dl
	je	.L15306
.L15647:
	movl	-1060(%rbp), %eax
	testl	%eax, %eax
	jne	.L15649
	movl	-1056(%rbp), %eax
	testl	%eax, %eax
	je	.L15648
.L15649:
	movq	-1072(%rbp), %rdi
	movl	-1060(%rbp), %esi
	xorl	%eax, %eax
	movl	-1056(%rbp), %edx
	call	build_type_variant
	movq	%rax, -1072(%rbp)
	testb	$64, 46(%rax)
	jne	.L17703
.L15650:
	movl	$0, -1060(%rbp)
	movl	$0, -1056(%rbp)
.L15648:
	movq	-1072(%rbp), %r14
	movzbl	16(%r14), %edx
	cmpb	$23, %dl
	je	.L17704
.L15651:
	cmpb	$18, %dl
	je	.L17705
.L15652:
	cmpq	$0, -1000(%rbp)
	jne	.L17112
	cmpl	$3, -484(%rbp)
	je	.L17706
.L15653:
	cmpq	$0, -1000(%rbp)
	je	.L15656
.L17112:
	cmpl	$3, -448(%rbp)
	je	.L17707
.L15655:
	cmpq	$0, -1000(%rbp)
	jne	.L17708
.L15656:
	movl	-1004(%rbp), %esi
	testl	%esi, %esi
	je	.L15676
	movl	-1052(%rbp), %r8d
	testl	%r8d, %r8d
	jne	.L17709
.L15676:
	movl	-484(%rbp), %r10d
	testl	%r10d, %r10d
	jne	.L15678
	movl	-1004(%rbp), %r9d
	testl	%r9d, %r9d
	jne	.L17710
.L15678:
	movq	-904(%rbp), %r12
	movl	flag_traditional(%rip), %r11d
	movq	48(%r12), %r15
	testl	%r11d, %r11d
	movq	%r15, -1032(%rbp)
	je	.L15679
	movq	-1072(%rbp), %rdx
	movq	float_type_node(%rip), %r13
	cmpq	%r13, 112(%rdx)
	je	.L17711
.L15679:
	movq	-904(%rbp), %rax
	movq	32(%rax), %rcx
	movq	40(%rax), %rdi
	testq	%rcx, %rcx
	movq	%rcx, -904(%rbp)
	movq	%rcx, %rax
	je	.L15681
	cmpb	$124, 16(%rcx)
	je	.L17712
.L15680:
	testq	%rax, %rax
	je	.L15681
	movzbl	16(%rax), %eax
	cmpb	$1, %al
	je	.L15683
	cmpb	$126, %al
	je	.L15683
.L15681:
	xorl	%esi, %esi
.L15682:
	xorl	%eax, %eax
	call	grokparms
	cmpq	$0, -904(%rbp)
	movq	%rax, %rsi
	je	.L15684
	movq	-904(%rbp), %rbx
	cmpb	$85, 16(%rbx)
	je	.L17713
.L15684:
	movq	-1072(%rbp), %rbx
	movzbl	17(%rbx), %eax
	testb	$48, %al
	je	.L15690
	movq	-1072(%rbp), %r8
	movl	flag_traditional(%rip), %r10d
	movl	%eax, %r9d
	shrb	$4, %al
	shrb	$5, %r9b
	movl	$1, %r13d
	movl	%eax, %r15d
	andl	%r9d, %r13d
	movl	$0, %eax
	movq	112(%r8), %rdi
	andl	$1, %r15d
	testl	%r10d, %r10d
	cmovne	%rax, %rsi
	call	build_function_type
	movl	%r15d, %edx
	movl	%r13d, %esi
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	build_type_variant
.L17426:
	movq	%rax, -1072(%rbp)
	jmp	.L14930
.L15690:
	movl	flag_traditional(%rip), %r11d
	movq	-1072(%rbp), %rdi
	movl	$0, %eax
	testl	%r11d, %r11d
	cmovne	%rax, %rsi
	call	build_function_type
	jmp	.L17426
.L17713:
	movl	strict_prototype(%rip), %edx
	movq	32(%rbx), %rdi
	testl	%edx, %edx
	movq	%rdi, -904(%rbp)
	jne	.L15686
	testq	%rax, %rax
	jne	.L17113
.L17399:
	movq	void_list_node(%rip), %rsi
	jmp	.L15684
.L17113:
	cmpq	void_list_node(%rip), %rsi
	je	.L15684
.L15689:
	movl	$.LC226, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L17399
.L15686:
	testq	%rax, %rax
	je	.L15689
	jmp	.L17113
.L15683:
	movl	-376(%rbp), %esi
	jmp	.L15682
.L17712:
	movq	40(%rcx), %rax
	jmp	.L15680
.L17711:
	movzbl	17(%rdx), %edx
	movq	double_type_node(%rip), %rdi
	xorl	%eax, %eax
	movl	%edx, %r14d
	shrb	$4, %dl
	shrb	$5, %r14b
	andl	$1, %edx
	movl	%r14d, %esi
	andl	$1, %esi
	call	build_type_variant
	movq	%rax, -1072(%rbp)
	jmp	.L15679
.L17710:
	movl	$.LC225, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L15678
.L17709:
	movl	$.LC224, %edi
	xorl	%eax, %eax
	call	error
	xorl	$33554432, -1064(%rbp)
	jmp	.L15676
.L17708:
	movq	-1000(%rbp), %rdi
	xorl	%eax, %eax
	call	constructor_name
	cmpq	-464(%rbp), %rax
	jne	.L15656
	cmpl	$1, -448(%rbp)
	je	.L17714
	cmpl	$2, -892(%rbp)
	je	.L17715
.L15666:
	movl	-1052(%rbp), %r12d
	testl	%r12d, %r12d
	jne	.L17716
.L15667:
	movq	-1072(%rbp), %r13
	movzbl	17(%r13), %eax
	testb	$32, %al
	jne	.L17294
	testb	$16, %al
	jne	.L17295
	testl	$-8454145, -1064(%rbp)
	jne	.L17717
.L15670:
	movq	-1000(%rbp), %r14
	cmpl	$3, -484(%rbp)
	movq	56(%r14), %rdx
	movq	%rdx, -1072(%rbp)
	jne	.L15676
	movq	-1000(%rbp), %rbx
	cmpq	current_class_type(%rip), %rbx
	je	.L15673
	movq	80(%rbx), %rdi
	xorl	%eax, %eax
	movq	56(%rdi), %rcx
	movl	$.LC223, %edi
	movq	32(%rcx), %rsi
	call	error
	xorl	%eax, %eax
.L15674:
	testl	%eax, %eax
	je	.L17296
	movq	-1000(%rbp), %rbx
	movl	$156, %esi
	orb	$4, 46(%rbx)
	cmpl	$1, -468(%rbp)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
.L15665:
	cmpl	$3, -484(%rbp)
	jne	.L15676
	movl	$0, -892(%rbp)
	jmp	.L15676
.L15673:
	movl	$1, %eax
	jmp	.L15674
	.p2align 6,,7
.L17717:
	movl	$.LC222, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L15670
.L17295:
	movl	$.LC221, %edi
	jmp	.L17466
.L17294:
	movl	$.LC220, %edi
	xorl	%eax, %eax
	call	error
	movq	void_type_node(%rip), %r9
	movq	%r9, -1072(%rbp)
	jmp	.L13275
	.p2align 6,,7
.L17716:
	movl	$.LC219, %edi
	xorl	%eax, %eax
	call	pedwarn
	movl	$0, -1052(%rbp)
	jmp	.L15667
.L17715:
	movl	$.LC218, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L15666
	.p2align 6,,7
.L17714:
	cmpl	$2, -892(%rbp)
	je	.L17718
.L15658:
	movq	-1072(%rbp), %r11
	movzbl	17(%r11), %eax
	testb	$32, %al
	jne	.L17292
	testb	$16, %al
	jne	.L17293
	cmpl	$3, -484(%rbp)
	jne	.L15676
	movq	-1000(%rbp), %rsi
	cmpq	current_class_type(%rip), %rsi
	je	.L15663
	movq	80(%rsi), %r15
	movl	$.LC217, %edi
	xorl	%eax, %eax
	movq	56(%r15), %r9
	movq	32(%r9), %rsi
	call	error
	xorl	%eax, %eax
.L15664:
	testl	%eax, %eax
	jne	.L15665
	jmp	.L17447
.L15663:
	movl	$1, %eax
	jmp	.L15664
.L17293:
	movl	$.LC216, %edi
.L17472:
	xorl	%eax, %eax
	call	error
	jmp	.L17447
.L17292:
	movl	$.LC215, %edi
	xorl	%eax, %eax
	call	error
	movq	void_type_node(%rip), %r10
	movq	%r10, -1072(%rbp)
	jmp	.L13275
.L17718:
	movl	$.LC214, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L15658
	.p2align 6,,7
.L17707:
	movq	-1000(%rbp), %r10
	movq	144(%r10), %r8
	orb	$1, (%r8)
	jmp	.L15655
.L17706:
	movl	-1004(%rbp), %eax
	testl	%eax, %eax
	je	.L15654
	movq	-464(%rbp), %rsi
	cmpq	current_class_name(%rip), %rsi
	jne	.L15653
.L15654:
	movq	current_class_type(%rip), %rbx
	movq	%rbx, -1000(%rbp)
	jmp	.L15653
.L17705:
	movq	-480(%rbp), %rsi
	movl	$.LC213, %edi
	xorl	%eax, %eax
	call	error
	movq	integer_type_node(%rip), %rcx
	movq	%rcx, -1072(%rbp)
	jmp	.L15652
.L17704:
	movq	-480(%rbp), %rsi
	movl	$.LC212, %edi
	xorl	%eax, %eax
	call	error
	movq	integer_type_node(%rip), %rdi
	movq	%rdi, -1072(%rbp)
	movzbl	16(%rdi), %edx
	jmp	.L15651
.L17703:
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	jmp	.L15650
.L15306:
	movq	-1072(%rbp), %rsi
	cmpq	$0, 32(%rsi)
	jne	.L15647
	movq	80(%rsi), %rax
	testq	%rax, %rax
	movq	%rax, %r14
	je	.L15308
	movq	56(%rax), %rax
	testq	%rax, %rax
	je	.L15308
	cmpq	$0, 8(%rax)
	je	.L15647
.L15308:
	cmpb	$32, 16(%r14)
	movl	$144, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	56(%r14), %rax
	cmpq	%r14, 40(%rax)
	je	.L15647
	cmpq	$0, 8(%rax)
	jne	.L17719
.L15311:
	movq	current_binding_level(%rip), %rbx
	movq	72(%r14), %r12
	cmpq	global_binding_level(%rip), %rbx
	je	.L17720
.L17388:
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L15314:
	movq	class_binding_level(%rip), %rbx
	movq	$0, 8(%r12)
	movq	$0, 64(%r14)
	movq	56(%r14), %r9
	testq	%rbx, %rbx
	movq	%r9, 72(%r14)
	jne	.L15318
	movq	current_binding_level(%rip), %rbx
.L15318:
	movq	global_binding_level(%rip), %rsi
	cmpq	%rsi, %rbx
	movq	%rsi, %rdx
	je	.L17022
.L15330:
	movzbl	66(%rbx), %r8d
	xorl	%r13d, %r13d
	andl	$15, %r8d
	cmpl	$2, %r8d
	je	.L17721
.L15322:
	movq	56(%rbx), %rbx
	cmpq	%rdx, %rbx
	jne	.L15330
.L17022:
	movzbl	66(%rbx), %r12d
	xorl	%r13d, %r13d
	andl	$15, %r12d
	cmpl	$2, %r12d
	jne	.L15647
	movq	8(%rbx), %r12
	testq	%r12, %r12
	je	.L15647
.L15338:
	movq	-1072(%rbp), %r10
	cmpq	%r10, 32(%r12)
	je	.L15337
	movq	%r12, %r13
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L15338
	jmp	.L15647
.L15337:
	movq	-1072(%rbp), %rdx
	movq	$_iob+112, %rdi
	movl	$.LC175, %esi
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	print_node_brief
	xorl	%eax, %eax
	movl	$11, %edi
	call	my_friendly_abort
.L15328:
	testq	%r13, %r13
	je	.L15339
	movq	(%r12), %rdx
	movq	%rdx, (%r13)
.L15340:
	movq	current_binding_level(%rip), %rbx
	movq	24(%r12), %r13
	cmpq	global_binding_level(%rip), %rbx
	movq	32(%r12), %r15
	je	.L17722
.L17389:
	movq	8(%r13), %rsi
	movq	32(%rbx), %rdx
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L15342:
	movq	%r15, 8(%r13)
	xorl	%eax, %eax
	movq	32(%r12), %rsi
	movq	global_binding_level(%rip), %r13
	movq	24(%r12), %rdi
	movq	8(%r13), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%r13)
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	movq	%rax, %rcx
	je	.L15345
	movq	144(%rax), %rbx
	xorl	%edx, %edx
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L15345
.L15351:
	movq	-1072(%rbp), %r11
	cmpq	%r11, 32(%rax)
	je	.L15347
	movq	%rax, %rdx
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L15351
.L15345:
	movq	current_binding_level(%rip), %rax
	movq	global_binding_level(%rip), %r8
	movq	%rax, -744(%rbp)
	movq	%r8, current_binding_level(%rip)
	movq	current_function_decl(%rip), %rax
	movq	112(%r14), %r15
	movq	%r8, -736(%rbp)
	cmpq	%rax, %r14
	movq	%r15, -704(%rbp)
	je	.L17234
	movzbl	16(%r14), %ecx
	cmpb	$29, %cl
	je	.L17723
.L15356:
	movq	%rax, 64(%r14)
.L15355:
	cmpb	$32, %cl
	je	.L17724
.L15357:
	cmpq	$0, -704(%rbp)
	je	.L15358
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L17725
	movq	-704(%rbp), %rdi
	cmpq	$0, 48(%rdi)
	jne	.L15361
	movq	$0, -712(%rbp)
.L15360:
	cmpq	$0, -712(%rbp)
	je	.L15378
	movq	-712(%rbp), %rbx
	cmpq	error_mark_node(%rip), %rbx
	je	.L17726
.L15368:
	cmpq	$0, -712(%rbp)
	je	.L17238
	movq	-712(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L17727
.L15370:
	movq	-712(%rbp), %rsi
	testq	%rsi, %rsi
	movq	24(%rsi), %rbx
	movl	32(%rsi), %r12d
	je	.L17238
	movzbl	16(%rsi), %eax
	movzbl	16(%r14), %ecx
	cmpb	%cl, %al
	je	.L15372
	cmpb	$32, %al
	je	.L15378
	cmpb	$32, %cl
	je	.L17310
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L17238
.L15377:
	movq	class_binding_level(%rip), %r10
	movq	-744(%rbp), %r11
	testq	%r10, %r10
	movq	%r11, current_binding_level(%rip)
	cmove	%r11, %r10
	movq	%r10, -744(%rbp)
	cmpb	$32, 16(%r14)
	jne	.L15647
	movq	global_binding_level(%rip), %r9
	xorl	%ecx, %ecx
	movq	56(%r14), %rsi
	cmpq	%r9, -744(%rbp)
	movq	%r9, %rdi
	je	.L17031
.L15643:
	movq	-744(%rbp), %r15
	movq	32(%r15), %rdx
	testq	%rdx, %rdx
	je	.L17033
.L15642:
	cmpq	%rsi, 24(%rdx)
	leaq	32(%rdx), %r12
	movq	(%rdx), %rdx
	cmove	%r12, %rcx
	testq	%rdx, %rdx
	jne	.L15642
.L17033:
	movq	-744(%rbp), %r13
	movq	56(%r13), %rdx
	cmpq	%rdi, %rdx
	movq	%rdx, -744(%rbp)
	jne	.L15643
.L17031:
	testq	%rcx, %rcx
	movq	8(%r14), %rax
	jne	.L15644
	movq	%rax, 8(%rsi)
	jmp	.L15647
.L15644:
	movq	%rax, (%rcx)
	jmp	.L15647
.L17238:
	movzbl	16(%r14), %ecx
.L15378:
	cmpb	$32, %cl
	je	.L17310
.L15386:
	movzbl	53(%r14), %edx
	testb	$1, %dl
	je	.L15524
	movq	-704(%rbp), %r12
	movq	40(%r12), %rax
	testq	%rax, %rax
	je	.L15524
	testb	$1, 53(%rax)
	jne	.L15525
	testb	$8, 18(%rax)
	je	.L15524
.L15525:
	andb	$8, %dl
	je	.L17728
.L15524:
	movl	flag_traditional(%rip), %edi
	testl	%edi, %edi
	je	.L17246
	testb	$1, 53(%r14)
	je	.L17246
	xorl	%r12d, %r12d
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L15528
	movq	-704(%rbp), %rbx
	movq	48(%rbx), %r13
	testq	%r13, %r13
	movq	%r13, %rcx
	jne	.L15529
.L15528:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L15530
	movq	-704(%rbp), %r8
	movq	56(%r8), %rcx
	testq	%rcx, %rcx
	jne	.L17110
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L15531
	movq	144(%rdi), %r10
	testb	$1, 3(%r10)
	jne	.L17729
.L15531:
	testq	%rcx, %rcx
	jne	.L17110
.L17111:
	movq	-704(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17110
	movq	-704(%rbp), %r11
	movq	40(%r11), %rcx
.L15529:
	testq	%rcx, %rcx
	je	.L17149
.L17110:
	cmpb	$32, 16(%rcx)
	je	.L15533
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L15533
	movq	-704(%rbp), %r9
	movq	8(%r9), %rax
	testq	%rax, %rax
	je	.L15541
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17396
	testl	%r12d, %r12d
	jle	.L17730
.L17396:
	movq	%rax, %rcx
.L15533:
	testq	%rcx, %rcx
	jne	.L17246
.L17149:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -736(%rbp)
.L15527:
	cmpq	%rax, -736(%rbp)
	je	.L17731
	movq	current_binding_level(%rip), %rbx
	movq	-704(%rbp), %rsi
	cmpq	%rax, %rbx
	movq	48(%rsi), %r13
	movq	40(%rsi), %r12
	movq	%rsi, %rdi
	je	.L17732
.L17397:
	movq	16(%rbx), %rdx
	movq	%r13, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%rbx)
.L15572:
	movq	-704(%rbp), %rbx
	testq	%r13, %r13
	movq	%r14, 48(%rbx)
	je	.L17733
.L15583:
	movq	96(%r14), %rax
	testq	%rax, %rax
	jne	.L15585
	testq	%r13, %r13
	je	.L15586
	testb	$1, 53(%r14)
	jne	.L15586
	cmpb	$34, 16(%r13)
	je	.L17734
.L15586:
	movl	warn_shadow(%rip), %r15d
	testl	%r15d, %r15d
	je	.L15585
	testb	$1, 53(%r14)
	jne	.L15585
	movl	32(%r14), %ecx
	testl	%ecx, %ecx
	je	.L15585
	testq	%rax, %rax
	jne	.L15585
	xorl	%edi, %edi
	testq	%r13, %r13
	je	.L15591
	cmpb	$34, 16(%r13)
	je	.L17735
.L15591:
	movq	-704(%rbp), %rdx
	cmpq	$0, 56(%rdx)
	je	.L15593
	movl	$.LC41, %edi
.L15592:
	testq	%rdi, %rdi
	jne	.L17736
.L15585:
	testq	%r13, %r13
	je	.L17247
	movq	-736(%rbp), %r8
	movq	-704(%rbp), %rdi
	movq	%r13, %rsi
	xorl	%eax, %eax
	movq	16(%r8), %rdx
	call	tree_cons
	movq	-736(%rbp), %r13
	movq	%rax, 16(%r13)
.L17247:
	movzbl	16(%r14), %ecx
.L15570:
	leal	-128(%rcx), %edi
	cmpb	$1, %dil
	jbe	.L15358
	movq	8(%r14), %rdx
	cmpq	$0, 32(%rdx)
	jne	.L15358
	cmpb	$18, 16(%rdx)
	je	.L17737
.L15602:
	testb	$64, 46(%rdx)
	je	.L15358
.L15601:
	movq	-736(%rbp), %r12
	movzwl	64(%r12), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%r12)
	je	.L17738
.L17248:
	movzbl	16(%r14), %ecx
.L15358:
	cmpb	$32, %cl
	je	.L17739
.L15604:
	movq	-736(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	(%rbx), %r8
	movq	%r8, (%r14)
	movq	%r14, (%rbx)
	jne	.L15377
	testb	$4, 17(%r14)
	jne	.L15377
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L15377
	.p2align 6,,7
.L17739:
	cmpq	$0, -704(%rbp)
	je	.L15604
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L15605
	cmpq	class_binding_level(%rip), %rax
	je	.L15606
	movq	-704(%rbp), %r11
	movq	48(%r11), %rax
	testq	%rax, %rax
	je	.L15610
	cmpb	$32, 16(%rax)
	je	.L15608
.L15610:
	cmpq	$0, current_class_type(%rip)
	je	.L15605
	movq	-704(%rbp), %rcx
	movq	56(%rcx), %rax
	testq	%rax, %rax
	je	.L15605
	cmpb	$32, 16(%rax)
	je	.L15608
.L15605:
	movq	-704(%rbp), %rsi
	movq	40(%rsi), %rax
	testq	%rax, %rax
	je	.L15609
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L15608
	cmpb	$-127, %dl
	je	.L17740
.L15609:
	movq	current_class_name(%rip), %r13
	testq	%r13, %r13
	je	.L15604
	movq	72(%r14), %rbx
	testq	%rbx, %rbx
	je	.L17741
.L15616:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L15620
	cmpq	class_binding_level(%rip), %rax
	je	.L15621
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L15625
	cmpb	$32, 16(%rax)
	je	.L15623
.L15625:
	cmpq	$0, current_class_type(%rip)
	je	.L15620
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L15620
	cmpb	$32, 16(%rax)
	je	.L15623
.L15620:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L15604
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L15623
	cmpb	$-127, %dl
	jne	.L15604
	movq	$0, 8(%rbx)
	jmp	.L15604
.L15623:
	movq	8(%rax), %r13
	movq	%r13, 8(%rbx)
	jmp	.L15604
.L15621:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L15625
.L17741:
	cmpb	$32, 16(%r14)
	movq	56(%r14), %r12
	sete	%sil
	movq	8(%r14), %r15
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$136, %esi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r13)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%r13), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%r13), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r14)
	movq	%r15, 8(%rax)
	movq	72(%r14), %rbx
	jmp	.L15616
.L17740:
	movq	$0, 8(%rsi)
	jmp	.L15609
.L15608:
	movq	8(%rax), %r15
	movq	-704(%rbp), %r9
	movq	%r15, 8(%r9)
	jmp	.L15609
.L15606:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L15610
.L17738:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L17248
.L17737:
	movq	8(%rdx), %r10
	testb	$64, 46(%r10)
	jne	.L15601
	jmp	.L15602
.L17736:
	movq	-704(%rbp), %rbx
	movq	32(%rbx), %rsi
.L17398:
	xorl	%eax, %eax
	call	warning
	jmp	.L15585
.L15593:
	testq	%r13, %r13
	je	.L15595
	movl	$.LC42, %edi
	jmp	.L15592
.L15595:
	testq	%r12, %r12
	movl	$.LC43, %esi
	cmovne	%rsi, %rdi
	jmp	.L15592
.L17735:
	movl	$.LC40, %edi
	jmp	.L15592
.L17734:
	cmpb	$34, 16(%r14)
	je	.L15586
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r12
	movq	56(%r12), %rax
	je	.L15587
	movq	56(%rax), %rax
.L15587:
	movzbl	66(%rax), %r11d
	andl	$15, %r11d
	decl	%r11d
	jne	.L15585
	movq	-704(%rbp), %r9
	movl	$.LC40, %edi
	movq	32(%r9), %rsi
	jmp	.L17398
.L17733:
	movzbl	53(%r14), %r8d
	andb	$9, %r8b
	decb	%r8b
	je	.L17742
.L15575:
	testq	%r13, %r13
	jne	.L15583
	testq	%r12, %r12
	jne	.L15583
	testb	$1, 53(%r14)
	je	.L15583
	testb	$8, 18(%r14)
	je	.L15583
	movq	-704(%rbp), %rax
	orb	$8, 18(%rax)
	jmp	.L15583
.L17742:
	testq	%r12, %r12
	je	.L15575
	cmpb	$29, 16(%r14)
	jne	.L15575
	cmpb	$29, 16(%r12)
	jne	.L15575
	movq	8(%r14), %rdi
	movq	8(%r12), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L17743
	movzbl	53(%r12), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L15578
	movzbl	53(%r14), %r10d
	leal	0(,%rax,8), %r11d
	leaq	88(%r14), %rdx
	andb	$-9, %r10b
	orb	%r11b, %r10b
	movb	%r10b, 53(%r14)
	cmpq	%r12, current_function_decl(%rip)
	je	.L15579
	movq	88(%r12), %rax
.L15580:
	movq	136(%r12), %rbx
	movq	72(%r12), %rsi
	movq	%rax, (%rdx)
	movq	80(%r12), %rdi
	movzbl	17(%r14), %r9d
	movq	%rbx, 136(%r14)
	movq	%rsi, 72(%r14)
	movq	%rdi, 80(%r14)
	movzbl	17(%r12), %ecx
	movq	%r12, 96(%r14)
	andb	$127, %r9b
	shrb	$7, %cl
	movzbl	%cl, %edx
	movl	%edx, %r15d
	salb	$7, %r15b
	orb	%r15b, %r9b
	movb	%r9b, 17(%r14)
	movzbl	53(%r12), %ecx
.L15578:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L15581
	movzbl	53(%r14), %r8d
	salb	$4, %al
	andb	$-17, %r8b
	orb	%al, %r8b
	movb	%r8b, 53(%r14)
	movl	128(%r12), %eax
	movl	%eax, 128(%r14)
.L15581:
	movq	8(%r12), %rdx
	cmpq	$0, 24(%rdx)
	je	.L15575
	cmpq	$0, 88(%r12)
	je	.L15575
	movq	8(%r14), %r10
	cmpq	$0, 24(%r10)
	jne	.L15575
	movq	%rdx, 8(%r14)
	jmp	.L15575
.L15579:
	xorl	%eax, %eax
	jmp	.L15580
.L17743:
	movq	%r14, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L15575
.L17732:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L15572
	movq	-704(%rbp), %rdi
	jmp	.L17397
.L17731:
	movzwl	16(%r14), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L17744
.L15547:
	movq	-704(%rbp), %rsi
	cmpq	$0, 40(%rsi)
	jne	.L15548
	testb	$8, 18(%r14)
	je	.L15548
	orb	$8, 18(%rsi)
.L15548:
	movzbl	16(%r14), %ecx
	cmpb	$32, %cl
	je	.L17745
.L15550:
	movq	-704(%rbp), %rcx
	movq	%r14, 40(%rcx)
	movzbl	16(%r14), %ecx
.L15549:
	movq	-704(%rbp), %rbx
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L15561
	movq	8(%rax), %rdx
	testq	%rdx, %rdx
	je	.L15551
	testb	$1, 18(%rdx)
	je	.L15551
	orb	$1, 18(%r14)
	movq	72(%rbx), %rax
.L15551:
	testq	%rax, %rax
	je	.L15561
	movq	8(%rax), %rdx
	testq	%rdx, %rdx
	je	.L15556
	testb	$8, 17(%rdx)
	je	.L15556
	orb	$8, 17(%r14)
	movq	-704(%rbp), %rdi
	movq	72(%rdi), %rax
.L15556:
	testq	%rax, %rax
	je	.L15561
	cmpq	$0, 8(%rax)
	je	.L15561
	cmpb	$29, %cl
	je	.L17746
.L15564:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r14), %ecx
.L15561:
	movq	-704(%rbp), %rbx
	testb	$8, 18(%rbx)
	je	.L15570
	cmpb	$32, %cl
	je	.L15570
	testb	$8, 18(%r14)
	jne	.L15570
	testb	$1, 53(%r14)
	jne	.L15570
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L15566
	cmpq	$0, 8(%rax)
	jne	.L17747
.L15566:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L17459:
	xorl	%eax, %eax
	call	warning
	jmp	.L17247
.L17747:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L17459
.L17746:
	movq	8(%r14), %r13
	movq	integer_type_node(%rip), %rsi
	cmpq	%rsi, 8(%r13)
	jne	.L15564
	jmp	.L15561
.L17745:
	cmpq	$0, -712(%rbp)
	je	.L15550
	movq	-712(%rbp), %r12
	cmpb	$32, 16(%r12)
	jne	.L15549
	jmp	.L15550
.L17744:
	testb	$8, 54(%r14)
	jne	.L15547
	andb	$-9, 18(%r14)
	jmp	.L15547
	.p2align 6,,7
.L17246:
	movq	global_binding_level(%rip), %rax
	jmp	.L15527
.L17730:
	testl	%edx, %edx
	jg	.L17396
	testl	%r12d, %r12d
	je	.L15533
	movq	-704(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17396
.L15541:
	movq	8(%rcx), %r15
	cmpq	error_mark_node(%rip), %r15
	cmove	%r15, %rcx
	jmp	.L15533
.L17729:
	xorl	%ecx, %ecx
	movq	-704(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L15533
	testq	%rax, %rax
	je	.L17111
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L15531
.L15530:
	movq	-704(%rbp), %rdx
	movq	40(%rdx), %rcx
	jmp	.L15529
.L17728:
	movq	8(%rax), %rsi
	movq	8(%r14), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L15524
	movq	%r14, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movq	-704(%rbp), %rsi
	movq	40(%rsi), %rdi
	movl	$.LC37, %esi
	call	warning_with_decl
	jmp	.L15524
.L17310:
	movq	8(%r14), %rcx
	movq	80(%rcx), %rbx
	testq	%rbx, %rbx
	movq	%rbx, -728(%rbp)
	je	.L15388
	movzbl	16(%rbx), %edx
	cmpb	$32, %dl
	je	.L15387
.L15388:
	movq	global_binding_level(%rip), %r8
	movq	%r14, -728(%rbp)
	cmpq	%r8, current_binding_level(%rip)
	jne	.L17239
	movq	%r14, 80(%rcx)
.L17239:
	movzbl	16(%r14), %edx
.L15391:
	cmpb	$32, %dl
	movl	$140, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	-728(%rbp), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L15515
	cmpq	$0, 72(%rsi)
	je	.L17748
.L15515:
	movq	8(%r14), %r13
	movq	80(%r13), %rax
	testq	%rax, %rax
	je	.L15386
	cmpq	$0, 56(%rax)
	je	.L15386
	movq	current_binding_level(%rip), %rbx
	movq	56(%r14), %r12
	cmpq	global_binding_level(%rip), %rbx
	je	.L17749
.L17395:
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L15521:
	movq	%r13, 8(%r12)
	jmp	.L15386
.L17749:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L15521
	jmp	.L17395
.L17748:
	cmpb	$32, 16(%r14)
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	sete	%dl
	movq	8(%r14), %r13
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L15516
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%r15b
	xorl	%eax, %eax
	movzbl	%r15b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r14)
	movq	%r13, 8(%rax)
	jmp	.L15515
.L15516:
	movq	%rbx, 72(%r14)
	jmp	.L15515
.L15387:
	movq	current_binding_level(%rip), %rsi
	movq	-728(%rbp), %r15
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%r15), %r13
	jne	.L15391
	movq	32(%r13), %rax
	cmpb	$36, (%rax)
	jne	.L15391
	cmpb	$95, 1(%rax)
	jne	.L15391
	movq	class_binding_level(%rip), %rax
	movq	%r14, 80(%rcx)
	movq	8(%r14), %r12
	testq	%rax, %rax
	movq	%rax, -720(%rbp)
	movq	%r12, -288(%rbp)
	jne	.L15395
	testb	$-128, 66(%rsi)
	movq	%rsi, -720(%rbp)
	je	.L15395
.L15399:
	movq	-720(%rbp), %rdx
	movq	56(%rdx), %r10
	testb	$-128, 66(%r10)
	movq	%r10, -720(%rbp)
	jne	.L15399
.L15395:
	movq	-720(%rbp), %rdi
	cmpq	global_binding_level(%rip), %rdi
	je	.L17750
	movq	-720(%rbp), %r9
	movq	-288(%rbp), %rsi
	movq	%r13, %rdi
	xorl	%eax, %eax
	movq	8(%r9), %rdx
	call	saveable_tree_cons
	movq	-720(%rbp), %rcx
	movq	%rax, 8(%rcx)
.L15401:
	testq	%r13, %r13
	je	.L15402
	movq	-288(%rbp), %rsi
	cmpq	$0, 80(%rsi)
	jne	.L15403
	movq	%r13, 80(%rsi)
.L15403:
	movq	-288(%rbp), %rax
	cmpq	%rax, 8(%r13)
	je	.L15404
	cmpb	$21, 16(%rax)
	je	.L17751
.L15405:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L15407
	cmpq	$0, 32(%rax)
	je	.L15406
.L15407:
	movq	lang_name_cplusplus(%rip), %r15
	cmpq	%r15, current_lang_name(%rip)
	je	.L17752
.L15408:
	xorl	%ecx, %ecx
.L15443:
	testq	%rcx, %rcx
	jne	.L15444
.L17148:
	movq	-288(%rbp), %rdx
	movl	$32, %edi
	movq	%r13, %rsi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-288(%rbp), %rdi
	movq	%rax, %r15
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	current_binding_level(%rip), %rbx
	movl	$0, 32(%r15)
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, 112(%r15)
	je	.L17753
.L17392:
	movq	8(%r13), %rsi
	movq	32(%rbx), %rdx
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L15446:
	movq	-288(%rbp), %rbx
	movq	%rbx, 8(%r13)
.L15449:
	movq	32(%r13), %rax
	cmpb	$36, (%rax)
	je	.L17754
.L15451:
	movq	-288(%rbp), %rsi
	movq	80(%rsi), %rdx
	testq	%rdx, %rdx
	je	.L15482
	cmpb	$32, 16(%rdx)
	je	.L17755
.L15452:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L15471
	movq	56(%r15), %r12
	testq	%r12, %r12
	je	.L17243
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L15473
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L15473:
	movq	decl_obstack+24(%rip), %rdx
	movq	%r15, 56(%r12)
	leaq	8(%rdx), %rdi
	cmpq	decl_obstack+32(%rip), %rdi
	ja	.L17756
.L15475:
	movq	%rdx, %r11
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%r15, (%r11)
	cmpb	$32, 16(%r15)
	je	.L17757
.L17243:
	movq	32(%r13), %rax
.L15482:
	cmpb	$36, (%rax)
	je	.L17758
.L15496:
	movq	current_class_type(%rip), %rdx
	movq	-288(%rbp), %r12
	testq	%rdx, %rdx
	movq	%r15, 80(%r12)
	jne	.L15499
	cmpq	$0, current_function_decl(%rip)
	je	.L15498
.L15499:
	movq	lang_name_cplusplus(%rip), %rdi
	cmpq	%rdi, current_lang_name(%rip)
	je	.L15497
.L15498:
	movq	%r13, 72(%r15)
.L15404:
	movq	-720(%rbp), %rcx
	movzbl	66(%rcx), %r15d
	andl	$15, %r15d
	cmpl	$2, %r15d
	je	.L17759
.L15402:
	movq	-288(%rbp), %rsi
	movq	80(%rsi), %rax
	cmpb	$32, 16(%rax)
	je	.L17760
	movq	-288(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-288(%rbp), %r10
	movq	%rax, (%r10)
	movq	-728(%rbp), %r8
	movzbl	16(%r8), %edx
	jmp	.L15391
.L17760:
	movq	%rax, (%rsi)
	movq	-728(%rbp), %rcx
	movzbl	16(%rcx), %edx
	jmp	.L15391
.L17759:
	movq	-288(%rbp), %rax
	orb	$64, 18(%rax)
	movq	80(%rax), %rsi
	movq	current_class_type(%rip), %rax
	movq	%rsi, 56(%r13)
	cmpq	$0, 32(%rax)
	jne	.L15402
	movq	144(%rax), %r13
	movq	8(%rcx), %rbx
	movq	%rbx, 72(%r13)
	jmp	.L15402
.L15497:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L17761
	cmpq	$0, 32(%rdx)
	jne	.L15404
	cmpb	$32, 16(%r15)
	movq	80(%rdx), %r10
	movl	$136, %esi
	sete	%r8b
	xorl	%eax, %eax
	movq	72(%r10), %rbx
	movzbl	%r8b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L15507
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r13)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	32(%r13), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r13), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-288(%rbp), %r11
	movq	%r11, 8(%rax)
.L15509:
	movq	current_class_type(%rip), %r9
	movq	152(%r15), %rdi
	movq	%r9, 64(%r15)
	movq	%r9, 16(%rdi)
	jmp	.L15404
.L15507:
	movq	%r13, 72(%r15)
	jmp	.L15509
.L17761:
	cmpb	$32, 16(%r15)
	movq	112(%rax), %rbx
	movl	$136, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L15502
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r13), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r13), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-288(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L15504:
	movq	current_function_decl(%rip), %rcx
	movq	%rcx, 64(%r15)
	jmp	.L15404
.L15502:
	movq	%r13, 72(%r15)
	jmp	.L15504
.L17758:
	cmpb	$95, 1(%rax)
	jne	.L15496
	orb	$64, 53(%r15)
	jmp	.L15496
.L17757:
	cmpq	$0, 72(%r15)
	jne	.L17243
	movq	current_class_name(%rip), %rbx
	movq	8(%r15), %r9
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%r9, -296(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L15492
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-296(%rbp), %rdx
.L17458:
	movq	%rdx, 8(%rax)
	jmp	.L17243
.L15492:
	movq	%r12, 72(%r15)
	jmp	.L17243
.L17756:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L15475
.L15471:
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, %r15
	jmp	.L17243
.L17755:
	movq	global_binding_level(%rip), %rcx
	movl	$1, %r12d
	cmpq	%rcx, current_binding_level(%rip)
	je	.L15453
	movq	48(%r13), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L15454
.L15453:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L15455
	movq	56(%r13), %rcx
	testq	%rcx, %rcx
	jne	.L17108
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L15456
	movq	144(%rdi), %r10
	testb	$1, 3(%r10)
	jne	.L17762
.L15456:
	testq	%rcx, %rcx
	jne	.L17108
.L17109:
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17108
.L15455:
	movq	40(%r13), %rcx
.L15454:
	testq	%rcx, %rcx
	je	.L15458
.L17108:
	cmpb	$32, 16(%rcx)
	je	.L15458
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L15458
	movq	8(%r13), %rax
	testq	%rax, %rax
	je	.L15466
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17393
	testl	%r12d, %r12d
	jle	.L17763
.L17393:
	movq	%rax, %rcx
.L15458:
	movq	-288(%rbp), %rdx
	cmpq	80(%rdx), %rcx
	jne	.L15452
	jmp	.L17243
.L17763:
	testl	%edx, %edx
	jg	.L17393
	testl	%r12d, %r12d
	je	.L15458
	movq	%rax, %rdx
	movq	%r13, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17393
.L15466:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L15458
.L17762:
	xorl	%ecx, %ecx
	movq	%r13, %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L15458
	testq	%rax, %rax
	je	.L17109
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L15456
.L17754:
	cmpb	$95, 1(%rax)
	jne	.L15451
	jmp	.L15482
.L17753:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L15446
	jmp	.L17392
.L15444:
	movq	80(%rcx), %r15
	jmp	.L15449
.L17752:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L15410
	movq	80(%rax), %rbx
.L15410:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L15443
.L15442:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L15419
	cmpl	$32, %eax
	je	.L17764
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L15413:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L15443
	jmp	.L15442
.L17764:
	movq	8(%rbx), %r10
	movq	-288(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%r10), %r12
	movq	72(%r12), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L17291
	movq	64(%rbx), %rbx
	jmp	.L15413
.L17291:
	movq	32(%rax), %rcx
	jmp	.L15443
.L15419:
	movq	-288(%rbp), %rax
	movq	80(%rax), %rdx
	movq	56(%rdx), %rbx
	testq	%rbx, %rbx
	je	.L15408
	movq	global_binding_level(%rip), %rdi
	movl	$1, %r15d
	cmpq	%rdi, current_binding_level(%rip)
	je	.L15422
	movq	48(%rbx), %r11
	testq	%r11, %r11
	movq	%r11, %rcx
	jne	.L15423
.L15422:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L15424
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L17106
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L15425
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L17765
.L15425:
	testq	%rcx, %rcx
	jne	.L17106
.L17107:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17106
.L15424:
	movq	40(%rbx), %rcx
.L15423:
	testq	%rcx, %rcx
	je	.L17148
.L17106:
	cmpb	$32, 16(%rcx)
	je	.L15443
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L15443
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L15435
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17391
	testl	%r15d, %r15d
	jle	.L17766
.L17391:
	movq	%rax, %rcx
	jmp	.L15443
.L17766:
	testl	%edx, %edx
	jg	.L17391
	testl	%r15d, %r15d
	je	.L15443
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17391
.L15435:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L15443
	jmp	.L17391
.L17765:
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %r15d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L15443
	testq	%rax, %rax
	je	.L17107
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L15425
.L15406:
	movq	-288(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r13, %rsi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, %r15
	je	.L17767
.L17394:
	movq	8(%r13), %rsi
	movq	32(%rbx), %rdx
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L15484:
	movq	-288(%rbp), %rbx
	movq	%rbx, 8(%r13)
	movq	56(%r15), %r12
	testq	%r12, %r12
	je	.L17243
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L15488
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L15488:
	movq	decl_obstack+24(%rip), %rdx
	movq	%r15, 56(%r12)
	leaq	8(%rdx), %rcx
	cmpq	decl_obstack+32(%rip), %rcx
	ja	.L17768
.L15490:
	movq	%rdx, %r8
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%r15, (%r8)
	cmpb	$32, 16(%r15)
	jne	.L17243
	cmpq	$0, 72(%r15)
	jne	.L17243
	movq	current_class_name(%rip), %rbx
	movq	8(%r15), %r10
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%r10, -304(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L15492
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-304(%rbp), %rdx
	jmp	.L17458
.L17768:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L15490
.L17767:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L15484
	jmp	.L17394
.L17751:
	cmpq	$0, class_binding_level(%rip)
	je	.L15405
	movq	144(%rax), %rsi
	testb	$16, 3(%rsi)
	jne	.L15404
	jmp	.L15405
.L17750:
	movq	-720(%rbp), %r11
	movq	-288(%rbp), %rsi
	movq	%r13, %rdi
	xorl	%eax, %eax
	movq	8(%r11), %rdx
	call	perm_tree_cons
	movq	-720(%rbp), %rbx
	movq	%rax, 8(%rbx)
	jmp	.L15401
.L15372:
	movq	-712(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L17238
	movl	flag_traditional(%rip), %r11d
	testl	%r11d, %r11d
	jne	.L15377
	movq	-704(%rbp), %rcx
	testb	$8, 18(%rcx)
	je	.L15377
	testb	$8, 18(%r14)
	jne	.L15377
	testb	$9, 53(%r14)
	jne	.L15377
	cmpq	%r14, current_function_decl(%rip)
	je	.L17769
.L15381:
	movq	-704(%rbp), %rsi
	movq	72(%rsi), %rax
	testq	%rax, %rax
	je	.L15382
	cmpq	$0, 8(%rax)
	jne	.L17770
.L15382:
	movq	-712(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L17390:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-712(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%r12d, %esi
	movq	%rax, %rcx
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L15377
.L17770:
	movq	-712(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L17390
.L17769:
	movq	-712(%rbp), %r9
	movq	%r9, current_function_decl(%rip)
	jmp	.L15381
.L17727:
	cmpq	$0, 64(%rcx)
	jne	.L15370
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L15370
.L17726:
	movq	%r14, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -712(%rbp)
	call	error_with_decl
	jmp	.L15368
.L15361:
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.L15363
.L15367:
	movq	-704(%rbp), %r13
	cmpq	%r13, 56(%rdi)
	je	.L15363
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L15367
.L15363:
	movq	%rdi, -712(%rbp)
	jmp	.L15360
.L17725:
	movq	-704(%rbp), %rdx
	movq	40(%rdx), %r10
	movq	%r10, -712(%rbp)
	jmp	.L15360
	.p2align 6,,7
.L17724:
	movq	56(%r14), %r12
	movq	%r12, -704(%rbp)
	jmp	.L15357
.L17723:
	testb	$32, 53(%r14)
	jne	.L15355
	jmp	.L15356
.L17234:
	movzbl	16(%r14), %ecx
	jmp	.L15355
.L15347:
	testq	%rax, %rax
	je	.L15345
	testq	%rdx, %rdx
	je	.L15353
	movq	(%rax), %rcx
	movq	%rcx, (%rdx)
	jmp	.L15345
.L15353:
	movq	144(%rcx), %r9
	movq	(%rax), %rsi
	movq	%rsi, 72(%r9)
	jmp	.L15345
	.p2align 6,,7
.L17722:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L15342
	jmp	.L17389
	.p2align 6,,7
.L15339:
	movq	(%r12), %rdi
	movq	%rdi, 8(%rbx)
	jmp	.L15340
	.p2align 6,,7
.L17721:
	movq	8(%rbx), %r12
	testq	%r12, %r12
	je	.L15322
.L15329:
	movq	-1072(%rbp), %r15
	cmpq	%r15, 32(%r12)
	je	.L15328
	movq	%r12, %r13
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L15329
	jmp	.L15322
.L17720:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L15314
	jmp	.L17388
.L17719:
	movq	global_binding_level(%rip), %r13
	movq	-1072(%rbp), %rdi
	xorl	%eax, %eax
	movq	8(%r13), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L15647
	jmp	.L15311
	.p2align 6,,7
.L16482:
	cmpl	$124, %eax
	je	.L16076
	cmpl	$126, %eax
	jne	.L16478
	movq	-904(%rbp), %rdi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	grokoptypename
	cmpl	$-1, -572(%rbp)
	movq	%rax, -904(%rbp)
	je	.L16128
	movq	32(%rax), %r14
	movq	-1072(%rbp), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	movq	8(%r14), %rsi
	call	comp_target_types
	testl	%eax, %eax
	jne	.L16129
	movl	$.LC241, %edi
	xorl	%eax, %eax
	call	error
.L16128:
	movq	-904(%rbp), %r12
	movq	32(%r12), %rsi
	movq	8(%rsi), %rdi
	movq	%rdi, -1072(%rbp)
	movzbl	16(%rdi), %edx
	leal	-21(%rdx), %ecx
	cmpb	$1, %cl
	ja	.L16133
	movq	-1072(%rbp), %r11
	movq	144(%r11), %r9
	testb	$64, 3(%r9)
	je	.L16132
.L16133:
	cmpb	$10, %dl
	jne	.L14930
.L16132:
	movq	-1072(%rbp), %rax
	cmpq	$0, 32(%rax)
	jne	.L14930
	movq	80(%rax), %r14
	testq	%r14, %r14
	je	.L16134
	movq	56(%r14), %rax
	testq	%rax, %rax
	je	.L16134
	cmpq	$0, 8(%rax)
	je	.L14930
.L16134:
	cmpb	$32, 16(%r14)
	movl	$144, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	56(%r14), %rax
	cmpq	%r14, 40(%rax)
	je	.L14930
	cmpq	$0, 8(%rax)
	jne	.L17771
.L16137:
	movq	current_binding_level(%rip), %rbx
	movq	72(%r14), %r12
	cmpq	global_binding_level(%rip), %rbx
	je	.L17772
.L17415:
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L16140:
	movq	class_binding_level(%rip), %rbx
	movq	$0, 8(%r12)
	movq	$0, 64(%r14)
	movq	56(%r14), %r15
	testq	%rbx, %rbx
	movq	%r15, 72(%r14)
	jne	.L16144
	movq	current_binding_level(%rip), %rbx
.L16144:
	movq	global_binding_level(%rip), %r8
	cmpq	%r8, %rbx
	movq	%r8, %rdx
	je	.L17050
.L16156:
	movzbl	66(%rbx), %r10d
	xorl	%r13d, %r13d
	andl	$15, %r10d
	cmpl	$2, %r10d
	je	.L17773
.L16148:
	movq	56(%rbx), %rbx
	cmpq	%rdx, %rbx
	jne	.L16156
.L17050:
	movzbl	66(%rbx), %ecx
	xorl	%r13d, %r13d
	andl	$15, %ecx
	cmpl	$2, %ecx
	jne	.L14930
	movq	8(%rbx), %r12
	testq	%r12, %r12
	je	.L14930
.L16164:
	movq	-1072(%rbp), %r9
	cmpq	%r9, 32(%r12)
	je	.L16163
	movq	%r12, %r13
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L16164
	jmp	.L14930
.L16163:
	movq	-1072(%rbp), %rdx
	movq	$_iob+112, %rdi
	movl	$.LC175, %esi
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	print_node_brief
	xorl	%eax, %eax
	movl	$11, %edi
	call	my_friendly_abort
.L16154:
	testq	%r13, %r13
	je	.L16165
	movq	(%r12), %rbx
	movq	%rbx, (%r13)
.L16166:
	movq	current_binding_level(%rip), %rbx
	movq	24(%r12), %r13
	cmpq	global_binding_level(%rip), %rbx
	movq	32(%r12), %r15
	je	.L17774
.L17416:
	movq	8(%r13), %rsi
	movq	32(%rbx), %rdx
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L16168:
	movq	%r15, 8(%r13)
	xorl	%eax, %eax
	movq	32(%r12), %rsi
	movq	global_binding_level(%rip), %r15
	movq	24(%r12), %rdi
	movq	8(%r15), %rdx
	call	perm_tree_cons
	movq	current_class_type(%rip), %rdx
	movq	%rax, 8(%r15)
	testq	%rdx, %rdx
	je	.L16171
	movq	144(%rdx), %rsi
	xorl	%ecx, %ecx
	movq	72(%rsi), %rax
	testq	%rax, %rax
	je	.L16171
.L16177:
	movq	-1072(%rbp), %r12
	cmpq	%r12, 32(%rax)
	je	.L16173
	movq	%rax, %rcx
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L16177
.L16171:
	movq	current_binding_level(%rip), %rax
	movq	global_binding_level(%rip), %rdx
	movq	%rax, -792(%rbp)
	movq	%rdx, current_binding_level(%rip)
	movq	current_function_decl(%rip), %rax
	movq	112(%r14), %rdi
	movq	%rdx, -784(%rbp)
	cmpq	%rax, %r14
	movq	%rdi, -752(%rbp)
	je	.L17269
	movzbl	16(%r14), %ecx
	cmpb	$29, %cl
	je	.L17775
.L16182:
	movq	%rax, 64(%r14)
.L16181:
	cmpb	$32, %cl
	je	.L17776
.L16183:
	cmpq	$0, -752(%rbp)
	je	.L16184
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L17777
	movq	-752(%rbp), %rbx
	cmpq	$0, 48(%rbx)
	jne	.L16187
	movq	$0, -760(%rbp)
.L16186:
	cmpq	$0, -760(%rbp)
	je	.L16204
	movq	-760(%rbp), %rcx
	cmpq	error_mark_node(%rip), %rcx
	je	.L17778
.L16194:
	cmpq	$0, -760(%rbp)
	je	.L17273
	movq	-760(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L17779
.L16196:
	movq	-760(%rbp), %rsi
	testq	%rsi, %rsi
	movq	24(%rsi), %rbx
	movl	32(%rsi), %r12d
	je	.L17273
	movzbl	16(%rsi), %eax
	movzbl	16(%r14), %ecx
	cmpb	%cl, %al
	je	.L16198
	cmpb	$32, %al
	je	.L16204
	cmpb	$32, %cl
	je	.L17312
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L17273
.L16203:
	movq	class_binding_level(%rip), %rax
	movq	-792(%rbp), %rsi
	testq	%rax, %rax
	movq	%rsi, current_binding_level(%rip)
	cmove	%rsi, %rax
	movq	%rax, -792(%rbp)
	cmpb	$32, 16(%r14)
	jne	.L14930
	movq	global_binding_level(%rip), %rcx
	xorl	%esi, %esi
	movq	56(%r14), %rdi
	cmpq	%rcx, %rax
	je	.L17059
.L16469:
	movq	-792(%rbp), %r11
	movq	32(%r11), %rdx
	testq	%rdx, %rdx
	je	.L17061
.L16468:
	cmpq	%rdi, 24(%rdx)
	leaq	32(%rdx), %rbx
	movq	(%rdx), %rdx
	cmove	%rbx, %rsi
	testq	%rdx, %rdx
	jne	.L16468
.L17061:
	movq	-792(%rbp), %r12
	movq	56(%r12), %r15
	cmpq	%rcx, %r15
	movq	%r15, -792(%rbp)
	jne	.L16469
.L17059:
	testq	%rsi, %rsi
	movq	8(%r14), %rax
	jne	.L16470
	movq	%rax, 8(%rdi)
	jmp	.L14930
.L16470:
	movq	%rax, (%rsi)
	jmp	.L14930
.L17273:
	movzbl	16(%r14), %ecx
.L16204:
	cmpb	$32, %cl
	je	.L17312
.L16212:
	movzbl	53(%r14), %edx
	testb	$1, %dl
	je	.L16350
	movq	-752(%rbp), %r12
	movq	40(%r12), %rax
	testq	%rax, %rax
	je	.L16350
	testb	$1, 53(%rax)
	jne	.L16351
	testb	$8, 18(%rax)
	je	.L16350
.L16351:
	andb	$8, %dl
	je	.L17780
.L16350:
	movl	flag_traditional(%rip), %r8d
	testl	%r8d, %r8d
	je	.L17281
	testb	$1, 53(%r14)
	je	.L17281
	xorl	%r12d, %r12d
	movq	global_binding_level(%rip), %r10
	cmpq	%r10, current_binding_level(%rip)
	je	.L16354
	movq	-752(%rbp), %r9
	movq	48(%r9), %r13
	testq	%r13, %r13
	movq	%r13, %rcx
	jne	.L16355
.L16354:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L16356
	movq	-752(%rbp), %rsi
	movq	56(%rsi), %rcx
	testq	%rcx, %rcx
	jne	.L17124
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L16357
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L17781
.L16357:
	testq	%rcx, %rcx
	jne	.L17124
.L17125:
	movq	-752(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17124
	movq	-752(%rbp), %rbx
	movq	40(%rbx), %rcx
.L16355:
	testq	%rcx, %rcx
	je	.L17153
.L17124:
	cmpb	$32, 16(%rcx)
	je	.L16359
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L16359
	movq	-752(%rbp), %r11
	movq	8(%r11), %rax
	testq	%rax, %rax
	je	.L16367
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17423
	testl	%r12d, %r12d
	jle	.L17782
.L17423:
	movq	%rax, %rcx
.L16359:
	testq	%rcx, %rcx
	jne	.L17281
.L17153:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -784(%rbp)
.L16353:
	cmpq	%rax, -784(%rbp)
	je	.L17783
	movq	current_binding_level(%rip), %rbx
	movq	-752(%rbp), %rsi
	cmpq	%rax, %rbx
	movq	48(%rsi), %r13
	movq	40(%rsi), %r12
	movq	%rsi, %rdi
	je	.L17784
.L17424:
	movq	16(%rbx), %rdx
	movq	%r13, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%rbx)
.L16398:
	movq	-752(%rbp), %rcx
	testq	%r13, %r13
	movq	%r14, 48(%rcx)
	je	.L17785
.L16409:
	movq	96(%r14), %rax
	testq	%rax, %rax
	jne	.L16411
	testq	%r13, %r13
	je	.L16412
	testb	$1, 53(%r14)
	jne	.L16412
	cmpb	$34, 16(%r13)
	je	.L17786
.L16412:
	movl	warn_shadow(%rip), %edi
	testl	%edi, %edi
	je	.L16411
	testb	$1, 53(%r14)
	jne	.L16411
	movl	32(%r14), %r15d
	testl	%r15d, %r15d
	je	.L16411
	testq	%rax, %rax
	jne	.L16411
	xorl	%edi, %edi
	testq	%r13, %r13
	je	.L16417
	cmpb	$34, 16(%r13)
	je	.L17787
.L16417:
	movq	-752(%rbp), %rdx
	cmpq	$0, 56(%rdx)
	je	.L16419
	movl	$.LC41, %edi
.L16418:
	testq	%rdi, %rdi
	jne	.L17788
.L16411:
	testq	%r13, %r13
	je	.L17282
	movq	-784(%rbp), %r9
	movq	-752(%rbp), %rdi
	movq	%r13, %rsi
	xorl	%eax, %eax
	movq	16(%r9), %rdx
	call	tree_cons
	movq	-784(%rbp), %r13
	movq	%rax, 16(%r13)
.L17282:
	movzbl	16(%r14), %ecx
.L16396:
	leal	-128(%rcx), %esi
	cmpb	$1, %sil
	jbe	.L16184
	movq	8(%r14), %rdx
	cmpq	$0, 32(%rdx)
	jne	.L16184
	cmpb	$18, 16(%rdx)
	je	.L17789
.L16428:
	testb	$64, 46(%rdx)
	je	.L16184
.L16427:
	movq	-784(%rbp), %rcx
	movzwl	64(%rcx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rcx)
	je	.L17790
.L17283:
	movzbl	16(%r14), %ecx
.L16184:
	cmpb	$32, %cl
	je	.L17791
.L16430:
	movq	-784(%rbp), %r13
	cmpq	global_binding_level(%rip), %r13
	movq	(%r13), %r9
	movq	%r9, (%r14)
	movq	%r14, (%r13)
	jne	.L16203
	testb	$4, 17(%r14)
	jne	.L16203
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L16203
.L17791:
	cmpq	$0, -752(%rbp)
	je	.L16430
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L16431
	cmpq	class_binding_level(%rip), %rax
	je	.L16432
	movq	-752(%rbp), %rbx
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L16436
	cmpb	$32, 16(%rax)
	je	.L16434
.L16436:
	cmpq	$0, current_class_type(%rip)
	je	.L16431
	movq	-752(%rbp), %r15
	movq	56(%r15), %rax
	testq	%rax, %rax
	je	.L16431
	cmpb	$32, 16(%rax)
	je	.L16434
.L16431:
	movq	-752(%rbp), %rsi
	movq	40(%rsi), %rax
	testq	%rax, %rax
	je	.L16435
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L16434
	cmpb	$-127, %dl
	je	.L17792
.L16435:
	movq	current_class_name(%rip), %r13
	testq	%r13, %r13
	je	.L16430
	movq	72(%r14), %rbx
	testq	%rbx, %rbx
	je	.L17793
.L16442:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L16446
	cmpq	class_binding_level(%rip), %rax
	je	.L16447
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L16451
	cmpb	$32, 16(%rax)
	je	.L16449
.L16451:
	cmpq	$0, current_class_type(%rip)
	je	.L16446
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L16446
	cmpb	$32, 16(%rax)
	je	.L16449
.L16446:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L16430
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L16449
	cmpb	$-127, %dl
	jne	.L16430
	movq	$0, 8(%rbx)
	jmp	.L16430
.L16449:
	movq	8(%rax), %r10
	movq	%r10, 8(%rbx)
	jmp	.L16430
.L16447:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L16451
.L17793:
	cmpb	$32, 16(%r14)
	movl	$136, %esi
	movq	56(%r14), %r12
	sete	%r8b
	movq	8(%r14), %r15
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r13)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%r13), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%r13), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r14)
	movq	%r15, 8(%rax)
	movq	72(%r14), %rbx
	jmp	.L16442
.L17792:
	movq	$0, 8(%rsi)
	jmp	.L16435
.L16434:
	movq	8(%rax), %rdi
	movq	-752(%rbp), %r11
	movq	%rdi, 8(%r11)
	jmp	.L16435
.L16432:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L16436
.L17790:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L17283
.L17789:
	movq	8(%rdx), %r12
	testb	$64, 46(%r12)
	jne	.L16427
	jmp	.L16428
.L17788:
	movq	-752(%rbp), %r10
	movq	32(%r10), %rsi
.L17425:
	xorl	%eax, %eax
	call	warning
	jmp	.L16411
.L16419:
	testq	%r13, %r13
	je	.L16421
	movl	$.LC42, %edi
	jmp	.L16418
.L16421:
	testq	%r12, %r12
	movl	$.LC43, %r8d
	cmovne	%r8, %rdi
	jmp	.L16418
.L17787:
	movl	$.LC40, %edi
	jmp	.L16418
.L17786:
	cmpb	$34, 16(%r14)
	je	.L16412
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r12
	movq	56(%r12), %rax
	je	.L16413
	movq	56(%rax), %rax
.L16413:
	movzbl	66(%rax), %ebx
	andl	$15, %ebx
	decl	%ebx
	jne	.L16411
	movq	-752(%rbp), %r11
	movl	$.LC40, %edi
	movq	32(%r11), %rsi
	jmp	.L17425
.L17785:
	movzbl	53(%r14), %r9d
	andb	$9, %r9b
	decb	%r9b
	je	.L17794
.L16401:
	testq	%r13, %r13
	jne	.L16409
	testq	%r12, %r12
	jne	.L16409
	testb	$1, 53(%r14)
	je	.L16409
	testb	$8, 18(%r14)
	je	.L16409
	movq	-752(%rbp), %rax
	orb	$8, 18(%rax)
	jmp	.L16409
.L17794:
	testq	%r12, %r12
	je	.L16401
	cmpb	$29, 16(%r14)
	jne	.L16401
	cmpb	$29, 16(%r12)
	jne	.L16401
	movq	8(%r14), %rdi
	movq	8(%r12), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L17795
	movzbl	53(%r12), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L16404
	movzbl	53(%r14), %esi
	leal	0(,%rax,8), %ebx
	leaq	88(%r14), %rdx
	andb	$-9, %sil
	orb	%bl, %sil
	movb	%sil, 53(%r14)
	cmpq	%r12, current_function_decl(%rip)
	je	.L16405
	movq	88(%r12), %rax
.L16406:
	movq	136(%r12), %rcx
	movq	72(%r12), %r10
	movq	%rax, (%rdx)
	movq	80(%r12), %r8
	movzbl	17(%r14), %edi
	movq	%rcx, 136(%r14)
	movq	%r10, 72(%r14)
	movq	%r8, 80(%r14)
	movzbl	17(%r12), %r15d
	movq	%r12, 96(%r14)
	andb	$127, %dil
	shrb	$7, %r15b
	movzbl	%r15b, %edx
	movl	%edx, %r11d
	salb	$7, %r11b
	orb	%r11b, %dil
	movb	%dil, 17(%r14)
	movzbl	53(%r12), %ecx
.L16404:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L16407
	movzbl	53(%r14), %r9d
	salb	$4, %al
	andb	$-17, %r9b
	orb	%al, %r9b
	movb	%r9b, 53(%r14)
	movl	128(%r12), %eax
	movl	%eax, 128(%r14)
.L16407:
	movq	8(%r12), %rdx
	cmpq	$0, 24(%rdx)
	je	.L16401
	cmpq	$0, 88(%r12)
	je	.L16401
	movq	8(%r14), %rsi
	cmpq	$0, 24(%rsi)
	jne	.L16401
	movq	%rdx, 8(%r14)
	jmp	.L16401
.L16405:
	xorl	%eax, %eax
	jmp	.L16406
.L17795:
	movq	%r14, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L16401
.L17784:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L16398
	movq	-752(%rbp), %rdi
	jmp	.L17424
.L17783:
	movzwl	16(%r14), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L17796
.L16373:
	movq	-752(%rbp), %rsi
	cmpq	$0, 40(%rsi)
	jne	.L16374
	testb	$8, 18(%r14)
	je	.L16374
	orb	$8, 18(%rsi)
.L16374:
	movzbl	16(%r14), %ecx
	cmpb	$32, %cl
	je	.L17797
.L16376:
	movq	-752(%rbp), %rax
	movq	%r14, 40(%rax)
	movzbl	16(%r14), %ecx
.L16375:
	movq	-752(%rbp), %rbx
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L16387
	movq	8(%rax), %rdx
	testq	%rdx, %rdx
	je	.L16377
	testb	$1, 18(%rdx)
	je	.L16377
	orb	$1, 18(%r14)
	movq	72(%rbx), %rax
.L16377:
	testq	%rax, %rax
	je	.L16387
	movq	8(%rax), %rdx
	testq	%rdx, %rdx
	je	.L16382
	testb	$8, 17(%rdx)
	je	.L16382
	orb	$8, 17(%r14)
	movq	-752(%rbp), %r8
	movq	72(%r8), %rax
.L16382:
	testq	%rax, %rax
	je	.L16387
	cmpq	$0, 8(%rax)
	je	.L16387
	cmpb	$29, %cl
	je	.L17798
.L16390:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r14), %ecx
.L16387:
	movq	-752(%rbp), %rbx
	testb	$8, 18(%rbx)
	je	.L16396
	cmpb	$32, %cl
	je	.L16396
	testb	$8, 18(%r14)
	jne	.L16396
	testb	$1, 53(%r14)
	jne	.L16396
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L16392
	cmpq	$0, 8(%rax)
	jne	.L17799
.L16392:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L17465:
	xorl	%eax, %eax
	call	warning
	jmp	.L17282
.L17799:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L17465
.L17798:
	movq	8(%r14), %r13
	movq	integer_type_node(%rip), %r10
	cmpq	%r10, 8(%r13)
	jne	.L16390
	jmp	.L16387
.L17797:
	cmpq	$0, -760(%rbp)
	je	.L16376
	movq	-760(%rbp), %r15
	cmpb	$32, 16(%r15)
	jne	.L16375
	jmp	.L16376
.L17796:
	testb	$8, 54(%r14)
	jne	.L16373
	andb	$-9, 18(%r14)
	jmp	.L16373
.L17281:
	movq	global_binding_level(%rip), %rax
	jmp	.L16353
.L17782:
	testl	%edx, %edx
	jg	.L17423
	testl	%r12d, %r12d
	je	.L16359
	movq	-752(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17423
.L16367:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L16359
.L17781:
	xorl	%ecx, %ecx
	movq	-752(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L16359
	testq	%rax, %rax
	je	.L17125
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L16357
.L16356:
	movq	-752(%rbp), %rdi
	movq	40(%rdi), %rcx
	jmp	.L16355
.L17780:
	movq	8(%rax), %rsi
	movq	8(%r14), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L16350
	movq	%r14, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	-752(%rbp), %r15
	movq	40(%r15), %rdi
	call	warning_with_decl
	jmp	.L16350
.L17312:
	movq	8(%r14), %rcx
	movq	80(%rcx), %rbx
	testq	%rbx, %rbx
	movq	%rbx, -776(%rbp)
	je	.L16214
	movzbl	16(%rbx), %edx
	cmpb	$32, %dl
	je	.L16213
.L16214:
	movq	global_binding_level(%rip), %r12
	movq	%r14, -776(%rbp)
	cmpq	%r12, current_binding_level(%rip)
	jne	.L17274
	movq	%r14, 80(%rcx)
.L17274:
	movzbl	16(%r14), %edx
.L16217:
	cmpb	$32, %dl
	movl	$140, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	-776(%rbp), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L16341
	cmpq	$0, 72(%rsi)
	je	.L17800
.L16341:
	movq	8(%r14), %r13
	movq	80(%r13), %rax
	testq	%rax, %rax
	je	.L16212
	cmpq	$0, 56(%rax)
	je	.L16212
	movq	current_binding_level(%rip), %rbx
	movq	56(%r14), %r12
	cmpq	global_binding_level(%rip), %rbx
	je	.L17801
.L17422:
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L16347:
	movq	%r13, 8(%r12)
	jmp	.L16212
.L17801:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L16347
	jmp	.L17422
.L17800:
	cmpb	$32, 16(%r14)
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	sete	%al
	movq	8(%r14), %r13
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L16342
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r14)
	movq	%r13, 8(%rax)
	jmp	.L16341
.L16342:
	movq	%rbx, 72(%r14)
	jmp	.L16341
.L16213:
	movq	current_binding_level(%rip), %rsi
	movq	-776(%rbp), %rdi
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%rdi), %r13
	jne	.L16217
	movq	32(%r13), %rax
	cmpb	$36, (%rax)
	jne	.L16217
	cmpb	$95, 1(%rax)
	jne	.L16217
	movq	class_binding_level(%rip), %rax
	movq	%r14, 80(%rcx)
	movq	8(%r14), %r9
	testq	%rax, %rax
	movq	%rax, -768(%rbp)
	movq	%r9, -336(%rbp)
	jne	.L16221
	testb	$-128, 66(%rsi)
	movq	%rsi, -768(%rbp)
	je	.L16221
.L16225:
	movq	-768(%rbp), %rsi
	movq	56(%rsi), %r15
	testb	$-128, 66(%r15)
	movq	%r15, -768(%rbp)
	jne	.L16225
.L16221:
	movq	-768(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L17802
	movq	-768(%rbp), %r10
	movq	-336(%rbp), %rsi
	movq	%r13, %rdi
	xorl	%eax, %eax
	movq	8(%r10), %rdx
	call	saveable_tree_cons
	movq	-768(%rbp), %r8
	movq	%rax, 8(%r8)
.L16227:
	testq	%r13, %r13
	je	.L16228
	movq	-336(%rbp), %rsi
	cmpq	$0, 80(%rsi)
	jne	.L16229
	movq	%r13, 80(%rsi)
.L16229:
	movq	-336(%rbp), %rax
	cmpq	%rax, 8(%r13)
	je	.L16230
	cmpb	$21, 16(%rax)
	je	.L17803
.L16231:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L16233
	cmpq	$0, 32(%rax)
	je	.L16232
.L16233:
	movq	lang_name_cplusplus(%rip), %rdx
	cmpq	%rdx, current_lang_name(%rip)
	je	.L17804
.L16234:
	xorl	%ecx, %ecx
.L16269:
	testq	%rcx, %rcx
	jne	.L16270
.L17152:
	movq	-336(%rbp), %rdx
	movl	$32, %edi
	movq	%r13, %rsi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-336(%rbp), %rdi
	movq	%rax, %r15
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	current_binding_level(%rip), %rbx
	movl	$0, 32(%r15)
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, 112(%r15)
	je	.L17805
.L17419:
	movq	8(%r13), %rsi
	movq	32(%rbx), %rdx
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L16272:
	movq	-336(%rbp), %rbx
	movq	%rbx, 8(%r13)
.L16275:
	movq	32(%r13), %rax
	cmpb	$36, (%rax)
	je	.L17806
.L16277:
	movq	-336(%rbp), %r10
	movq	80(%r10), %rdx
	testq	%rdx, %rdx
	je	.L16308
	cmpb	$32, 16(%rdx)
	je	.L17807
.L16278:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L16297
	movq	56(%r15), %r12
	testq	%r12, %r12
	je	.L17278
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L16299
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L16299:
	movq	decl_obstack+24(%rip), %rdx
	movq	%r15, 56(%r12)
	leaq	8(%rdx), %rsi
	cmpq	decl_obstack+32(%rip), %rsi
	ja	.L17808
.L16301:
	movq	%rdx, %rcx
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%r15, (%rcx)
	cmpb	$32, 16(%r15)
	je	.L17809
.L17278:
	movq	32(%r13), %rax
.L16308:
	cmpb	$36, (%rax)
	je	.L17810
.L16322:
	movq	current_class_type(%rip), %rdx
	movq	-336(%rbp), %r12
	testq	%rdx, %rdx
	movq	%r15, 80(%r12)
	jne	.L16325
	cmpq	$0, current_function_decl(%rip)
	je	.L16324
.L16325:
	movq	lang_name_cplusplus(%rip), %rcx
	cmpq	%rcx, current_lang_name(%rip)
	je	.L16323
.L16324:
	movq	%r13, 72(%r15)
.L16230:
	movq	-768(%rbp), %rcx
	movzbl	66(%rcx), %r15d
	andl	$15, %r15d
	cmpl	$2, %r15d
	je	.L17811
.L16228:
	movq	-336(%rbp), %rsi
	movq	80(%rsi), %rax
	cmpb	$32, 16(%rax)
	je	.L17812
	movq	-336(%rbp), %rdx
	xorl	%esi, %esi
	movl	$32, %edi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-336(%rbp), %rsi
	movq	%rax, (%rsi)
	movq	-776(%rbp), %rdi
	movzbl	16(%rdi), %edx
	jmp	.L16217
.L17812:
	movq	%rax, (%rsi)
	movq	-776(%rbp), %rbx
	movzbl	16(%rbx), %edx
	jmp	.L16217
.L17811:
	movq	-336(%rbp), %r10
	orb	$64, 18(%r10)
	movq	80(%r10), %r8
	movq	current_class_type(%rip), %rax
	movq	%r8, 56(%r13)
	cmpq	$0, 32(%rax)
	jne	.L16228
	movq	144(%rax), %r13
	movq	8(%rcx), %r9
	movq	%r9, 72(%r13)
	jmp	.L16228
.L16323:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L17813
	cmpq	$0, 32(%rdx)
	jne	.L16230
	movq	80(%rdx), %rdi
	cmpb	$32, 16(%r15)
	movl	$136, %esi
	sete	%dl
	xorl	%eax, %eax
	movq	72(%rdi), %rbx
	movzbl	%dl, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L16333
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r13), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r13), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-336(%rbp), %rsi
	movq	%rsi, 8(%rax)
.L16335:
	movq	current_class_type(%rip), %r11
	movq	152(%r15), %rcx
	movq	%r11, 64(%r15)
	movq	%r11, 16(%rcx)
	jmp	.L16230
.L16333:
	movq	%r13, 72(%r15)
	jmp	.L16335
.L17813:
	cmpb	$32, 16(%r15)
	movq	112(%rax), %rbx
	movl	$136, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L16328
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r13)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movq	32(%r13), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r13), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-336(%rbp), %r8
	movq	%r8, 8(%rax)
.L16330:
	movq	current_function_decl(%rip), %rbx
	movq	%rbx, 64(%r15)
	jmp	.L16230
.L16328:
	movq	%r13, 72(%r15)
	jmp	.L16330
.L17810:
	cmpb	$95, 1(%rax)
	jne	.L16322
	orb	$64, 53(%r15)
	jmp	.L16322
.L17809:
	cmpq	$0, 72(%r15)
	jne	.L17278
	movq	current_class_name(%rip), %rbx
	movq	8(%r15), %r11
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%r11, -344(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L16318
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-344(%rbp), %rdx
.L17464:
	movq	%rdx, 8(%rax)
	jmp	.L17278
.L16318:
	movq	%r12, 72(%r15)
	jmp	.L17278
.L17808:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L16301
.L16297:
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, %r15
	jmp	.L17278
.L17807:
	movq	global_binding_level(%rip), %rdi
	movl	$1, %r12d
	cmpq	%rdi, current_binding_level(%rip)
	je	.L16279
	movq	48(%r13), %rdx
	testq	%rdx, %rdx
	movq	%rdx, %rcx
	jne	.L16280
.L16279:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L16281
	movq	56(%r13), %rcx
	testq	%rcx, %rcx
	jne	.L17122
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L16282
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L17814
.L16282:
	testq	%rcx, %rcx
	jne	.L17122
.L17123:
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17122
.L16281:
	movq	40(%r13), %rcx
.L16280:
	testq	%rcx, %rcx
	je	.L16284
.L17122:
	cmpb	$32, 16(%rcx)
	je	.L16284
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L16284
	movq	8(%r13), %rax
	testq	%rax, %rax
	je	.L16292
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17420
	testl	%r12d, %r12d
	jle	.L17815
.L17420:
	movq	%rax, %rcx
.L16284:
	movq	-336(%rbp), %rax
	cmpq	80(%rax), %rcx
	jne	.L16278
	jmp	.L17278
.L17815:
	testl	%edx, %edx
	jg	.L17420
	testl	%r12d, %r12d
	je	.L16284
	movq	%rax, %rdx
	movq	%r13, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17420
.L16292:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L16284
.L17814:
	xorl	%ecx, %ecx
	movq	%r13, %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L16284
	testq	%rax, %rax
	je	.L17123
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L16282
.L17806:
	cmpb	$95, 1(%rax)
	jne	.L16277
	jmp	.L16308
.L17805:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L16272
	jmp	.L17419
.L16270:
	movq	80(%rcx), %r15
	jmp	.L16275
.L17804:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L16236
	movq	80(%rax), %rbx
.L16236:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L16269
.L16268:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L16245
	cmpl	$32, %eax
	je	.L17816
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L16239:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L16269
	jmp	.L16268
.L17816:
	movq	8(%rbx), %r15
	movq	-336(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%r15), %r9
	movq	72(%r9), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L17301
	movq	64(%rbx), %rbx
	jmp	.L16239
.L17301:
	movq	32(%rax), %rcx
	jmp	.L16269
.L16245:
	movq	-336(%rbp), %rax
	movq	80(%rax), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L16234
	movq	global_binding_level(%rip), %rcx
	movl	$1, %r15d
	cmpq	%rcx, current_binding_level(%rip)
	je	.L16248
	movq	48(%rbx), %r11
	testq	%r11, %r11
	movq	%r11, %rcx
	jne	.L16249
.L16248:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L16250
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L17120
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L16251
	movq	144(%rdi), %r8
	testb	$1, 3(%r8)
	jne	.L17817
.L16251:
	testq	%rcx, %rcx
	jne	.L17120
.L17121:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17120
.L16250:
	movq	40(%rbx), %rcx
.L16249:
	testq	%rcx, %rcx
	je	.L17152
.L17120:
	cmpb	$32, 16(%rcx)
	je	.L16269
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L16269
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L16261
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17418
	testl	%r15d, %r15d
	jle	.L17818
.L17418:
	movq	%rax, %rcx
	jmp	.L16269
.L17818:
	testl	%edx, %edx
	jg	.L17418
	testl	%r15d, %r15d
	je	.L16269
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17418
.L16261:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L16269
	jmp	.L17418
.L17817:
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %r15d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L16269
	testq	%rax, %rax
	je	.L17121
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L16251
.L16232:
	movq	-336(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r13, %rsi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, %r15
	je	.L17819
.L17421:
	movq	8(%r13), %rsi
	movq	32(%rbx), %rdx
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L16310:
	movq	-336(%rbp), %rbx
	movq	%rbx, 8(%r13)
	movq	56(%r15), %r12
	testq	%r12, %r12
	je	.L17278
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L16314
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L16314:
	movq	decl_obstack+24(%rip), %rdx
	movq	%r15, 56(%r12)
	leaq	8(%rdx), %rdi
	cmpq	decl_obstack+32(%rip), %rdi
	ja	.L17820
.L16316:
	movq	%rdx, %r9
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%r15, (%r9)
	cmpb	$32, 16(%r15)
	jne	.L17278
	cmpq	$0, 72(%r15)
	jne	.L17278
	movq	current_class_name(%rip), %rbx
	movq	8(%r15), %rdx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%rdx, -352(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L16318
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-352(%rbp), %rdx
	jmp	.L17464
.L17820:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L16316
.L17819:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L16310
	jmp	.L17421
.L17803:
	cmpq	$0, class_binding_level(%rip)
	je	.L16231
	movq	144(%rax), %r12
	testb	$16, 3(%r12)
	jne	.L16230
	jmp	.L16231
.L17802:
	movq	-768(%rbp), %r11
	movq	-336(%rbp), %rsi
	movq	%r13, %rdi
	xorl	%eax, %eax
	movq	8(%r11), %rdx
	call	perm_tree_cons
	movq	-768(%rbp), %rcx
	movq	%rax, 8(%rcx)
	jmp	.L16227
.L16198:
	movq	-760(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L17273
	movl	flag_traditional(%rip), %r11d
	testl	%r11d, %r11d
	jne	.L16203
	movq	-752(%rbp), %r8
	testb	$8, 18(%r8)
	je	.L16203
	testb	$8, 18(%r14)
	jne	.L16203
	testb	$9, 53(%r14)
	jne	.L16203
	cmpq	%r14, current_function_decl(%rip)
	je	.L17821
.L16207:
	movq	-752(%rbp), %rdx
	movq	72(%rdx), %rax
	testq	%rax, %rax
	je	.L16208
	cmpq	$0, 8(%rax)
	jne	.L17822
.L16208:
	movq	-760(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L17417:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-760(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%r12d, %esi
	movq	%rax, %rcx
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L16203
.L17822:
	movq	-760(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L17417
.L17821:
	movq	-760(%rbp), %r10
	movq	%r10, current_function_decl(%rip)
	jmp	.L16207
.L17779:
	cmpq	$0, 64(%rcx)
	jne	.L16196
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L16196
.L17778:
	movq	%r14, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -760(%rbp)
	call	error_with_decl
	jmp	.L16194
.L16187:
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.L16189
.L16193:
	movq	-752(%rbp), %rsi
	cmpq	%rsi, 56(%rdi)
	je	.L16189
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L16193
.L16189:
	movq	%rdi, -760(%rbp)
	jmp	.L16186
.L17777:
	movq	-752(%rbp), %r15
	movq	40(%r15), %r13
	movq	%r13, -760(%rbp)
	jmp	.L16186
.L17776:
	movq	56(%r14), %r9
	movq	%r9, -752(%rbp)
	jmp	.L16183
.L17775:
	testb	$32, 53(%r14)
	jne	.L16181
	jmp	.L16182
.L17269:
	movzbl	16(%r14), %ecx
	jmp	.L16181
.L16173:
	testq	%rax, %rax
	je	.L16171
	testq	%rcx, %rcx
	je	.L16179
	movq	(%rax), %r11
	movq	%r11, (%rcx)
	jmp	.L16171
.L16179:
	movq	144(%rdx), %r8
	movq	(%rax), %r10
	movq	%r10, 72(%r8)
	jmp	.L16171
.L17774:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L16168
	jmp	.L17416
.L16165:
	movq	(%r12), %r13
	movq	%r13, 8(%rbx)
	jmp	.L16166
	.p2align 6,,7
.L17773:
	movq	8(%rbx), %r12
	testq	%r12, %r12
	je	.L16148
.L16155:
	movq	-1072(%rbp), %rdi
	cmpq	%rdi, 32(%r12)
	je	.L16154
	movq	%r12, %r13
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L16155
	jmp	.L16148
.L17772:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L16140
	jmp	.L17415
	.p2align 6,,7
.L17771:
	movq	global_binding_level(%rip), %rdx
	movq	-1072(%rbp), %rdi
	xorl	%eax, %eax
	movq	8(%rdx), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L14930
	jmp	.L16137
.L16129:
	movl	$.LC242, %edi
	xorl	%eax, %eax
	call	pedwarn
	jmp	.L16128
	.p2align 6,,7
.L16076:
	movq	-904(%rbp), %rdi
	movq	40(%rdi), %r12
	cmpb	$85, 16(%r12)
	je	.L17823
.L16077:
	movq	-904(%rbp), %rcx
	movl	24(%rcx), %eax
	testl	%eax, %eax
	je	.L16079
	movl	-1004(%rbp), %esi
	testl	%esi, %esi
	je	.L16080
	cmpl	$1, %eax
	jle	.L16079
.L16080:
	cmpl	current_class_depth(%rip), %eax
	je	.L17824
	movl	$16, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L16079:
	movq	-904(%rbp), %rax
	movq	32(%rax), %rbx
	testq	%rbx, %rbx
	je	.L16095
	testq	%r12, %r12
	movq	%rbx, -1000(%rbp)
	je	.L16086
	movzbl	16(%r12), %eax
	cmpb	$1, %al
	je	.L17825
	cmpb	$126, %al
	je	.L17826
	cmpb	$124, %al
	je	.L17827
.L16086:
	movq	-904(%rbp), %rdx
	movq	40(%rdx), %rcx
	testq	%rcx, %rcx
	movq	%rcx, -904(%rbp)
	je	.L16122
	cmpb	$50, 16(%rcx)
	je	.L14930
.L16122:
	movq	-1072(%rbp), %r15
	cmpb	$23, 16(%r15)
	je	.L17828
	movq	-1072(%rbp), %rsi
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	build_offset_type
	jmp	.L17426
.L17828:
	movl	-1060(%rbp), %esi
	movl	-1056(%rbp), %edx
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	build_type_variant
	movq	-1072(%rbp), %rbx
	movq	%rax, %rdi
	xorl	%eax, %eax
	movq	8(%rbx), %rsi
	movq	24(%rbx), %rdx
	call	build_cplus_method_type
	jmp	.L17426
.L17827:
	movl	$17, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L14930
.L17826:
	movq	%r12, %rdi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	grokoptypename
	movl	$157, %esi
	cmpb	$50, 16(%rax)
	movq	%rax, %rbx
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	-904(%rbp), %r12
	movq	32(%rbx), %r9
	movq	8(%r9), %r11
	movq	%r11, -1072(%rbp)
	movq	%r9, 40(%r12)
	movq	%r12, 32(%rbx)
	jmp	.L17428
.L17825:
	movq	112(%rbx), %rdx
	movq	current_class_type(%rip), %rax
	cmpq	%rax, %rdx
	je	.L16089
	movl	-1004(%rbp), %r10d
	testl	%r10d, %r10d
	je	.L16088
.L16089:
	movq	-1072(%rbp), %r9
	cmpb	$23, 16(%r9)
	je	.L17829
	cmpq	%rax, %rdx
	jne	.L17298
	movl	extra_warnings(%rip), %edx
	testl	%edx, %edx
	jne	.L17830
.L16093:
	movq	-1000(%rbp), %rdi
.L17463:
	movq	-1072(%rbp), %rsi
	xorl	%eax, %eax
	call	build_offset_type
.L17414:
	movq	%rax, -1072(%rbp)
.L16095:
	movq	%r12, -904(%rbp)
	jmp	.L14930
.L17830:
	movq	-1000(%rbp), %r13
	movq	-480(%rbp), %rdx
	movl	$.LC236, %edi
	xorl	%eax, %eax
	movq	80(%r13), %r8
	movq	56(%r8), %r15
	movq	32(%r15), %rsi
	call	warning
	jmp	.L16093
.L17298:
	movq	-1000(%rbp), %rdi
	movq	80(%rdi), %rdx
	movl	$.LC235, %edi
	movq	56(%rdx), %rcx
	movq	-480(%rbp), %rdx
	movq	32(%rcx), %rsi
	jmp	.L17471
.L17829:
	movq	-1000(%rbp), %rdi
	movl	-1060(%rbp), %esi
	xorl	%eax, %eax
	movl	-1056(%rbp), %edx
	call	build_type_variant
	movq	-1072(%rbp), %r11
	movq	%rax, %rdi
	movq	8(%r11), %rsi
	movq	24(%r11), %rdx
.L17462:
	xorl	%eax, %eax
	call	build_cplus_method_type
	jmp	.L17414
	.p2align 6,,7
.L16088:
	movq	-1000(%rbp), %r14
	cmpq	$0, 32(%r14)
	jne	.L16097
	testl	$524288, -1064(%rbp)
	je	.L16096
.L16097:
	cmpl	$-1, -572(%rbp)
	je	.L17831
.L16098:
	movq	-1072(%rbp), %rdx
	cmpb	$23, 16(%rdx)
	je	.L17832
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L16109
	cmpq	%rax, 112(%rbx)
	jne	.L17300
	movl	extra_warnings(%rip), %r15d
	testl	%r15d, %r15d
	jne	.L17833
.L16109:
	movq	%rbx, %rdi
	jmp	.L17463
.L17833:
	movq	80(%rbx), %r13
	movq	-480(%rbp), %rdx
	movl	$.LC236, %edi
	xorl	%eax, %eax
	movq	56(%r13), %r8
	movq	32(%r8), %rsi
	call	warning
	jmp	.L16109
.L17300:
	movq	80(%rbx), %r8
	movq	-480(%rbp), %rdx
	movl	$.LC235, %edi
	xorl	%eax, %eax
	movq	56(%r8), %r14
	movq	32(%r14), %rsi
	call	error
	jmp	.L17446
.L17832:
	movl	-1060(%rbp), %esi
	movl	-1056(%rbp), %edx
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	build_type_variant
	movq	-1072(%rbp), %rbx
	movq	%rax, %rdi
	movq	8(%rbx), %rsi
	movq	24(%rbx), %rdx
	jmp	.L17462
.L17831:
	cmpl	$3, -484(%rbp)
	jne	.L16098
	movl	-376(%rbp), %edi
	testl	%edi, %edi
	jne	.L16098
	movq	-1000(%rbp), %rdi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	movq	%r12, %rsi
	call	lookup_field
	testq	%rax, %rax
	jne	.L17299
	movq	-1000(%rbp), %rcx
	xorl	%edx, %edx
	xorl	%eax, %eax
	movq	%r12, %rsi
	movq	120(%rcx), %rdi
	call	lookup_fnfields
	testq	%rax, %rax
	jne	.L17834
	cmpl	$3, -448(%rbp)
	je	.L17835
	movq	-1000(%rbp), %rax
	movq	32(%r12), %rsi
	movl	$.LC239, %edi
	movq	80(%rax), %r11
	xorl	%eax, %eax
	movq	56(%r11), %r9
	movq	32(%r9), %rdx
	call	error
	jmp	.L16098
.L17835:
	movq	-1000(%rbp), %rdi
	movl	$.LC238, %esi
	xorl	%eax, %eax
	call	error_with_aggr_type
	jmp	.L16098
.L17834:
	cmpl	$1, -448(%rbp)
	je	.L17836
	movq	-1000(%rbp), %r10
	movq	96(%r10), %rcx
	testq	%rcx, %rcx
	je	.L16102
	movq	32(%rax), %rdx
	cmpq	32(%rcx), %rdx
	je	.L17837
.L16102:
	movl	$124, %edi
	movq	%rbx, %rsi
.L17450:
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	build_nt
	movq	-1072(%rbp), %rdx
	movl	$36, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_lang_field_decl
	movq	-440(%rbp), %r11
	movq	%rax, -1072(%rbp)
	movq	%r11, 88(%rax)
	jmp	.L13275
.L17837:
	movq	152(%rdx), %rsi
	movq	56(%rsi), %r13
	testq	%r13, %r13
	je	.L17838
.L16104:
	xorl	%edi, %edi
	movq	%r13, %rsi
	xorl	%eax, %eax
	call	build_tree_list
	jmp	.L16102
.L17838:
	movq	32(%r12), %rsi
	movl	$.LC237, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L16104
.L17836:
	movq	32(%rax), %rax
	jmp	.L16102
.L17299:
	movl	$124, %edi
	movq	-1000(%rbp), %rsi
	jmp	.L17450
.L16096:
	movq	-1000(%rbp), %rdi
	xorl	%eax, %eax
	call	uses_template_parms
	testl	%eax, %eax
	je	.L16114
	movq	-1072(%rbp), %r14
	cmpb	$23, 16(%r14)
	jne	.L16095
	movq	-1000(%rbp), %rdi
	movl	-1060(%rbp), %esi
	xorl	%eax, %eax
	movl	-1056(%rbp), %edx
	call	build_type_variant
	movq	-1072(%rbp), %r10
	movq	%rax, %rdi
	movq	8(%r10), %rsi
	movq	24(%r10), %rdx
	jmp	.L17462
.L16114:
	movq	-1000(%rbp), %rsi
	xorl	%eax, %eax
	movq	80(%rsi), %rdi
	movq	56(%rdi), %rcx
	movl	$.LC240, %edi
	movq	32(%rcx), %rsi
	call	sorry
	jmp	.L16095
	.p2align 6,,7
.L17824:
	movq	-904(%rbp), %rbx
	decl	%eax
	movl	$1, %edi
	movl	%eax, 24(%rbx)
	xorl	%eax, %eax
	call	popclass
	jmp	.L16079
.L17823:
	movq	32(%r12), %r12
	jmp	.L16077
	.p2align 6,,7
.L14942:
	movq	-1072(%rbp), %rbx
	movzbl	16(%rbx), %edx
	leal	-21(%rdx), %r9d
	cmpb	$1, %r9b
	ja	.L14945
	movq	144(%rbx), %r8
	testb	$64, 3(%r8)
	je	.L14944
.L14945:
	cmpb	$10, %dl
	je	.L14944
.L15285:
	movq	-904(%rbp), %rcx
	movq	-1072(%rbp), %rdi
	xorl	%r12d, %r12d
	movq	void_type_node(%rip), %r14
	movq	32(%rcx), %rax
	movq	40(%rcx), %rbx
	movq	%rax, -904(%rbp)
	cmpq	%r14, 112(%rdi)
	je	.L17839
.L15286:
	movq	-1072(%rbp), %r13
	cmpb	$23, 16(%r13)
	je	.L17840
	movq	error_mark_node(%rip), %rax
.L15287:
	movq	-1072(%rbp), %rsi
	cmpq	%rax, %rbx
	cmove	%rbx, %rsi
	cmpq	%rax, %rsi
	movq	%rsi, -1072(%rbp)
	je	.L14930
	testq	%rbx, %rbx
	jne	.L17841
.L15290:
	movl	-1060(%rbp), %ebx
	testl	%ebx, %ebx
	jne	.L15303
	movl	-1056(%rbp), %edi
	testl	%edi, %edi
	je	.L15302
.L15303:
	movq	-1072(%rbp), %rdi
	movl	-1060(%rbp), %esi
	xorl	%eax, %eax
	movl	-1056(%rbp), %edx
	call	build_type_variant
	movq	%rax, -1072(%rbp)
.L15302:
	movq	-1072(%rbp), %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	build_cplus_array_type
	movq	%rax, -1072(%rbp)
	jmp	.L17427
.L17841:
	xorl	%eax, %eax
	call	suspend_momentary
	movl	%eax, %r13d
	movzbl	16(%rbx), %eax
	cmpb	$102, %al
	je	.L17842
.L15291:
	cmpb	$-125, %al
	je	.L15293
	movq	8(%rbx), %r15
	movzbl	16(%r15), %eax
	cmpb	$7, %al
	je	.L15294
	cmpb	$10, %al
	je	.L15294
	movq	-480(%rbp), %rsi
	movl	$.LC208, %edi
	xorl	%eax, %eax
	call	error
	movq	integer_one_node(%rip), %rbx
.L15294:
	testb	$32, 17(%rbx)
	je	.L15295
	movzbq	16(%rbx), %rdx
	salq	$3, %rdx
	addq	tree_code_type(%rip), %rdx
	movq	(%rdx), %r12
	cmpb	$100, (%r12)
	je	.L17843
.L15295:
	movl	pedantic(%rip), %r10d
	testl	%r10d, %r10d
	jne	.L17844
.L15296:
	testb	$2, 17(%rbx)
	je	.L15297
	movq	integer_zero_node(%rip), %rcx
	movl	28(%rbx), %edx
	movl	28(%rcx), %eax
	cmpl	%eax, %edx
	jl	.L15299
	cmpl	%eax, %edx
	je	.L17845
.L15298:
	movq	integer_one_node(%rip), %rdx
	movl	$54, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	size_binop
.L17387:
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	build_index_type
	movl	%r13d, %edi
	movq	%rax, %r12
	xorl	%eax, %eax
	call	resume_momentary
	jmp	.L15290
.L17845:
	movl	24(%rcx), %eax
	cmpl	%eax, 24(%rbx)
	jae	.L15298
.L15299:
	movq	-480(%rbp), %rsi
	movl	$.LC210, %edi
	xorl	%eax, %eax
	call	error
	movq	integer_one_node(%rip), %rbx
	jmp	.L15298
.L15297:
	movl	pedantic(%rip), %r14d
	testl	%r14d, %r14d
	jne	.L17846
.L15293:
	movq	integer_one_node(%rip), %rdx
	movl	$54, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	build_binary_op
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	variable_size
	jmp	.L17387
.L17846:
	movq	-480(%rbp), %rsi
	movl	$.LC211, %edi
	xorl	%eax, %eax
	call	pedwarn
	jmp	.L15293
.L17844:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	integer_zerop
	testl	%eax, %eax
	je	.L15296
	movq	-480(%rbp), %rsi
	movl	$.LC209, %edi
	xorl	%eax, %eax
	call	pedwarn
	jmp	.L15296
.L17843:
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	decl_constant_value
	movq	%rax, %rbx
	jmp	.L15295
.L17842:
	movq	32(%rbx), %rsi
	movq	8(%rsi), %r8
	cmpq	%r8, 8(%rbx)
	jne	.L15291
	movq	%rsi, %rbx
	movzbl	16(%rsi), %eax
	jmp	.L15291
.L17840:
	movq	-480(%rbp), %rsi
	movl	$.LC207, %edi
	xorl	%eax, %eax
	call	error
	movq	error_mark_node(%rip), %r9
	movq	%r9, %rax
	movq	%r9, -1072(%rbp)
	jmp	.L15287
.L17839:
	movq	-480(%rbp), %rsi
	movl	$.LC206, %edi
	xorl	%eax, %eax
	call	error
	movq	error_mark_node(%rip), %r11
	movq	%r11, -1072(%rbp)
	jmp	.L15286
.L14944:
	movq	-1072(%rbp), %rsi
	cmpq	$0, 32(%rsi)
	jne	.L15285
	movq	80(%rsi), %rax
	testq	%rax, %rax
	movq	%rax, %r14
	je	.L14946
	movq	56(%rax), %rax
	testq	%rax, %rax
	je	.L14946
	cmpq	$0, 8(%rax)
	je	.L15285
.L14946:
	cmpb	$32, 16(%r14)
	movl	$144, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	56(%r14), %rax
	cmpq	%r14, 40(%rax)
	je	.L15285
	cmpq	$0, 8(%rax)
	jne	.L17847
.L14949:
	movq	current_binding_level(%rip), %rbx
	movq	72(%r14), %r12
	cmpq	global_binding_level(%rip), %rbx
	je	.L17848
.L17376:
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L14952:
	movq	class_binding_level(%rip), %rbx
	movq	$0, 8(%r12)
	movq	$0, 64(%r14)
	movq	56(%r14), %r10
	testq	%rbx, %rbx
	movq	%r10, 72(%r14)
	jne	.L14956
	movq	current_binding_level(%rip), %rbx
.L14956:
	movq	global_binding_level(%rip), %rdi
	cmpq	%rdi, %rbx
	movq	%rdi, %rdx
	je	.L17009
.L14968:
	movzbl	66(%rbx), %r15d
	xorl	%r13d, %r13d
	andl	$15, %r15d
	cmpl	$2, %r15d
	je	.L17849
.L14960:
	movq	56(%rbx), %rbx
	cmpq	%rdx, %rbx
	jne	.L14968
.L17009:
	movzbl	66(%rbx), %r12d
	xorl	%r13d, %r13d
	andl	$15, %r12d
	cmpl	$2, %r12d
	jne	.L15285
	movq	8(%rbx), %r12
	testq	%r12, %r12
	je	.L15285
.L14976:
	movq	-1072(%rbp), %rax
	cmpq	%rax, 32(%r12)
	je	.L14975
	movq	%r12, %r13
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L14976
	jmp	.L15285
.L14975:
	movq	-1072(%rbp), %rdx
	movq	$_iob+112, %rdi
	movl	$.LC175, %esi
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	print_node_brief
	xorl	%eax, %eax
	movl	$11, %edi
	call	my_friendly_abort
.L14966:
	testq	%r13, %r13
	je	.L14977
	movq	(%r12), %rsi
	movq	%rsi, (%r13)
.L14978:
	movq	current_binding_level(%rip), %rbx
	movq	24(%r12), %r13
	cmpq	global_binding_level(%rip), %rbx
	movq	32(%r12), %r15
	je	.L17850
.L17377:
	movq	8(%r13), %rsi
	movq	32(%rbx), %rdx
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L14980:
	movq	%r15, 8(%r13)
	xorl	%eax, %eax
	movq	32(%r12), %rsi
	movq	global_binding_level(%rip), %r15
	movq	24(%r12), %rdi
	movq	8(%r15), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%r15)
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	movq	%rax, %rcx
	je	.L14983
	movq	144(%rax), %r9
	xorl	%edx, %edx
	movq	72(%r9), %rax
	testq	%rax, %rax
	je	.L14983
.L14989:
	movq	-1072(%rbp), %r8
	cmpq	%r8, 32(%rax)
	je	.L14985
	movq	%rax, %rdx
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L14989
.L14983:
	movq	current_binding_level(%rip), %r11
	movq	current_function_decl(%rip), %rax
	movq	global_binding_level(%rip), %r10
	movq	%r11, -888(%rbp)
	cmpq	%rax, %r14
	movq	112(%r14), %rdi
	movq	%r10, current_binding_level(%rip)
	movq	%r10, -880(%rbp)
	movq	%rdi, -848(%rbp)
	je	.L17218
	movzbl	16(%r14), %ecx
	cmpb	$29, %cl
	je	.L17851
.L14994:
	movq	%rax, 64(%r14)
.L14993:
	cmpb	$32, %cl
	je	.L17852
.L14995:
	cmpq	$0, -848(%rbp)
	je	.L14996
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L17853
	movq	-848(%rbp), %r13
	cmpq	$0, 48(%r13)
	jne	.L14999
	movq	$0, -856(%rbp)
.L14998:
	cmpq	$0, -856(%rbp)
	je	.L15016
	movq	-856(%rbp), %r9
	cmpq	error_mark_node(%rip), %r9
	je	.L17854
.L15006:
	cmpq	$0, -856(%rbp)
	je	.L17222
	movq	-856(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L17855
.L15008:
	movq	-856(%rbp), %rsi
	testq	%rsi, %rsi
	movq	24(%rsi), %rbx
	movl	32(%rsi), %r12d
	je	.L17222
	movzbl	16(%rsi), %eax
	movzbl	16(%r14), %ecx
	cmpb	%cl, %al
	je	.L15010
	cmpb	$32, %al
	je	.L15016
	cmpb	$32, %cl
	je	.L17309
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L17222
.L15015:
	movq	class_binding_level(%rip), %rbx
	movq	-888(%rbp), %rsi
	testq	%rbx, %rbx
	movq	%rsi, current_binding_level(%rip)
	cmove	%rsi, %rbx
	movq	%rbx, -888(%rbp)
	cmpb	$32, 16(%r14)
	jne	.L15285
	movq	global_binding_level(%rip), %r8
	xorl	%ecx, %ecx
	movq	56(%r14), %rsi
	cmpq	%r8, -888(%rbp)
	movq	%r8, %rdi
	je	.L17018
.L15281:
	movq	-888(%rbp), %r15
	movq	32(%r15), %rdx
	testq	%rdx, %rdx
	je	.L17020
.L15280:
	cmpq	%rsi, 24(%rdx)
	leaq	32(%rdx), %r12
	movq	(%rdx), %rdx
	cmove	%r12, %rcx
	testq	%rdx, %rdx
	jne	.L15280
.L17020:
	movq	-888(%rbp), %r10
	movq	56(%r10), %rdx
	cmpq	%rdi, %rdx
	movq	%rdx, -888(%rbp)
	jne	.L15281
.L17018:
	testq	%rcx, %rcx
	movq	8(%r14), %rax
	jne	.L15282
	movq	%rax, 8(%rsi)
	jmp	.L15285
.L15282:
	movq	%rax, (%rcx)
	jmp	.L15285
.L17222:
	movzbl	16(%r14), %ecx
.L15016:
	cmpb	$32, %cl
	je	.L17309
.L15024:
	movzbl	53(%r14), %edx
	testb	$1, %dl
	je	.L15162
	movq	-848(%rbp), %r12
	movq	40(%r12), %rax
	testq	%rax, %rax
	je	.L15162
	testb	$1, 53(%rax)
	jne	.L15163
	testb	$8, 18(%rax)
	je	.L15162
.L15163:
	andb	$8, %dl
	je	.L17856
.L15162:
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	je	.L17230
	testb	$1, 53(%r14)
	je	.L17230
	xorl	%r12d, %r12d
	movq	global_binding_level(%rip), %rdi
	cmpq	%rdi, current_binding_level(%rip)
	je	.L15166
	movq	-848(%rbp), %rax
	movq	48(%rax), %r13
	testq	%r13, %r13
	movq	%r13, %rcx
	jne	.L15167
.L15166:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L15168
	movq	-848(%rbp), %r11
	movq	56(%r11), %rcx
	testq	%rcx, %rcx
	jne	.L17104
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L15169
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L17857
.L15169:
	testq	%rcx, %rcx
	jne	.L17104
.L17105:
	movq	-848(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17104
	movq	-848(%rbp), %rbx
	movq	40(%rbx), %rcx
.L15167:
	testq	%rcx, %rcx
	je	.L17147
.L17104:
	cmpb	$32, 16(%rcx)
	je	.L15171
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L15171
	movq	-848(%rbp), %r8
	movq	8(%r8), %rax
	testq	%rax, %rax
	je	.L15179
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17384
	testl	%r12d, %r12d
	jle	.L17858
.L17384:
	movq	%rax, %rcx
.L15171:
	testq	%rcx, %rcx
	jne	.L17230
.L17147:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -880(%rbp)
.L15165:
	cmpq	%rax, -880(%rbp)
	je	.L17859
	movq	current_binding_level(%rip), %rbx
	movq	-848(%rbp), %rsi
	cmpq	%rax, %rbx
	movq	48(%rsi), %r13
	movq	40(%rsi), %r12
	movq	%rsi, %rdi
	je	.L17860
.L17385:
	movq	16(%rbx), %rdx
	movq	%r13, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%rbx)
.L15210:
	movq	-848(%rbp), %r11
	testq	%r13, %r13
	movq	%r14, 48(%r11)
	je	.L17861
.L15221:
	movq	96(%r14), %rax
	testq	%rax, %rax
	jne	.L15223
	testq	%r13, %r13
	je	.L15224
	testb	$1, 53(%r14)
	jne	.L15224
	cmpb	$34, 16(%r13)
	je	.L17862
.L15224:
	movl	warn_shadow(%rip), %edx
	testl	%edx, %edx
	je	.L15223
	testb	$1, 53(%r14)
	jne	.L15223
	movl	32(%r14), %r15d
	testl	%r15d, %r15d
	je	.L15223
	testq	%rax, %rax
	jne	.L15223
	xorl	%edi, %edi
	testq	%r13, %r13
	je	.L15229
	cmpb	$34, 16(%r13)
	je	.L17863
.L15229:
	movq	-848(%rbp), %rcx
	cmpq	$0, 56(%rcx)
	je	.L15231
	movl	$.LC41, %edi
.L15230:
	testq	%rdi, %rdi
	jne	.L17864
.L15223:
	testq	%r13, %r13
	je	.L17231
	movq	-880(%rbp), %r9
	movq	-848(%rbp), %rdi
	movq	%r13, %rsi
	xorl	%eax, %eax
	movq	16(%r9), %rdx
	call	tree_cons
	movq	-880(%rbp), %r13
	movq	%rax, 16(%r13)
.L17231:
	movzbl	16(%r14), %ecx
.L15208:
	leal	-128(%rcx), %edi
	cmpb	$1, %dil
	jbe	.L14996
	movq	8(%r14), %rdx
	cmpq	$0, 32(%rdx)
	jne	.L14996
	cmpb	$18, 16(%rdx)
	je	.L17865
.L15240:
	testb	$64, 46(%rdx)
	je	.L14996
.L15239:
	movq	-880(%rbp), %r12
	movzwl	64(%r12), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%r12)
	je	.L17866
.L17232:
	movzbl	16(%r14), %ecx
.L14996:
	cmpb	$32, %cl
	je	.L17867
.L15242:
	movq	-880(%rbp), %r13
	cmpq	global_binding_level(%rip), %r13
	movq	(%r13), %r9
	movq	%r9, (%r14)
	movq	%r14, (%r13)
	jne	.L15015
	testb	$4, 17(%r14)
	jne	.L15015
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L15015
.L17867:
	cmpq	$0, -848(%rbp)
	je	.L15242
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L15243
	cmpq	class_binding_level(%rip), %rax
	je	.L15244
	movq	-848(%rbp), %rsi
	movq	48(%rsi), %rax
	testq	%rax, %rax
	je	.L15248
	cmpb	$32, 16(%rax)
	je	.L15246
.L15248:
	cmpq	$0, current_class_type(%rip)
	je	.L15243
	movq	-848(%rbp), %r15
	movq	56(%r15), %rax
	testq	%rax, %rax
	je	.L15243
	cmpb	$32, 16(%rax)
	je	.L15246
.L15243:
	movq	-848(%rbp), %rsi
	movq	40(%rsi), %rax
	testq	%rax, %rax
	je	.L15247
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L15246
	cmpb	$-127, %dl
	je	.L17868
.L15247:
	movq	current_class_name(%rip), %r13
	testq	%r13, %r13
	je	.L15242
	movq	72(%r14), %rbx
	testq	%rbx, %rbx
	je	.L17869
.L15254:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L15258
	cmpq	class_binding_level(%rip), %rax
	je	.L15259
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L15263
	cmpb	$32, 16(%rax)
	je	.L15261
.L15263:
	cmpq	$0, current_class_type(%rip)
	je	.L15258
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L15258
	cmpb	$32, 16(%rax)
	je	.L15261
.L15258:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L15242
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L15261
	cmpb	$-127, %dl
	jne	.L15242
	movq	$0, 8(%rbx)
	jmp	.L15242
.L15261:
	movq	8(%rax), %r11
	movq	%r11, 8(%rbx)
	jmp	.L15242
.L15259:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L15263
.L17869:
	cmpb	$32, 16(%r14)
	movl	$136, %esi
	movq	56(%r14), %r12
	sete	%r10b
	movq	8(%r14), %r15
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r13)
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%r13), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%r13), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r14)
	movq	%r15, 8(%rax)
	movq	72(%r14), %rbx
	jmp	.L15254
.L17868:
	movq	$0, 8(%rsi)
	jmp	.L15247
	.p2align 6,,7
.L15246:
	movq	8(%rax), %rdx
	movq	-848(%rbp), %r8
	movq	%rdx, 8(%r8)
	jmp	.L15247
.L15244:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L15248
.L17866:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L17232
	.p2align 6,,7
.L17865:
	movq	8(%rdx), %rbx
	testb	$64, 46(%rbx)
	jne	.L15239
	jmp	.L15240
.L17864:
	movq	-848(%rbp), %r11
	movq	32(%r11), %rsi
.L17386:
	xorl	%eax, %eax
	call	warning
	jmp	.L15223
.L15231:
	testq	%r13, %r13
	je	.L15233
	movl	$.LC42, %edi
	jmp	.L15230
.L15233:
	testq	%r12, %r12
	movl	$.LC43, %r10d
	cmovne	%r10, %rdi
	jmp	.L15230
.L17863:
	movl	$.LC40, %edi
	jmp	.L15230
.L17862:
	cmpb	$34, 16(%r14)
	je	.L15224
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r12
	movq	56(%r12), %rax
	je	.L15225
	movq	56(%rax), %rax
.L15225:
	movzbl	66(%rax), %esi
	andl	$15, %esi
	decl	%esi
	jne	.L15223
	movq	-848(%rbp), %r8
	movl	$.LC40, %edi
	movq	32(%r8), %rsi
	jmp	.L17386
	.p2align 6,,7
.L17861:
	movzbl	53(%r14), %r9d
	andb	$9, %r9b
	decb	%r9b
	je	.L17870
.L15213:
	testq	%r13, %r13
	jne	.L15221
	testq	%r12, %r12
	jne	.L15221
	testb	$1, 53(%r14)
	je	.L15221
	testb	$8, 18(%r14)
	je	.L15221
	movq	-848(%rbp), %rax
	orb	$8, 18(%rax)
	jmp	.L15221
.L17870:
	testq	%r12, %r12
	je	.L15213
	cmpb	$29, 16(%r14)
	jne	.L15213
	cmpb	$29, 16(%r12)
	jne	.L15213
	movq	8(%r14), %rdi
	movq	8(%r12), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L17871
	movzbl	53(%r12), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L15216
	movzbl	53(%r14), %ebx
	leal	0(,%rax,8), %esi
	leaq	88(%r14), %rdx
	andb	$-9, %bl
	orb	%sil, %bl
	movb	%bl, 53(%r14)
	cmpq	%r12, current_function_decl(%rip)
	je	.L15217
	movq	88(%r12), %rax
.L15218:
	movq	136(%r12), %r11
	movq	72(%r12), %rdi
	movq	%rax, (%rdx)
	movq	80(%r12), %r10
	movzbl	17(%r14), %r8d
	movq	%r11, 136(%r14)
	movq	%rdi, 72(%r14)
	movq	%r10, 80(%r14)
	movzbl	17(%r12), %ecx
	movq	%r12, 96(%r14)
	andb	$127, %r8b
	shrb	$7, %cl
	movzbl	%cl, %edx
	movl	%edx, %r15d
	salb	$7, %r15b
	orb	%r15b, %r8b
	movb	%r8b, 17(%r14)
	movzbl	53(%r12), %ecx
.L15216:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L15219
	movzbl	53(%r14), %r9d
	salb	$4, %al
	andb	$-17, %r9b
	orb	%al, %r9b
	movb	%r9b, 53(%r14)
	movl	128(%r12), %eax
	movl	%eax, 128(%r14)
.L15219:
	movq	8(%r12), %rdx
	cmpq	$0, 24(%rdx)
	je	.L15213
	cmpq	$0, 88(%r12)
	je	.L15213
	movq	8(%r14), %rbx
	cmpq	$0, 24(%rbx)
	jne	.L15213
	movq	%rdx, 8(%r14)
	jmp	.L15213
.L15217:
	xorl	%eax, %eax
	jmp	.L15218
.L17871:
	movq	%r14, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L15213
	.p2align 6,,7
.L17860:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L15210
	movq	-848(%rbp), %rdi
	jmp	.L17385
.L17859:
	movzwl	16(%r14), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L17872
.L15185:
	movq	-848(%rbp), %rsi
	cmpq	$0, 40(%rsi)
	jne	.L15186
	testb	$8, 18(%r14)
	je	.L15186
	orb	$8, 18(%rsi)
.L15186:
	movzbl	16(%r14), %ecx
	cmpb	$32, %cl
	je	.L17873
.L15188:
	movq	-848(%rbp), %rcx
	movq	%r14, 40(%rcx)
	movzbl	16(%r14), %ecx
.L15187:
	movq	-848(%rbp), %rbx
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L15199
	movq	8(%rax), %rdx
	testq	%rdx, %rdx
	je	.L15189
	testb	$1, 18(%rdx)
	je	.L15189
	orb	$1, 18(%r14)
	movq	72(%rbx), %rax
.L15189:
	testq	%rax, %rax
	je	.L15199
	movq	8(%rax), %rdx
	testq	%rdx, %rdx
	je	.L15194
	testb	$8, 17(%rdx)
	je	.L15194
	orb	$8, 17(%r14)
	movq	-848(%rbp), %r12
	movq	72(%r12), %rax
.L15194:
	testq	%rax, %rax
	je	.L15199
	cmpq	$0, 8(%rax)
	je	.L15199
	cmpb	$29, %cl
	je	.L17874
.L15202:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r14), %ecx
.L15199:
	movq	-848(%rbp), %rbx
	testb	$8, 18(%rbx)
	je	.L15208
	cmpb	$32, %cl
	je	.L15208
	testb	$8, 18(%r14)
	jne	.L15208
	testb	$1, 53(%r14)
	jne	.L15208
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L15204
	cmpq	$0, 8(%rax)
	jne	.L17875
.L15204:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L17457:
	xorl	%eax, %eax
	call	warning
	jmp	.L17231
.L17875:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L17457
.L17874:
	movq	8(%r14), %rdi
	movq	integer_type_node(%rip), %r10
	cmpq	%r10, 8(%rdi)
	jne	.L15202
	jmp	.L15199
	.p2align 6,,7
.L17873:
	cmpq	$0, -856(%rbp)
	je	.L15188
	movq	-856(%rbp), %r15
	cmpb	$32, 16(%r15)
	jne	.L15187
	jmp	.L15188
	.p2align 6,,7
.L17872:
	testb	$8, 54(%r14)
	jne	.L15185
	andb	$-9, 18(%r14)
	jmp	.L15185
	.p2align 6,,7
.L17230:
	movq	global_binding_level(%rip), %rax
	jmp	.L15165
.L17858:
	testl	%edx, %edx
	jg	.L17384
	testl	%r12d, %r12d
	je	.L15171
	movq	-848(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17384
.L15179:
	movq	8(%rcx), %rdx
	cmpq	error_mark_node(%rip), %rdx
	cmove	%rdx, %rcx
	jmp	.L15171
.L17857:
	xorl	%ecx, %ecx
	movq	-848(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L15171
	testq	%rax, %rax
	je	.L17105
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L15169
	.p2align 6,,7
.L15168:
	movq	-848(%rbp), %rsi
	movq	40(%rsi), %rcx
	jmp	.L15167
.L17856:
	movq	8(%rax), %rsi
	movq	8(%r14), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L15162
	movq	%r14, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	-848(%rbp), %r10
	movq	40(%r10), %rdi
	call	warning_with_decl
	jmp	.L15162
	.p2align 6,,7
.L17309:
	movq	8(%r14), %rcx
	movq	80(%rcx), %rbx
	testq	%rbx, %rbx
	movq	%rbx, -872(%rbp)
	je	.L15026
	movzbl	16(%rbx), %edx
	cmpb	$32, %dl
	je	.L15025
.L15026:
	movq	global_binding_level(%rip), %rbx
	movq	%r14, -872(%rbp)
	cmpq	%rbx, current_binding_level(%rip)
	jne	.L17223
	movq	%r14, 80(%rcx)
.L17223:
	movzbl	16(%r14), %edx
.L15029:
	cmpb	$32, %dl
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$140, %esi
	call	my_friendly_assert
	movq	-872(%rbp), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L15153
	cmpq	$0, 72(%rsi)
	je	.L17876
.L15153:
	movq	8(%r14), %r13
	movq	80(%r13), %rax
	testq	%rax, %rax
	je	.L15024
	cmpq	$0, 56(%rax)
	je	.L15024
	movq	current_binding_level(%rip), %rbx
	movq	56(%r14), %r12
	cmpq	global_binding_level(%rip), %rbx
	je	.L17877
.L17383:
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L15159:
	movq	%r13, 8(%r12)
	jmp	.L15024
.L17877:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L15159
	jmp	.L17383
.L17876:
	cmpb	$32, 16(%r14)
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	sete	%dl
	movq	8(%r14), %r13
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L15154
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%r15b
	xorl	%eax, %eax
	movzbl	%r15b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r14)
	movq	%r13, 8(%rax)
	jmp	.L15153
.L15154:
	movq	%rbx, 72(%r14)
	jmp	.L15153
.L15025:
	movq	current_binding_level(%rip), %rsi
	movq	-872(%rbp), %r10
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%r10), %r13
	jne	.L15029
	movq	32(%r13), %rax
	cmpb	$36, (%rax)
	jne	.L15029
	cmpb	$95, 1(%rax)
	jne	.L15029
	movq	class_binding_level(%rip), %rdi
	movq	%r14, 80(%rcx)
	movq	8(%r14), %r11
	testq	%rdi, %rdi
	movq	%rdi, -864(%rbp)
	movq	%r11, -264(%rbp)
	jne	.L15033
	testb	$-128, 66(%rsi)
	movq	%rsi, -864(%rbp)
	je	.L15033
.L15037:
	movq	-864(%rbp), %rax
	movq	56(%rax), %r12
	testb	$-128, 66(%r12)
	movq	%r12, -864(%rbp)
	jne	.L15037
.L15033:
	movq	-864(%rbp), %r15
	cmpq	global_binding_level(%rip), %r15
	je	.L17878
	movq	-864(%rbp), %rbx
	movq	-264(%rbp), %rsi
	movq	%r13, %rdi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	saveable_tree_cons
	movq	-864(%rbp), %r8
	movq	%rax, 8(%r8)
.L15039:
	testq	%r13, %r13
	je	.L15040
	movq	-264(%rbp), %rsi
	cmpq	$0, 80(%rsi)
	jne	.L15041
	movq	%r13, 80(%rsi)
.L15041:
	movq	-264(%rbp), %rax
	cmpq	%rax, 8(%r13)
	je	.L15042
	cmpb	$21, 16(%rax)
	je	.L17879
.L15043:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L15045
	cmpq	$0, 32(%rax)
	je	.L15044
.L15045:
	movq	lang_name_cplusplus(%rip), %rdx
	cmpq	%rdx, current_lang_name(%rip)
	je	.L17880
.L15046:
	xorl	%ecx, %ecx
.L15081:
	testq	%rcx, %rcx
	jne	.L15082
.L17146:
	movq	-264(%rbp), %rdx
	movl	$32, %edi
	movq	%r13, %rsi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-264(%rbp), %rdi
	movq	%rax, %r15
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	current_binding_level(%rip), %rbx
	movl	$0, 32(%r15)
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, 112(%r15)
	je	.L17881
.L17380:
	movq	8(%r13), %rsi
	movq	32(%rbx), %rdx
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L15084:
	movq	-264(%rbp), %rbx
	movq	%rbx, 8(%r13)
.L15087:
	movq	32(%r13), %rax
	cmpb	$36, (%rax)
	je	.L17882
.L15089:
	movq	-264(%rbp), %r10
	movq	80(%r10), %rdx
	testq	%rdx, %rdx
	je	.L15120
	cmpb	$32, 16(%rdx)
	je	.L17883
.L15090:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L15109
	movq	56(%r15), %r12
	testq	%r12, %r12
	je	.L17227
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L15111
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L15111:
	movq	decl_obstack+24(%rip), %rdx
	movq	%r15, 56(%r12)
	leaq	8(%rdx), %r9
	cmpq	decl_obstack+32(%rip), %r9
	ja	.L17884
.L15113:
	movq	%rdx, %rsi
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%r15, (%rsi)
	cmpb	$32, 16(%r15)
	je	.L17885
.L17227:
	movq	32(%r13), %rax
.L15120:
	cmpb	$36, (%rax)
	je	.L17886
.L15134:
	movq	current_class_type(%rip), %rdx
	movq	-264(%rbp), %rdi
	testq	%rdx, %rdx
	movq	%r15, 80(%rdi)
	jne	.L15137
	cmpq	$0, current_function_decl(%rip)
	je	.L15136
.L15137:
	movq	lang_name_cplusplus(%rip), %r12
	cmpq	%r12, current_lang_name(%rip)
	je	.L15135
.L15136:
	movq	%r13, 72(%r15)
.L15042:
	movq	-864(%rbp), %rcx
	movzbl	66(%rcx), %r15d
	andl	$15, %r15d
	cmpl	$2, %r15d
	je	.L17887
.L15040:
	movq	-264(%rbp), %rsi
	movq	80(%rsi), %rax
	cmpb	$32, 16(%rax)
	je	.L17888
	movq	-264(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-264(%rbp), %r9
	movq	%rax, (%r9)
	movq	-872(%rbp), %r11
	movzbl	16(%r11), %edx
	jmp	.L15029
.L17888:
	movq	%rax, (%rsi)
	movq	-872(%rbp), %rcx
	movzbl	16(%rcx), %edx
	jmp	.L15029
.L17887:
	movq	-264(%rbp), %rax
	orb	$64, 18(%rax)
	movq	80(%rax), %r10
	movq	current_class_type(%rip), %rax
	movq	%r10, 56(%r13)
	cmpq	$0, 32(%rax)
	jne	.L15040
	movq	144(%rax), %r13
	movq	8(%rcx), %rbx
	movq	%rbx, 72(%r13)
	jmp	.L15040
.L15135:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L17889
	cmpq	$0, 32(%rdx)
	jne	.L15042
	cmpb	$32, 16(%r15)
	movq	80(%rdx), %r9
	movl	$136, %esi
	sete	%r11b
	xorl	%eax, %eax
	movq	72(%r9), %rbx
	movzbl	%r11b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L15145
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r13)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	32(%r13), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r13), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-264(%rbp), %rsi
	movq	%rsi, 8(%rax)
.L15147:
	movq	current_class_type(%rip), %r8
	movq	152(%r15), %rdi
	movq	%r8, 64(%r15)
	movq	%r8, 16(%rdi)
	jmp	.L15042
.L15145:
	movq	%r13, 72(%r15)
	jmp	.L15147
.L17889:
	cmpb	$32, 16(%r15)
	movq	112(%rax), %rbx
	movl	$136, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L15140
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r13), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r13), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-264(%rbp), %r10
	movq	%r10, 8(%rax)
.L15142:
	movq	current_function_decl(%rip), %rbx
	movq	%rbx, 64(%r15)
	jmp	.L15042
.L15140:
	movq	%r13, 72(%r15)
	jmp	.L15142
.L17886:
	cmpb	$95, 1(%rax)
	jne	.L15134
	orb	$64, 53(%r15)
	jmp	.L15134
.L17885:
	cmpq	$0, 72(%r15)
	jne	.L17227
	movq	current_class_name(%rip), %rbx
	movq	8(%r15), %r8
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%r8, -272(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L15130
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-272(%rbp), %rdx
.L17456:
	movq	%rdx, 8(%rax)
	jmp	.L17227
.L15130:
	movq	%r12, 72(%r15)
	jmp	.L17227
.L17884:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L15113
.L15109:
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, %r15
	jmp	.L17227
.L17883:
	movq	global_binding_level(%rip), %rcx
	movl	$1, %r12d
	cmpq	%rcx, current_binding_level(%rip)
	je	.L15091
	movq	48(%r13), %rdx
	testq	%rdx, %rdx
	movq	%rdx, %rcx
	jne	.L15092
.L15091:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L15093
	movq	56(%r13), %rcx
	testq	%rcx, %rcx
	jne	.L17102
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L15094
	movq	144(%rdi), %r11
	testb	$1, 3(%r11)
	jne	.L17890
.L15094:
	testq	%rcx, %rcx
	jne	.L17102
.L17103:
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17102
.L15093:
	movq	40(%r13), %rcx
.L15092:
	testq	%rcx, %rcx
	je	.L15096
.L17102:
	cmpb	$32, 16(%rcx)
	je	.L15096
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L15096
	movq	8(%r13), %rax
	testq	%rax, %rax
	je	.L15104
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17381
	testl	%r12d, %r12d
	jle	.L17891
.L17381:
	movq	%rax, %rcx
.L15096:
	movq	-264(%rbp), %r12
	cmpq	80(%r12), %rcx
	jne	.L15090
	jmp	.L17227
.L17891:
	testl	%edx, %edx
	jg	.L17381
	testl	%r12d, %r12d
	je	.L15096
	movq	%rax, %rdx
	movq	%r13, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17381
.L15104:
	movq	8(%rcx), %rdi
	cmpq	error_mark_node(%rip), %rdi
	cmove	%rdi, %rcx
	jmp	.L15096
.L17890:
	xorl	%ecx, %ecx
	movq	%r13, %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L15096
	testq	%rax, %rax
	je	.L17103
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L15094
.L17882:
	cmpb	$95, 1(%rax)
	jne	.L15089
	jmp	.L15120
.L17881:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L15084
	jmp	.L17380
.L15082:
	movq	80(%rcx), %r15
	jmp	.L15087
.L17880:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L15048
	movq	80(%rax), %rbx
.L15048:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L15081
.L15080:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L15057
	cmpl	$32, %eax
	je	.L17892
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L15051:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L15081
	jmp	.L15080
.L17892:
	movq	8(%rbx), %rdi
	xorl	%eax, %eax
	movq	144(%rdi), %r11
	movq	-264(%rbp), %rdi
	movq	72(%r11), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L17290
	movq	64(%rbx), %rbx
	jmp	.L15051
.L17290:
	movq	32(%rax), %rcx
	jmp	.L15081
.L15057:
	movq	-264(%rbp), %rax
	movq	80(%rax), %r12
	movq	56(%r12), %rbx
	testq	%rbx, %rbx
	je	.L15046
	movq	global_binding_level(%rip), %r9
	movl	$1, %r15d
	cmpq	%r9, current_binding_level(%rip)
	je	.L15060
	movq	48(%rbx), %rsi
	testq	%rsi, %rsi
	movq	%rsi, %rcx
	jne	.L15061
.L15060:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L15062
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L17100
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L15063
	movq	144(%rdi), %r8
	testb	$1, 3(%r8)
	jne	.L17893
.L15063:
	testq	%rcx, %rcx
	jne	.L17100
.L17101:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17100
.L15062:
	movq	40(%rbx), %rcx
.L15061:
	testq	%rcx, %rcx
	je	.L17146
.L17100:
	cmpb	$32, 16(%rcx)
	je	.L15081
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L15081
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L15073
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17379
	testl	%r15d, %r15d
	jle	.L17894
.L17379:
	movq	%rax, %rcx
	jmp	.L15081
.L17894:
	testl	%edx, %edx
	jg	.L17379
	testl	%r15d, %r15d
	je	.L15081
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17379
.L15073:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L15081
	jmp	.L17379
.L17893:
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %r15d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L15081
	testq	%rax, %rax
	je	.L17101
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L15063
.L15044:
	movq	-264(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r13, %rsi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, %r15
	je	.L17895
.L17382:
	movq	8(%r13), %rsi
	movq	32(%rbx), %rdx
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L15122:
	movq	-264(%rbp), %rbx
	movq	%rbx, 8(%r13)
	movq	56(%r15), %r12
	testq	%r12, %r12
	je	.L17227
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L15126
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L15126:
	movq	decl_obstack+24(%rip), %rdx
	movq	%r15, 56(%r12)
	leaq	8(%rdx), %rcx
	cmpq	decl_obstack+32(%rip), %rcx
	ja	.L17896
.L15128:
	movq	%rdx, %r11
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%r15, (%r11)
	cmpb	$32, 16(%r15)
	jne	.L17227
	cmpq	$0, 72(%r15)
	jne	.L17227
	movq	current_class_name(%rip), %rbx
	movq	8(%r15), %rdx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%rdx, -280(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L15130
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-280(%rbp), %rdx
	jmp	.L17456
.L17896:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L15128
.L17895:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L15122
	jmp	.L17382
.L17879:
	cmpq	$0, class_binding_level(%rip)
	je	.L15043
	movq	144(%rax), %rcx
	testb	$16, 3(%rcx)
	jne	.L15042
	jmp	.L15043
.L17878:
	movq	-864(%rbp), %r9
	movq	-264(%rbp), %rsi
	movq	%r13, %rdi
	xorl	%eax, %eax
	movq	8(%r9), %rdx
	call	perm_tree_cons
	movq	-864(%rbp), %rsi
	movq	%rax, 8(%rsi)
	jmp	.L15039
.L15010:
	movq	-856(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L17222
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	jne	.L15015
	movq	-848(%rbp), %r8
	testb	$8, 18(%r8)
	je	.L15015
	testb	$8, 18(%r14)
	jne	.L15015
	testb	$9, 53(%r14)
	jne	.L15015
	cmpq	%r14, current_function_decl(%rip)
	je	.L17897
.L15019:
	movq	-848(%rbp), %rdx
	movq	72(%rdx), %rax
	testq	%rax, %rax
	je	.L15020
	cmpq	$0, 8(%rax)
	jne	.L17898
.L15020:
	movq	-856(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L17378:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-856(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%r12d, %esi
	movq	%rax, %rcx
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L15015
.L17898:
	movq	-856(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L17378
.L17897:
	movq	-856(%rbp), %rcx
	movq	%rcx, current_function_decl(%rip)
	jmp	.L15019
	.p2align 6,,7
.L17855:
	cmpq	$0, 64(%rcx)
	jne	.L15008
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L15008
	.p2align 6,,7
.L17854:
	movq	%r14, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -856(%rbp)
	call	error_with_decl
	jmp	.L15006
.L14999:
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.L15001
.L15005:
	movq	-848(%rbp), %r15
	cmpq	%r15, 56(%rdi)
	je	.L15001
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L15005
.L15001:
	movq	%rdi, -856(%rbp)
	jmp	.L14998
.L17853:
	movq	-848(%rbp), %rsi
	movq	40(%rsi), %rax
	movq	%rax, -856(%rbp)
	jmp	.L14998
.L17852:
	movq	56(%r14), %r12
	movq	%r12, -848(%rbp)
	jmp	.L14995
.L17851:
	testb	$32, 53(%r14)
	jne	.L14993
	jmp	.L14994
.L17218:
	movzbl	16(%r14), %ecx
	jmp	.L14993
.L14985:
	testq	%rax, %rax
	je	.L14983
	testq	%rdx, %rdx
	je	.L14991
	movq	(%rax), %rcx
	movq	%rcx, (%rdx)
	jmp	.L14983
.L14991:
	movq	144(%rcx), %rbx
	movq	(%rax), %rdx
	movq	%rdx, 72(%rbx)
	jmp	.L14983
.L17850:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L14980
	jmp	.L17377
.L14977:
	movq	(%r12), %r13
	movq	%r13, 8(%rbx)
	jmp	.L14978
.L17849:
	movq	8(%rbx), %r12
	testq	%r12, %r12
	je	.L14960
.L14967:
	movq	-1072(%rbp), %r11
	cmpq	%r11, 32(%r12)
	je	.L14966
	movq	%r12, %r13
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L14967
	jmp	.L14960
.L17848:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L14952
	jmp	.L17376
.L17847:
	movq	global_binding_level(%rip), %rbx
	movq	-1072(%rbp), %rdi
	xorl	%eax, %eax
	movq	8(%rbx), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L15285
	jmp	.L14949
	.p2align 6,,7
.L17638:
	movq	-1072(%rbp), %r11
	movq	96(%r11), %r12
	movq	%r12, -1000(%rbp)
	jmp	.L14939
.L17528:
	testl	$524288, -1064(%rbp)
	je	.L14295
	movq	global_binding_level(%rip), %r15
	movl	$6, -644(%rbp)
	cmpq	%r15, current_binding_level(%rip)
	je	.L17899
.L14296:
	movq	free_binding_level(%rip), %rax
	testq	%rax, %rax
	je	.L14297
	movq	56(%rax), %r11
	movq	%rax, %rdi
	movq	%r11, free_binding_level(%rip)
.L14298:
	movq	clear_binding_level(%rip), %r15
	movq	class_binding_level(%rip), %rax
	movl	keep_next_level_flag(%rip), %ecx
	movq	%r15, (%rdi)
	testq	%rax, %rax
	movq	clear_binding_level+8(%rip), %rsi
	movq	%rsi, 8(%rdi)
	movq	clear_binding_level+16(%rip), %r13
	movq	%r13, 16(%rdi)
	movq	clear_binding_level+24(%rip), %r10
	movq	%r10, 24(%rdi)
	movq	clear_binding_level+32(%rip), %r14
	movq	%r14, 32(%rdi)
	movq	clear_binding_level+40(%rip), %rdx
	movq	%rdx, 40(%rdi)
	movq	clear_binding_level+48(%rip), %rbx
	movq	%rbx, 48(%rdi)
	movq	clear_binding_level+56(%rip), %r9
	movq	%r9, 56(%rdi)
	movq	clear_binding_level+64(%rip), %r8
	movq	%r8, 64(%rdi)
	je	.L14299
	movq	%rax, 56(%rdi)
	movq	$0, class_binding_level(%rip)
.L14300:
	movzbl	66(%rdi), %r11d
	movl	%ecx, %r8d
	movq	%rdi, current_binding_level(%rip)
	andb	$7, %r8b
	orb	$5, 67(%rdi)
	xorl	%eax, %eax
	salb	$4, %r8b
	andb	$15, %r11b
	orb	%r8b, %r11b
	movb	%r11b, 66(%rdi)
	call	GNU_xref_start_scope
	movl	-604(%rbp), %eax
	movl	$0, keep_next_level_flag(%rip)
	movl	%eax, -216(%rbp)
	movl	have_extern_spec(%rip), %eax
	testl	%eax, %eax
	je	.L14303
	movl	used_extern_spec(%rip), %eax
	testl	%eax, %eax
	je	.L17900
.L14303:
	movq	-904(%rbp), %rdi
	movq	-592(%rbp), %rsi
	xorl	%edx, %edx
	movl	-604(%rbp), %ecx
	xorl	%r8d, %r8d
	xorl	%eax, %eax
	call	grokdeclarator
	testq	%rax, %rax
	movq	%rax, %r13
	je	.L17373
	cmpq	void_type_node(%rip), %rax
	je	.L17373
	movq	8(%rax), %rax
	movq	%rax, -600(%rbp)
	testb	$4, 18(%r13)
	je	.L14307
	testb	$32, 46(%rax)
	je	.L14307
	testb	$4, 17(%r13)
	je	.L17901
.L14307:
	movq	-600(%rbp), %rbx
	cmpb	$21, 16(%rbx)
	je	.L17902
.L14310:
	xorl	%eax, %eax
	call	push_obstacks_nochange
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L17903
.L14311:
	movq	64(%r13), %r12
.L14312:
	movl	processing_template_decl(%rip), %ebx
	testl	%ebx, %ebx
	je	.L14313
	cmpb	$29, %dl
	je	.L17904
.L14314:
	movq	56(%r13), %rsi
	movq	8(%r13), %rdx
	xorl	%eax, %eax
	movl	$129, %edi
	call	build_lang_decl
	xorl	%edx, %edx
	andb	$-9, 18(%r13)
	movzbl	18(%rax), %r14d
	movq	%rax, %rcx
	movl	%r14d, %r15d
	andb	$-13, %r14b
	andb	$-9, %r15b
	movb	%r15b, 18(%rax)
	movzbl	18(%r13), %esi
	andb	$4, %sil
	orb	%sil, %r14b
	movb	%r14b, 18(%rax)
	testb	$1, 53(%r13)
	je	.L14317
	testq	%r12, %r12
	je	.L14318
	testb	$8, 54(%r13)
	je	.L14317
.L14318:
	movl	$1, %edx
.L14317:
	movzbl	53(%rcx), %r11d
	movq	%r13, 80(%rcx)
	orb	$32, 54(%rcx)
	movq	%rcx, %r13
	andb	$-2, %r11b
	orb	%dl, %r11b
	movb	%r11b, 53(%rcx)
.L14313:
	testq	%r12, %r12
	je	.L14319
	cmpq	$0, 32(%r12)
	je	.L14319
	testb	$8, 54(%r13)
	jne	.L14320
	andb	$-2, 53(%r13)
.L14320:
	cmpq	$0, 152(%r13)
	je	.L14321
	andb	$-17, 54(%r13)
.L14321:
	movq	%r12, %rdi
	movl	$2, %esi
	xorl	%eax, %eax
	call	pushclass
.L14319:
	movq	-600(%rbp), %r12
	testb	$32, 46(%r12)
	je	.L14322
	movq	current_binding_level(%rip), %rax
	testb	$1, 67(%rax)
	jne	.L14322
	cmpq	global_binding_level(%rip), %rax
	je	.L17905
.L14323:
	movq	free_binding_level(%rip), %rax
	testq	%rax, %rax
	je	.L14324
	movq	56(%rax), %r8
	movq	%rax, %rdi
	movq	%r8, free_binding_level(%rip)
.L14325:
	movq	clear_binding_level(%rip), %r12
	movq	class_binding_level(%rip), %rax
	movl	keep_next_level_flag(%rip), %ecx
	movq	%r12, (%rdi)
	testq	%rax, %rax
	movq	clear_binding_level+8(%rip), %r11
	movq	%r11, 8(%rdi)
	movq	clear_binding_level+16(%rip), %r15
	movq	%r15, 16(%rdi)
	movq	clear_binding_level+24(%rip), %rsi
	movq	%rsi, 24(%rdi)
	movq	clear_binding_level+32(%rip), %r14
	movq	%r14, 32(%rdi)
	movq	clear_binding_level+40(%rip), %r10
	movq	%r10, 40(%rdi)
	movq	clear_binding_level+48(%rip), %rdx
	movq	%rdx, 48(%rdi)
	movq	clear_binding_level+56(%rip), %rbx
	movq	%rbx, 56(%rdi)
	movq	clear_binding_level+64(%rip), %r9
	movq	%r9, 64(%rdi)
	je	.L14326
	movq	%rax, 56(%rdi)
	movq	$0, class_binding_level(%rip)
.L14327:
	movzbl	66(%rdi), %r9d
	movl	%ecx, %ebx
	movq	%rdi, current_binding_level(%rip)
	andb	$7, %bl
	orb	$5, 67(%rdi)
	xorl	%eax, %eax
	salb	$4, %bl
	orb	$-128, %r9b
	andb	$-113, %r9b
	orb	%bl, %r9b
	movb	%r9b, 66(%rdi)
	call	GNU_xref_start_scope
	movq	current_binding_level(%rip), %rcx
	movl	$0, keep_next_level_flag(%rip)
	xorl	%eax, %eax
	movzbl	66(%rcx), %edi
	andb	$-113, %dil
	orb	$32, %dil
	movb	%dil, 66(%rcx)
	call	clear_last_expr
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	expand_start_bindings
.L14322:
	movl	-604(%rbp), %eax
	testl	%eax, %eax
	je	.L17090
	movzbl	16(%r13), %eax
	cmpl	$29, %eax
	je	.L14336
	cmpl	$32, %eax
	je	.L17906
	movq	-600(%rbp), %rax
	cmpq	$0, 32(%rax)
	jne	.L14331
	cmpb	$18, 16(%rax)
	je	.L14340
	movq	56(%r13), %rax
	movl	$.LC143, %edi
.L17357:
	movq	32(%rax), %rsi
	xorl	%eax, %eax
	call	error
	movl	$0, -604(%rbp)
.L14331:
	movl	-604(%rbp), %esi
	testl	%esi, %esi
	jne	.L17091
.L17090:
	movzbl	16(%r13), %eax
	cmpb	$32, %al
	je	.L14344
	cmpb	$-127, %al
	je	.L14344
	movq	-600(%rbp), %rcx
	movzbl	46(%rcx), %eax
	testb	$64, %al
	je	.L14344
	testb	$1, 53(%r13)
	jne	.L14344
	cmpq	$0, 32(%rcx)
	je	.L17907
	shrb	$4, %al
	movl	%eax, %r12d
	andl	$1, %r12d
	movl	%r12d, -604(%rbp)
.L14344:
	movl	-604(%rbp), %ecx
	testl	%ecx, %ecx
	je	.L14347
.L17091:
	movq	global_binding_level(%rip), %r8
	cmpq	%r8, current_binding_level(%rip)
	je	.L14348
	testb	$1, 53(%r13)
	jne	.L17908
.L14348:
	andb	$-2, 53(%r13)
	movq	global_binding_level(%rip), %rdi
	cmpq	%rdi, current_binding_level(%rip)
	je	.L17909
.L14349:
	movq	error_mark_node(%rip), %rbx
	movq	%rbx, 88(%r13)
.L14347:
	movzbl	16(%r13), %edx
	cmpb	$34, %dl
	movl	%edx, %ecx
	je	.L14352
	cmpq	$0, 64(%r13)
	jne	.L14351
.L14352:
	cmpb	$-127, %dl
	je	.L17910
.L14353:
	movq	-600(%rbp), %r10
	cmpb	$24, 16(%r10)
	je	.L14351
	movq	current_function_decl(%rip), %rax
	movq	112(%r13), %rsi
	movq	current_binding_level(%rip), %r14
	cmpq	%rax, %r13
	movq	%rsi, -616(%rbp)
	movq	%r14, -640(%rbp)
	je	.L14356
	cmpb	$29, %dl
	je	.L17911
.L14357:
	movq	%rax, 64(%r13)
.L14356:
	cmpb	$32, %cl
	je	.L17912
.L14358:
	cmpq	$0, -616(%rbp)
	je	.L14359
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L17913
	movq	-616(%rbp), %r12
	cmpq	$0, 48(%r12)
	jne	.L14362
	movq	$0, -1072(%rbp)
.L14361:
	cmpq	$0, -1072(%rbp)
	je	.L14379
	movq	-1072(%rbp), %rdx
	cmpq	error_mark_node(%rip), %rdx
	je	.L17914
.L14369:
	cmpq	$0, -1072(%rbp)
	je	.L17198
	movq	-1072(%rbp), %rax
	cmpb	$34, 16(%rax)
	je	.L17915
.L14371:
	movq	-1072(%rbp), %rdx
	testq	%rdx, %rdx
	movq	24(%rdx), %r12
	movl	32(%rdx), %ebx
	je	.L17198
	movzbl	16(%rdx), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L14373
	cmpb	$32, %al
	je	.L14379
	cmpb	$32, %dl
	je	.L17307
	movq	-1072(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L17198
.L14378:
	movq	-1072(%rbp), %rcx
	cmpb	$3, 16(%rcx)
	je	.L17916
.L17209:
	movzbl	16(%r13), %edx
.L14355:
	cmpb	$29, %dl
	je	.L17917
.L14657:
	cmpb	$-127, %dl
	je	.L17918
.L14692:
	movl	-216(%rbp), %r15d
	testl	%r15d, %r15d
	je	.L14735
	movq	-1072(%rbp), %rcx
	movzbl	16(%rcx), %eax
	cmpb	$34, %al
	je	.L14735
	testb	$32, 17(%rcx)
	je	.L14736
	cmpb	$33, %al
	je	.L14735
	cmpb	$36, %al
	je	.L14735
.L14736:
	movq	global_binding_level(%rip), %r13
	cmpq	%r13, current_binding_level(%rip)
	je	.L17919
.L14735:
	movl	flag_cadillac(%rip), %eax
	testl	%eax, %eax
	jne	.L17920
.L14306:
	xorl	%eax, %eax
	movl	$24, %edi
	call	permalloc
	movl	-644(%rbp), %r11d
	movq	%rax, %rdx
	testl	%r11d, %r11d
	jle	.L16988
.L14745:
	decl	-644(%rbp)
	movslq	-644(%rbp),%rsi
	movl	-644(%rbp), %ecx
	testl	%ecx, %ecx
	movl	$0, (%rdx,%rsi,4)
	jg	.L14745
.L16988:
	movq	-1072(%rbp), %rdi
	movq	%rdx, 152(%rdi)
	movq	current_binding_level(%rip), %rdi
	movl	$0, -660(%rbp)
	movzbl	66(%rdi), %r15d
	movzbl	66(%rdi), %ebx
	movq	40(%rdi), %r8
	movq	56(%rdi), %rsi
	movq	8(%rdi), %r13
	andl	$15, %r15d
	movq	%r8, -656(%rbp)
	cmpl	$3, %r15d
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edx
	movl	%edx, -244(%rbp)
	movl	%ebx, %edx
	shrb	$4, %bl
	movl	%ebx, %ecx
	andl	$15, %edx
	shrb	$3, %bl
	andl	$7, %ecx
	movzbl	%bl, %r8d
	call	GNU_xref_end_scope
	movq	current_binding_level(%rip), %rbx
	movl	$1, %eax
	movzbl	66(%rbx), %r14d
	shrb	$4, %r14b
	andl	$7, %r14d
	decl	%r14d
	cmovne	-660(%rbp), %eax
	movl	%eax, -660(%rbp)
	xorl	%eax, %eax
	testl	%eax, %eax
	jne	.L17921
	movq	(%rbx), %r12
.L14754:
	testq	%r12, %r12
	movq	%r12, %rbx
	je	.L16990
.L14760:
	movzwl	16(%rbx), %eax
	andl	$-32513, %eax
	cmpw	$29, %ax
	je	.L17922
.L14757:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L14760
.L16990:
	movq	current_binding_level(%rip), %r11
	xorl	%r10d, %r10d
	xorl	%r15d, %r15d
	movq	48(%r11), %rdx
	testq	%rdx, %rdx
	setne	%r10b
	testl	%r10d, %r10d
	movl	%r10d, -248(%rbp)
	je	.L14761
	movq	%rdx, %r15
.L14762:
	testq	%r15, %r15
	jne	.L17923
.L14765:
	movl	-660(%rbp), %ecx
	testl	%ecx, %ecx
	js	.L14766
	movq	-656(%rbp), %rax
	testq	%rax, %rax
	je	.L14766
.L14771:
	movq	%r15, 56(%rax)
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L14771
.L14766:
	testq	%r12, %r12
	je	.L16993
.L14780:
	movq	56(%r12), %rax
	testq	%rax, %rax
	je	.L14774
	testb	$1, 53(%r12)
	je	.L14777
	testb	$1, 18(%r12)
	je	.L14778
	movq	112(%r12), %rsi
	orb	$1, 18(%rsi)
.L14778:
	testb	$8, 17(%r12)
	je	.L17213
	movq	112(%r12), %r14
	orb	$8, 17(%r14)
.L17213:
	movq	56(%r12), %rax
.L14777:
	movq	$0, 48(%rax)
.L14774:
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L14780
.L16993:
	movq	current_binding_level(%rip), %rdi
	movq	16(%rdi), %rcx
	testq	%rcx, %rcx
	je	.L16995
.L14785:
	movq	24(%rcx), %r9
	movq	32(%rcx), %rbx
	movq	%rbx, 48(%r9)
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.L14785
.L16995:
	movq	24(%rdi), %rcx
	testq	%rcx, %rcx
	je	.L16997
.L14790:
	movq	24(%rcx), %r8
	movq	32(%rcx), %rdx
	movq	%rdx, 56(%r8)
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.L14790
.L16997:
	movq	32(%rdi), %rcx
	testq	%rcx, %rcx
	je	.L16999
.L14795:
	movq	24(%rcx), %r12
	movq	32(%rcx), %rdi
	movq	(%rcx), %rcx
	movq	%rdi, 8(%r12)
	testq	%rcx, %rcx
	jne	.L14795
.L16999:
	xorl	%r10d, %r10d
	testl	%r10d, %r10d
	je	.L14796
	movq	named_labels(%rip), %r11
	movq	$0, 32(%r15)
	testq	%r11, %r11
	movq	%r11, -672(%rbp)
	je	.L17001
.L14875:
	movq	-672(%rbp), %rax
	movq	32(%rax), %r14
	cmpq	$0, 88(%r14)
	je	.L17924
	movl	warn_unused(%rip), %eax
	testl	%eax, %eax
	je	.L14871
	testb	$1, 18(%r14)
	je	.L17925
.L14871:
	movq	56(%r14), %rbx
	cmpq	$0, 72(%rbx)
	je	.L17926
.L14874:
	movq	72(%rbx), %r11
	movq	$0, (%r11)
	movq	32(%r15), %r12
	movq	%r12, (%r14)
	movq	%r14, 32(%r15)
	movq	-672(%rbp), %r13
	movq	(%r13), %r14
	testq	%r14, %r14
	movq	%r14, -672(%rbp)
	jne	.L14875
.L17001:
	movq	$0, named_labels(%rip)
.L14796:
	movq	current_binding_level(%rip), %rdi
	movq	56(%rdi), %rcx
	testq	%rcx, %rcx
	je	.L14876
	movq	named_label_uses(%rip), %rdx
	testq	%rdx, %rdx
	je	.L14876
.L14882:
	cmpq	%rdi, 8(%rdx)
	je	.L17927
.L14879:
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L14882
.L14876:
	movzbl	66(%rdi), %ecx
	movq	global_binding_level(%rip), %rax
	movl	$7, %r12d
	shrb	$4, %cl
	andl	%ecx, %r12d
	testq	%rax, %rax
	je	.L14883
	cmpq	%rax, %rdi
	je	.L17928
.L14883:
	movq	%rdi, %r8
	movq	free_binding_level(%rip), %rdx
	movq	56(%rdi), %rdi
	movq	%rdi, current_binding_level(%rip)
	movq	%rdx, 56(%r8)
	movzbl	66(%rdi), %r9d
	movq	%r8, free_binding_level(%rip)
	andl	$15, %r9d
	cmpl	$2, %r9d
	je	.L17929
.L14890:
	xorl	%eax, %eax
	testl	%eax, %eax
	je	.L14891
	movq	current_function_decl(%rip), %r14
	movq	%r15, 88(%r14)
.L14892:
	cmpl	$2, %r12d
	je	.L17930
.L14899:
	testq	%r15, %r15
	je	.L14901
	orb	$1, 18(%r15)
.L14901:
	movq	-1072(%rbp), %rcx
	movq	56(%rcx), %r12
	cmpq	$0, 56(%r12)
	je	.L13275
	movq	%rcx, %rdi
	movl	$.LC196, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L13275
.L17930:
	movl	-244(%rbp), %eax
	testl	%eax, %eax
	jne	.L14899
	movq	current_binding_level(%rip), %r15
	movl	-660(%rbp), %esi
	movl	$1, %edx
	xorl	%eax, %eax
	movq	(%r15), %rdi
	call	expand_end_bindings
	movl	-660(%rbp), %edi
	xorl	%esi, %esi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	poplevel
	movq	%rax, %r15
	jmp	.L14899
.L14891:
	testq	%r15, %r15
	je	.L14893
	movl	-248(%rbp), %r13d
	testl	%r13d, %r13d
	jne	.L14892
	movq	current_binding_level(%rip), %rbx
	movq	%r15, %rsi
	movq	40(%rbx), %rdi
.L17374:
	xorl	%eax, %eax
	call	chainon
	movq	%rax, 40(%rbx)
	jmp	.L14892
.L14893:
	cmpq	$0, -656(%rbp)
	je	.L14892
	cmpl	$2, -660(%rbp)
	je	.L17931
	movq	current_binding_level(%rip), %rbx
	movq	-656(%rbp), %rsi
	movq	40(%rbx), %rdi
	jmp	.L17374
.L17931:
	movq	current_binding_level(%rip), %rbx
	movq	-656(%rbp), %rdi
	movq	40(%rbx), %rsi
	jmp	.L17374
.L17929:
	movq	%rdi, class_binding_level(%rip)
.L14886:
	movq	current_binding_level(%rip), %rdi
	movq	56(%rdi), %r10
	movzbl	66(%r10), %ebx
	movq	%r10, current_binding_level(%rip)
	andl	$15, %ebx
	cmpl	$2, %ebx
	je	.L14886
	jmp	.L14890
.L17928:
	movl	$123, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	movq	current_binding_level(%rip), %rdi
	jmp	.L14883
	.p2align 6,,7
.L17927:
	movq	%rcx, 8(%rdx)
	movq	current_binding_level(%rip), %rdi
	movq	(%rcx), %rsi
	movq	%rsi, 24(%rdx)
	jmp	.L14879
.L17926:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	movq	56(%r14), %rbx
	jmp	.L14874
.L17925:
	movq	%r14, %rdi
	movl	$.LC195, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L14871
.L17924:
	xorl	%eax, %eax
	movq	%r14, %rdi
	movl	$.LC190, %esi
	call	error_with_decl
	movq	input_filename(%rip), %r13
	movq	%r13, -256(%rbp)
	xorl	%r13d, %r13d
	movq	56(%r14), %r12
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L14803
	movq	(%rax), %r13
.L14803:
	testq	%r13, %r13
	je	.L14805
	movl	32(%r13), %ecx
	testl	%ecx, %ecx
	jne	.L14804
.L14805:
	movq	named_label_uses(%rip), %rax
	testq	%rax, %rax
	je	.L17214
	movq	current_binding_level(%rip), %rdi
	movq	(%rdi), %rsi
	cmpq	%rsi, 24(%rax)
	je	.L17932
.L14806:
	movq	(%rdi), %rdi
	movq	named_label_uses(%rip), %rdx
	movq	%r13, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	current_binding_level(%rip), %r9
	movq	%rax, named_label_uses(%rip)
	movq	%r9, 8(%rax)
.L14804:
	testq	%r13, %r13
	je	.L14807
	movq	current_function_decl(%rip), %rbx
	cmpq	%rbx, 64(%r13)
	je	.L14817
	testb	$-128, 18(%r13)
	jne	.L14817
	movq	72(%r12), %rax
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L14810
	movq	(%rax), %rbx
.L14810:
	testq	%rbx, %rbx
	jne	.L17933
.L14811:
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	lookup_label
	movq	%rax, %r13
.L14817:
	movq	current_binding_level(%rip), %r10
	andb	$-2, 67(%r10)
	testq	%r13, %r13
	je	.L14820
	movq	current_function_decl(%rip), %r11
	cmpq	%r11, 64(%r13)
	je	.L14820
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%r13, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L17934
.L14822:
	movq	$0, (%rax)
	xorl	%ebx, %ebx
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L14824
	movq	(%rax), %rbx
.L14824:
	testq	%rbx, %rbx
	je	.L14826
	movl	32(%rbx), %eax
	testl	%eax, %eax
	jne	.L14825
.L14826:
	movq	named_label_uses(%rip), %rax
	testq	%rax, %rax
	je	.L17215
	movq	current_binding_level(%rip), %rdi
	movq	(%rdi), %r13
	cmpq	%r13, 24(%rax)
	je	.L17935
.L14827:
	movq	(%rdi), %rdi
	movq	named_label_uses(%rip), %rdx
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	current_binding_level(%rip), %rcx
	movq	%rax, named_label_uses(%rip)
	movq	%rcx, 8(%rax)
.L14825:
	testq	%rbx, %rbx
	je	.L14828
	movq	current_function_decl(%rip), %rsi
	cmpq	%rsi, 64(%rbx)
	je	.L14838
	testb	$-128, 18(%rbx)
	jne	.L14838
	movq	72(%r12), %rax
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L14831
	movq	(%rax), %rbx
.L14831:
	testq	%rbx, %rbx
	jne	.L17936
.L14832:
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	lookup_label
	movq	%rax, %rbx
.L14838:
	movq	%rbx, %r13
.L14820:
	cmpq	$0, 88(%r13)
	jne	.L17937
	movq	error_mark_node(%rip), %rbx
	movq	named_label_uses(%rip), %r12
	movq	%rbx, 88(%r13)
	testq	%r12, %r12
	movq	-256(%rbp), %rdx
	movl	$1, 32(%r13)
	movq	%rdx, 24(%r13)
	movq	$0, -680(%rbp)
	je	.L17003
.L14870:
	cmpq	%r13, 32(%r12)
	je	.L17938
.L14846:
	movq	%r12, -680(%rbp)
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L14870
.L17003:
	movq	$0, current_function_return_value(%rip)
	jmp	.L14871
.L17938:
	movq	current_binding_level(%rip), %rdi
	movq	%rdi, -688(%rbp)
	movq	8(%r12), %rax
.L14867:
	movq	-688(%rbp), %r10
	movq	$0, -696(%rbp)
	cmpq	%rax, %r10
	movq	(%r10), %rbx
	je	.L17939
.L14853:
	cmpq	-696(%rbp), %rbx
	je	.L17005
.L14865:
	cmpb	$33, 16(%rbx)
	je	.L17940
.L14857:
	movq	(%rbx), %rbx
	cmpq	-696(%rbp), %rbx
	jne	.L14865
	movq	8(%r12), %rax
.L17005:
	cmpq	%rax, -688(%rbp)
	je	.L14850
	movq	-688(%rbp), %rdx
	movq	56(%rdx), %r8
	movq	%r8, -688(%rbp)
	jmp	.L14867
.L14850:
	cmpq	$0, -680(%rbp)
	je	.L14868
	movq	(%r12), %rdi
	movq	-680(%rbp), %rbx
	movq	%rdi, (%rbx)
	jmp	.L14846
.L14868:
	movq	(%r12), %r10
	movq	%r10, named_label_uses(%rip)
	jmp	.L14846
	.p2align 6,,7
.L17940:
	movq	56(%rbx), %rcx
	movl	$.LC192, %edi
	cld
	movq	32(%rcx), %rsi
	movl	$6, %ecx
	repz
	cmpsb
	je	.L14857
	movq	88(%rbx), %rax
	testq	%rax, %rax
	je	.L14859
	cmpq	error_mark_node(%rip), %rax
	je	.L14859
.L14858:
	movq	72(%r13), %rdx
	testq	%rdx, %rdx
	je	.L14862
	cmpq	$0, 32(%rdx)
	jne	.L14860
.L14862:
	movq	%r13, %rdi
	movl	$.LC193, %esi
	xorl	%eax, %eax
	call	error_with_decl
	movq	72(%r13), %rdx
.L14860:
	testq	%rdx, %rdx
	je	.L17941
.L14864:
	movq	current_function_decl(%rip), %r9
	movq	%rbx, %rdi
	movl	$.LC194, %esi
	xorl	%eax, %eax
	movq	%r9, 32(%rdx)
	call	error_with_decl
	jmp	.L14857
.L17941:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r13)
	movq	%rax, %rdx
	jmp	.L14864
.L14859:
	movq	8(%rbx), %rsi
	testb	$16, 46(%rsi)
	je	.L14857
	jmp	.L14858
.L17939:
	movq	24(%r12), %r11
	movq	%r11, -696(%rbp)
	jmp	.L14853
.L17937:
	movq	%r13, %rdi
	movl	$.LC191, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L14871
.L17936:
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L17942
.L14834:
	movq	$0, (%rax)
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L17943
.L14836:
	movq	$0, (%rax)
	jmp	.L14832
.L17943:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	jmp	.L14836
.L17942:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L14834
	.p2align 6,,7
.L14828:
	movq	void_type_node(%rip), %rdx
	xorl	%eax, %eax
	movl	$30, %edi
	movq	%r12, %rsi
	call	build_decl
	movq	current_function_decl(%rip), %r8
	movq	%rax, %rbx
	movb	$0, 52(%rax)
	movq	input_filename(%rip), %r9
	movq	%r8, 64(%rax)
	movl	lineno(%rip), %eax
	movq	%r9, 24(%rbx)
	movl	%eax, 32(%rbx)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L17944
.L14840:
	movq	named_labels(%rip), %rdx
	movq	%rbx, (%rax)
	xorl	%edi, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	named_label_uses(%rip), %r12
	movq	%rax, named_labels(%rip)
	movq	%rbx, 32(%r12)
	jmp	.L14838
.L17944:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L14840
	.p2align 6,,7
.L17935:
	cmpq	%rbx, 32(%rax)
	je	.L14825
	jmp	.L14827
	.p2align 6,,7
.L17215:
	movq	current_binding_level(%rip), %rdi
	jmp	.L14827
.L17934:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L14822
.L17933:
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L17945
.L14813:
	movq	$0, (%rax)
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L17946
.L14815:
	movq	$0, (%rax)
	jmp	.L14811
.L17946:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	jmp	.L14815
.L17945:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L14813
	.p2align 6,,7
.L14807:
	movq	void_type_node(%rip), %rdx
	xorl	%eax, %eax
	movl	$30, %edi
	movq	%r12, %rsi
	call	build_decl
	movq	current_function_decl(%rip), %rdx
	movq	%rax, %rbx
	movb	$0, 52(%rax)
	movq	input_filename(%rip), %r8
	movq	%rdx, 64(%rax)
	movl	lineno(%rip), %eax
	movq	%r8, 24(%rbx)
	movl	%eax, 32(%rbx)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L17947
.L14819:
	movq	named_labels(%rip), %rdx
	movq	%rbx, (%rax)
	xorl	%edi, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	movq	%rbx, %r13
	call	tree_cons
	movq	named_label_uses(%rip), %rdi
	movq	%rax, named_labels(%rip)
	movq	%rbx, 32(%rdi)
	jmp	.L14817
.L17947:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L14819
.L17932:
	cmpq	%r13, 32(%rax)
	je	.L14804
	jmp	.L14806
.L17214:
	movq	current_binding_level(%rip), %rdi
	jmp	.L14806
.L17923:
	movq	%r12, 32(%r15)
	movq	%r13, 40(%r15)
	movq	%r15, %rdi
	movq	-656(%rbp), %r13
	xorl	%eax, %eax
	movq	%r13, 48(%r15)
	call	remember_end_note
	jmp	.L14765
.L14761:
	cmpl	$1, -660(%rbp)
	je	.L14764
	xorl	%eax, %eax
	testl	%eax, %eax
	je	.L14762
.L14764:
	movl	$5, %edi
	xorl	%eax, %eax
	call	make_node
	movq	%rax, %r15
	jmp	.L14762
.L17922:
	cmpq	$0, 88(%rbx)
	je	.L14757
	testb	$8, 17(%rbx)
	je	.L14757
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	output_inline_function
	jmp	.L14757
.L17921:
	movq	(%rbx), %rdi
	call	nreverse
	movq	%rax, %r12
	movq	%rax, (%rbx)
	jmp	.L14754
.L17920:
	movq	-1072(%rbp), %rdi
	xorl	%eax, %eax
	call	cadillac_start_decl
	jmp	.L14306
.L17919:
	movl	debug_temp_inits(%rip), %r10d
	testl	%r10d, %r10d
	je	.L14735
	movq	-600(%rbp), %rsi
	testb	$16, 46(%rsi)
	jne	.L14735
	cmpb	$15, 16(%rsi)
	je	.L14735
	xorl	%eax, %eax
	call	temporary_allocation
	jmp	.L14735
	.p2align 6,,7
.L17918:
	movq	80(%r13), %rax
	movq	64(%rax), %rdx
	testq	%rdx, %rdx
	jne	.L17948
	movzbl	16(%rax), %eax
	cmpb	$29, %al
	je	.L17949
	subb	$32, %al
	cmpb	$1, %al
	ja	.L14733
	movl	$.LC153, %edi
	xorl	%eax, %eax
	call	sorry
.L17373:
	movq	$0, -1072(%rbp)
	jmp	.L14306
.L14733:
	movl	$14, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L14692
.L17949:
	movq	-1072(%rbp), %rcx
	xorl	%r15d, %r15d
	movq	56(%rcx), %r13
	movq	40(%r13), %r12
	orb	$32, 54(%rcx)
	testq	%r12, %r12
	je	.L14698
	movzbl	16(%r12), %edx
	cmpb	$3, %dl
	je	.L14699
.L17508:
	movq	152(%rcx), %rbx
	cmpb	$0, (%rbx)
	jne	.L14700
	cmpb	$29, %dl
	je	.L17950
	movl	$9, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L14700:
	testl	%r15d, %r15d
	je	.L14704
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	jne	.L14704
	testb	$4, 17(%r12)
	jne	.L17951
.L14704:
	movzbl	16(%r12), %eax
	cmpb	$106, %al
	je	.L17952
.L14706:
	cmpb	$29, %al
	je	.L17953
.L14707:
	movl	pedantic(%rip), %ebx
	testl	%ebx, %ebx
	je	.L14711
	cmpb	$33, 16(%r12)
	je	.L17954
.L14711:
	movq	%r13, %rdi
	movq	%r12, %rsi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	tree_cons
	movq	-1072(%rbp), %rsi
	movq	24(%rax), %rdi
	movq	%rax, %rdx
.L17370:
	xorl	%eax, %eax
	call	tree_cons
	movq	unknown_type_node(%rip), %r12
	movq	%rax, 40(%r13)
	movq	%r12, 8(%rax)
	jmp	.L14692
.L17954:
	movq	tree_code_type(%rip), %r9
	movl	$143, %esi
	movq	264(%r9), %r15
	cmpb	$100, (%r15)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	xorl	%eax, %eax
	movl	$.LC151, %esi
	movq	%r12, %rdi
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC152, %esi
	movq	-1072(%rbp), %rdi
	call	error_with_decl
	jmp	.L14711
.L17953:
	movq	-1072(%rbp), %rsi
	movq	152(%r12), %r10
	movq	152(%rsi), %rax
	movzbl	(%rax), %r9d
	cmpb	%r9b, (%r10)
	je	.L14707
	movq	8(%r12), %rdi
	movq	8(%rsi), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L14707
	movq	current_lang_base(%rip), %rsi
	cmpq	%rsi, current_lang_stack(%rip)
	je	.L17955
	movq	-1072(%rbp), %rdi
	movl	$.LC149, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC150, %esi
	movq	%r12, %rdi
	call	error_with_decl
	jmp	.L14707
.L17955:
	movq	152(%r12), %rdi
	movq	-1072(%rbp), %rdx
	movzbl	(%rdi), %ecx
	movq	152(%rdx), %r14
	movq	%r12, -1072(%rbp)
	movb	%cl, (%r14)
	jmp	.L14692
.L17952:
	movq	32(%r12), %r12
	movzbl	16(%r12), %eax
	jmp	.L14706
.L17951:
	movq	global_binding_level(%rip), %r15
	cmpq	%r15, current_binding_level(%rip)
	je	.L14704
	movq	overloads_to_forget(%rip), %rdx
	movq	%r13, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, overloads_to_forget(%rip)
	jmp	.L14704
.L17950:
	movq	152(%r12), %r8
	cmpb	$0, (%r8)
	jne	.L14700
	movq	%rcx, %rdi
	movl	$.LC147, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC148, %esi
	movq	%r12, %rdi
	call	error_with_decl
	jmp	.L14700
.L14699:
	cmpq	$0, 32(%r12)
	jne	.L14712
.L17371:
	movq	-1072(%rbp), %r13
	movq	%r13, 32(%r12)
	jmp	.L14692
.L14712:
	movq	-1072(%rbp), %rsi
	cmpb	$-127, 16(%rsi)
	je	.L14698
	movq	112(%rsi), %r14
	movq	%r12, %rbx
.L14720:
	movq	32(%rbx), %rcx
	cmpb	$29, 16(%rcx)
	je	.L17956
.L14718:
	cmpb	$-127, 16(%rcx)
	je	.L14716
	cmpq	%r14, 112(%rcx)
	je	.L14692
.L14716:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L14720
.L14698:
	movq	-1072(%rbp), %r14
	movq	152(%r14), %rsi
	cmpb	$0, (%rsi)
	jne	.L14721
	testq	%r12, %r12
	movq	%r12, %rbx
	je	.L14721
	movq	32(%r12), %rdx
	movq	152(%rdx), %rdi
	cmpb	$1, (%rdi)
	je	.L14726
.L14723:
	testq	%rbx, %rbx
	jne	.L17957
.L14721:
	testl	%r15d, %r15d
	je	.L14728
	movl	flag_traditional(%rip), %ebx
	testl	%ebx, %ebx
	jne	.L14728
	testq	%r12, %r12
	je	.L14729
	testb	$4, 17(%r12)
	jne	.L14729
.L14728:
	movq	%r13, %rdi
	movq	-1072(%rbp), %rsi
	movq	%r12, %rdx
	jmp	.L17370
.L14729:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L14728
	testb	$32, 67(%rax)
	jne	.L14728
	movq	overloads_to_forget(%rip), %rdx
	movq	%r13, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, overloads_to_forget(%rip)
	jmp	.L14728
.L17957:
	movq	-1072(%rbp), %rdi
	movl	$.LC147, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC148, %esi
	movq	32(%rbx), %rdi
	call	error_with_decl
	jmp	.L14721
.L14726:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	je	.L14721
	movq	32(%rbx), %r9
	movq	152(%r9), %r8
	cmpb	$1, (%r8)
	je	.L14726
	jmp	.L14723
.L17956:
	movq	-1072(%rbp), %rsi
	movq	152(%rcx), %r11
	movq	152(%rsi), %rax
	movzbl	(%rax), %r10d
	cmpb	%r10b, (%r11)
	je	.L14718
	movq	8(%rcx), %rdi
	movq	8(%rsi), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	jne	.L17958
.L17212:
	movq	32(%rbx), %rcx
	jmp	.L14718
.L17958:
	movq	-1072(%rbp), %rdi
	movl	$.LC149, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC150, %esi
	movq	32(%rbx), %rdi
	call	error_with_decl
	jmp	.L17212
	.p2align 6,,7
.L17948:
	cmpb	$-124, 16(%rdx)
	movl	$145, %esi
	sete	%r13b
	xorl	%eax, %eax
	movzbl	%r13b, %edi
	call	my_friendly_assert
	jmp	.L14306
.L17917:
	testb	$32, 54(%r13)
	je	.L14657
	movq	-1072(%rbp), %rcx
	movl	$1, %r15d
	movq	56(%rcx), %r13
	movq	40(%r13), %r12
	orb	$32, 54(%rcx)
	testq	%r12, %r12
	je	.L14658
	movzbl	16(%r12), %edx
	cmpb	$3, %dl
	jne	.L17508
	cmpq	$0, 32(%r12)
	je	.L17371
	movq	-1072(%rbp), %rsi
	cmpb	$-127, 16(%rsi)
	je	.L14658
	movq	112(%rsi), %r14
	movq	%r12, %rbx
.L14680:
	movq	32(%rbx), %rcx
	cmpb	$29, 16(%rcx)
	je	.L17959
.L14678:
	cmpb	$-127, 16(%rcx)
	je	.L14676
	cmpq	%r14, 112(%rcx)
	je	.L14692
.L14676:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L14680
.L14658:
	movq	-1072(%rbp), %r11
	movq	152(%r11), %rsi
	cmpb	$0, (%rsi)
	jne	.L14721
	testq	%r12, %r12
	movq	%r12, %rbx
	je	.L14721
	movq	32(%r12), %r14
	movq	152(%r14), %rcx
	cmpb	$1, (%rcx)
	jne	.L14723
.L14686:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	je	.L14721
	movq	32(%rbx), %rdi
	movq	152(%rdi), %rdx
	cmpb	$1, (%rdx)
	je	.L14686
	jmp	.L14723
.L17959:
	movq	-1072(%rbp), %rsi
	movq	152(%rcx), %r8
	movq	152(%rsi), %r9
	movzbl	(%r9), %edi
	cmpb	%dil, (%r8)
	je	.L14678
	movq	8(%rcx), %rdi
	movq	8(%rsi), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	jne	.L17960
.L17211:
	movq	32(%rbx), %rcx
	jmp	.L14678
.L17960:
	movq	-1072(%rbp), %rdi
	movl	$.LC149, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC150, %esi
	movq	32(%rbx), %rdi
	call	error_with_decl
	jmp	.L17211
	.p2align 6,,7
.L17916:
	xorl	%eax, %eax
	movq	%r13, %rdi
	movq	%rcx, %rsi
	call	value_member
	testq	%rax, %rax
	je	.L14635
	movq	32(%rax), %rsi
	movq	%rsi, -1072(%rbp)
	jmp	.L17209
.L14635:
	cmpq	$0, -1072(%rbp)
	je	.L17098
	movq	-1072(%rbp), %r9
	cmpb	$29, 16(%r13)
	movq	%r13, -104(%rbp)
	movq	%r13, %rdi
	movq	32(%r9), %rsi
	movq	%rsi, -128(%rbp)
	je	.L17961
.L14639:
	movq	8(%rdi), %rdi
	cmpq	error_mark_node(%rip), %rdi
	je	.L17962
	movq	8(%rsi), %rsi
	testq	%rsi, %rsi
	jne	.L14652
	testq	%rdi, %rdi
.L17369:
	sete	%dl
	movzbl	%dl, %eax
.L14646:
	testl	%eax, %eax
	jne	.L17963
	movq	-1072(%rbp), %r8
	movq	(%r8), %rdi
	movq	%rdi, -1072(%rbp)
	jmp	.L14635
.L17963:
	cmpq	$0, -1072(%rbp)
	jne	.L14655
.L17098:
	movq	%r13, -1072(%rbp)
	jmp	.L17209
.L14655:
	movq	-1072(%rbp), %rbx
	movq	32(%rbx), %rax
	movq	%rax, -1072(%rbp)
	jmp	.L17209
.L14652:
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	jmp	.L14646
.L17962:
	cmpq	%rdi, 8(%rsi)
	jmp	.L17369
.L17961:
	cmpb	$29, 16(%rsi)
	jne	.L14639
	movq	8(%r13), %rcx
	movq	8(%rsi), %rdx
	cmpb	$16, 16(%rcx)
	movq	24(%rcx), %r12
	movq	%rcx, -96(%rbp)
	movq	24(%rdx), %r15
	movq	%rdx, -120(%rbp)
	movq	%rdx, %r8
	movq	%r12, -112(%rbp)
	movq	%r15, -136(%rbp)
	je	.L17964
.L14640:
	cmpb	$16, 16(%r8)
	je	.L17965
.L14641:
	movzbl	16(%rcx), %eax
	cmpb	16(%rdx), %al
	je	.L14643
	cmpb	$14, %al
	je	.L17966
	movq	-104(%rbp), %rdi
	movl	$.LC2, %esi
.L17368:
	xorl	%eax, %eax
	call	compiler_error_with_decl
.L14647:
	xorl	%eax, %eax
	jmp	.L14646
.L17966:
	movq	-104(%rbp), %rdi
	movl	$.LC1, %esi
	jmp	.L17368
.L14643:
	movq	8(%rcx), %r14
	xorl	%eax, %eax
	movq	8(%rdx), %rcx
	movl	$1, %edx
	movq	112(%r14), %rdi
	movq	112(%rcx), %rsi
	call	comptypes
	testl	%eax, %eax
	je	.L14647
	movq	-112(%rbp), %rdi
	movq	-136(%rbp), %rsi
	movl	$1, %edx
	xorl	%eax, %eax
	call	compparms
	jmp	.L14646
.L17965:
	movq	152(%rdi), %r11
	testb	$32, 1(%r11)
	je	.L14641
	leaq	-120(%rbp), %rdi
	leaq	-128(%rbp), %rsi
	leaq	-136(%rbp), %rdx
.L17367:
	xorl	%eax, %eax
	call	revert_static_member_fn
	movq	-96(%rbp), %rcx
	movq	-120(%rbp), %rdx
	jmp	.L14641
.L17964:
	movq	152(%rsi), %r10
	testb	$32, 1(%r10)
	je	.L14640
	leaq	-96(%rbp), %rdi
	leaq	-104(%rbp), %rsi
	leaq	-112(%rbp), %rdx
	jmp	.L17367
	.p2align 6,,7
.L17198:
	movzbl	16(%r13), %edx
.L14379:
	cmpb	$32, %dl
	je	.L17307
.L14387:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L14525
	movq	-616(%rbp), %r12
	movq	40(%r12), %rax
	testq	%rax, %rax
	je	.L14525
	testb	$1, 53(%rax)
	jne	.L14526
	testb	$8, 18(%rax)
	je	.L14525
.L14526:
	andb	$8, %dl
	je	.L17967
.L14525:
	movl	flag_traditional(%rip), %edx
	testl	%edx, %edx
	je	.L17206
	testb	$1, 53(%r13)
	je	.L17206
	xorl	%r12d, %r12d
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L14529
	movq	-616(%rbp), %r10
	movq	48(%r10), %r14
	testq	%r14, %r14
	movq	%r14, %rcx
	jne	.L14530
.L14529:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L14531
	movq	-616(%rbp), %r11
	movq	56(%r11), %rcx
	testq	%rcx, %rcx
	jne	.L17096
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L14532
	movq	144(%rdi), %rsi
	testb	$1, 3(%rsi)
	jne	.L17968
.L14532:
	testq	%rcx, %rcx
	jne	.L17096
.L17097:
	movq	-616(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17096
	movq	-616(%rbp), %rdi
	movq	40(%rdi), %rcx
.L14530:
	testq	%rcx, %rcx
	je	.L17145
.L17096:
	cmpb	$32, 16(%rcx)
	je	.L14534
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L14534
	movq	-616(%rbp), %r8
	movq	8(%r8), %rax
	testq	%rax, %rax
	je	.L14542
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17364
	testl	%r12d, %r12d
	jle	.L17969
.L17364:
	movq	%rax, %rcx
.L14534:
	testq	%rcx, %rcx
	jne	.L17206
.L17145:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -640(%rbp)
.L14528:
	cmpq	%rax, -640(%rbp)
	je	.L17970
	movq	current_binding_level(%rip), %rbx
	movq	-616(%rbp), %rsi
	cmpq	%rax, %rbx
	movq	48(%rsi), %r14
	movq	40(%rsi), %r12
	movq	%rsi, %rdi
	je	.L17971
.L17365:
	movq	16(%rbx), %rdx
	movq	%r14, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%rbx)
.L14573:
	movq	-616(%rbp), %rdx
	testq	%r14, %r14
	movq	%r13, 48(%rdx)
	je	.L17972
.L14584:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L14586
	testq	%r14, %r14
	je	.L14587
	testb	$1, 53(%r13)
	jne	.L14587
	cmpb	$34, 16(%r14)
	je	.L17973
.L14587:
	movl	warn_shadow(%rip), %r15d
	testl	%r15d, %r15d
	je	.L14586
	testb	$1, 53(%r13)
	jne	.L14586
	movl	32(%r13), %ecx
	testl	%ecx, %ecx
	je	.L14586
	testq	%rax, %rax
	jne	.L14586
	xorl	%edi, %edi
	testq	%r14, %r14
	je	.L14592
	cmpb	$34, 16(%r14)
	je	.L17974
.L14592:
	movq	-616(%rbp), %r10
	cmpq	$0, 56(%r10)
	je	.L14594
	movl	$.LC41, %edi
.L14593:
	testq	%rdi, %rdi
	jne	.L17975
.L14586:
	testq	%r14, %r14
	je	.L17207
	movq	-640(%rbp), %rbx
	movq	-616(%rbp), %rdi
	movq	%r14, %rsi
	xorl	%eax, %eax
	movq	16(%rbx), %rdx
	call	tree_cons
	movq	-640(%rbp), %r14
	movq	%rax, 16(%r14)
.L17207:
	movzbl	16(%r13), %edx
.L14571:
	leal	-128(%rdx), %esi
	cmpb	$1, %sil
	jbe	.L14359
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L14359
	cmpb	$18, 16(%rcx)
	je	.L17976
.L14603:
	testb	$64, 46(%rcx)
	je	.L14359
.L14602:
	movq	-640(%rbp), %r12
	movzwl	64(%r12), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%r12)
	je	.L17977
.L17208:
	movzbl	16(%r13), %edx
.L14359:
	cmpb	$32, %dl
	je	.L17978
.L14605:
	movq	-640(%rbp), %r14
	cmpq	global_binding_level(%rip), %r14
	movq	(%r14), %rbx
	movq	%rbx, (%r13)
	movq	%r13, (%r14)
	je	.L17979
.L14631:
	movq	%r13, -1072(%rbp)
	jmp	.L14378
.L17979:
	testb	$4, 17(%r13)
	jne	.L14631
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L14631
	.p2align 6,,7
.L17978:
	cmpq	$0, -616(%rbp)
	je	.L14605
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L14606
	cmpq	class_binding_level(%rip), %rax
	je	.L14607
	movq	-616(%rbp), %r8
	movq	48(%r8), %rax
	testq	%rax, %rax
	je	.L14611
	cmpb	$32, 16(%rax)
	je	.L14609
.L14611:
	cmpq	$0, current_class_type(%rip)
	je	.L14606
	movq	-616(%rbp), %rcx
	movq	56(%rcx), %rax
	testq	%rax, %rax
	je	.L14606
	cmpb	$32, 16(%rax)
	je	.L14609
.L14606:
	movq	-616(%rbp), %rsi
	movq	40(%rsi), %rax
	testq	%rax, %rax
	je	.L14610
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L14609
	cmpb	$-127, %dl
	je	.L17980
.L14610:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L14605
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L17981
.L14617:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L14621
	cmpq	class_binding_level(%rip), %rax
	je	.L14622
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L14626
	cmpb	$32, 16(%rax)
	je	.L14624
.L14626:
	cmpq	$0, current_class_type(%rip)
	je	.L14621
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L14621
	cmpb	$32, 16(%rax)
	je	.L14624
.L14621:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L14605
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L14624
	cmpb	$-127, %dl
	jne	.L14605
	movq	$0, 8(%rbx)
	jmp	.L14605
.L14624:
	movq	8(%rax), %rdx
	movq	%rdx, 8(%rbx)
	jmp	.L14605
.L14622:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L14626
.L17981:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %r12
	sete	%r11b
	movq	8(%r13), %r15
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r14)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%r14), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L14617
.L17980:
	movq	$0, 8(%rsi)
	jmp	.L14610
.L14609:
	movq	8(%rax), %r15
	movq	-616(%rbp), %r9
	movq	%r15, 8(%r9)
	jmp	.L14610
.L14607:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L14611
.L17977:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L17208
.L17976:
	movq	8(%rcx), %rdi
	testb	$64, 46(%rdi)
	jne	.L14602
	jmp	.L14603
.L17975:
	movq	-616(%rbp), %rdx
	movq	32(%rdx), %rsi
.L17366:
	xorl	%eax, %eax
	call	warning
	jmp	.L14586
.L14594:
	testq	%r14, %r14
	je	.L14596
	movl	$.LC42, %edi
	jmp	.L14593
.L14596:
	testq	%r12, %r12
	movl	$.LC43, %r11d
	cmovne	%r11, %rdi
	jmp	.L14593
.L17974:
	movl	$.LC40, %edi
	jmp	.L14593
.L17973:
	cmpb	$34, 16(%r13)
	je	.L14587
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r12
	movq	56(%r12), %rax
	je	.L14588
	movq	56(%rax), %rax
.L14588:
	movzbl	66(%rax), %r8d
	andl	$15, %r8d
	decl	%r8d
	jne	.L14586
	movq	-616(%rbp), %r9
	movl	$.LC40, %edi
	movq	32(%r9), %rsi
	jmp	.L17366
.L17972:
	movzbl	53(%r13), %edi
	andb	$9, %dil
	decb	%dil
	je	.L17982
.L14576:
	testq	%r14, %r14
	jne	.L14584
	testq	%r12, %r12
	jne	.L14584
	testb	$1, 53(%r13)
	je	.L14584
	testb	$8, 18(%r13)
	je	.L14584
	movq	-616(%rbp), %rax
	orb	$8, 18(%rax)
	jmp	.L14584
.L17982:
	testq	%r12, %r12
	je	.L14576
	cmpb	$29, 16(%r13)
	jne	.L14576
	cmpb	$29, 16(%r12)
	jne	.L14576
	movq	8(%r13), %rdi
	movq	8(%r12), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L17983
	movzbl	53(%r12), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L14579
	movzbl	53(%r13), %ebx
	leal	0(,%rax,8), %r8d
	leaq	88(%r13), %rdx
	andb	$-9, %bl
	orb	%r8b, %bl
	movb	%bl, 53(%r13)
	cmpq	%r12, current_function_decl(%rip)
	je	.L14580
	movq	88(%r12), %rax
.L14581:
	movq	%rax, (%rdx)
	movq	72(%r12), %rsi
	movq	80(%r12), %r11
	movq	136(%r12), %rdx
	movzbl	17(%r13), %r9d
	movq	%rsi, 72(%r13)
	movq	%r11, 80(%r13)
	movq	%rdx, 136(%r13)
	movzbl	17(%r12), %r10d
	movq	%r12, 96(%r13)
	andb	$127, %r9b
	shrb	$7, %r10b
	movzbl	%r10b, %r15d
	movl	%r15d, %ecx
	salb	$7, %cl
	orb	%cl, %r9b
	movb	%r9b, 17(%r13)
	movzbl	53(%r12), %ecx
.L14579:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L14582
	movzbl	53(%r13), %edi
	salb	$4, %al
	andb	$-17, %dil
	orb	%al, %dil
	movb	%dil, 53(%r13)
	movl	128(%r12), %eax
	movl	%eax, 128(%r13)
.L14582:
	movq	8(%r12), %rdx
	cmpq	$0, 24(%rdx)
	je	.L14576
	cmpq	$0, 88(%r12)
	je	.L14576
	movq	8(%r13), %rbx
	cmpq	$0, 24(%rbx)
	jne	.L14576
	movq	%rdx, 8(%r13)
	jmp	.L14576
.L14580:
	xorl	%eax, %eax
	jmp	.L14581
.L17983:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L14576
	.p2align 6,,7
.L17971:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L14573
	movq	-616(%rbp), %rdi
	jmp	.L17365
	.p2align 6,,7
.L17970:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L17984
.L14548:
	movq	-616(%rbp), %rsi
	cmpq	$0, 40(%rsi)
	jne	.L14549
	testb	$8, 18(%r13)
	je	.L14549
	orb	$8, 18(%rsi)
.L14549:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L17985
.L14551:
	movq	-616(%rbp), %r12
	movq	%r13, 40(%r12)
	movzbl	16(%r13), %edx
.L14550:
	movq	-616(%rbp), %r15
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L14562
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L14552
	testb	$1, 18(%rcx)
	je	.L14552
	orb	$1, 18(%r13)
	movq	-616(%rbp), %r14
	movq	72(%r14), %rax
.L14552:
	testq	%rax, %rax
	je	.L14562
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L14557
	testb	$8, 17(%rcx)
	je	.L14557
	orb	$8, 17(%r13)
	movq	-616(%rbp), %r10
	movq	72(%r10), %rax
.L14557:
	testq	%rax, %rax
	je	.L14562
	cmpq	$0, 8(%rax)
	je	.L14562
	cmpb	$29, %dl
	je	.L17986
.L14565:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L14562:
	movq	-616(%rbp), %rbx
	testb	$8, 18(%rbx)
	je	.L14571
	cmpb	$32, %dl
	je	.L14571
	testb	$8, 18(%r13)
	jne	.L14571
	testb	$1, 53(%r13)
	jne	.L14571
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L14567
	cmpq	$0, 8(%rax)
	jne	.L17987
.L14567:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L17455:
	xorl	%eax, %eax
	call	warning
	jmp	.L17207
.L17987:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L17455
.L17986:
	movq	8(%r13), %rsi
	movq	integer_type_node(%rip), %r11
	cmpq	%r11, 8(%rsi)
	jne	.L14565
	jmp	.L14562
.L17985:
	cmpq	$0, -1072(%rbp)
	je	.L14551
	movq	-1072(%rbp), %rcx
	cmpb	$32, 16(%rcx)
	jne	.L14550
	jmp	.L14551
.L17984:
	testb	$8, 54(%r13)
	jne	.L14548
	andb	$-9, 18(%r13)
	jmp	.L14548
	.p2align 6,,7
.L17206:
	movq	global_binding_level(%rip), %rax
	jmp	.L14528
.L17969:
	testl	%edx, %edx
	jg	.L17364
	testl	%r12d, %r12d
	je	.L14534
	movq	-616(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17364
.L14542:
	movq	8(%rcx), %r9
	cmpq	error_mark_node(%rip), %r9
	cmove	%r9, %rcx
	jmp	.L14534
.L17968:
	xorl	%ecx, %ecx
	movq	-616(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L14534
	testq	%rax, %rax
	je	.L17097
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L14532
.L14531:
	movq	-616(%rbp), %rbx
	movq	40(%rbx), %rcx
	jmp	.L14530
.L17967:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L14525
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	-616(%rbp), %r15
	movq	40(%r15), %rdi
	call	warning_with_decl
	jmp	.L14525
	.p2align 6,,7
.L17307:
	movq	8(%r13), %rcx
	movq	80(%rcx), %rbx
	testq	%rbx, %rbx
	movq	%rbx, -632(%rbp)
	je	.L14389
	movzbl	16(%rbx), %edx
	cmpb	$32, %dl
	je	.L14388
.L14389:
	movq	global_binding_level(%rip), %rbx
	movq	%r13, -632(%rbp)
	cmpq	%rbx, current_binding_level(%rip)
	jne	.L17199
	movq	%r13, 80(%rcx)
.L17199:
	movzbl	16(%r13), %edx
.L14392:
	cmpb	$32, %dl
	movl	$140, %esi
	sete	%bl
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	movq	-632(%rbp), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L14516
	cmpq	$0, 72(%rsi)
	je	.L17988
.L14516:
	movq	8(%r13), %r14
	movq	80(%r14), %rax
	testq	%rax, %rax
	je	.L14387
	cmpq	$0, 56(%rax)
	je	.L14387
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %r12
	cmpq	global_binding_level(%rip), %rbx
	je	.L17989
.L17363:
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L14522:
	movq	%r14, 8(%r12)
	jmp	.L14387
.L17989:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L14522
	jmp	.L17363
.L17988:
	cmpb	$32, 16(%r13)
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	sete	%cl
	movq	8(%r13), %r14
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L14517
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r14, 8(%rax)
	jmp	.L14516
.L14517:
	movq	%rbx, 72(%r13)
	jmp	.L14516
.L14388:
	movq	-632(%rbp), %rsi
	movq	56(%rsi), %r14
	movq	current_binding_level(%rip), %rsi
	cmpq	global_binding_level(%rip), %rsi
	jne	.L14392
	movq	32(%r14), %rax
	cmpb	$36, (%rax)
	jne	.L14392
	cmpb	$95, 1(%rax)
	jne	.L14392
	movq	class_binding_level(%rip), %rax
	movq	%r13, 80(%rcx)
	movq	8(%r13), %r15
	testq	%rax, %rax
	movq	%rax, -624(%rbp)
	movq	%r15, -224(%rbp)
	jne	.L14396
	testb	$-128, 66(%rsi)
	movq	%rsi, -624(%rbp)
	je	.L14396
.L14400:
	movq	-624(%rbp), %r12
	movq	56(%r12), %r11
	testb	$-128, 66(%r11)
	movq	%r11, -624(%rbp)
	jne	.L14400
.L14396:
	movq	-624(%rbp), %rcx
	cmpq	global_binding_level(%rip), %rcx
	je	.L17990
	movq	-624(%rbp), %r10
	movq	-224(%rbp), %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	8(%r10), %rdx
	call	saveable_tree_cons
	movq	-624(%rbp), %rdx
	movq	%rax, 8(%rdx)
.L14402:
	testq	%r14, %r14
	je	.L14403
	movq	-224(%rbp), %rsi
	cmpq	$0, 80(%rsi)
	jne	.L14404
	movq	%r14, 80(%rsi)
.L14404:
	movq	-224(%rbp), %rax
	cmpq	%rax, 8(%r14)
	je	.L14405
	cmpb	$21, 16(%rax)
	je	.L17991
.L14406:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L14408
	cmpq	$0, 32(%rax)
	je	.L14407
.L14408:
	movq	lang_name_cplusplus(%rip), %rsi
	cmpq	%rsi, current_lang_name(%rip)
	je	.L17992
.L14409:
	xorl	%ecx, %ecx
.L14444:
	testq	%rcx, %rcx
	jne	.L14445
.L17144:
	movq	-224(%rbp), %rdx
	movl	$32, %edi
	movq	%r14, %rsi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-224(%rbp), %rdi
	movq	%rax, %r15
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	current_binding_level(%rip), %rbx
	movl	$0, 32(%r15)
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, 112(%r15)
	je	.L17993
.L17360:
	movq	8(%r14), %rsi
	movq	32(%rbx), %rdx
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L14447:
	movq	-224(%rbp), %rdx
	movq	%rdx, 8(%r14)
.L14450:
	movq	32(%r14), %rax
	cmpb	$36, (%rax)
	je	.L17994
.L14452:
	movq	-224(%rbp), %r10
	movq	80(%r10), %rdx
	testq	%rdx, %rdx
	je	.L14483
	cmpb	$32, 16(%rdx)
	je	.L17995
.L14453:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L14472
	movq	56(%r15), %r12
	testq	%r12, %r12
	je	.L17203
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L14474
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L14474:
	movq	decl_obstack+24(%rip), %rdx
	movq	%r15, 56(%r12)
	leaq	8(%rdx), %rcx
	cmpq	decl_obstack+32(%rip), %rcx
	ja	.L17996
.L14476:
	movq	%rdx, %r8
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%r15, (%r8)
	cmpb	$32, 16(%r15)
	je	.L17997
.L17203:
	movq	32(%r14), %rax
.L14483:
	cmpb	$36, (%rax)
	je	.L17998
.L14497:
	movq	current_class_type(%rip), %rdx
	movq	-224(%rbp), %r12
	testq	%rdx, %rdx
	movq	%r15, 80(%r12)
	jne	.L14500
	cmpq	$0, current_function_decl(%rip)
	je	.L14499
.L14500:
	movq	lang_name_cplusplus(%rip), %r8
	cmpq	%r8, current_lang_name(%rip)
	je	.L14498
.L14499:
	movq	%r14, 72(%r15)
.L14405:
	movq	-624(%rbp), %rcx
	movzbl	66(%rcx), %r15d
	andl	$15, %r15d
	cmpl	$2, %r15d
	je	.L17999
.L14403:
	movq	-224(%rbp), %rsi
	movq	80(%rsi), %rax
	cmpb	$32, 16(%rax)
	je	.L18000
	movq	-224(%rbp), %rdx
	xorl	%esi, %esi
	movl	$32, %edi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-224(%rbp), %rsi
	movq	%rax, (%rsi)
	movq	-632(%rbp), %r11
	movzbl	16(%r11), %edx
	jmp	.L14392
.L18000:
	movq	%rax, (%rsi)
	movq	-632(%rbp), %rdi
	movzbl	16(%rdi), %edx
	jmp	.L14392
.L17999:
	movq	-224(%rbp), %rax
	orb	$64, 18(%rax)
	movq	80(%rax), %rdx
	movq	current_class_type(%rip), %rax
	movq	%rdx, 56(%r14)
	cmpq	$0, 32(%rax)
	jne	.L14403
	movq	144(%rax), %r14
	movq	8(%rcx), %r10
	movq	%r10, 72(%r14)
	jmp	.L14403
.L14498:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L18001
	cmpq	$0, 32(%rdx)
	jne	.L14405
	cmpb	$32, 16(%r15)
	movq	80(%rdx), %rsi
	sete	%r11b
	xorl	%eax, %eax
	movq	72(%rsi), %rbx
	movl	$136, %esi
	movzbl	%r11b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L14508
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r14)
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movq	32(%r14), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r14), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-224(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L14510:
	movq	current_class_type(%rip), %r9
	movq	152(%r15), %r8
	movq	%r9, 64(%r15)
	movq	%r9, 16(%r8)
	jmp	.L14405
.L14508:
	movq	%r14, 72(%r15)
	jmp	.L14510
.L18001:
	cmpb	$32, 16(%r15)
	movq	112(%rax), %rbx
	movl	$136, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L14503
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r14)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r14), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r14), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-224(%rbp), %rdx
	movq	%rdx, 8(%rax)
.L14505:
	movq	current_function_decl(%rip), %rdi
	movq	%rdi, 64(%r15)
	jmp	.L14405
.L14503:
	movq	%r14, 72(%r15)
	jmp	.L14505
.L17998:
	cmpb	$95, 1(%rax)
	jne	.L14497
	orb	$64, 53(%r15)
	jmp	.L14497
.L17997:
	cmpq	$0, 72(%r15)
	jne	.L17203
	movq	current_class_name(%rip), %rbx
	movq	8(%r15), %r9
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%r9, -232(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L14493
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-232(%rbp), %rdx
.L17454:
	movq	%rdx, 8(%rax)
	jmp	.L17203
.L14493:
	movq	%r12, 72(%r15)
	jmp	.L17203
.L17996:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L14476
.L14472:
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, %r15
	jmp	.L17203
.L17995:
	movq	global_binding_level(%rip), %rdi
	movl	$1, %r12d
	cmpq	%rdi, current_binding_level(%rip)
	je	.L14454
	movq	48(%r14), %rbx
	testq	%rbx, %rbx
	movq	%rbx, %rcx
	jne	.L14455
.L14454:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L14456
	movq	56(%r14), %rcx
	testq	%rcx, %rcx
	jne	.L17094
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L14457
	movq	144(%rdi), %rsi
	testb	$1, 3(%rsi)
	jne	.L18002
.L14457:
	testq	%rcx, %rcx
	jne	.L17094
.L17095:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17094
.L14456:
	movq	40(%r14), %rcx
.L14455:
	testq	%rcx, %rcx
	je	.L14459
.L17094:
	cmpb	$32, 16(%rcx)
	je	.L14459
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L14459
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L14467
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17361
	testl	%r12d, %r12d
	jle	.L18003
.L17361:
	movq	%rax, %rcx
.L14459:
	movq	-224(%rbp), %r12
	cmpq	80(%r12), %rcx
	jne	.L14453
	jmp	.L17203
.L18003:
	testl	%edx, %edx
	jg	.L17361
	testl	%r12d, %r12d
	je	.L14459
	movq	%rax, %rdx
	movq	%r14, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17361
.L14467:
	movq	8(%rcx), %r11
	cmpq	error_mark_node(%rip), %r11
	cmove	%r11, %rcx
	jmp	.L14459
.L18002:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L14459
	testq	%rax, %rax
	je	.L17095
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L14457
.L17994:
	cmpb	$95, 1(%rax)
	jne	.L14452
	jmp	.L14483
.L17993:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L14447
	jmp	.L17360
.L14445:
	movq	80(%rcx), %r15
	jmp	.L14450
.L17992:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L14411
	movq	80(%rax), %rbx
.L14411:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L14444
.L14443:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L14420
	cmpl	$32, %eax
	je	.L18004
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L14414:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L14444
	jmp	.L14443
.L18004:
	movq	8(%rbx), %r11
	movq	-224(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%r11), %r15
	movq	72(%r15), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L17289
	movq	64(%rbx), %rbx
	jmp	.L14414
.L17289:
	movq	32(%rax), %rcx
	jmp	.L14444
.L14420:
	movq	-224(%rbp), %rax
	movq	80(%rax), %r12
	movq	56(%r12), %rbx
	testq	%rbx, %rbx
	je	.L14409
	movq	global_binding_level(%rip), %rcx
	movl	$1, %r15d
	cmpq	%rcx, current_binding_level(%rip)
	je	.L14423
	movq	48(%rbx), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L14424
.L14423:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L14425
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L17092
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L14426
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L18005
.L14426:
	testq	%rcx, %rcx
	jne	.L17092
.L17093:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17092
.L14425:
	movq	40(%rbx), %rcx
.L14424:
	testq	%rcx, %rcx
	je	.L17144
.L17092:
	cmpb	$32, 16(%rcx)
	je	.L14444
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L14444
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L14436
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17359
	testl	%r15d, %r15d
	jle	.L18006
.L17359:
	movq	%rax, %rcx
	jmp	.L14444
.L18006:
	testl	%edx, %edx
	jg	.L17359
	testl	%r15d, %r15d
	je	.L14444
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17359
.L14436:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L14444
	jmp	.L17359
.L18005:
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %r15d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L14444
	testq	%rax, %rax
	je	.L17093
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L14426
.L14407:
	movq	-224(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r14, %rsi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, %r15
	je	.L18007
.L17362:
	movq	8(%r14), %rsi
	movq	32(%rbx), %rdx
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L14485:
	movq	-224(%rbp), %r10
	movq	%r10, 8(%r14)
	movq	56(%r15), %r12
	testq	%r12, %r12
	je	.L17203
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L14489
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L14489:
	movq	decl_obstack+24(%rip), %rdx
	movq	%r15, 56(%r12)
	leaq	8(%rdx), %rdi
	cmpq	decl_obstack+32(%rip), %rdi
	ja	.L18008
.L14491:
	movq	%rdx, %rbx
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%r15, (%rbx)
	cmpb	$32, 16(%r15)
	jne	.L17203
	cmpq	$0, 72(%r15)
	jne	.L17203
	movq	current_class_name(%rip), %rbx
	movq	8(%r15), %r11
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%r11, -240(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L14493
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	cmpb	$1, 16(%r12)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-240(%rbp), %rdx
	jmp	.L17454
.L18008:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L14491
.L18007:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L14485
	jmp	.L17362
.L17991:
	cmpq	$0, class_binding_level(%rip)
	je	.L14406
	movq	144(%rax), %rdi
	testb	$16, 3(%rdi)
	jne	.L14405
	jmp	.L14406
.L17990:
	movq	-624(%rbp), %r9
	movq	-224(%rbp), %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	8(%r9), %rdx
	call	perm_tree_cons
	movq	-624(%rbp), %r8
	movq	%rax, 8(%r8)
	jmp	.L14402
.L14373:
	movq	-1072(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L17198
	movl	flag_traditional(%rip), %r8d
	testl	%r8d, %r8d
	jne	.L14378
	movq	-616(%rbp), %r9
	testb	$8, 18(%r9)
	je	.L14378
	testb	$8, 18(%r13)
	jne	.L14378
	testb	$9, 53(%r13)
	jne	.L14378
	cmpq	%r13, current_function_decl(%rip)
	je	.L18009
.L14382:
	movq	-616(%rbp), %r10
	movq	72(%r10), %rax
	testq	%rax, %rax
	je	.L14383
	cmpq	$0, 8(%rax)
	jne	.L18010
.L14383:
	movq	-1072(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L17358:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-1072(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L14378
.L18010:
	movq	-1072(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L17358
.L18009:
	movq	-1072(%rbp), %rdi
	movq	%rdi, current_function_decl(%rip)
	jmp	.L14382
.L17915:
	cmpq	$0, 64(%rax)
	jne	.L14371
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L14371
.L17914:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -1072(%rbp)
	call	error_with_decl
	jmp	.L14369
	.p2align 6,,7
.L14362:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L14364
.L14368:
	movq	-616(%rbp), %rcx
	cmpq	%rcx, 56(%rax)
	je	.L14364
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L14368
.L14364:
	movq	%rax, -1072(%rbp)
	jmp	.L14361
.L17913:
	movq	-616(%rbp), %r11
	movq	40(%r11), %rax
	jmp	.L14364
.L17912:
	movq	56(%r13), %r15
	movq	%r15, -616(%rbp)
	jmp	.L14358
.L17911:
	testb	$32, 53(%r13)
	jne	.L14356
	jmp	.L14357
.L14351:
	movq	%r13, -1072(%rbp)
	jmp	.L14355
.L17910:
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	jne	.L14351
	jmp	.L14353
.L17909:
	orb	$4, 18(%r13)
	jmp	.L14349
.L17908:
	movq	56(%r13), %r9
	movl	$.LC146, %edi
	xorl	%eax, %eax
	movq	32(%r9), %rsi
	call	warning
	jmp	.L14348
.L17907:
	movq	56(%r13), %r11
	movl	$.LC145, %edi
	xorl	%eax, %eax
	movq	32(%r11), %rsi
	call	error
	movq	error_mark_node(%rip), %r15
	movq	%r15, 8(%r13)
	movq	%r15, -600(%rbp)
	jmp	.L14344
	.p2align 6,,7
.L14340:
	movq	-600(%rbp), %r14
	movq	8(%r14), %r10
	cmpq	$0, 32(%r10)
	jne	.L14331
	movq	56(%r13), %rax
	movl	$.LC144, %edi
	jmp	.L17357
	.p2align 6,,7
.L17906:
	movl	pedantic(%rip), %edx
	testl	%edx, %edx
	jne	.L14335
	movq	-592(%rbp), %rdi
	xorl	%eax, %eax
	call	list_length
	decl	%eax
	jle	.L14331
.L14335:
	movq	56(%r13), %rax
	movl	$.LC141, %edi
	jmp	.L17357
.L14336:
	movq	56(%r13), %rax
	movl	$.LC142, %edi
	jmp	.L17357
.L14326:
	movq	current_binding_level(%rip), %r8
	movq	%r8, 56(%rdi)
	jmp	.L14327
.L14324:
	movl	$72, %edi
	xorl	%eax, %eax
	call	xmalloc
	movq	%rax, %rdi
	jmp	.L14325
.L17905:
	cmpq	$0, named_labels(%rip)
	movl	$134, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	jmp	.L14323
	.p2align 6,,7
.L17904:
	movq	last_function_parms(%rip), %rdi
	xorl	%eax, %eax
	call	copy_to_permanent
	movq	%rax, %rbx
	movq	8(%r13), %rax
	cmpb	$16, 16(%rax)
	je	.L18011
.L14315:
	movq	%rbx, 72(%r13)
	jmp	.L14314
.L18011:
	movq	96(%rax), %rdi
	cmpb	$-124, 16(%rdi)
	je	.L14315
	xorl	%eax, %eax
	call	build_pointer_type
	movl	flag_this_is_variable(%rip), %r10d
	movq	%rax, %rdi
	testl	%r10d, %r10d
	setle	%dl
	xorl	%eax, %eax
	movzbl	%dl, %esi
	xorl	%edx, %edx
	call	build_type_variant
	movq	this_identifier(%rip), %rdx
	movl	$34, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build
	movq	%rbx, (%rax)
	movq	%rax, %rbx
	jmp	.L14315
	.p2align 6,,7
.L17903:
	testb	$32, 53(%r13)
	je	.L14311
	movq	152(%r13), %rdi
	movq	16(%rdi), %r12
	jmp	.L14312
.L17902:
	movq	144(%rbx), %rcx
	testb	$16, 3(%rcx)
	je	.L14310
	movq	%r13, -1072(%rbp)
	jmp	.L14306
.L17901:
	movl	$permanent_obstack, %edi
	movl	$permanent_obstack, %esi
	xorl	%eax, %eax
	call	push_obstacks
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	copy_node
	movq	-600(%rbp), %rdx
	movq	%rax, %r13
	cmpb	$18, 16(%rdx)
	je	.L18012
.L14308:
	xorl	%eax, %eax
	call	pop_obstacks
	jmp	.L14307
.L18012:
	movq	24(%rdx), %rax
	testq	%rax, %rax
	je	.L14308
	testb	$4, 17(%rax)
	jne	.L14308
	movq	96(%rax), %rdi
	xorl	%eax, %eax
	call	copy_to_permanent
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	build_index_type
	movq	-600(%rbp), %r9
	movq	%rax, %rsi
	xorl	%eax, %eax
	movq	8(%r9), %rdi
	call	build_cplus_array_type
	movq	%rax, -600(%rbp)
	movq	%rax, 8(%r13)
	jmp	.L14308
	.p2align 6,,7
.L17900:
	movl	$.LC140, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	-592(%rbp), %rdx
	xorl	%edi, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	decl_tree_cons
	movl	$1, used_extern_spec(%rip)
	movq	%rax, -592(%rbp)
	jmp	.L14303
.L14299:
	movq	current_binding_level(%rip), %r12
	movq	%r12, 56(%rdi)
	jmp	.L14300
.L14297:
	movl	$72, %edi
	xorl	%eax, %eax
	call	xmalloc
	movq	%rax, %rdi
	jmp	.L14298
.L17899:
	cmpq	$0, named_labels(%rip)
	movl	$134, %esi
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	jmp	.L14296
.L14295:
	testl	$65536, -1064(%rbp)
	jne	.L14291
	movq	-904(%rbp), %rsi
	movq	32(%rsi), %rdi
	movzbl	19(%rdi), %r11d
	movl	%r11d, %ebx
	andl	$1, %ebx
	jne	.L18013
	movq	-480(%rbp), %rdx
.L14913:
	testl	%ebx, %ebx
	movl	$.LC199, %ecx
	movl	$.LC198, %esi
	cmove	%rcx, %rsi
	movl	$.LC197, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L14916
.L18013:
	xorl	%eax, %eax
	call	operator_name_string
	movq	%rax, %rdx
	jmp	.L14913
	.p2align 6,,7
.L14292:
	testl	$131072, -1064(%rbp)
	je	.L14922
	movl	-604(%rbp), %eax
	testl	%eax, %eax
	je	.L14922
	movl	-376(%rbp), %eax
	testl	%eax, %eax
	jne	.L14922
	movq	global_binding_level(%rip), %r8
	cmpq	%r8, current_binding_level(%rip)
	je	.L18014
	movl	$.LC203, %edi
.L17375:
	movq	-480(%rbp), %rsi
	xorl	%eax, %eax
	call	error
	jmp	.L14291
.L18014:
	movq	-480(%rbp), %rsi
	movl	$.LC202, %edi
	xorl	%eax, %eax
	call	warning
	jmp	.L14291
	.p2align 6,,7
.L14922:
	testl	$131072, -1064(%rbp)
	je	.L17217
	movl	-376(%rbp), %eax
	testl	%eax, %eax
	je	.L17217
	movq	global_binding_level(%rip), %rdx
	cmpq	%rdx, current_binding_level(%rip)
	je	.L17308
	movl	$.LC204, %edi
	jmp	.L17375
.L17308:
	cmpw	$0, -1064(%rbp)
	jns	.L14291
	movl	$.LC205, %edi
	jmp	.L17375
.L17217:
	movq	current_binding_level(%rip), %r10
	movq	global_binding_level(%rip), %rbx
	cmpq	%rbx, %r10
	jne	.L14291
	jmp	.L17308
.L17527:
	movl	$.LC189, %edi
	jmp	.L17375
.L17526:
	movl	$.LC188, %edi
	xorl	%eax, %eax
	call	error
	movl	$0, -1052(%rbp)
	jmp	.L14289
.L17525:
	movl	$.LC187, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L14286
.L17524:
	testl	%eax, %eax
	jle	.L14284
	movl	$.LC186, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L14284
.L17523:
	movq	-480(%rbp), %rsi
	movl	$.LC185, %edi
	xorl	%eax, %eax
	call	error
	movl	$0, -892(%rbp)
	jmp	.L14280
.L17522:
	movl	$.LC184, %edi
	xorl	%eax, %eax
	call	warning
	jmp	.L14276
.L17521:
	movl	$.LC183, %edi
	xorl	%eax, %eax
	call	warning
	jmp	.L14275
.L14253:
	testl	$16384, %r15d
	je	.L14255
	movq	long_unsigned_type_node(%rip), %rsi
	movq	%rsi, -1072(%rbp)
	jmp	.L14263
.L14255:
	testl	$8192, %r15d
	je	.L14257
	movq	short_unsigned_type_node(%rip), %rsi
.L17356:
	movq	%rsi, -1072(%rbp)
	jmp	.L14263
.L14257:
	movq	-1072(%rbp), %r12
	cmpq	char_type_node(%rip), %r12
	je	.L18015
	cmpq	$0, -496(%rbp)
	jne	.L18016
	movq	unsigned_type_node(%rip), %rcx
	jmp	.L17353
.L18016:
	movq	-1072(%rbp), %rdi
	xorl	%eax, %eax
	call	unsigned_type
.L17354:
	movq	%rax, -1072(%rbp)
	jmp	.L14263
.L18015:
	movq	unsigned_char_type_node(%rip), %rdx
.L17355:
	movq	%rdx, -1072(%rbp)
	jmp	.L14263
.L14249:
	testl	$1048576, %r15d
	je	.L14264
	movq	-1072(%rbp), %rax
	cmpq	char_type_node(%rip), %rax
	je	.L18017
.L14264:
	movl	-576(%rbp), %r11d
	testl	%r11d, %r11d
	je	.L14266
	movq	long_long_integer_type_node(%rip), %rax
	jmp	.L17354
.L14266:
	testl	$16384, %r15d
	je	.L14268
	movq	long_integer_type_node(%rip), %rdx
	jmp	.L17355
.L14268:
	testl	$8192, %r15d
	je	.L14263
	movq	short_integer_type_node(%rip), %rcx
	jmp	.L17353
.L18017:
	movq	signed_char_type_node(%rip), %rsi
	jmp	.L17356
.L17520:
	movq	-1072(%rbp), %rdi
	cmpq	wchar_type_node(%rip), %rdi
	je	.L14236
	movl	%r15d, %eax
	movl	$.LC178, %edi
	andl	$24576, %eax
	cmpl	$24576, %eax
	je	.L17352
	testl	%eax, %eax
	je	.L14240
	movl	-500(%rbp), %eax
	testl	%eax, %eax
	jne	.L18018
.L14240:
	testl	$24576, %r15d
	je	.L14242
	cmpb	$8, %cl
	movl	$.LC180, %edi
	je	.L17352
.L14242:
	movl	%r15d, %esi
	andl	$1052672, %esi
	cmpl	$1052672, %esi
	je	.L18019
	movl	-572(%rbp), %r12d
	movl	$1, %ebx
	testl	%r12d, %r12d
	jne	.L14234
	movl	-500(%rbp), %eax
	testl	%eax, %eax
	jne	.L14234
	movl	pedantic(%rip), %r11d
	testl	%r11d, %r11d
	je	.L14234
	movq	-480(%rbp), %rsi
	xorl	%eax, %eax
	movl	$.LC182, %edi
	call	pedwarn
	movl	flag_pedantic_errors(%rip), %r8d
	testl	%r8d, %r8d
	cmovne	-572(%rbp), %ebx
	jmp	.L14234
.L18019:
	movl	$.LC181, %edi
	jmp	.L17352
.L18018:
	movl	$.LC179, %edi
	jmp	.L17352
.L17519:
	movzbl	17(%rdx), %edx
	movq	long_double_type_node(%rip), %rdi
	xorl	%eax, %eax
	andl	$-16385, %r15d
	movl	%edx, %ecx
	shrb	$4, %dl
	shrb	$5, %cl
	andl	$1, %edx
	movl	%ecx, %esi
	andl	$1, %esi
	call	build_type_variant
	movq	%rax, -1072(%rbp)
	jmp	.L14231
.L17518:
	movq	-456(%rbp), %rdx
	movq	56(%rdx), %r12
	movq	%r12, -1072(%rbp)
	jmp	.L13886
.L17517:
	movq	void_type_node(%rip), %r9
	movq	%r9, -1072(%rbp)
	jmp	.L13886
.L13880:
	cmpl	$2, -468(%rbp)
	je	.L18020
	cmpl	$1, -468(%rbp)
	je	.L18021
	testl	$33554432, %r15d
	je	.L13886
	movq	-1072(%rbp), %rcx
	testb	$64, 46(%rcx)
	je	.L13886
	movq	144(%rcx), %r14
	testb	$64, 3(%r14)
	jne	.L13886
	cmpq	$0, 32(%rcx)
	jne	.L13886
	movq	80(%rcx), %r14
	movq	56(%r14), %rbx
	movq	32(%rbx), %rax
	cmpb	$36, (%rax)
	je	.L18022
.L13892:
	cmpq	$0, current_function_decl(%rip)
	jne	.L13886
	cmpl	$2, -484(%rbp)
	je	.L13886
	cmpb	$32, 16(%r14)
	movl	$144, %esi
	sete	%r13b
	xorl	%eax, %eax
	movzbl	%r13b, %edi
	call	my_friendly_assert
	movq	56(%r14), %rax
	cmpq	%r14, 40(%rax)
	je	.L13886
	cmpq	$0, 8(%rax)
	jne	.L18023
.L13895:
	movq	current_binding_level(%rip), %rbx
	movq	72(%r14), %r12
	cmpq	global_binding_level(%rip), %rbx
	je	.L18024
.L17341:
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L13898:
	movq	class_binding_level(%rip), %rbx
	movq	$0, 8(%r12)
	movq	$0, 64(%r14)
	movq	56(%r14), %r12
	testq	%rbx, %rbx
	movq	%r12, 72(%r14)
	jne	.L13902
	movq	current_binding_level(%rip), %rbx
.L13902:
	movq	global_binding_level(%rip), %r10
	cmpq	%r10, %rbx
	movq	%r10, %rdx
	je	.L16967
.L13914:
	movzbl	66(%rbx), %edi
	xorl	%r13d, %r13d
	andl	$15, %edi
	cmpl	$2, %edi
	je	.L18025
.L13906:
	movq	56(%rbx), %rbx
	cmpq	%rdx, %rbx
	jne	.L13914
.L16967:
	movzbl	66(%rbx), %edx
	xorl	%r13d, %r13d
	andl	$15, %edx
	cmpl	$2, %edx
	jne	.L13886
	movq	8(%rbx), %r12
	testq	%r12, %r12
	je	.L13886
.L13922:
	movq	-1072(%rbp), %r11
	cmpq	%r11, 32(%r12)
	je	.L13921
	movq	%r12, %r13
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L13922
	jmp	.L13886
.L13921:
	movq	-1072(%rbp), %rdx
	movq	$_iob+112, %rdi
	movl	$.LC175, %esi
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	print_node_brief
	xorl	%eax, %eax
	movl	$11, %edi
	call	my_friendly_abort
.L13912:
	testq	%r13, %r13
	je	.L13923
	movq	(%r12), %rcx
	movq	%rcx, (%r13)
.L13924:
	movq	current_binding_level(%rip), %rbx
	movq	32(%r12), %r8
	cmpq	global_binding_level(%rip), %rbx
	movq	24(%r12), %r13
	movq	%r8, -176(%rbp)
	je	.L18026
.L17342:
	movq	8(%r13), %rsi
	movq	32(%rbx), %rdx
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L13926:
	movq	-176(%rbp), %rbx
	xorl	%eax, %eax
	movq	%rbx, 8(%r13)
	movq	32(%r12), %rsi
	movq	24(%r12), %rdi
	movq	global_binding_level(%rip), %r13
	movq	8(%r13), %rdx
	call	perm_tree_cons
	movq	%rax, 8(%r13)
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	movq	%rax, %rcx
	je	.L13929
	movq	144(%rax), %r9
	xorl	%edx, %edx
	movq	72(%r9), %rax
	testq	%rax, %rax
	je	.L13929
.L13935:
	movq	-1072(%rbp), %r12
	cmpq	%r12, 32(%rax)
	je	.L13931
	movq	%rax, %rdx
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L13935
.L13929:
	movq	current_binding_level(%rip), %rax
	movq	global_binding_level(%rip), %r11
	movq	%rax, -568(%rbp)
	movq	%r11, current_binding_level(%rip)
	movq	current_function_decl(%rip), %rax
	movq	112(%r14), %rcx
	movq	%r11, -560(%rbp)
	cmpq	%rax, %r14
	movq	%rcx, -520(%rbp)
	je	.L17180
	movzbl	16(%r14), %ecx
	cmpb	$29, %cl
	je	.L18027
.L13940:
	movq	%rax, 64(%r14)
.L13939:
	cmpb	$32, %cl
	je	.L18028
.L13941:
	cmpq	$0, -520(%rbp)
	je	.L13942
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L18029
	movq	-520(%rbp), %rbx
	cmpq	$0, 48(%rbx)
	jne	.L13945
	movq	$0, -528(%rbp)
.L13944:
	cmpq	$0, -528(%rbp)
	je	.L13962
	movq	-528(%rbp), %r12
	cmpq	error_mark_node(%rip), %r12
	je	.L18030
.L13952:
	cmpq	$0, -528(%rbp)
	je	.L17184
	movq	-528(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L18031
.L13954:
	movq	-528(%rbp), %r10
	testq	%r10, %r10
	movq	24(%r10), %r12
	movq	%r10, %rsi
	movl	32(%r10), %ebx
	je	.L17184
	movzbl	16(%r10), %eax
	movzbl	16(%r14), %ecx
	cmpb	%cl, %al
	je	.L13956
	cmpb	$32, %al
	je	.L13962
	cmpb	$32, %cl
	je	.L17306
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L17184
.L13961:
	movq	class_binding_level(%rip), %r12
	movq	-568(%rbp), %rax
	testq	%r12, %r12
	movq	%rax, current_binding_level(%rip)
	cmove	%rax, %r12
	movq	%r12, -568(%rbp)
	cmpb	$32, 16(%r14)
	jne	.L13886
	movq	global_binding_level(%rip), %rbx
	xorl	%ecx, %ecx
	movq	56(%r14), %rdi
	cmpq	%rbx, -568(%rbp)
	movq	%rbx, %rsi
	je	.L16976
.L14227:
	movq	-568(%rbp), %r11
	movq	32(%r11), %rdx
	testq	%rdx, %rdx
	je	.L16978
.L14226:
	cmpq	%rdi, 24(%rdx)
	leaq	32(%rdx), %r8
	movq	(%rdx), %rdx
	cmove	%r8, %rcx
	testq	%rdx, %rdx
	jne	.L14226
.L16978:
	movq	-568(%rbp), %r9
	movq	56(%r9), %rdx
	cmpq	%rsi, %rdx
	movq	%rdx, -568(%rbp)
	jne	.L14227
.L16976:
	testq	%rcx, %rcx
	movq	8(%r14), %rax
	jne	.L14228
	movq	%rax, 8(%rdi)
	jmp	.L13886
.L14228:
	movq	%rax, (%rcx)
	jmp	.L13886
.L17184:
	movzbl	16(%r14), %ecx
.L13962:
	cmpb	$32, %cl
	je	.L17306
.L13970:
	movzbl	53(%r14), %edx
	testb	$1, %dl
	je	.L14108
	movq	-520(%rbp), %rbx
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L14108
	testb	$1, 53(%rax)
	jne	.L14109
	testb	$8, 18(%rax)
	je	.L14108
.L14109:
	andb	$8, %dl
	je	.L18032
.L14108:
	movl	flag_traditional(%rip), %r13d
	testl	%r13d, %r13d
	je	.L17192
	testb	$1, 53(%r14)
	je	.L17192
	xorl	%r12d, %r12d
	movq	global_binding_level(%rip), %rcx
	cmpq	%rcx, current_binding_level(%rip)
	je	.L14112
	movq	-520(%rbp), %rdi
	movq	48(%rdi), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L14113
.L14112:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L14114
	movq	-520(%rbp), %r9
	movq	56(%r9), %rcx
	testq	%rcx, %rcx
	jne	.L17088
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L14115
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L18033
.L14115:
	testq	%rcx, %rcx
	jne	.L17088
.L17089:
	movq	-520(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17088
	movq	-520(%rbp), %rax
	movq	40(%rax), %rcx
.L14113:
	testq	%rcx, %rcx
	je	.L17143
.L17088:
	cmpb	$32, 16(%rcx)
	je	.L14117
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L14117
	movq	-520(%rbp), %r10
	movq	8(%r10), %rax
	testq	%rax, %rax
	je	.L14125
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17349
	testl	%r12d, %r12d
	jle	.L18034
.L17349:
	movq	%rax, %rcx
.L14117:
	testq	%rcx, %rcx
	jne	.L17192
.L17143:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -560(%rbp)
.L14111:
	cmpq	%rax, -560(%rbp)
	je	.L18035
	movq	current_binding_level(%rip), %rbx
	movq	-520(%rbp), %rsi
	cmpq	%rax, %rbx
	movq	48(%rsi), %r13
	movq	40(%rsi), %r12
	movq	%rsi, %rdi
	je	.L18036
.L17350:
	movq	16(%rbx), %rdx
	movq	%r13, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%rbx)
.L14156:
	movq	-520(%rbp), %rcx
	testq	%r13, %r13
	movq	%r14, 48(%rcx)
	je	.L18037
.L14167:
	movq	96(%r14), %rax
	testq	%rax, %rax
	jne	.L14169
	testq	%r13, %r13
	je	.L14170
	testb	$1, 53(%r14)
	jne	.L14170
	cmpb	$34, 16(%r13)
	je	.L18038
.L14170:
	movl	warn_shadow(%rip), %edx
	testl	%edx, %edx
	je	.L14169
	testb	$1, 53(%r14)
	jne	.L14169
	movl	32(%r14), %r8d
	testl	%r8d, %r8d
	je	.L14169
	testq	%rax, %rax
	jne	.L14169
	xorl	%edi, %edi
	testq	%r13, %r13
	je	.L14175
	cmpb	$34, 16(%r13)
	je	.L18039
.L14175:
	movq	-520(%rbp), %rcx
	cmpq	$0, 56(%rcx)
	je	.L14177
	movl	$.LC41, %edi
.L14176:
	testq	%rdi, %rdi
	jne	.L18040
.L14169:
	testq	%r13, %r13
	je	.L17193
	movq	-560(%rbp), %rax
	movq	-520(%rbp), %rdi
	movq	%r13, %rsi
	movq	16(%rax), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	-560(%rbp), %r13
	movq	%rax, 16(%r13)
.L17193:
	movzbl	16(%r14), %ecx
.L14154:
	leal	-128(%rcx), %edi
	cmpb	$1, %dil
	jbe	.L13942
	movq	8(%r14), %rdx
	cmpq	$0, 32(%rdx)
	jne	.L13942
	cmpb	$18, 16(%rdx)
	je	.L18041
.L14186:
	testb	$64, 46(%rdx)
	je	.L13942
.L14185:
	movq	-560(%rbp), %r12
	movzwl	64(%r12), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%r12)
	je	.L18042
.L17194:
	movzbl	16(%r14), %ecx
.L13942:
	cmpb	$32, %cl
	je	.L18043
.L14188:
	movq	-560(%rbp), %rdi
	cmpq	global_binding_level(%rip), %rdi
	movq	(%rdi), %rsi
	movq	%rsi, (%r14)
	movq	%r14, (%rdi)
	jne	.L13961
	testb	$4, 17(%r14)
	jne	.L13961
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L13961
.L18043:
	cmpq	$0, -520(%rbp)
	je	.L14188
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L14189
	cmpq	class_binding_level(%rip), %rax
	je	.L14190
	movq	-520(%rbp), %rbx
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L14194
	cmpb	$32, 16(%rax)
	je	.L14192
.L14194:
	cmpq	$0, current_class_type(%rip)
	je	.L14189
	movq	-520(%rbp), %r8
	movq	56(%r8), %rax
	testq	%rax, %rax
	je	.L14189
	cmpb	$32, 16(%rax)
	je	.L14192
.L14189:
	movq	-520(%rbp), %rsi
	movq	40(%rsi), %rax
	testq	%rax, %rax
	je	.L14193
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L14192
	cmpb	$-127, %dl
	je	.L18044
.L14193:
	movq	current_class_name(%rip), %r13
	testq	%r13, %r13
	je	.L14188
	movq	72(%r14), %rbx
	testq	%rbx, %rbx
	je	.L18045
.L14200:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L14204
	cmpq	class_binding_level(%rip), %rax
	je	.L14205
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L14209
	cmpb	$32, 16(%rax)
	je	.L14207
.L14209:
	cmpq	$0, current_class_type(%rip)
	je	.L14204
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L14204
	cmpb	$32, 16(%rax)
	je	.L14207
.L14204:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L14188
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L14207
	cmpb	$-127, %dl
	jne	.L14188
	movq	$0, 8(%rbx)
	jmp	.L14188
.L14207:
	movq	8(%rax), %r13
	movq	%r13, 8(%rbx)
	jmp	.L14188
.L14205:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L14209
.L18045:
	cmpb	$32, 16(%r14)
	movl	$136, %esi
	movq	56(%r14), %rbx
	sete	%r10b
	movq	8(%r14), %r12
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r13)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r13), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r13), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r14)
	movq	%r12, 8(%rax)
	movq	72(%r14), %rbx
	jmp	.L14200
.L18044:
	movq	$0, 8(%rsi)
	jmp	.L14193
.L14192:
	movq	8(%rax), %rdx
	movq	-520(%rbp), %r11
	movq	%rdx, 8(%r11)
	jmp	.L14193
.L14190:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L14194
.L18042:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L17194
.L18041:
	movq	8(%rdx), %rsi
	testb	$64, 46(%rsi)
	jne	.L14185
	jmp	.L14186
.L18040:
	movq	-520(%rbp), %r10
	movq	32(%r10), %rsi
.L17351:
	xorl	%eax, %eax
	call	warning
	jmp	.L14169
.L14177:
	testq	%r13, %r13
	je	.L14179
	movl	$.LC42, %edi
	jmp	.L14176
.L14179:
	testq	%r12, %r12
	movl	$.LC43, %r9d
	cmovne	%r9, %rdi
	jmp	.L14176
.L18039:
	movl	$.LC40, %edi
	jmp	.L14176
.L18038:
	cmpb	$34, 16(%r14)
	je	.L14170
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r12
	movq	56(%r12), %rax
	je	.L14171
	movq	56(%rax), %rax
.L14171:
	movzbl	66(%rax), %ebx
	andl	$15, %ebx
	decl	%ebx
	jne	.L14169
	movq	-520(%rbp), %r11
	movl	$.LC40, %edi
	movq	32(%r11), %rsi
	jmp	.L17351
.L18037:
	movzbl	53(%r14), %r9d
	andb	$9, %r9b
	decb	%r9b
	je	.L18046
.L14159:
	testq	%r13, %r13
	jne	.L14167
	testq	%r12, %r12
	jne	.L14167
	testb	$1, 53(%r14)
	je	.L14167
	testb	$8, 18(%r14)
	je	.L14167
	movq	-520(%rbp), %rax
	orb	$8, 18(%rax)
	jmp	.L14167
.L18046:
	testq	%r12, %r12
	je	.L14159
	cmpb	$29, 16(%r14)
	jne	.L14159
	cmpb	$29, 16(%r12)
	jne	.L14159
	movq	8(%r14), %rdi
	movq	8(%r12), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L18047
	movzbl	53(%r12), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L14162
	movzbl	53(%r14), %esi
	leal	0(,%rax,8), %r10d
	leaq	88(%r14), %rdx
	andb	$-9, %sil
	orb	%r10b, %sil
	movb	%sil, 53(%r14)
	cmpq	%r12, current_function_decl(%rip)
	je	.L14163
	movq	88(%r12), %rax
.L14164:
	movq	72(%r12), %rcx
	movq	136(%r12), %r9
	movq	%rax, (%rdx)
	movq	80(%r12), %rdi
	movzbl	17(%r14), %ebx
	movq	%r9, 136(%r14)
	movq	%rcx, 72(%r14)
	movq	%rdi, 80(%r14)
	movzbl	17(%r12), %r8d
	movq	%r12, 96(%r14)
	andb	$127, %bl
	shrb	$7, %r8b
	movzbl	%r8b, %edx
	movl	%edx, %r11d
	salb	$7, %r11b
	orb	%r11b, %bl
	movb	%bl, 17(%r14)
	movzbl	53(%r12), %ecx
.L14162:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L14165
	movzbl	53(%r14), %esi
	salb	$4, %al
	andb	$-17, %sil
	orb	%al, %sil
	movb	%sil, 53(%r14)
	movl	128(%r12), %eax
	movl	%eax, 128(%r14)
.L14165:
	movq	8(%r12), %rdx
	cmpq	$0, 24(%rdx)
	je	.L14159
	cmpq	$0, 88(%r12)
	je	.L14159
	movq	8(%r14), %r10
	cmpq	$0, 24(%r10)
	jne	.L14159
	movq	%rdx, 8(%r14)
	jmp	.L14159
.L14163:
	xorl	%eax, %eax
	jmp	.L14164
.L18047:
	movq	%r14, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L14159
.L18036:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L14156
	movq	-520(%rbp), %rdi
	jmp	.L17350
.L18035:
	movzwl	16(%r14), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L18048
.L14131:
	movq	-520(%rbp), %rsi
	cmpq	$0, 40(%rsi)
	jne	.L14132
	testb	$8, 18(%r14)
	je	.L14132
	orb	$8, 18(%rsi)
.L14132:
	movzbl	16(%r14), %ecx
	cmpb	$32, %cl
	je	.L18049
.L14134:
	movq	-520(%rbp), %r11
	movq	%r14, 40(%r11)
	movzbl	16(%r14), %ecx
.L14133:
	movq	-520(%rbp), %rbx
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L14145
	movq	8(%rax), %rdx
	testq	%rdx, %rdx
	je	.L14135
	testb	$1, 18(%rdx)
	je	.L14135
	orb	$1, 18(%r14)
	movq	72(%rbx), %rax
.L14135:
	testq	%rax, %rax
	je	.L14145
	movq	8(%rax), %rdx
	testq	%rdx, %rdx
	je	.L14140
	testb	$8, 17(%rdx)
	je	.L14140
	orb	$8, 17(%r14)
	movq	-520(%rbp), %r13
	movq	72(%r13), %rax
.L14140:
	testq	%rax, %rax
	je	.L14145
	cmpq	$0, 8(%rax)
	je	.L14145
	cmpb	$29, %cl
	je	.L18050
.L14148:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r14), %ecx
.L14145:
	movq	-520(%rbp), %rbx
	testb	$8, 18(%rbx)
	je	.L14154
	cmpb	$32, %cl
	je	.L14154
	testb	$8, 18(%r14)
	jne	.L14154
	testb	$1, 53(%r14)
	jne	.L14154
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L14150
	cmpq	$0, 8(%rax)
	jne	.L18051
.L14150:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L17453:
	xorl	%eax, %eax
	call	warning
	jmp	.L17193
.L18051:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L17453
.L18050:
	movq	8(%r14), %rdi
	movq	integer_type_node(%rip), %r8
	cmpq	%r8, 8(%rdi)
	jne	.L14148
	jmp	.L14145
.L18049:
	cmpq	$0, -528(%rbp)
	je	.L14134
	movq	-528(%rbp), %rbx
	cmpb	$32, 16(%rbx)
	jne	.L14133
	jmp	.L14134
.L18048:
	testb	$8, 54(%r14)
	jne	.L14131
	andb	$-9, 18(%r14)
	jmp	.L14131
.L17192:
	movq	global_binding_level(%rip), %rax
	jmp	.L14111
.L18034:
	testl	%edx, %edx
	jg	.L17349
	testl	%r12d, %r12d
	je	.L14117
	movq	-520(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17349
.L14125:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L14117
.L18033:
	xorl	%ecx, %ecx
	movq	-520(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L14117
	testq	%rax, %rax
	je	.L17089
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L14115
.L14114:
	movq	-520(%rbp), %rsi
	movq	40(%rsi), %rcx
	jmp	.L14113
.L18032:
	movq	8(%rax), %rsi
	movq	8(%r14), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L14108
	movq	%r14, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	-520(%rbp), %r11
	movq	40(%r11), %rdi
	call	warning_with_decl
	jmp	.L14108
.L17306:
	movq	8(%r14), %rcx
	movq	80(%rcx), %rbx
	testq	%rbx, %rbx
	movq	%rbx, -552(%rbp)
	je	.L13972
	movzbl	16(%rbx), %edx
	cmpb	$32, %dl
	je	.L13971
.L13972:
	movq	global_binding_level(%rip), %rax
	movq	%r14, -552(%rbp)
	cmpq	%rax, current_binding_level(%rip)
	jne	.L17185
	movq	%r14, 80(%rcx)
.L17185:
	movzbl	16(%r14), %edx
.L13975:
	cmpb	$32, %dl
	movl	$140, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	-552(%rbp), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L14099
	cmpq	$0, 72(%rsi)
	je	.L18052
.L14099:
	movq	8(%r14), %r13
	movq	80(%r13), %rax
	testq	%rax, %rax
	je	.L13970
	cmpq	$0, 56(%rax)
	je	.L13970
	movq	current_binding_level(%rip), %rbx
	movq	56(%r14), %r12
	cmpq	global_binding_level(%rip), %rbx
	je	.L18053
.L17348:
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L14105:
	movq	%r13, 8(%r12)
	jmp	.L13970
.L18053:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L14105
	jmp	.L17348
.L18052:
	cmpb	$32, 16(%r14)
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	sete	%al
	movq	8(%r14), %r13
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L14100
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r14)
	movq	%r13, 8(%rax)
	jmp	.L14099
.L14100:
	movq	%rbx, 72(%r14)
	jmp	.L14099
.L13971:
	movq	current_binding_level(%rip), %rsi
	movq	-552(%rbp), %r8
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%r8), %r13
	jne	.L13975
	movq	32(%r13), %rax
	cmpb	$36, (%rax)
	jne	.L13975
	cmpb	$95, 1(%rax)
	jne	.L13975
	movq	class_binding_level(%rip), %rbx
	movq	%r14, 80(%rcx)
	movq	8(%r14), %rcx
	testq	%rbx, %rbx
	movq	%rbx, -536(%rbp)
	movq	%rcx, -184(%rbp)
	jne	.L13979
	testb	$-128, 66(%rsi)
	movq	%rsi, -536(%rbp)
	je	.L13979
.L13983:
	movq	-536(%rbp), %r12
	movq	56(%r12), %r9
	testb	$-128, 66(%r9)
	movq	%r9, -536(%rbp)
	jne	.L13983
.L13979:
	movq	-536(%rbp), %r10
	cmpq	global_binding_level(%rip), %r10
	je	.L18054
	movq	-536(%rbp), %rax
	movq	-184(%rbp), %rsi
	movq	%r13, %rdi
	movq	8(%rax), %rdx
	xorl	%eax, %eax
	call	saveable_tree_cons
	movq	-536(%rbp), %rdx
	movq	%rax, 8(%rdx)
.L13985:
	testq	%r13, %r13
	je	.L13986
	movq	-184(%rbp), %rsi
	cmpq	$0, 80(%rsi)
	jne	.L13987
	movq	%r13, 80(%rsi)
.L13987:
	movq	-184(%rbp), %rax
	cmpq	%rax, 8(%r13)
	je	.L13988
	cmpb	$21, 16(%rax)
	je	.L18055
.L13989:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L13991
	cmpq	$0, 32(%rax)
	je	.L13990
.L13991:
	movq	lang_name_cplusplus(%rip), %rbx
	cmpq	%rbx, current_lang_name(%rip)
	je	.L18056
.L13992:
	xorl	%ecx, %ecx
.L14027:
	testq	%rcx, %rcx
	jne	.L14028
.L17142:
	movq	-184(%rbp), %rdx
	movl	$32, %edi
	movq	%r13, %rsi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-184(%rbp), %rdi
	movq	%rax, -544(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-544(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L18057
.L17345:
	movq	8(%r13), %rsi
	movq	32(%rbx), %rdx
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L14030:
	movq	-184(%rbp), %rax
	movq	%rax, 8(%r13)
.L14033:
	movq	32(%r13), %rax
	cmpb	$36, (%rax)
	je	.L18058
.L14035:
	movq	-184(%rbp), %rcx
	movq	80(%rcx), %rdx
	testq	%rdx, %rdx
	je	.L14066
	cmpb	$32, 16(%rdx)
	je	.L18059
.L14036:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L14055
	movq	-544(%rbp), %rdx
	movq	56(%rdx), %r12
	testq	%r12, %r12
	je	.L17189
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L14057
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L14057:
	movq	decl_obstack+24(%rip), %rdx
	movq	-544(%rbp), %rax
	leaq	8(%rdx), %rsi
	movq	%rax, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rsi
	ja	.L18060
.L14059:
	movq	-544(%rbp), %rsi
	movq	%rdx, %rbx
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rsi, (%rbx)
	cmpb	$32, 16(%rsi)
	je	.L18061
.L17189:
	movq	32(%r13), %rax
.L14066:
	cmpb	$36, (%rax)
	je	.L18062
.L14080:
	movq	current_class_type(%rip), %rdx
	movq	-544(%rbp), %rax
	movq	-184(%rbp), %rsi
	testq	%rdx, %rdx
	movq	%rax, 80(%rsi)
	jne	.L14083
	cmpq	$0, current_function_decl(%rip)
	je	.L14082
.L14083:
	movq	lang_name_cplusplus(%rip), %r9
	cmpq	%r9, current_lang_name(%rip)
	je	.L14081
.L14082:
	movq	-544(%rbp), %rbx
	movq	%r13, 72(%rbx)
.L13988:
	movq	-536(%rbp), %r10
	movzbl	66(%r10), %esi
	andl	$15, %esi
	cmpl	$2, %esi
	je	.L18063
.L13986:
	movq	-184(%rbp), %rsi
	movq	80(%rsi), %rax
	cmpb	$32, 16(%rax)
	je	.L18064
	movq	-184(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-184(%rbp), %r9
	movq	%rax, (%r9)
	movq	-552(%rbp), %rdi
	movzbl	16(%rdi), %edx
	jmp	.L13975
.L18064:
	movq	%rax, (%rsi)
	movq	-552(%rbp), %r12
	movzbl	16(%r12), %edx
	jmp	.L13975
.L18063:
	movq	-184(%rbp), %r11
	orb	$64, 18(%r11)
	movq	80(%r11), %rbx
	movq	current_class_type(%rip), %rax
	movq	%rbx, 56(%r13)
	cmpq	$0, 32(%rax)
	jne	.L13986
	movq	-536(%rbp), %r8
	movq	144(%rax), %r13
	movq	8(%r8), %rcx
	movq	%rcx, 72(%r13)
	jmp	.L13986
.L14081:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L18065
	cmpq	$0, 32(%rdx)
	jne	.L13988
	movq	-544(%rbp), %r10
	movq	80(%rdx), %rcx
	movl	$136, %esi
	cmpb	$32, 16(%r10)
	movq	72(%rcx), %rbx
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L14091
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r13)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	32(%r13), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r13), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-544(%rbp), %r11
	movq	%rax, 72(%r11)
	movq	-184(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L14093:
	movq	-544(%rbp), %rax
	movq	current_class_type(%rip), %r9
	movq	152(%rax), %rdi
	movq	%r9, 64(%rax)
	movq	%r9, 16(%rdi)
	jmp	.L13988
.L14091:
	movq	-544(%rbp), %r12
	movq	%r13, 72(%r12)
	jmp	.L14093
.L18065:
	movq	-544(%rbp), %rcx
	movq	112(%rax), %rbx
	movl	$136, %esi
	cmpb	$32, 16(%rcx)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L14086
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r13)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	32(%r13), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r13), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-544(%rbp), %r8
	movq	%rax, 72(%r8)
	movq	-184(%rbp), %r11
	movq	%r11, 8(%rax)
.L14088:
	movq	current_function_decl(%rip), %rsi
	movq	-544(%rbp), %r9
	movq	%rsi, 64(%r9)
	jmp	.L13988
.L14086:
	movq	-544(%rbp), %rdi
	movq	%r13, 72(%rdi)
	jmp	.L14088
.L18062:
	cmpb	$95, 1(%rax)
	jne	.L14080
	movq	-544(%rbp), %r12
	orb	$64, 53(%r12)
	jmp	.L14080
.L18061:
	cmpq	$0, 72(%rsi)
	jne	.L17189
	movq	8(%rsi), %r9
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%r9, -192(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L14061
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-544(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-192(%rbp), %r10
	movq	%r10, 8(%rax)
	jmp	.L17189
.L14061:
	movq	-544(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L17189
.L18060:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L14059
.L14055:
	movq	-544(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, -544(%rbp)
	jmp	.L17189
.L18059:
	movq	global_binding_level(%rip), %r10
	movl	$1, %r12d
	cmpq	%r10, current_binding_level(%rip)
	je	.L14037
	movq	48(%r13), %rdi
	testq	%rdi, %rdi
	movq	%rdi, %rcx
	jne	.L14038
.L14037:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L14039
	movq	56(%r13), %rcx
	testq	%rcx, %rcx
	jne	.L17086
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L14040
	movq	144(%rdi), %r11
	testb	$1, 3(%r11)
	jne	.L18066
.L14040:
	testq	%rcx, %rcx
	jne	.L17086
.L17087:
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17086
.L14039:
	movq	40(%r13), %rcx
.L14038:
	testq	%rcx, %rcx
	je	.L14042
.L17086:
	cmpb	$32, 16(%rcx)
	je	.L14042
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L14042
	movq	8(%r13), %rax
	testq	%rax, %rax
	je	.L14050
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17346
	testl	%r12d, %r12d
	jle	.L18067
.L17346:
	movq	%rax, %rcx
.L14042:
	movq	-184(%rbp), %r8
	cmpq	80(%r8), %rcx
	jne	.L14036
	jmp	.L17189
.L18067:
	testl	%edx, %edx
	jg	.L17346
	testl	%r12d, %r12d
	je	.L14042
	movq	%rax, %rdx
	movq	%r13, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17346
.L14050:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L14042
.L18066:
	xorl	%ecx, %ecx
	movq	%r13, %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L14042
	testq	%rax, %rax
	je	.L17087
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L14040
.L18058:
	cmpb	$95, 1(%rax)
	jne	.L14035
	jmp	.L14066
.L18057:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L14030
	jmp	.L17345
.L14028:
	movq	80(%rcx), %r9
	movq	%r9, -544(%rbp)
	jmp	.L14033
.L18056:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L13994
	movq	80(%rax), %rbx
.L13994:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L14027
.L14026:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L14003
	cmpl	$32, %eax
	je	.L18068
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L13997:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L14027
	jmp	.L14026
.L18068:
	movq	8(%rbx), %r9
	movq	-184(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%r9), %rcx
	movq	72(%rcx), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L17288
	movq	64(%rbx), %rbx
	jmp	.L13997
.L17288:
	movq	32(%rax), %rcx
	jmp	.L14027
.L14003:
	movq	-184(%rbp), %r10
	movq	80(%r10), %r12
	movq	56(%r12), %rbx
	testq	%rbx, %rbx
	je	.L13992
	movq	global_binding_level(%rip), %rdi
	cmpq	%rdi, current_binding_level(%rip)
	je	.L14006
	movq	48(%rbx), %r11
	testq	%r11, %r11
	movq	%r11, %rcx
	jne	.L14007
.L14006:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L14008
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L17084
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L14009
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L18069
.L14009:
	testq	%rcx, %rcx
	jne	.L17084
.L17085:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17084
.L14008:
	movq	40(%rbx), %rcx
.L14007:
	testq	%rcx, %rcx
	je	.L17142
.L17084:
	cmpb	$32, 16(%rcx)
	je	.L14027
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L14027
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L14019
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17344
	movl	$1, %r8d
	testl	%r8d, %r8d
	jle	.L18070
.L17344:
	movq	%rax, %rcx
	jmp	.L14027
.L18070:
	testl	%edx, %edx
	jg	.L17344
	movl	$1, %esi
	testl	%esi, %esi
	je	.L14027
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17344
.L14019:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L14027
	jmp	.L17344
.L18069:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L14027
	testq	%rax, %rax
	je	.L17085
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L14009
.L13990:
	movq	-184(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r13, %rsi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -200(%rbp)
	je	.L18071
.L17347:
	movq	8(%r13), %rsi
	movq	32(%rbx), %rdx
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L14068:
	movq	-184(%rbp), %r12
	movq	%r12, 8(%r13)
	movq	-200(%rbp), %rdx
	movq	56(%rdx), %r12
	testq	%r12, %r12
	je	.L14071
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L14072
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L14072:
	movq	decl_obstack+24(%rip), %rdx
	movq	-200(%rbp), %rax
	leaq	8(%rdx), %rsi
	movq	%rax, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rsi
	ja	.L18072
.L14074:
	movq	-200(%rbp), %rcx
	movq	%rdx, %rbx
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rcx, (%rbx)
	cmpb	$32, 16(%rcx)
	je	.L18073
.L14071:
	movq	-200(%rbp), %rdx
	movq	%rdx, -544(%rbp)
	jmp	.L17189
.L18073:
	cmpq	$0, 72(%rcx)
	jne	.L14071
	movq	current_class_name(%rip), %rbx
	movq	8(%rcx), %r9
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%r9, -208(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L14076
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-200(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-208(%rbp), %r10
	movq	%r10, 8(%rax)
	jmp	.L14071
.L14076:
	movq	-200(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L14071
.L18072:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L14074
.L18071:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L14068
	jmp	.L17347
.L18055:
	cmpq	$0, class_binding_level(%rip)
	je	.L13989
	movq	144(%rax), %rsi
	testb	$16, 3(%rsi)
	jne	.L13988
	jmp	.L13989
.L18054:
	movq	-536(%rbp), %r11
	movq	-184(%rbp), %rsi
	movq	%r13, %rdi
	xorl	%eax, %eax
	movq	8(%r11), %rdx
	call	perm_tree_cons
	movq	-536(%rbp), %rdi
	movq	%rax, 8(%rdi)
	jmp	.L13985
.L13956:
	movq	-528(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L17184
	movl	flag_traditional(%rip), %edx
	testl	%edx, %edx
	jne	.L13961
	movq	-520(%rbp), %rdi
	testb	$8, 18(%rdi)
	je	.L13961
	testb	$8, 18(%r14)
	jne	.L13961
	testb	$9, 53(%r14)
	jne	.L13961
	cmpq	%r14, current_function_decl(%rip)
	je	.L18074
.L13965:
	movq	-520(%rbp), %rsi
	movq	72(%rsi), %rax
	testq	%rax, %rax
	je	.L13966
	cmpq	$0, 8(%rax)
	jne	.L18075
.L13966:
	movq	-528(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L17343:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-528(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L13961
.L18075:
	movq	-528(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L17343
.L18074:
	movq	-528(%rbp), %r11
	movq	%r11, current_function_decl(%rip)
	jmp	.L13965
.L18031:
	cmpq	$0, 64(%rcx)
	jne	.L13954
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L13954
.L18030:
	movq	%r14, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -528(%rbp)
	call	error_with_decl
	jmp	.L13952
.L13945:
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.L13947
.L13951:
	movq	-520(%rbp), %r9
	cmpq	%r9, 56(%rdi)
	je	.L13947
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L13951
.L13947:
	movq	%rdi, -528(%rbp)
	jmp	.L13944
.L18029:
	movq	-520(%rbp), %r13
	movq	40(%r13), %r8
	movq	%r8, -528(%rbp)
	jmp	.L13944
.L18028:
	movq	56(%r14), %rsi
	movq	%rsi, -520(%rbp)
	jmp	.L13941
.L18027:
	testb	$32, 53(%r14)
	jne	.L13939
	jmp	.L13940
.L17180:
	movzbl	16(%r14), %ecx
	jmp	.L13939
.L13931:
	testq	%rax, %rax
	je	.L13929
	testq	%rdx, %rdx
	je	.L13937
	movq	(%rax), %r10
	movq	%r10, (%rdx)
	jmp	.L13929
.L13937:
	movq	144(%rcx), %rdi
	movq	(%rax), %rdx
	movq	%rdx, 72(%rdi)
	jmp	.L13929
	.p2align 6,,7
.L18026:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L13926
	jmp	.L17342
	.p2align 6,,7
.L13923:
	movq	(%r12), %rsi
	movq	%rsi, 8(%rbx)
	jmp	.L13924
.L18025:
	movq	8(%rbx), %r12
	testq	%r12, %r12
	je	.L13906
.L13913:
	movq	-1072(%rbp), %rax
	cmpq	%rax, 32(%r12)
	je	.L13912
	movq	%r12, %r13
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L13913
	jmp	.L13906
.L18024:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L13898
	jmp	.L17341
.L18023:
	movq	global_binding_level(%rip), %r9
	movq	-1072(%rbp), %rdi
	xorl	%eax, %eax
	movq	8(%r9), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L13886
	jmp	.L13895
.L18022:
	cmpb	$95, 1(%rax)
	jne	.L13892
	jmp	.L13886
	.p2align 6,,7
.L18021:
	movl	$.LC174, %edi
	xorl	%eax, %eax
	call	error
	movq	-456(%rbp), %r8
	movq	56(%r8), %rsi
	movq	%rsi, -1072(%rbp)
	jmp	.L13886
.L18020:
	movl	$.LC173, %edi
	xorl	%eax, %eax
	call	error
	movq	void_type_node(%rip), %rcx
	movq	%rcx, -1072(%rbp)
	jmp	.L13886
	.p2align 6,,7
.L17516:
	movq	global_binding_level(%rip), %rcx
	movl	$1, %r12d
	cmpq	%rcx, current_binding_level(%rip)
	je	.L13856
	movq	48(%rbx), %rsi
	testq	%rsi, %rsi
	movq	%rsi, %rdx
	jne	.L13857
.L13856:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L13858
	movq	56(%rbx), %rdx
	testq	%rdx, %rdx
	je	.L18076
.L17082:
	cmpb	$32, 16(%rdx)
	je	.L13861
	movl	looking_for_typename(%rip), %ecx
	testl	%ecx, %ecx
	js	.L13861
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L13869
	movq	80(%rax), %rax
	cmpq	%rax, %rdx
	je	.L17338
	testl	%r12d, %r12d
	jle	.L18077
.L17338:
	movq	%rax, %rdx
.L13861:
	testq	%rdx, %rdx
	je	.L13875
	cmpb	$32, 16(%rdx)
	je	.L13874
.L13875:
	movl	$.LC172, %edi
	movq	32(%rbx), %rsi
.L17339:
	xorl	%eax, %eax
	call	error
	jmp	.L13823
.L13874:
	movq	8(%rdx), %rbx
	movq	%rdx, -496(%rbp)
	movq	%rbx, -1072(%rbp)
	jmp	.L13823
.L18077:
	testl	%ecx, %ecx
	jg	.L17338
	testl	%r12d, %r12d
	je	.L13861
	movq	%rdx, %rsi
	movq	%rbx, %rdi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17338
	.p2align 6,,7
.L13869:
	movq	error_mark_node(%rip), %r14
	cmpq	%r14, 8(%rdx)
	cmove	%r14, %rdx
	jmp	.L13861
.L18076:
	movq	32(%rdi), %r14
	testq	%r14, %r14
	jne	.L13859
	movq	144(%rdi), %r8
	testb	$1, 3(%r8)
	jne	.L18078
.L13859:
	testq	%rdx, %rdx
	jne	.L17082
.L17083:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rdx
	jne	.L17082
.L13858:
	movq	40(%rbx), %rdx
.L13857:
	testq	%rdx, %rdx
	jne	.L17082
	jmp	.L13875
.L18078:
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rdx
	je	.L13861
	testq	%rax, %rax
	je	.L17083
	cmpb	$32, 16(%rax)
	cmovne	%r14, %rdx
	jmp	.L13859
	.p2align 6,,7
.L17515:
	movq	-480(%rbp), %rsi
	movl	$.LC171, %edi
	jmp	.L17339
	.p2align 6,,7
.L17514:
	cmpq	ridpointers+8(%rip), %rbx
	je	.L18079
	cmpq	ridpointers+16(%rip), %rbx
	je	.L18080
	cmpq	ridpointers+192(%rip), %rbx
	je	.L18081
	movq	8(%rbx), %rcx
	movl	$12, %r12d
	movq	$ridpointers+96, %rax
	testq	%rcx, %rcx
	je	.L13852
	cmpq	$0, -1072(%rbp)
	jne	.L18082
	movq	%rcx, -1072(%rbp)
	jmp	.L13823
.L18082:
	movq	-1072(%rbp), %r10
	movq	32(%rbx), %rdx
	movl	$.LC168, %edi
	xorl	%eax, %eax
	movq	32(%r10), %rsi
	call	error
	jmp	.L13823
	.p2align 6,,7
.L13852:
	cmpq	%rbx, (%rax)
	je	.L18083
	incl	%r12d
	addq	$8, %rax
	cmpl	$31, %r12d
	jle	.L13852
	jmp	.L13826
.L18083:
	cmpl	$14, %r12d
	je	.L18084
.L13845:
	movl	%r15d, %r11d
	movl	%r12d, %ecx
	sarl	%cl, %r11d
	andl	$1, %r11d
	jne	.L18085
.L13850:
	movl	$1, %eax
	movl	%r12d, %ecx
	sall	%cl, %eax
	orl	%eax, %r15d
	jmp	.L13823
.L18085:
	movq	32(%rbx), %rsi
	movl	$.LC169, %edi
	xorl	%eax, %eax
	call	warning
	jmp	.L13850
.L18084:
	testl	$16384, %r15d
	je	.L13845
	movl	pedantic(%rip), %eax
	testl	%eax, %eax
	jne	.L18086
	movl	-576(%rbp), %edi
	testl	%edi, %edi
	jne	.L18087
	movl	$1, -576(%rbp)
	jmp	.L13850
.L18087:
	movl	$.LC170, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L13850
.L18086:
	movq	32(%rbx), %rsi
	movl	$.LC169, %edi
	xorl	%eax, %eax
	call	pedwarn
	jmp	.L13850
	.p2align 6,,7
.L18081:
	cmpq	$0, -1072(%rbp)
	jne	.L18088
.L13835:
	movq	40(%rbx), %rdx
	movq	8(%rdx), %r12
	movq	%r12, -1072(%rbp)
	jmp	.L13823
.L18088:
	movl	$.LC167, %edi
.L17340:
	xorl	%eax, %eax
	call	error
	jmp	.L13823
.L18080:
	cmpq	$0, -1072(%rbp)
	jne	.L18089
	movl	$1, -500(%rbp)
	jmp	.L13835
.L18089:
	movl	$.LC166, %edi
	jmp	.L17340
.L18079:
	cmpq	$0, -1072(%rbp)
	jne	.L18090
	movl	$1, -572(%rbp)
	jmp	.L13835
.L18090:
	movl	$.LC165, %edi
	jmp	.L17340
	.p2align 6,,7
.L13814:
	xorl	%ebx, %ebx
	jmp	.L13765
.L13784:
	movq	%rbx, -464(%rbp)
	movq	32(%rbx), %r12
	movq	%r12, -480(%rbp)
	jmp	.L13814
.L13787:
	xorl	%eax, %eax
	movl	$.LC158, %edi
	call	error
	movq	80(%rbx), %rcx
	testq	%rcx, %rcx
	movq	%rcx, -464(%rbp)
	je	.L13789
	cmpb	$32, 16(%rcx)
	je	.L18091
.L13788:
	cmpq	$0, -464(%rbp)
	je	.L13789
	movq	-464(%rbp), %r10
	movq	32(%r10), %r13
	movq	%r13, -480(%rbp)
.L13790:
	movq	-592(%rbp), %rdx
	xorl	%edi, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	temp_tree_cons
	movq	%rax, -592(%rbp)
	jmp	.L13814
.L13789:
	movq	$.LC159, -480(%rbp)
	jmp	.L13790
.L18091:
	movq	56(%rcx), %rdx
	movq	%rdx, -464(%rbp)
	jmp	.L13788
.L13781:
	cmpl	$3, -484(%rbp)
	movzbl	%r11b, %r9d
	movl	%r9d, -472(%rbp)
	movq	32(%rbx), %rbx
	je	.L18092
.L13782:
	testq	%r14, %r14
	je	.L13783
.L17081:
	testq	%rbx, %rbx
	je	.L13783
	cmpl	$1, -448(%rbp)
	je	.L13783
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	constructor_name
	cmpq	%rax, %rbx
	je	.L18093
.L13783:
	xorl	%r14d, %r14d
	jmp	.L13765
.L18093:
	movl	$1, -468(%rbp)
	movq	%r14, -456(%rbp)
	jmp	.L13783
.L18092:
	testq	%r14, %r14
	jne	.L17081
	movq	current_class_type(%rip), %r14
	jmp	.L13782
.L13770:
	movl	-448(%rbp), %eax
	xorl	%r13d, %r13d
	movq	32(%rbx), %r12
	testl	%eax, %eax
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$152, %esi
	call	my_friendly_assert
	movl	$153, %esi
	movl	$2, -468(%rbp)
	movl	$1, -448(%rbp)
	cmpb	$1, 16(%r12)
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	testq	%r14, %r14
	jne	.L13771
	cmpq	$0, current_class_type(%rip)
	jne	.L13772
	movl	$.LC156, %edi
	xorl	%eax, %eax
	call	error
	movl	$0, -448(%rbp)
.L13775:
	testq	%r13, %r13
	jne	.L18094
.L13777:
	movq	%r12, %rbx
	jmp	.L13765
.L18094:
	movq	32(%r12), %rsi
	movq	32(%r13), %rdx
	movl	$.LC157, %edi
	xorl	%eax, %eax
	call	error
	movq	%r13, 32(%rbx)
	jmp	.L13777
.L13772:
	movq	current_class_name(%rip), %rdi
	xorl	%eax, %eax
	call	constructor_name
	cmpq	%r12, %rax
	je	.L13775
	movq	%rax, %r13
	jmp	.L13775
.L13771:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	constructor_name
	cmpq	%r12, %rax
	cmovne	%rax, %r13
	jmp	.L13775
.L13780:
	movzbl	%r11b, %r8d
	xorl	%r14d, %r14d
	movl	%r8d, -472(%rbp)
	jmp	.L17337
.L13793:
	cmpl	$1, -444(%rbp)
	je	.L18095
.L13794:
	incl	-444(%rbp)
	movq	32(%rbx), %r12
	testq	%r12, %r12
	je	.L18096
	movzbl	16(%r12), %edx
	leal	-21(%rdx), %r11d
	cmpb	$1, %r11b
	jbe	.L13798
	cmpb	$-124, %dl
	je	.L13798
	xorl	%eax, %eax
	movq	%r12, %rdi
	movl	$1, %esi
	call	is_aggr_typedef
	testl	%eax, %eax
	je	.L17336
	movq	40(%rbx), %r13
	testq	%r13, %r13
	je	.L13802
	cmpb	$39, 16(%r13)
	je	.L18097
.L13802:
	testq	%r14, %r14
	jne	.L13804
	movq	8(%r12), %r14
.L17335:
	movq	%r14, 32(%rbx)
.L13796:
	testq	%r14, %r14
	movq	%r13, %rbx
	je	.L13765
	movzbl	16(%r13), %eax
	cmpb	$1, %al
	je	.L18098
.L13811:
	cmpb	$85, %al
	jne	.L13765
	movq	32(%r13), %r8
	cmpb	$1, 16(%r8)
	jne	.L13765
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	constructor_name
	cmpq	32(%r13), %rax
	jne	.L13765
	movq	%rax, %rbx
	movl	$2, -468(%rbp)
	movq	%r14, -456(%rbp)
	movl	$1, -448(%rbp)
	jmp	.L13765
	.p2align 6,,7
.L18098:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	constructor_name
	cmpq	%r13, %rax
	je	.L18099
	movzbl	16(%r13), %eax
	jmp	.L13811
.L18099:
	movl	$1, -468(%rbp)
	movq	%r14, -456(%rbp)
	jmp	.L13765
.L13804:
	movl	current_class_depth(%rip), %eax
	cmpl	%eax, 24(%rbx)
	je	.L17335
	movq	8(%r12), %rdi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	movq	%r14, %rsi
	call	get_base_distance
	testl	%eax, %eax
	js	.L18100
	movq	8(%r12), %r14
	movq	%r14, 32(%rbx)
.L17334:
	movq	40(%rbx), %r13
	jmp	.L13796
.L18100:
	movq	80(%r14), %rsi
	movl	$.LC163, %edi
	xorl	%eax, %eax
	movq	56(%rsi), %rcx
	movq	32(%r12), %rsi
	movq	32(%rcx), %rdx
	call	error
.L17336:
	movq	$0, 32(%rbx)
	jmp	.L17334
.L18097:
	movq	8(%r12), %rdi
	movq	%rdi, 32(%rbx)
	jmp	.L13796
	.p2align 6,,7
.L13798:
	movq	%r12, %r14
	jmp	.L17334
.L18096:
	xorl	%r14d, %r14d
	jmp	.L17334
.L18095:
	movl	$.LC162, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L13794
	.p2align 6,,7
.L13815:
	xorl	%edi, %edi
	movl	$155, %esi
	xorl	%eax, %eax
	call	my_friendly_assert
	jmp	.L13765
.L13791:
	testq	%r14, %r14
	je	.L17286
	movl	-448(%rbp), %eax
	xorl	%r14d, %r14d
	movl	$154, %esi
	testl	%eax, %eax
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	$.LC161, -480(%rbp)
	movl	$3, -448(%rbp)
	movq	32(%rbx), %rbx
	movl	$3, -468(%rbp)
	jmp	.L13765
.L17286:
	movq	8(%rbx), %r13
	movl	$.LC160, %edi
	xorl	%eax, %eax
	movq	32(%r13), %r12
	movq	32(%r12), %rsi
	call	error
	jmp	.L17287
.L17513:
	movq	32(%rbx), %rax
	testq	%rax, %rax
	je	.L13287
	movzbl	16(%rax), %eax
	cmpb	$1, %al
	je	.L13288
	cmpb	$124, %al
	jne	.L13287
.L13288:
	movq	-592(%rbp), %rdx
	movq	32(%rdx), %r13
	cmpb	$1, 16(%r13)
	je	.L18101
	testb	$64, 46(%r13)
	je	.L13309
	movq	80(%r13), %rcx
.L13290:
	testq	%rcx, %rcx
	je	.L13311
	cmpb	$32, 16(%rcx)
	je	.L18102
.L13311:
	movq	40(%rbx), %rdi
	xorl	%eax, %eax
	call	parmlist_is_random
	testl	%eax, %eax
	je	.L13764
	movq	32(%rbx), %rbx
	movzbl	16(%rbx), %eax
	cmpb	$124, %al
	je	.L18103
.L13759:
	decb	%al
	je	.L18104
.L13761:
	cmpq	$0, -480(%rbp)
	je	.L13762
	movq	-480(%rbp), %rsi
	movl	$.LC154, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L17447
.L13762:
	movl	$.LC155, %edi
	jmp	.L17472
.L18104:
	movq	32(%rbx), %r10
	movq	%r10, -480(%rbp)
	jmp	.L13761
.L18103:
	movl	24(%rbx), %eax
	testl	%eax, %eax
	jne	.L18105
.L13760:
	movq	40(%rbx), %rbx
	movzbl	16(%rbx), %eax
	jmp	.L13759
.L18105:
	movl	$15, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L13760
.L18102:
	movq	8(%rcx), %r10
	testb	$64, 46(%r10)
	je	.L13311
	movq	40(%rbx), %rdi
	xorl	%eax, %eax
	call	parmlist_is_exprlist
	testl	%eax, %eax
	je	.L13311
	cmpl	$3, -484(%rbp)
	je	.L18106
	movq	40(%rbx), %r13
.L13312:
	testq	%r12, %r12
	movq	%r13, -384(%rbp)
	je	.L13316
	movl	pedantic(%rip), %eax
	movq	32(%rbx), %rcx
	testl	%eax, %eax
	movq	%rcx, 32(%r12)
	je	.L13318
	testq	%r13, %r13
	je	.L13318
	movl	$.LC139, %edi
	xorl	%eax, %eax
	call	error
	movq	error_mark_node(%rip), %r12
	movq	%r12, -384(%rbp)
.L13318:
	movl	have_extern_spec(%rip), %eax
	movl	$1, %r14d
	testl	%eax, %eax
	je	.L13319
	movl	used_extern_spec(%rip), %eax
	testl	%eax, %eax
	je	.L18107
.L13319:
	movq	-904(%rbp), %rdi
	movq	-592(%rbp), %rsi
	xorl	%edx, %edx
	xorl	%r8d, %r8d
	xorl	%eax, %eax
	movl	$1, %ecx
	call	grokdeclarator
	testq	%rax, %rax
	movq	%rax, %r13
	je	.L17333
	cmpq	void_type_node(%rip), %rax
	je	.L17333
	movq	8(%rax), %rax
	movq	%rax, -392(%rbp)
	testb	$4, 18(%r13)
	je	.L13323
	testb	$32, 46(%rax)
	je	.L13323
	testb	$4, 17(%r13)
	je	.L18108
.L13323:
	movq	-392(%rbp), %rbx
	cmpb	$21, 16(%rbx)
	je	.L18109
.L13326:
	xorl	%eax, %eax
	call	push_obstacks_nochange
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L18110
.L13327:
	movq	64(%r13), %r12
.L13328:
	movl	processing_template_decl(%rip), %eax
	testl	%eax, %eax
	je	.L13329
	cmpb	$29, %dl
	je	.L18111
.L13330:
	movq	8(%r13), %rdx
	movq	56(%r13), %rsi
	movl	$129, %edi
	xorl	%eax, %eax
	call	build_lang_decl
	xorl	%edx, %edx
	andb	$-9, 18(%r13)
	movzbl	18(%rax), %edi
	movq	%rax, %rcx
	movl	%edi, %r10d
	andb	$-13, %dil
	andb	$-9, %r10b
	movb	%r10b, 18(%rax)
	movzbl	18(%r13), %r9d
	andb	$4, %r9b
	orb	%r9b, %dil
	movb	%dil, 18(%rax)
	testb	$1, 53(%r13)
	je	.L13333
	testq	%r12, %r12
	je	.L13334
	testb	$8, 54(%r13)
	je	.L13333
.L13334:
	movl	$1, %edx
.L13333:
	movzbl	53(%rcx), %r11d
	movq	%r13, 80(%rcx)
	orb	$32, 54(%rcx)
	movq	%rcx, %r13
	andb	$-2, %r11b
	orb	%dl, %r11b
	movb	%r11b, 53(%rcx)
.L13329:
	testq	%r12, %r12
	je	.L13335
	cmpq	$0, 32(%r12)
	je	.L13335
	testb	$8, 54(%r13)
	jne	.L13336
	andb	$-2, 53(%r13)
.L13336:
	cmpq	$0, 152(%r13)
	je	.L13337
	andb	$-17, 54(%r13)
.L13337:
	movq	%r12, %rdi
	movl	$2, %esi
	xorl	%eax, %eax
	call	pushclass
.L13335:
	movq	-392(%rbp), %rcx
	testb	$32, 46(%rcx)
	je	.L13338
	movq	current_binding_level(%rip), %rax
	testb	$1, 67(%rax)
	jne	.L13338
	cmpq	global_binding_level(%rip), %rax
	je	.L18112
.L13339:
	movq	free_binding_level(%rip), %rax
	testq	%rax, %rax
	je	.L13340
	movq	56(%rax), %rbx
	movq	%rax, %rdi
	movq	%rbx, free_binding_level(%rip)
.L13341:
	movq	clear_binding_level(%rip), %rbx
	movq	class_binding_level(%rip), %rax
	movl	keep_next_level_flag(%rip), %ecx
	movq	%rbx, (%rdi)
	testq	%rax, %rax
	movq	clear_binding_level+8(%rip), %r12
	movq	%r12, 8(%rdi)
	movq	clear_binding_level+16(%rip), %r11
	movq	%r11, 16(%rdi)
	movq	clear_binding_level+24(%rip), %r10
	movq	%r10, 24(%rdi)
	movq	clear_binding_level+32(%rip), %r9
	movq	%r9, 32(%rdi)
	movq	clear_binding_level+40(%rip), %rsi
	movq	%rsi, 40(%rdi)
	movq	clear_binding_level+48(%rip), %r8
	movq	%r8, 48(%rdi)
	movq	clear_binding_level+56(%rip), %rdx
	movq	%rdx, 56(%rdi)
	movq	clear_binding_level+64(%rip), %r15
	movq	%r15, 64(%rdi)
	je	.L13342
	movq	%rax, 56(%rdi)
	movq	$0, class_binding_level(%rip)
.L13343:
	movzbl	66(%rdi), %r8d
	movl	%ecx, %edx
	movq	%rdi, current_binding_level(%rip)
	andb	$7, %dl
	orb	$5, 67(%rdi)
	xorl	%eax, %eax
	salb	$4, %dl
	orb	$-128, %r8b
	andb	$-113, %r8b
	orb	%dl, %r8b
	movb	%r8b, 66(%rdi)
	call	GNU_xref_start_scope
	movq	current_binding_level(%rip), %rdi
	movl	$0, keep_next_level_flag(%rip)
	xorl	%eax, %eax
	movzbl	66(%rdi), %ecx
	andb	$-113, %cl
	orb	$32, %cl
	movb	%cl, 66(%rdi)
	call	clear_last_expr
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	expand_start_bindings
.L13338:
	testl	%r14d, %r14d
	je	.L17072
	movzbl	16(%r13), %eax
	cmpl	$29, %eax
	je	.L13352
	cmpl	$32, %eax
	je	.L18113
	movq	-392(%rbp), %rax
	cmpq	$0, 32(%rax)
	jne	.L13347
	cmpb	$18, 16(%rax)
	je	.L13356
	movq	56(%r13), %rax
	movl	$.LC143, %edi
.L17317:
	movq	32(%rax), %rsi
	xorl	%r14d, %r14d
	xorl	%eax, %eax
	call	error
.L13347:
	testl	%r14d, %r14d
	jne	.L17073
.L17072:
	movzbl	16(%r13), %eax
	cmpb	$32, %al
	je	.L13360
	cmpb	$-127, %al
	je	.L13360
	movq	-392(%rbp), %rcx
	movzbl	46(%rcx), %eax
	testb	$64, %al
	je	.L13360
	testb	$1, 53(%r13)
	jne	.L13360
	cmpq	$0, 32(%rcx)
	je	.L18114
	shrb	$4, %al
	movl	$1, %r14d
	andl	%eax, %r14d
.L13360:
	testl	%r14d, %r14d
	je	.L13363
.L17073:
	movq	global_binding_level(%rip), %r14
	cmpq	%r14, current_binding_level(%rip)
	je	.L13364
	testb	$1, 53(%r13)
	jne	.L18115
.L13364:
	andb	$-2, 53(%r13)
	movq	global_binding_level(%rip), %rbx
	cmpq	%rbx, current_binding_level(%rip)
	je	.L18116
.L13365:
	movq	error_mark_node(%rip), %r15
	movq	%r15, 88(%r13)
.L13363:
	movzbl	16(%r13), %edx
	cmpb	$34, %dl
	movl	%edx, %ecx
	je	.L13368
	cmpq	$0, 64(%r13)
	jne	.L13367
.L13368:
	cmpb	$-127, %dl
	je	.L18117
.L13369:
	movq	-392(%rbp), %r8
	cmpb	$24, 16(%r8)
	je	.L13367
	movq	112(%r13), %rax
	movq	current_binding_level(%rip), %rsi
	movq	%rax, -400(%rbp)
	movq	%rsi, -424(%rbp)
	movq	current_function_decl(%rip), %rax
	cmpq	%rax, %r13
	je	.L13372
	cmpb	$29, %dl
	je	.L18118
.L13373:
	movq	%rax, 64(%r13)
.L13372:
	cmpb	$32, %cl
	je	.L18119
.L13374:
	cmpq	$0, -400(%rbp)
	je	.L13375
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L18120
	movq	-400(%rbp), %r11
	cmpq	$0, 48(%r11)
	jne	.L13378
	movq	$0, -432(%rbp)
.L13377:
	cmpq	$0, -432(%rbp)
	je	.L13395
	movq	-432(%rbp), %r12
	cmpq	error_mark_node(%rip), %r12
	je	.L18121
.L13385:
	cmpq	$0, -432(%rbp)
	je	.L17164
	movq	-432(%rbp), %rcx
	cmpb	$34, 16(%rcx)
	je	.L18122
.L13387:
	movq	-432(%rbp), %rdx
	testq	%rdx, %rdx
	movq	24(%rdx), %r12
	movq	%rdx, %rsi
	movl	32(%rdx), %ebx
	je	.L17164
	movzbl	16(%rdx), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L13389
	cmpb	$32, %al
	je	.L13395
	cmpb	$32, %dl
	je	.L17305
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L17164
.L13394:
	movq	-432(%rbp), %rcx
	cmpb	$3, 16(%rcx)
	je	.L18123
.L17175:
	movzbl	16(%r13), %edx
.L13371:
	cmpb	$29, %dl
	je	.L18124
.L13673:
	cmpb	$-127, %dl
	je	.L18125
.L13708:
	movl	$1, %eax
	testl	%eax, %eax
	je	.L13751
	movq	-432(%rbp), %rcx
	movzbl	16(%rcx), %eax
	cmpb	$34, %al
	je	.L13751
	testb	$32, 17(%rcx)
	je	.L13752
	cmpb	$33, %al
	je	.L13751
	cmpb	$36, %al
	je	.L13751
.L13752:
	movq	global_binding_level(%rip), %r13
	cmpq	%r13, current_binding_level(%rip)
	je	.L18126
.L13751:
	movl	flag_cadillac(%rip), %eax
	testl	%eax, %eax
	jne	.L18127
.L13322:
	movq	-432(%rbp), %rdi
	movq	-384(%rbp), %rsi
	xorl	%edx, %edx
	movl	$1, %ecx
	xorl	%eax, %eax
	call	finish_decl
	jmp	.L17287
.L18127:
	movq	-432(%rbp), %rdi
	xorl	%eax, %eax
	call	cadillac_start_decl
	jmp	.L13322
.L18126:
	movl	debug_temp_inits(%rip), %eax
	testl	%eax, %eax
	je	.L13751
	movq	-392(%rbp), %rsi
	testb	$16, 46(%rsi)
	jne	.L13751
	cmpb	$15, 16(%rsi)
	je	.L13751
	xorl	%eax, %eax
	call	temporary_allocation
	jmp	.L13751
.L18125:
	movq	80(%r13), %rax
	movq	64(%rax), %rdx
	testq	%rdx, %rdx
	jne	.L18128
	movzbl	16(%rax), %eax
	cmpb	$29, %al
	je	.L18129
	subb	$32, %al
	cmpb	$1, %al
	ja	.L13749
	movl	$.LC153, %edi
	xorl	%eax, %eax
	call	sorry
.L17333:
	movq	$0, -432(%rbp)
	jmp	.L13322
.L13749:
	movl	$14, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L13708
.L18129:
	movq	-432(%rbp), %rcx
	xorl	%r15d, %r15d
	movq	56(%rcx), %r13
	movq	40(%r13), %r12
	orb	$32, 54(%rcx)
	testq	%r12, %r12
	je	.L13714
	movzbl	16(%r12), %edx
	cmpb	$3, %dl
	je	.L13715
.L17507:
	movq	152(%rcx), %rdi
	cmpb	$0, (%rdi)
	jne	.L13716
	cmpb	$29, %dl
	je	.L18130
	movl	$9, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L13716:
	testl	%r15d, %r15d
	je	.L13720
	movl	flag_traditional(%rip), %r15d
	testl	%r15d, %r15d
	jne	.L13720
	testb	$4, 17(%r12)
	jne	.L18131
.L13720:
	movzbl	16(%r12), %eax
	cmpb	$106, %al
	je	.L18132
.L13722:
	cmpb	$29, %al
	je	.L18133
.L13723:
	movl	pedantic(%rip), %edi
	testl	%edi, %edi
	je	.L13727
	cmpb	$33, 16(%r12)
	je	.L18134
.L13727:
	movq	%r13, %rdi
	movq	%r12, %rsi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	tree_cons
	movq	-432(%rbp), %rsi
	movq	24(%rax), %rdi
	movq	%rax, %rdx
.L17330:
	xorl	%eax, %eax
	call	tree_cons
	movq	unknown_type_node(%rip), %r12
	movq	%rax, 40(%r13)
	movq	%r12, 8(%rax)
	jmp	.L13708
.L18134:
	movq	tree_code_type(%rip), %r9
	movl	$143, %esi
	movq	264(%r9), %r15
	cmpb	$100, (%r15)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	xorl	%eax, %eax
	movl	$.LC151, %esi
	movq	%r12, %rdi
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC152, %esi
	movq	-432(%rbp), %rdi
	call	error_with_decl
	jmp	.L13727
.L18133:
	movq	-432(%rbp), %rsi
	movq	152(%r12), %rbx
	movq	152(%rsi), %rcx
	movzbl	(%rcx), %r9d
	cmpb	%r9b, (%rbx)
	je	.L13723
	movq	8(%r12), %rdi
	movq	8(%rsi), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L13723
	movq	current_lang_base(%rip), %rsi
	cmpq	%rsi, current_lang_stack(%rip)
	je	.L18135
	movq	-432(%rbp), %rdi
	movl	$.LC149, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC150, %esi
	movq	%r12, %rdi
	call	error_with_decl
	jmp	.L13723
.L18135:
	movq	152(%r12), %r11
	movq	-432(%rbp), %r13
	movzbl	(%r11), %r14d
	movq	152(%r13), %r10
	movq	%r12, -432(%rbp)
	movb	%r14b, (%r10)
	jmp	.L13708
.L18132:
	movq	32(%r12), %r12
	movzbl	16(%r12), %eax
	jmp	.L13722
.L18131:
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L13720
	movq	overloads_to_forget(%rip), %rdx
	movq	%r13, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, overloads_to_forget(%rip)
	jmp	.L13720
.L18130:
	movq	152(%r12), %r8
	cmpb	$0, (%r8)
	jne	.L13716
	movq	%rcx, %rdi
	movl	$.LC147, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC148, %esi
	movq	%r12, %rdi
	call	error_with_decl
	jmp	.L13716
.L13715:
	cmpq	$0, 32(%r12)
	jne	.L13728
.L17331:
	movq	-432(%rbp), %rax
	movq	%rax, 32(%r12)
	jmp	.L13708
.L13728:
	movq	-432(%rbp), %rsi
	cmpb	$-127, 16(%rsi)
	je	.L13714
	movq	112(%rsi), %r14
	movq	%r12, %rbx
.L13736:
	movq	32(%rbx), %rcx
	cmpb	$29, 16(%rcx)
	je	.L18136
.L13734:
	cmpb	$-127, 16(%rcx)
	je	.L13732
	cmpq	%r14, 112(%rcx)
	je	.L13708
.L13732:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L13736
.L13714:
	movq	-432(%rbp), %rsi
	movq	152(%rsi), %rbx
	cmpb	$0, (%rbx)
	jne	.L13737
	testq	%r12, %r12
	movq	%r12, %rbx
	je	.L13737
	movq	32(%r12), %r14
	movq	152(%r14), %rdx
	cmpb	$1, (%rdx)
	je	.L13742
.L13739:
	testq	%rbx, %rbx
	jne	.L18137
.L13737:
	testl	%r15d, %r15d
	je	.L13744
	movl	flag_traditional(%rip), %r15d
	testl	%r15d, %r15d
	jne	.L13744
	testq	%r12, %r12
	je	.L13745
	testb	$4, 17(%r12)
	jne	.L13745
.L13744:
	movq	%r13, %rdi
	movq	-432(%rbp), %rsi
	movq	%r12, %rdx
	jmp	.L17330
.L13745:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L13744
	testb	$32, 67(%rax)
	jne	.L13744
	movq	overloads_to_forget(%rip), %rdx
	movq	%r13, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, overloads_to_forget(%rip)
	jmp	.L13744
.L18137:
	movq	-432(%rbp), %rdi
	movl	$.LC147, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC148, %esi
	movq	32(%rbx), %rdi
	call	error_with_decl
	jmp	.L13737
.L13742:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	je	.L13737
	movq	32(%rbx), %r9
	movq	152(%r9), %r8
	cmpb	$1, (%r8)
	je	.L13742
	jmp	.L13739
.L18136:
	movq	-432(%rbp), %rsi
	movq	152(%rcx), %r11
	movq	152(%rsi), %rdi
	movzbl	(%rdi), %r10d
	cmpb	%r10b, (%r11)
	je	.L13734
	movq	8(%rcx), %rdi
	movq	8(%rsi), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	jne	.L18138
.L17178:
	movq	32(%rbx), %rcx
	jmp	.L13734
.L18138:
	movq	-432(%rbp), %rdi
	movl	$.LC149, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC150, %esi
	movq	32(%rbx), %rdi
	call	error_with_decl
	jmp	.L17178
.L18128:
	cmpb	$-124, 16(%rdx)
	movl	$145, %esi
	sete	%r13b
	xorl	%eax, %eax
	movzbl	%r13b, %edi
	call	my_friendly_assert
	jmp	.L13322
.L18124:
	testb	$32, 54(%r13)
	je	.L13673
	movq	-432(%rbp), %rcx
	movl	$1, %r15d
	movq	56(%rcx), %r13
	movq	40(%r13), %r12
	orb	$32, 54(%rcx)
	testq	%r12, %r12
	je	.L13674
	movzbl	16(%r12), %edx
	cmpb	$3, %dl
	jne	.L17507
	cmpq	$0, 32(%r12)
	je	.L17331
	movq	-432(%rbp), %rsi
	cmpb	$-127, 16(%rsi)
	je	.L13674
	movq	112(%rsi), %r14
	movq	%r12, %rbx
.L13696:
	movq	32(%rbx), %rcx
	cmpb	$29, 16(%rcx)
	je	.L18139
.L13694:
	cmpb	$-127, 16(%rcx)
	je	.L13692
	cmpq	%r14, 112(%rcx)
	je	.L13708
.L13692:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L13696
.L13674:
	movq	-432(%rbp), %rsi
	movq	152(%rsi), %rbx
	cmpb	$0, (%rbx)
	jne	.L13737
	testq	%r12, %r12
	movq	%r12, %rbx
	je	.L13737
	movq	32(%r12), %r10
	movq	152(%r10), %rcx
	cmpb	$1, (%rcx)
	jne	.L13739
.L13702:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	je	.L13737
	movq	32(%rbx), %r11
	movq	152(%r11), %r14
	cmpb	$1, (%r14)
	je	.L13702
	jmp	.L13739
.L18139:
	movq	-432(%rbp), %rsi
	movq	152(%rcx), %r8
	movq	152(%rsi), %r9
	movzbl	(%r9), %edi
	cmpb	%dil, (%r8)
	je	.L13694
	movq	8(%rcx), %rdi
	movq	8(%rsi), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	jne	.L18140
.L17177:
	movq	32(%rbx), %rcx
	jmp	.L13694
.L18140:
	movq	-432(%rbp), %rdi
	movl	$.LC149, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC150, %esi
	movq	32(%rbx), %rdi
	call	error_with_decl
	jmp	.L17177
.L18123:
	xorl	%eax, %eax
	movq	%r13, %rdi
	movq	%rcx, %rsi
	call	value_member
	testq	%rax, %rax
	je	.L13651
	movq	32(%rax), %rdi
	movq	%rdi, -432(%rbp)
	jmp	.L17175
.L13651:
	cmpq	$0, -432(%rbp)
	je	.L17080
	movq	-432(%rbp), %r9
	cmpb	$29, 16(%r13)
	movq	%r13, -56(%rbp)
	movq	%r13, %rdi
	movq	32(%r9), %rsi
	movq	%rsi, -80(%rbp)
	je	.L18141
.L13655:
	movq	8(%rdi), %rdi
	cmpq	error_mark_node(%rip), %rdi
	je	.L18142
	movq	8(%rsi), %rsi
	testq	%rsi, %rsi
	jne	.L13668
	testq	%rdi, %rdi
.L17329:
	sete	%r14b
	movzbl	%r14b, %eax
.L13662:
	testl	%eax, %eax
	jne	.L18143
	movq	-432(%rbp), %r8
	movq	(%r8), %rdx
	movq	%rdx, -432(%rbp)
	jmp	.L13651
.L18143:
	cmpq	$0, -432(%rbp)
	jne	.L13671
.L17080:
	movq	%r13, -432(%rbp)
	jmp	.L17175
.L13671:
	movq	-432(%rbp), %r11
	movq	32(%r11), %rax
	movq	%rax, -432(%rbp)
	jmp	.L17175
.L13668:
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	jmp	.L13662
.L18142:
	cmpq	%rdi, 8(%rsi)
	jmp	.L17329
.L18141:
	cmpb	$29, 16(%rsi)
	jne	.L13655
	movq	8(%r13), %rcx
	movq	8(%rsi), %rdx
	cmpb	$16, 16(%rcx)
	movq	24(%rcx), %r12
	movq	%rcx, -48(%rbp)
	movq	24(%rdx), %r15
	movq	%rdx, -72(%rbp)
	movq	%rdx, %r8
	movq	%r12, -64(%rbp)
	movq	%r15, -88(%rbp)
	je	.L18144
.L13656:
	cmpb	$16, 16(%r8)
	je	.L18145
.L13657:
	movzbl	16(%rcx), %eax
	cmpb	16(%rdx), %al
	je	.L13659
	cmpb	$14, %al
	je	.L18146
	movq	-56(%rbp), %rdi
	movl	$.LC2, %esi
.L17328:
	xorl	%eax, %eax
	call	compiler_error_with_decl
.L13663:
	xorl	%eax, %eax
	jmp	.L13662
.L18146:
	movq	-56(%rbp), %rdi
	movl	$.LC1, %esi
	jmp	.L17328
.L13659:
	movq	8(%rcx), %r10
	xorl	%eax, %eax
	movq	8(%rdx), %rcx
	movl	$1, %edx
	movq	112(%r10), %rdi
	movq	112(%rcx), %rsi
	call	comptypes
	testl	%eax, %eax
	je	.L13663
	movq	-64(%rbp), %rdi
	movq	-88(%rbp), %rsi
	movl	$1, %edx
	xorl	%eax, %eax
	call	compparms
	jmp	.L13662
.L18145:
	movq	152(%rdi), %rsi
	testb	$32, 1(%rsi)
	je	.L13657
	leaq	-72(%rbp), %rdi
	leaq	-80(%rbp), %rsi
	leaq	-88(%rbp), %rdx
.L17327:
	xorl	%eax, %eax
	call	revert_static_member_fn
	movq	-48(%rbp), %rcx
	movq	-72(%rbp), %rdx
	jmp	.L13657
.L18144:
	movq	152(%rsi), %rbx
	testb	$32, 1(%rbx)
	je	.L13656
	leaq	-48(%rbp), %rdi
	leaq	-56(%rbp), %rsi
	leaq	-64(%rbp), %rdx
	jmp	.L17327
.L17164:
	movzbl	16(%r13), %edx
.L13395:
	cmpb	$32, %dl
	je	.L17305
.L13403:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L13541
	movq	-400(%rbp), %r9
	movq	40(%r9), %rax
	testq	%rax, %rax
	je	.L13541
	testb	$1, 53(%rax)
	jne	.L13542
	testb	$8, 18(%rax)
	je	.L13541
.L13542:
	andb	$8, %dl
	je	.L18147
.L13541:
	movl	flag_traditional(%rip), %edx
	testl	%edx, %edx
	je	.L17172
	testb	$1, 53(%r13)
	je	.L17172
	xorl	%r12d, %r12d
	movq	global_binding_level(%rip), %r14
	cmpq	%r14, current_binding_level(%rip)
	je	.L13545
	movq	-400(%rbp), %rbx
	movq	48(%rbx), %rsi
	testq	%rsi, %rsi
	movq	%rsi, %rcx
	jne	.L13546
.L13545:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L13547
	movq	-400(%rbp), %r10
	movq	56(%r10), %rcx
	testq	%rcx, %rcx
	jne	.L17078
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L13548
	movq	144(%rdi), %r11
	testb	$1, 3(%r11)
	jne	.L18148
.L13548:
	testq	%rcx, %rcx
	jne	.L17078
.L17079:
	movq	-400(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17078
	movq	-400(%rbp), %rdi
	movq	40(%rdi), %rcx
.L13546:
	testq	%rcx, %rcx
	je	.L17141
.L17078:
	cmpb	$32, 16(%rcx)
	je	.L13550
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L13550
	movq	-400(%rbp), %r9
	movq	8(%r9), %rax
	testq	%rax, %rax
	je	.L13558
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17324
	testl	%r12d, %r12d
	jle	.L18149
.L17324:
	movq	%rax, %rcx
.L13550:
	testq	%rcx, %rcx
	jne	.L17172
.L17141:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -424(%rbp)
.L13544:
	cmpq	%rax, -424(%rbp)
	je	.L18150
	movq	current_binding_level(%rip), %rbx
	movq	-400(%rbp), %rsi
	cmpq	%rax, %rbx
	movq	48(%rsi), %r14
	movq	40(%rsi), %r12
	movq	%rsi, %rdi
	je	.L18151
.L17325:
	movq	16(%rbx), %rdx
	movq	%r14, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%rbx)
.L13589:
	movq	-400(%rbp), %rdx
	testq	%r14, %r14
	movq	%r13, 48(%rdx)
	je	.L18152
.L13600:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L13602
	testq	%r14, %r14
	je	.L13603
	testb	$1, 53(%r13)
	jne	.L13603
	cmpb	$34, 16(%r14)
	je	.L18153
.L13603:
	movl	warn_shadow(%rip), %ecx
	testl	%ecx, %ecx
	je	.L13602
	testb	$1, 53(%r13)
	jne	.L13602
	movl	32(%r13), %r15d
	testl	%r15d, %r15d
	je	.L13602
	testq	%rax, %rax
	jne	.L13602
	xorl	%edi, %edi
	testq	%r14, %r14
	je	.L13608
	cmpb	$34, 16(%r14)
	je	.L18154
.L13608:
	movq	-400(%rbp), %rsi
	cmpq	$0, 56(%rsi)
	je	.L13610
	movl	$.LC41, %edi
.L13609:
	testq	%rdi, %rdi
	jne	.L18155
.L13602:
	testq	%r14, %r14
	je	.L17173
	movq	-424(%rbp), %r11
	movq	-400(%rbp), %rdi
	movq	%r14, %rsi
	xorl	%eax, %eax
	movq	16(%r11), %rdx
	call	tree_cons
	movq	-424(%rbp), %r14
	movq	%rax, 16(%r14)
.L17173:
	movzbl	16(%r13), %edx
.L13587:
	leal	-128(%rdx), %edi
	cmpb	$1, %dil
	jbe	.L13375
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L13375
	cmpb	$18, 16(%rcx)
	je	.L18156
.L13619:
	testb	$64, 46(%rcx)
	je	.L13375
.L13618:
	movq	-424(%rbp), %rdx
	movzwl	64(%rdx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rdx)
	je	.L18157
.L17174:
	movzbl	16(%r13), %edx
.L13375:
	cmpb	$32, %dl
	je	.L18158
.L13621:
	movq	-424(%rbp), %r14
	cmpq	global_binding_level(%rip), %r14
	movq	(%r14), %r11
	movq	%r11, (%r13)
	movq	%r13, (%r14)
	je	.L18159
.L13647:
	movq	%r13, -432(%rbp)
	jmp	.L13394
.L18159:
	testb	$4, 17(%r13)
	jne	.L13647
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L13647
.L18158:
	cmpq	$0, -400(%rbp)
	je	.L13621
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L13622
	cmpq	class_binding_level(%rip), %rax
	je	.L13623
	movq	-400(%rbp), %r8
	movq	48(%r8), %rax
	testq	%rax, %rax
	je	.L13627
	cmpb	$32, 16(%rax)
	je	.L13625
.L13627:
	cmpq	$0, current_class_type(%rip)
	je	.L13622
	movq	-400(%rbp), %r15
	movq	56(%r15), %rax
	testq	%rax, %rax
	je	.L13622
	cmpb	$32, 16(%rax)
	je	.L13625
.L13622:
	movq	-400(%rbp), %rsi
	movq	40(%rsi), %rax
	testq	%rax, %rax
	je	.L13626
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L13625
	cmpb	$-127, %dl
	je	.L18160
.L13626:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L13621
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L18161
.L13633:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L13637
	cmpq	class_binding_level(%rip), %rax
	je	.L13638
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L13642
	cmpb	$32, 16(%rax)
	je	.L13640
.L13642:
	cmpq	$0, current_class_type(%rip)
	je	.L13637
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L13637
	cmpb	$32, 16(%rax)
	je	.L13640
.L13637:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L13621
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L13640
	cmpb	$-127, %dl
	jne	.L13621
	movq	$0, 8(%rbx)
	jmp	.L13621
.L13640:
	movq	8(%rax), %r10
	movq	%r10, 8(%rbx)
	jmp	.L13621
.L13638:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L13642
.L18161:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %r12
	sete	%bl
	movq	8(%r13), %r15
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	cmpb	$1, 16(%r14)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$137, %esi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%r14), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L13633
.L18160:
	movq	$0, 8(%rsi)
	jmp	.L13626
.L13625:
	movq	8(%rax), %rcx
	movq	-400(%rbp), %r9
	movq	%rcx, 8(%r9)
	jmp	.L13626
.L13623:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L13627
.L18157:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L17174
.L18156:
	movq	8(%rcx), %r12
	testb	$64, 46(%r12)
	jne	.L13618
	jmp	.L13619
.L18155:
	movq	-400(%rbp), %r10
	movq	32(%r10), %rsi
.L17326:
	xorl	%eax, %eax
	call	warning
	jmp	.L13602
.L13610:
	testq	%r14, %r14
	je	.L13612
	movl	$.LC42, %edi
	jmp	.L13609
.L13612:
	testq	%r12, %r12
	movl	$.LC43, %ebx
	cmovne	%rbx, %rdi
	jmp	.L13609
.L18154:
	movl	$.LC40, %edi
	jmp	.L13609
.L18153:
	cmpb	$34, 16(%r13)
	je	.L13603
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r12
	movq	56(%r12), %rax
	je	.L13604
	movq	56(%rax), %rax
.L13604:
	movzbl	66(%rax), %r8d
	andl	$15, %r8d
	decl	%r8d
	jne	.L13602
	movq	-400(%rbp), %r9
	movl	$.LC40, %edi
	movq	32(%r9), %rsi
	jmp	.L17326
.L18152:
	movzbl	53(%r13), %r11d
	andb	$9, %r11b
	decb	%r11b
	je	.L18162
.L13592:
	testq	%r14, %r14
	jne	.L13600
	testq	%r12, %r12
	jne	.L13600
	testb	$1, 53(%r13)
	je	.L13600
	testb	$8, 18(%r13)
	je	.L13600
	movq	-400(%rbp), %rax
	orb	$8, 18(%rax)
	jmp	.L13600
.L18162:
	testq	%r12, %r12
	je	.L13592
	cmpb	$29, 16(%r13)
	jne	.L13592
	cmpb	$29, 16(%r12)
	jne	.L13592
	movq	8(%r13), %rdi
	movq	8(%r12), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L18163
	movzbl	53(%r12), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L13595
	movzbl	53(%r13), %edi
	leal	0(,%rax,8), %r8d
	leaq	88(%r13), %rdx
	andb	$-9, %dil
	orb	%r8b, %dil
	movb	%dil, 53(%r13)
	cmpq	%r12, current_function_decl(%rip)
	je	.L13596
	movq	88(%r12), %rax
.L13597:
	movq	%rax, (%rdx)
	movq	72(%r12), %r10
	movq	80(%r12), %rsi
	movq	136(%r12), %rdx
	movzbl	17(%r13), %r9d
	movq	%r10, 72(%r13)
	movq	%rsi, 80(%r13)
	movq	%rdx, 136(%r13)
	movzbl	17(%r12), %ebx
	movq	%r12, 96(%r13)
	andb	$127, %r9b
	shrb	$7, %bl
	movzbl	%bl, %r15d
	movl	%r15d, %ecx
	salb	$7, %cl
	orb	%cl, %r9b
	movb	%r9b, 17(%r13)
	movzbl	53(%r12), %ecx
.L13595:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L13598
	movzbl	53(%r13), %r11d
	salb	$4, %al
	andb	$-17, %r11b
	orb	%al, %r11b
	movb	%r11b, 53(%r13)
	movl	128(%r12), %eax
	movl	%eax, 128(%r13)
.L13598:
	movq	8(%r12), %rdx
	cmpq	$0, 24(%rdx)
	je	.L13592
	cmpq	$0, 88(%r12)
	je	.L13592
	movq	8(%r13), %rdi
	cmpq	$0, 24(%rdi)
	jne	.L13592
	movq	%rdx, 8(%r13)
	jmp	.L13592
.L13596:
	xorl	%eax, %eax
	jmp	.L13597
.L18163:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L13592
.L18151:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L13589
	movq	-400(%rbp), %rdi
	jmp	.L17325
.L18150:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L18164
.L13564:
	movq	-400(%rbp), %rsi
	cmpq	$0, 40(%rsi)
	jne	.L13565
	testb	$8, 18(%r13)
	je	.L13565
	orb	$8, 18(%rsi)
.L13565:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L18165
.L13567:
	movq	-400(%rbp), %rax
	movq	%r13, 40(%rax)
	movzbl	16(%r13), %edx
.L13566:
	movq	-400(%rbp), %r15
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L13578
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L13568
	testb	$1, 18(%rcx)
	je	.L13568
	orb	$1, 18(%r13)
	movq	-400(%rbp), %r14
	movq	72(%r14), %rax
.L13568:
	testq	%rax, %rax
	je	.L13578
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L13573
	testb	$8, 17(%rcx)
	je	.L13573
	orb	$8, 17(%r13)
	movq	-400(%rbp), %rbx
	movq	72(%rbx), %rax
.L13573:
	testq	%rax, %rax
	je	.L13578
	cmpq	$0, 8(%rax)
	je	.L13578
	cmpb	$29, %dl
	je	.L18166
.L13581:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L13578:
	movq	-400(%rbp), %rbx
	testb	$8, 18(%rbx)
	je	.L13587
	cmpb	$32, %dl
	je	.L13587
	testb	$8, 18(%r13)
	jne	.L13587
	testb	$1, 53(%r13)
	jne	.L13587
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L13583
	cmpq	$0, 8(%rax)
	jne	.L18167
.L13583:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L17452:
	xorl	%eax, %eax
	call	warning
	jmp	.L17173
.L18167:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L17452
.L18166:
	movq	8(%r13), %r10
	movq	integer_type_node(%rip), %rsi
	cmpq	%rsi, 8(%r10)
	jne	.L13581
	jmp	.L13578
.L18165:
	cmpq	$0, -432(%rbp)
	je	.L13567
	movq	-432(%rbp), %rcx
	cmpb	$32, 16(%rcx)
	jne	.L13566
	jmp	.L13567
.L18164:
	testb	$8, 54(%r13)
	jne	.L13564
	andb	$-9, 18(%r13)
	jmp	.L13564
.L17172:
	movq	global_binding_level(%rip), %rax
	jmp	.L13544
.L18149:
	testl	%edx, %edx
	jg	.L17324
	testl	%r12d, %r12d
	je	.L13550
	movq	-400(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17324
.L13558:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L13550
.L18148:
	xorl	%ecx, %ecx
	movq	-400(%rbp), %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L13550
	testq	%rax, %rax
	je	.L17079
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L13548
.L13547:
	movq	-400(%rbp), %r8
	movq	40(%r8), %rcx
	jmp	.L13546
.L18147:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L13541
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	-400(%rbp), %r15
	movq	40(%r15), %rdi
	call	warning_with_decl
	jmp	.L13541
.L17305:
	movq	8(%r13), %rcx
	movq	80(%rcx), %rbx
	testq	%rbx, %rbx
	movq	%rbx, -416(%rbp)
	je	.L13405
	movzbl	16(%rbx), %edx
	cmpb	$32, %dl
	je	.L13404
.L13405:
	movq	global_binding_level(%rip), %rbx
	movq	%r13, -416(%rbp)
	cmpq	%rbx, current_binding_level(%rip)
	jne	.L17165
	movq	%r13, 80(%rcx)
.L17165:
	movzbl	16(%r13), %edx
.L13408:
	cmpb	$32, %dl
	movl	$140, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	-416(%rbp), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L13532
	cmpq	$0, 72(%rsi)
	je	.L18168
.L13532:
	movq	8(%r13), %r14
	movq	80(%r14), %rax
	testq	%rax, %rax
	je	.L13403
	cmpq	$0, 56(%rax)
	je	.L13403
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %r12
	cmpq	global_binding_level(%rip), %rbx
	je	.L18169
.L17323:
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L13538:
	movq	%r14, 8(%r12)
	jmp	.L13403
.L18169:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L13538
	jmp	.L17323
.L18168:
	cmpb	$32, 16(%r13)
	movq	current_class_name(%rip), %r12
	movl	$136, %esi
	sete	%al
	movq	8(%r13), %r14
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L13533
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r14, 8(%rax)
	jmp	.L13532
.L13533:
	movq	%rbx, 72(%r13)
	jmp	.L13532
.L13404:
	movq	current_binding_level(%rip), %rsi
	movq	-416(%rbp), %r9
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%r9), %r14
	jne	.L13408
	movq	32(%r14), %rax
	cmpb	$36, (%rax)
	jne	.L13408
	cmpb	$95, 1(%rax)
	jne	.L13408
	movq	class_binding_level(%rip), %rax
	movq	%r13, 80(%rcx)
	movq	8(%r13), %rcx
	testq	%rax, %rax
	movq	%rax, -408(%rbp)
	movq	%rcx, -152(%rbp)
	jne	.L13412
	testb	$-128, 66(%rsi)
	movq	%rsi, -408(%rbp)
	je	.L13412
.L13416:
	movq	-408(%rbp), %r11
	movq	56(%r11), %r10
	testb	$-128, 66(%r10)
	movq	%r10, -408(%rbp)
	jne	.L13416
.L13412:
	movq	-408(%rbp), %r12
	cmpq	global_binding_level(%rip), %r12
	je	.L18170
	movq	-408(%rbp), %rbx
	movq	-152(%rbp), %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	8(%rbx), %rdx
	call	saveable_tree_cons
	movq	-408(%rbp), %rdx
	movq	%rax, 8(%rdx)
.L13418:
	testq	%r14, %r14
	je	.L13419
	movq	-152(%rbp), %rsi
	cmpq	$0, 80(%rsi)
	jne	.L13420
	movq	%r14, 80(%rsi)
.L13420:
	movq	-152(%rbp), %rax
	cmpq	%rax, 8(%r14)
	je	.L13421
	cmpb	$21, 16(%rax)
	je	.L18171
.L13422:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L13424
	cmpq	$0, 32(%rax)
	je	.L13423
.L13424:
	movq	lang_name_cplusplus(%rip), %r9
	cmpq	%r9, current_lang_name(%rip)
	je	.L18172
.L13425:
	xorl	%ecx, %ecx
.L13460:
	testq	%rcx, %rcx
	jne	.L13461
.L17140:
	movq	-152(%rbp), %rdx
	movl	$32, %edi
	movq	%r14, %rsi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-152(%rbp), %rdi
	movq	%rax, %r15
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	current_binding_level(%rip), %rbx
	movl	$0, 32(%r15)
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, 112(%r15)
	je	.L18173
.L17320:
	movq	8(%r14), %rsi
	movq	32(%rbx), %rdx
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L13463:
	movq	-152(%rbp), %rbx
	movq	%rbx, 8(%r14)
.L13466:
	movq	32(%r14), %rax
	cmpb	$36, (%rax)
	je	.L18174
.L13468:
	movq	-152(%rbp), %rdi
	movq	80(%rdi), %rdx
	testq	%rdx, %rdx
	je	.L13499
	cmpb	$32, 16(%rdx)
	je	.L18175
.L13469:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L13488
	movq	56(%r15), %r12
	testq	%r12, %r12
	je	.L17169
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L13490
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L13490:
	movq	decl_obstack+24(%rip), %rdx
	movq	%r15, 56(%r12)
	leaq	8(%rdx), %rcx
	cmpq	decl_obstack+32(%rip), %rcx
	ja	.L18176
.L13492:
	movq	%rdx, %r8
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%r15, (%r8)
	cmpb	$32, 16(%r15)
	je	.L18177
.L17169:
	movq	32(%r14), %rax
.L13499:
	cmpb	$36, (%rax)
	je	.L18178
.L13513:
	movq	current_class_type(%rip), %rdx
	movq	-152(%rbp), %r8
	testq	%rdx, %rdx
	movq	%r15, 80(%r8)
	jne	.L13516
	cmpq	$0, current_function_decl(%rip)
	je	.L13515
.L13516:
	movq	lang_name_cplusplus(%rip), %rcx
	cmpq	%rcx, current_lang_name(%rip)
	je	.L13514
.L13515:
	movq	%r14, 72(%r15)
.L13421:
	movq	-408(%rbp), %rcx
	movzbl	66(%rcx), %r15d
	andl	$15, %r15d
	cmpl	$2, %r15d
	je	.L18179
.L13419:
	movq	-152(%rbp), %rsi
	movq	80(%rsi), %rax
	cmpb	$32, 16(%rax)
	je	.L18180
	movq	-152(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-152(%rbp), %rdi
	movq	%rax, (%rdi)
	movq	-416(%rbp), %r10
	movzbl	16(%r10), %edx
	jmp	.L13408
.L18180:
	movq	%rax, (%rsi)
	movq	-416(%rbp), %rbx
	movzbl	16(%rbx), %edx
	jmp	.L13408
.L18179:
	movq	-152(%rbp), %rsi
	orb	$64, 18(%rsi)
	movq	80(%rsi), %rdx
	movq	current_class_type(%rip), %rax
	movq	%rdx, 56(%r14)
	cmpq	$0, 32(%rax)
	jne	.L13419
	movq	144(%rax), %r14
	movq	8(%rcx), %r12
	movq	%r12, 72(%r14)
	jmp	.L13419
.L13514:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L18181
	cmpq	$0, 32(%rdx)
	jne	.L13421
	cmpb	$32, 16(%r15)
	movq	80(%rdx), %rdi
	movl	$136, %esi
	sete	%r10b
	xorl	%eax, %eax
	movq	72(%rdi), %rbx
	movzbl	%r10b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L13524
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r14)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r14), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r14), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-152(%rbp), %r11
	movq	%r11, 8(%rax)
.L13526:
	movq	current_class_type(%rip), %r9
	movq	152(%r15), %rcx
	movq	%r9, 64(%r15)
	movq	%r9, 16(%rcx)
	jmp	.L13421
.L13524:
	movq	%r14, 72(%r15)
	jmp	.L13526
.L18181:
	cmpb	$32, 16(%r15)
	movq	112(%rax), %rbx
	movl	$136, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L13519
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	cmpb	$1, 16(%r14)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%r14), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r14), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-152(%rbp), %r9
	movq	%r9, 8(%rax)
.L13521:
	movq	current_function_decl(%rip), %rbx
	movq	%rbx, 64(%r15)
	jmp	.L13421
.L13519:
	movq	%r14, 72(%r15)
	jmp	.L13521
.L18178:
	cmpb	$95, 1(%rax)
	jne	.L13513
	orb	$64, 53(%r15)
	jmp	.L13513
.L18177:
	cmpq	$0, 72(%r15)
	jne	.L17169
	movq	current_class_name(%rip), %rbx
	movq	8(%r15), %rdx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%rdx, -160(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L13509
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	cmpb	$1, 16(%r12)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-160(%rbp), %rdx
.L17451:
	movq	%rdx, 8(%rax)
	jmp	.L17169
.L13509:
	movq	%r12, 72(%r15)
	jmp	.L17169
.L18176:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L13492
.L13488:
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%rax, %r15
	jmp	.L17169
.L18175:
	movq	global_binding_level(%rip), %rsi
	movl	$1, %r12d
	cmpq	%rsi, current_binding_level(%rip)
	je	.L13470
	movq	48(%r14), %r9
	testq	%r9, %r9
	movq	%r9, %rcx
	jne	.L13471
.L13470:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L13472
	movq	56(%r14), %rcx
	testq	%rcx, %rcx
	jne	.L17076
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L13473
	movq	144(%rdi), %r10
	testb	$1, 3(%r10)
	jne	.L18182
.L13473:
	testq	%rcx, %rcx
	jne	.L17076
.L17077:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17076
.L13472:
	movq	40(%r14), %rcx
.L13471:
	testq	%rcx, %rcx
	je	.L13475
.L17076:
	cmpb	$32, 16(%rcx)
	je	.L13475
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L13475
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L13483
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17321
	testl	%r12d, %r12d
	jle	.L18183
.L17321:
	movq	%rax, %rcx
.L13475:
	movq	-152(%rbp), %rax
	cmpq	80(%rax), %rcx
	jne	.L13469
	jmp	.L17169
.L18183:
	testl	%edx, %edx
	jg	.L17321
	testl	%r12d, %r12d
	je	.L13475
	movq	%rax, %rdx
	movq	%r14, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17321
.L13483:
	movq	8(%rcx), %r11
	cmpq	error_mark_node(%rip), %r11
	cmove	%r11, %rcx
	jmp	.L13475
.L18182:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L13475
	testq	%rax, %rax
	je	.L17077
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L13473
.L18174:
	cmpb	$95, 1(%rax)
	jne	.L13468
	jmp	.L13499
.L18173:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L13463
	jmp	.L17320
.L13461:
	movq	80(%rcx), %r15
	jmp	.L13466
.L18172:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L13427
	movq	80(%rax), %rbx
.L13427:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L13460
.L13459:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L13436
	cmpl	$32, %eax
	je	.L18184
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L13430:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L13460
	jmp	.L13459
.L18184:
	movq	8(%rbx), %r10
	movq	-152(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%r10), %rcx
	movq	72(%rcx), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L17285
	movq	64(%rbx), %rbx
	jmp	.L13430
.L17285:
	movq	32(%rax), %rcx
	jmp	.L13460
.L13436:
	movq	-152(%rbp), %rax
	movq	80(%rax), %r11
	movq	56(%r11), %rbx
	testq	%rbx, %rbx
	je	.L13425
	movq	global_binding_level(%rip), %r12
	movl	$1, %r15d
	cmpq	%r12, current_binding_level(%rip)
	je	.L13439
	movq	48(%rbx), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L13440
.L13439:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L13441
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L17074
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L13442
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L18185
.L13442:
	testq	%rcx, %rcx
	jne	.L17074
.L17075:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17074
.L13441:
	movq	40(%rbx), %rcx
.L13440:
	testq	%rcx, %rcx
	je	.L17140
.L17074:
	cmpb	$32, 16(%rcx)
	je	.L13460
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L13460
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L13452
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17319
	testl	%r15d, %r15d
	jle	.L18186
.L17319:
	movq	%rax, %rcx
	jmp	.L13460
.L18186:
	testl	%edx, %edx
	jg	.L17319
	testl	%r15d, %r15d
	je	.L13460
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17319
.L13452:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L13460
	jmp	.L17319
.L18185:
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %r15d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L13460
	testq	%rax, %rax
	je	.L17075
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L13442
.L13423:
	movq	-152(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r14, %rsi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, %r15
	je	.L18187
.L17322:
	movq	8(%r14), %rsi
	movq	32(%rbx), %rdx
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L13501:
	movq	-152(%rbp), %r12
	movq	%r12, 8(%r14)
	movq	56(%r15), %r12
	testq	%r12, %r12
	je	.L17169
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L13505
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L13505:
	movq	decl_obstack+24(%rip), %rdx
	movq	%r15, 56(%r12)
	leaq	8(%rdx), %rbx
	cmpq	decl_obstack+32(%rip), %rbx
	ja	.L18188
.L13507:
	movq	%rdx, %rdi
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%r15, (%rdi)
	cmpb	$32, 16(%r15)
	jne	.L17169
	cmpq	$0, 72(%r15)
	jne	.L17169
	movq	current_class_name(%rip), %rbx
	movq	8(%r15), %r10
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%r10, -168(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L13509
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-168(%rbp), %rdx
	jmp	.L17451
.L18188:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L13507
.L18187:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L13501
	jmp	.L17322
.L18171:
	cmpq	$0, class_binding_level(%rip)
	je	.L13422
	movq	144(%rax), %rdi
	testb	$16, 3(%rdi)
	jne	.L13421
	jmp	.L13422
.L18170:
	movq	-408(%rbp), %r8
	movq	-152(%rbp), %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	8(%r8), %rdx
	call	perm_tree_cons
	movq	-408(%rbp), %r15
	movq	%rax, 8(%r15)
	jmp	.L13418
.L13389:
	movq	-432(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L17164
	movl	flag_traditional(%rip), %r15d
	testl	%r15d, %r15d
	jne	.L13394
	movq	-400(%rbp), %rdi
	testb	$8, 18(%rdi)
	je	.L13394
	testb	$8, 18(%r13)
	jne	.L13394
	testb	$9, 53(%r13)
	jne	.L13394
	cmpq	%r13, current_function_decl(%rip)
	je	.L18189
.L13398:
	movq	-400(%rbp), %rsi
	movq	72(%rsi), %rax
	testq	%rax, %rax
	je	.L13399
	cmpq	$0, 8(%rax)
	jne	.L18190
.L13399:
	movq	-432(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L17318:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-432(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	%rax, %rcx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L13394
.L18190:
	movq	-432(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L17318
.L18189:
	movq	-432(%rbp), %r8
	movq	%r8, current_function_decl(%rip)
	jmp	.L13398
.L18122:
	cmpq	$0, 64(%rcx)
	jne	.L13387
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L13387
.L18121:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -432(%rbp)
	call	error_with_decl
	jmp	.L13385
.L13378:
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.L13380
.L13384:
	movq	-400(%rbp), %r14
	cmpq	%r14, 56(%rdi)
	je	.L13380
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L13384
.L13380:
	movq	%rdi, -432(%rbp)
	jmp	.L13377
.L18120:
	movq	-400(%rbp), %r10
	movq	40(%r10), %rcx
	movq	%rcx, -432(%rbp)
	jmp	.L13377
.L18119:
	movq	56(%r13), %r9
	movq	%r9, -400(%rbp)
	jmp	.L13374
.L18118:
	testb	$32, 53(%r13)
	jne	.L13372
	jmp	.L13373
.L13367:
	movq	%r13, -432(%rbp)
	jmp	.L13371
.L18117:
	movq	global_binding_level(%rip), %rdi
	cmpq	%rdi, current_binding_level(%rip)
	jne	.L13367
	jmp	.L13369
.L18116:
	orb	$4, 18(%r13)
	jmp	.L13365
.L18115:
	movq	56(%r13), %r12
	movl	$.LC146, %edi
	xorl	%eax, %eax
	movq	32(%r12), %rsi
	call	warning
	jmp	.L13364
.L18114:
	movq	56(%r13), %r11
	movl	$.LC145, %edi
	xorl	%eax, %eax
	movq	32(%r11), %rsi
	call	error
	movq	error_mark_node(%rip), %r10
	movq	%r10, 8(%r13)
	movq	%r10, -392(%rbp)
	jmp	.L13360
.L13356:
	movq	-392(%rbp), %r9
	movq	8(%r9), %rsi
	cmpq	$0, 32(%rsi)
	jne	.L13347
	movq	56(%r13), %rax
	movl	$.LC144, %edi
	jmp	.L17317
.L18113:
	movl	pedantic(%rip), %eax
	testl	%eax, %eax
	jne	.L13351
	movq	-592(%rbp), %rdi
	xorl	%eax, %eax
	call	list_length
	decl	%eax
	jle	.L13347
.L13351:
	movq	56(%r13), %rax
	movl	$.LC141, %edi
	jmp	.L17317
.L13352:
	movq	56(%r13), %rax
	movl	$.LC142, %edi
	jmp	.L17317
.L13342:
	movq	current_binding_level(%rip), %r15
	movq	%r15, 56(%rdi)
	jmp	.L13343
.L13340:
	movl	$72, %edi
	xorl	%eax, %eax
	call	xmalloc
	movq	%rax, %rdi
	jmp	.L13341
.L18112:
	cmpq	$0, named_labels(%rip)
	movl	$134, %esi
	sete	%r12b
	xorl	%eax, %eax
	movzbl	%r12b, %edi
	call	my_friendly_assert
	jmp	.L13339
.L18111:
	movq	last_function_parms(%rip), %rdi
	xorl	%eax, %eax
	call	copy_to_permanent
	movq	%rax, %rbx
	movq	8(%r13), %rax
	cmpb	$16, 16(%rax)
	je	.L18191
.L13331:
	movq	%rbx, 72(%r13)
	jmp	.L13330
.L18191:
	movq	96(%rax), %rdi
	cmpb	$-124, 16(%rdi)
	je	.L13331
	xorl	%eax, %eax
	call	build_pointer_type
	movl	flag_this_is_variable(%rip), %esi
	movq	%rax, %rdi
	testl	%esi, %esi
	setle	%al
	xorl	%edx, %edx
	movzbl	%al, %esi
	xorl	%eax, %eax
	call	build_type_variant
	movq	this_identifier(%rip), %rdx
	movl	$34, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build
	movq	%rbx, (%rax)
	movq	%rax, %rbx
	jmp	.L13331
.L18110:
	testb	$32, 53(%r13)
	je	.L13327
	movq	152(%r13), %r8
	movq	16(%r8), %r12
	jmp	.L13328
.L18109:
	movq	144(%rbx), %rdx
	testb	$16, 3(%rdx)
	je	.L13326
	movq	%r13, -432(%rbp)
	jmp	.L13322
.L18108:
	movl	$permanent_obstack, %edi
	movl	$permanent_obstack, %esi
	xorl	%eax, %eax
	call	push_obstacks
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	copy_node
	movq	-392(%rbp), %rdx
	movq	%rax, %r13
	cmpb	$18, 16(%rdx)
	je	.L18192
.L13324:
	xorl	%eax, %eax
	call	pop_obstacks
	jmp	.L13323
.L18192:
	movq	24(%rdx), %rax
	testq	%rax, %rax
	je	.L13324
	testb	$4, 17(%rax)
	jne	.L13324
	movq	96(%rax), %rdi
	xorl	%eax, %eax
	call	copy_to_permanent
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	build_index_type
	movq	-392(%rbp), %r15
	movq	%rax, %rsi
	xorl	%eax, %eax
	movq	8(%r15), %rdi
	call	build_cplus_array_type
	movq	%rax, -392(%rbp)
	movq	%rax, 8(%r13)
	jmp	.L13324
.L18107:
	movl	$.LC140, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	-592(%rbp), %rdx
	xorl	%edi, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	decl_tree_cons
	movl	$1, used_extern_spec(%rip)
	movq	%rax, -592(%rbp)
	jmp	.L13319
.L13316:
	movq	-904(%rbp), %r13
	movq	32(%r13), %rbx
	movq	%rbx, -904(%rbp)
	jmp	.L13318
.L18106:
	movq	40(%rbx), %r13
	cmpq	$0, (%r13)
	je	.L13312
	xorl	%eax, %eax
	movl	$.LC138, %edi
	call	sorry
	testq	%r12, %r12
	movq	32(%rbx), %rbx
	je	.L13313
	movq	%rbx, 32(%r12)
	movq	-904(%rbp), %rbx
.L13313:
	movq	error_mark_node(%rip), %r11
	movq	%rbx, -904(%rbp)
	movq	%r11, -440(%rbp)
	jmp	.L13764
	.p2align 6,,7
.L13309:
	xorl	%ecx, %ecx
	jmp	.L13290
.L18101:
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L13291
	movq	48(%r13), %rdx
	testq	%rdx, %rdx
	movq	%rdx, %rcx
	jne	.L13292
.L13291:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L13293
	movq	56(%r13), %rcx
	testq	%rcx, %rcx
	jne	.L17070
	movq	32(%rdi), %r8
	testq	%r8, %r8
	movq	%r8, -144(%rbp)
	jne	.L13294
	movq	144(%rdi), %rsi
	testb	$1, 3(%rsi)
	jne	.L18193
.L13294:
	testq	%rcx, %rcx
	jne	.L17070
.L17071:
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L17070
.L13293:
	movq	40(%r13), %rcx
.L13292:
	testq	%rcx, %rcx
	je	.L13311
.L17070:
	cmpb	$32, 16(%rcx)
	je	.L13290
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L13290
	movq	8(%r13), %rax
	testq	%rax, %rax
	je	.L13304
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L17316
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L18194
.L17316:
	movq	%rax, %rcx
	jmp	.L13290
.L18194:
	testl	%edx, %edx
	jg	.L17316
	movl	$1, %r9d
	testl	%r9d, %r9d
	je	.L13290
	movq	%rax, %rdx
	movq	%r13, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L17316
	.p2align 6,,7
.L13304:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L13290
	jmp	.L17316
.L18193:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%r13, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L13290
	testq	%rax, %rax
	je	.L17071
	cmpb	$32, 16(%rax)
	cmovne	-144(%rbp), %rcx
	jmp	.L13294
	.p2align 6,,7
.L13286:
	movq	%rbx, %r12
	movq	32(%rbx), %rbx
	testq	%rbx, %rbx
	je	.L13287
	cmpb	$42, 16(%rbx)
	je	.L13286
	jmp	.L13283
.L17512:
	xorl	%eax, %eax
	call	allocation_temporary_p
	testl	%eax, %eax
	je	.L13281
	xorl	%eax, %eax
	call	end_temporary_allocation
	jmp	.L13281
.L17511:
	movl	$1, -372(%rbp)
.L17315:
	movl	$3, -484(%rbp)
	jmp	.L13277
.L17510:
	movl	$-1, -376(%rbp)
	jmp	.L17315
.L17509:
	movl	$1, -376(%rbp)
	movl	$0, -484(%rbp)
	jmp	.L13277
.LFE7:
.Lfe7:
	.size	grokdeclarator,.Lfe7-grokdeclarator
	.align 2
	.p2align 4,,15
.globl parmlist_is_exprlist
	.type	parmlist_is_exprlist,@function
parmlist_is_exprlist:
.LFB8:
	testq	%rdi, %rdi
	je	.L18197
	testb	$64, 17(%rdi)
	je	.L18196
.L18197:
	xorl	%eax, %eax
	ret
	.p2align 6,,7
.L18196:
	movq	global_binding_level(%rip), %rdx
	cmpq	%rdx, current_binding_level(%rip)
	je	.L18203
	movl	$1, %eax
.L18195:
	ret
	.p2align 6,,7
.L18203:
	movq	32(%rdi), %rdx
	cmpb	$1, 16(%rdx)
	jne	.L18206
	movq	(%rdi), %rdi
	xorl	%eax, %eax
	testq	%rdi, %rdi
	je	.L18195
	jmp	.L18203
.L18206:
	movl	$1, %eax
	ret
.LFE8:
.Lfe8:
	.size	parmlist_is_exprlist,.Lfe8-parmlist_is_exprlist
	.align 2
	.p2align 4,,15
	.type	parmlist_is_random,@function
parmlist_is_random:
.LFB9:
	xorl	%eax, %eax
	testq	%rdi, %rdi
	je	.L18207
	cmpb	$3, 16(%rdi)
	je	.L18209
.L18221:
	movl	$1, %eax
	ret
	.p2align 6,,7
.L18209:
	movq	void_list_node(%rip), %rcx
	movq	unknown_type_node(%rip), %rdx
.L18216:
	cmpq	%rcx, %rdi
	je	.L18219
	movq	32(%rdi), %rax
	cmpb	$3, 16(%rax)
	jne	.L18221
	cmpq	%rdx, 8(%rax)
	je	.L18221
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L18216
	xorl	%eax, %eax
	.p2align 4,,7
.L18207:
	ret
.L18219:
	xorl	%eax, %eax
	ret
.LFE9:
.Lfe9:
	.size	parmlist_is_random,.Lfe9-parmlist_is_random
	.section	.rodata.str1.32
	.align 32
.LC298:
	.string	"parameter `%s' has incomplete type"
	.section	.rodata.str1.1
.LC299:
	.string	"parameter has incomplete type"
	.section	.rodata.str1.32
	.align 32
.LC290:
	.string	"invalid integer constant in parameter list, did you forget to give parameter name?"
	.section	.rodata.str1.1
.LC289:
	.string	"invalid string constant `%s'"
	.section	.rodata.str1.32
	.align 32
.LC296:
	.string	"local variable `%s' may not be used as a default argument"
	.align 32
.LC297:
	.string	"all trailing parameters must have default arguments"
	.align 32
.LC295:
	.string	"`void' in parameter list must be entire list"
	.align 32
.LC294:
	.string	"parameter invalidly declared offset type"
	.align 32
.LC293:
	.string	"parameter `%s' invalidly declared offset type"
	.align 32
.LC291:
	.string	"parameter `%s' invalidly declared method type"
	.align 32
.LC292:
	.string	"parameter invalidly declared method type"
	.align 32
.LC288:
	.string	"parameter names (without types) in function declaration"
	.text
	.align 2
	.p2align 4,,15
	.type	grokparms,@function
grokparms:
.LFB10:
	pushq	%r15
.LCFI38:
	pushq	%r14
.LCFI39:
	pushq	%r13
.LCFI40:
	pushq	%r12
.LCFI41:
	pushq	%rbp
.LCFI42:
	movq	%rdi, %rbp
	pushq	%rbx
.LCFI43:
	subq	$40, %rsp
.LCFI44:
	testq	%rdi, %rdi
	movl	%esi, 36(%rsp)
	movq	$0, (%rsp)
	movq	$0, 8(%rsp)
	je	.L18223
	movq	32(%rdi), %rdx
	cmpb	$1, 16(%rdx)
	je	.L18292
.L18223:
	testq	%rbp, %rbp
	movl	$0, 28(%rsp)
	movl	$0, 32(%rsp)
	je	.L18225
	xorl	%r15d, %r15d
	movq	$0, 16(%rsp)
	.p2align 4,,7
.L18271:
	movq	32(%rbp), %rbx
	movq	void_type_node(%rip), %rdx
	movq	%rbp, %r13
	movq	24(%rbp), %r12
	movq	(%rbp), %rbp
	cmpq	%rdx, %rbx
	je	.L18285
	movzbl	16(%rbx), %eax
	cmpb	$3, %al
	je	.L18231
	cmpb	$28, %al
	je	.L18293
	cmpb	$25, %al
	je	.L18294
.L18229:
	testq	%rbp, %rbp
	jne	.L18271
.L18228:
	testq	%r15, %r15
	je	.L18272
	movq	$0, (%r15)
.L18272:
	cmpq	$0, 16(%rsp)
	je	.L18225
	movq	16(%rsp), %rbx
	movq	$0, (%rbx)
.L18225:
	movl	36(%rsp), %ebp
	movq	8(%rsp), %rax
	testl	%ebp, %ebp
	movq	%rax, last_function_parms(%rip)
	jle	.L18274
	testq	%rax, %rax
	movq	%rax, %rbx
	je	.L18274
	.p2align 4,,7
.L18281:
	movq	8(%rbx), %r10
	cmpq	$0, 32(%r10)
	jne	.L18278
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L18279
	movq	32(%rax), %rsi
	movl	$.LC298, %edi
	xorl	%eax, %eax
	call	error
.L18280:
	movq	error_mark_node(%rip), %r11
	movq	%r11, 8(%rbx)
.L18278:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L18281
.L18274:
	movq	(%rsp), %rax
.L18222:
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	ret
	.p2align 6,,7
.L18279:
	movl	$.LC299, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L18280
.L18294:
	movl	$.LC290, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L18229
	.p2align 6,,7
.L18293:
	movq	40(%rbx), %rsi
	movl	$.LC289, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L18229
	.p2align 6,,7
.L18231:
	cmpq	%rdx, %rbx
	je	.L18235
	xorl	%ecx, %ecx
	movq	32(%rbx), %rdi
	movq	24(%rbx), %rsi
	testq	%r12, %r12
	movl	$2, %edx
	setne	%cl
	xorl	%r8d, %r8d
	xorl	%eax, %eax
	call	grokdeclarator
	testq	%rax, %rax
	movq	%rax, %rbx
	je	.L18229
	movq	8(%rax), %r14
	movq	void_type_node(%rip), %rdx
	cmpq	%rdx, 112(%r14)
	je	.L18295
	movzbl	16(%r14), %eax
	cmpb	$16, %al
	je	.L18296
	cmpb	$14, %al
	je	.L18297
	cmpb	$21, %al
	je	.L18298
	.p2align 4,,7
.L18235:
	cmpq	%rdx, %rbx
	je	.L18285
	movq	8(%rbx), %rdx
	movq	%rdx, 88(%rbx)
	movl	32(%rsp), %eax
	testl	%eax, %eax
	jne	.L18253
	testq	%r12, %r12
	je	.L18254
	incl	28(%rsp)
	movzbl	16(%r12), %eax
	cmpb	$104, %al
	je	.L18299
	cmpb	$33, %al
	je	.L18300
	movq	integer_zero_node(%rip), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	require_instantiated_type
.L18288:
	movq	%rax, %r12
	.p2align 4,,7
.L18264:
	cmpq	$0, 8(%rsp)
	jne	.L18265
	movq	%rbx, 16(%rsp)
	movq	%rbx, 8(%rsp)
.L18266:
	testb	$4, 17(%r13)
	je	.L18267
	movq	%r12, 24(%r13)
	movq	%r14, 32(%r13)
	movq	$0, (%r13)
.L18268:
	cmpq	$0, (%rsp)
	jne	.L18269
	movq	%r13, %r15
	movq	%r13, (%rsp)
	jmp	.L18229
	.p2align 6,,7
.L18269:
	movq	%r13, (%r15)
	movq	%r13, %r15
	jmp	.L18229
.L18267:
	movq	%r12, %rdi
	movq	%r14, %rsi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	saveable_tree_cons
	movq	%rax, %r13
	jmp	.L18268
	.p2align 6,,7
.L18265:
	movq	16(%rsp), %r9
	movq	%rbx, (%r9)
	movq	%rbx, 16(%rsp)
	jmp	.L18266
.L18300:
	movq	56(%r12), %rcx
	cmpq	$0, 48(%rcx)
	jne	.L18301
	testb	$32, 17(%r12)
	je	.L18264
	movq	tree_code_type(%rip), %rdi
	movq	264(%rdi), %rsi
	cmpb	$100, (%rsi)
	jne	.L18264
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	decl_constant_value
	jmp	.L18288
.L18301:
	movq	%r12, %rdi
	movl	$.LC296, %esi
	xorl	%eax, %eax
	call	error_with_decl
.L18289:
	movl	$1, 32(%rsp)
	jmp	.L18264
.L18299:
	orb	$1, 19(%r12)
	jmp	.L18264
.L18254:
	movl	28(%rsp), %r8d
	testl	%r8d, %r8d
	je	.L18264
	movl	$.LC297, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L18289
	.p2align 6,,7
.L18253:
	xorl	%r12d, %r12d
	jmp	.L18264
.L18285:
	cmpq	$0, (%rsp)
	jne	.L18249
	movq	void_list_node(%rip), %rax
	movq	%rax, (%rsp)
.L18287:
	testq	%rbp, %rbp
	movq	%rax, %r15
	je	.L18228
	cmpq	void_list_node(%rip), %rbp
	je	.L18302
.L18252:
	movl	$.LC295, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L18228
.L18302:
	cmpq	$0, (%rbp)
	je	.L18228
	jmp	.L18252
.L18249:
	movq	void_list_node(%rip), %rax
	movq	%rax, (%r15)
	jmp	.L18287
.L18298:
	movq	144(%r14), %rax
	testq	%rax, %rax
	je	.L18235
	cmpq	$0, 128(%rax)
	je	.L18235
	movq	%rbx, %rdi
	movq	%r14, %rsi
	xorl	%eax, %eax
	call	abstract_virtuals_error
	movl	$1, 32(%rsp)
.L18286:
	movq	void_type_node(%rip), %rdx
	jmp	.L18235
.L18297:
	movq	56(%rbx), %rax
	movl	$.LC294, %edi
	testq	%rax, %rax
	je	.L18291
	movl	$.LC293, %edi
.L18290:
	movq	32(%rax), %rsi
	xorl	%eax, %eax
	call	error
.L18245:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_pointer_type
	movq	%rax, %r14
	movq	%rax, 8(%rbx)
	jmp	.L18286
.L18291:
	xorl	%eax, %eax
	call	error
	jmp	.L18245
.L18296:
	movq	56(%rbx), %rax
	movl	$.LC291, %edi
	testq	%rax, %rax
	jne	.L18290
	movl	$.LC292, %edi
	jmp	.L18291
.L18295:
	movq	%rdx, %rbx
	jmp	.L18235
.L18292:
	testl	%esi, %esi
	je	.L18303
.L18224:
	xorl	%eax, %eax
	movq	%rbp, last_function_parms(%rip)
	jmp	.L18222
.L18303:
	movl	$.LC288, %edi
	xorl	%eax, %eax
	call	warning
	jmp	.L18224
.LFE10:
.Lfe10:
	.size	grokparms,.Lfe10-grokparms
	.section	.rodata.str1.32
	.align 32
.LC300:
	.string	"invalid constructor; you probably meant `%s (%s&)'"
	.text
	.align 2
	.p2align 4,,15
.globl grok_ctor_properties
	.type	grok_ctor_properties,@function
grok_ctor_properties:
.LFB11:
	subq	$24, %rsp
.LCFI45:
	movq	%rbx, (%rsp)
.LCFI46:
	movq	%r12, 16(%rsp)
.LCFI47:
	movq	%rbp, 8(%rsp)
.LCFI48:
	movq	8(%rsi), %rdx
	movq	%rdi, %rbx
	movq	%rsi, %r12
	movq	24(%rdx), %rcx
	movq	(%rcx), %rdx
	testq	%rdx, %rdx
	je	.L18305
	movq	32(%rdx), %rsi
.L18306:
	testq	%rdx, %rdx
	je	.L18307
	movq	(%rdx), %rcx
	testq	%rcx, %rcx
	je	.L18307
	movq	32(%rcx), %rdi
	cmpb	$15, 16(%rdi)
	je	.L18322
.L18307:
	movzbl	16(%rsi), %ecx
	cmpb	$15, %cl
	je	.L18323
.L18308:
	cmpq	%rbx, 112(%rsi)
	je	.L18324
	cmpb	$6, %cl
	je	.L18320
	cmpq	$0, 24(%rdx)
	je	.L18304
.L18320:
	movq	144(%rbx), %rbp
	orb	$2, 1(%rbp)
.L18304:
	movq	(%rsp), %rbx
	movq	8(%rsp), %rbp
	movq	16(%rsp), %r12
	addq	$24, %rsp
	ret
	.p2align 6,,7
.L18324:
	movq	(%rdx), %rax
	testq	%rax, %rax
	je	.L18315
	cmpq	void_list_node(%rip), %rax
	je	.L18325
.L18315:
	movq	56(%r12), %rbp
	cmpq	$0, 72(%rbp)
	je	.L18326
.L18317:
	movq	72(%rbp), %r12
	movq	%rbx, 32(%r12)
.L18321:
	movq	144(%rbx), %rdx
	orb	$32, (%rdx)
	jmp	.L18304
.L18326:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbp)
	movq	56(%r12), %rbp
	jmp	.L18317
.L18325:
	movq	80(%rbx), %r11
	movl	$.LC300, %edi
	xorl	%eax, %eax
	movq	56(%r11), %r10
	movq	32(%r10), %rsi
	movq	%rsi, %rdx
	call	error
	jmp	.L18315
	.p2align 6,,7
.L18323:
	movq	8(%rsi), %rdi
	cmpq	%rbx, 112(%rdi)
	jne	.L18308
	movq	(%rdx), %rax
	testq	%rax, %rax
	je	.L18310
	cmpq	void_list_node(%rip), %rax
	je	.L18310
	cmpq	$0, 24(%rax)
	je	.L18321
.L18310:
	movq	144(%rbx), %r9
	orb	$8, (%r9)
	movq	144(%rbx), %r8
	orb	$16, (%r8)
	movq	8(%rsi), %rcx
	testb	$32, 17(%rcx)
	je	.L18304
	movq	144(%rbx), %rsi
	orb	$32, 1(%rsi)
	jmp	.L18304
.L18322:
	movq	8(%rdi), %rbp
	testb	$2, 19(%rbp)
	je	.L18307
	movq	%rcx, %rdx
	movq	%rdi, %rsi
	jmp	.L18307
	.p2align 6,,7
.L18305:
	movq	void_type_node(%rip), %rsi
	jmp	.L18306
.LFE11:
.Lfe11:
	.size	grok_ctor_properties,.Lfe11-grok_ctor_properties
	.section	.rodata.str1.32
	.align 32
.LC302:
	.string	"`operator delete' cannot be declared virtual"
	.align 32
.LC303:
	.string	"`%s' cannot be a static member function"
	.align 32
.LC301:
	.string	"`operator new' cannot be declared virtual"
	.section	.rodata.str1.1
.LC304:
	.string	"too few arguments to `%s'"
	.text
	.align 2
	.p2align 4,,15
	.type	grok_op_properties,@function
grok_op_properties:
.LFB12:
	subq	$24, %rsp
.LCFI49:
	movq	%rbx, 8(%rsp)
.LCFI50:
	movq	%rbp, 16(%rsp)
.LCFI51:
	movq	%rdi, %rbx
	movq	8(%rdi), %rdx
	movq	24(%rdx), %rbp
	movq	152(%rdi), %rdx
	testb	$32, 1(%rdx)
	je	.L18328
	movq	56(%rdi), %rax
	cmpq	ansi_opname+1016(%rip), %rax
	je	.L18348
	cmpq	ansi_opname+984(%rip), %rax
	jne	.L18334
	testl	%esi, %esi
	jne	.L18349
.L18335:
	testq	%rbp, %rbp
	je	.L18350
	movq	current_class_name(%rip), %rsi
	movq	16(%rsp), %rbp
	xorl	%eax, %eax
	movq	8(%rsi), %rdi
	movq	8(%rbx), %rsi
	movq	8(%rsp), %rbx
	addq	$24, %rsp
	jmp	coerce_delete_type
.L18350:
	movq	ptr_type_node(%rip), %rdi
	movq	void_list_node(%rip), %rsi
	xorl	%eax, %eax
	call	hash_tree_chain
	movq	void_type_node(%rip), %rdi
	movq	%rax, %rsi
.L18346:
	xorl	%eax, %eax
	call	build_function_type
	movq	%rax, 8(%rbx)
	.p2align 4,,7
.L18327:
	movq	8(%rsp), %rbx
	movq	16(%rsp), %rbp
	addq	$24, %rsp
	ret
.L18349:
	movl	$.LC302, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L18335
	.p2align 6,,7
.L18334:
	movl	$.LC303, %esi
.L18347:
	movq	8(%rsp), %rbx
	movq	16(%rsp), %rbp
	xorl	%eax, %eax
	addq	$24, %rsp
	jmp	error_with_decl
	.p2align 6,,7
.L18348:
	testl	%esi, %esi
	jne	.L18351
.L18330:
	testq	%rbp, %rbp
	je	.L18352
	movq	current_class_name(%rip), %rcx
	movq	8(%rbx), %rsi
	xorl	%eax, %eax
	movq	8(%rsp), %rbx
	movq	16(%rsp), %rbp
	movq	8(%rcx), %rdi
	addq	$24, %rsp
	jmp	coerce_new_type
.L18352:
	movq	integer_type_node(%rip), %rdi
	movq	void_list_node(%rip), %rsi
	xorl	%eax, %eax
	call	hash_tree_chain
	movq	ptr_type_node(%rip), %rdi
	movq	%rax, %rsi
	jmp	.L18346
.L18351:
	movl	$.LC301, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L18330
	.p2align 6,,7
.L18328:
	movq	ansi_opname+360(%rip), %rdi
	cmpq	%rdi, 56(%rbx)
	jne	.L18327
	testq	%rbp, %rbp
	je	.L18353
	movq	(%rbp), %rax
	testq	%rax, %rax
	je	.L18342
	movq	32(%rax), %rdx
.L18343:
	cmpb	$15, 16(%rdx)
	jne	.L18327
	movq	8(%rdx), %rax
	cmpq	current_class_type(%rip), %rax
	jne	.L18327
	movq	144(%rax), %r9
	orb	$2, 2(%r9)
	movq	current_class_type(%rip), %r8
	movq	144(%r8), %rbp
	orb	$4, 2(%rbp)
	movq	8(%rdx), %rbx
	testb	$32, 17(%rbx)
	je	.L18327
	movq	current_class_type(%rip), %r11
	movq	144(%r11), %r10
	orb	$32, 1(%r10)
	jmp	.L18327
.L18342:
	movq	void_type_node(%rip), %rdx
	jmp	.L18343
.L18353:
	movq	%rbx, %rdi
	movl	$.LC304, %esi
	jmp	.L18347
.LFE12:
.Lfe12:
	.size	grok_op_properties,.Lfe12-grok_op_properties
	.data
	.align 4
	.type	xref_next_defn,@object
	.size	xref_next_defn,4
xref_next_defn:
	.long	0
	.section	.rodata.str1.32
	.align 32
.LC308:
	.string	"control reaches end of non-void function"
	.align 32
.LC309:
	.string	"this function may return with or without a value"
	.align 32
.LC307:
	.string	"`volatile' function does return"
	.section	.rodata.str1.1
.LC306:
	.string	"_vptr$"
.LC305:
	.string	"parameter `%s' declared void"
	.text
	.align 2
	.p2align 4,,15
.globl finish_function
	.type	finish_function,@function
finish_function:
.LFB13:
	pushq	%rbp
.LCFI52:
	movq	%rsp, %rbp
.LCFI53:
	pushq	%r15
.LCFI54:
	pushq	%r14
.LCFI55:
	pushq	%r13
.LCFI56:
	pushq	%r12
.LCFI57:
	pushq	%rbx
.LCFI58:
	subq	$536, %rsp
.LCFI59:
	movl	current_function_parms_stored(%rip), %eax
	movq	current_function_decl(%rip), %rdx
	movl	%edi, -44(%rbp)
	movl	%esi, -272(%rbp)
	movq	%rdx, -56(%rbp)
	testl	%eax, %eax
	movq	8(%rdx), %rcx
	movq	$0, -512(%rbp)
	movq	$0, -456(%rbp)
	movq	%rcx, -64(%rbp)
	jne	.L18355
	movq	global_binding_level(%rip), %rax
	movq	current_function_parm_tags(%rip), %rsi
	movl	$0, -272(%rbp)
	cmpq	%rax, current_binding_level(%rip)
	movl	$0, -268(%rbp)
	movq	current_function_parms(%rip), %rbx
	movq	$0, -264(%rbp)
	movq	%rsi, -72(%rbp)
	je	.L19824
.L18356:
	movq	-56(%rbp), %rdi
	movq	input_filename(%rip), %rsi
	xorl	%eax, %eax
	movl	lineno(%rip), %edx
	call	init_function_start
	xorl	%eax, %eax
	call	declare_function_name
	xorl	%eax, %eax
	xorl	%edi, %edi
	call	expand_start_bindings
	movl	flag_handle_exceptions(%rip), %edi
	testl	%edi, %edi
	jne	.L19825
.L18358:
	testq	%rbx, %rbx
	je	.L18359
	movq	current_binding_level(%rip), %r13
	xorl	%eax, %eax
	movq	%rbx, %rdi
	movq	$0, (%r13)
	call	nreverse
	testq	%rax, %rax
	movq	%rax, %r13
	je	.L19646
	.p2align 4,,7
.L18649:
	movq	(%r13), %rbx
	movq	%rbx, -80(%rbp)
	cmpb	$34, 16(%r13)
	je	.L19826
	movq	$0, (%r13)
	movq	%r13, %rsi
	xorl	%eax, %eax
	movq	-264(%rbp), %rdi
	call	chainon
	movq	%rax, -264(%rbp)
.L18363:
	cmpq	$0, -80(%rbp)
	je	.L19646
	movq	-80(%rbp), %r13
	jmp	.L18649
.L19646:
	movq	current_binding_level(%rip), %r8
	movq	-56(%rbp), %r10
	xorl	%eax, %eax
	movq	(%r8), %r15
	movq	%r15, 72(%r10)
	movq	-72(%rbp), %rdi
	movq	8(%r8), %rsi
	call	chainon
	movq	current_binding_level(%rip), %r13
	movq	%rax, 8(%r13)
.L18653:
	movq	-56(%rbp), %r11
	movq	-264(%rbp), %rdi
	xorl	%eax, %eax
	movq	72(%r11), %rsi
	call	chainon
	movq	-56(%rbp), %r12
	movq	current_binding_level(%rip), %rbx
	movq	%rax, (%rbx)
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	$0, 136(%r12)
	movl	-268(%rbp), %esi
	call	expand_function_start
	movl	flag_handle_exceptions(%rip), %eax
	testl	%eax, %eax
	jne	.L19827
.L18655:
	movl	-268(%rbp), %eax
	testl	%eax, %eax
	je	.L18656
	movq	global_binding_level(%rip), %r9
	cmpq	%r9, current_binding_level(%rip)
	je	.L19828
.L18657:
	movq	free_binding_level(%rip), %rax
	testq	%rax, %rax
	je	.L18658
	movq	56(%rax), %rdx
	movq	%rax, %rdi
	movq	%rdx, free_binding_level(%rip)
.L18659:
	movq	clear_binding_level(%rip), %r9
	movq	class_binding_level(%rip), %rax
	movl	keep_next_level_flag(%rip), %ecx
	movq	%r9, (%rdi)
	testq	%rax, %rax
	movq	clear_binding_level+8(%rip), %r11
	movq	%r11, 8(%rdi)
	movq	clear_binding_level+16(%rip), %rbx
	movq	%rbx, 16(%rdi)
	movq	clear_binding_level+24(%rip), %r12
	movq	%r12, 24(%rdi)
	movq	clear_binding_level+32(%rip), %r15
	movq	%r15, 32(%rdi)
	movq	clear_binding_level+40(%rip), %r10
	movq	%r10, 40(%rdi)
	movq	clear_binding_level+48(%rip), %r8
	movq	%r8, 48(%rdi)
	movq	clear_binding_level+56(%rip), %r13
	movq	%r13, 56(%rdi)
	movq	clear_binding_level+64(%rip), %rsi
	movq	%rsi, 64(%rdi)
	je	.L18660
	movq	%rax, 56(%rdi)
	movq	$0, class_binding_level(%rip)
.L18661:
	movzbl	66(%rdi), %esi
	movl	%ecx, %edx
	movq	%rdi, current_binding_level(%rip)
	andb	$7, %dl
	orb	$5, 67(%rdi)
	xorl	%eax, %eax
	salb	$4, %dl
	andb	$15, %sil
	orb	%dl, %sil
	movb	%sil, 66(%rdi)
	call	GNU_xref_start_scope
	xorl	%edi, %edi
	xorl	%eax, %eax
	movl	$0, keep_next_level_flag(%rip)
	call	expand_start_bindings
.L18656:
	movl	flag_gc(%rip), %eax
	movl	$1, current_function_parms_stored(%rip)
	testl	%eax, %eax
	jne	.L19829
.L18664:
	movq	-56(%rbp), %rcx
	movq	56(%rcx), %rax
	testq	%rax, %rax
	je	.L18355
	cmpl	$4, 24(%rax)
	je	.L19830
.L18355:
	movl	write_symbols(%rip), %r11d
	testl	%r11d, %r11d
	je	.L18693
	movq	-64(%rbp), %rcx
	cmpb	$16, 16(%rcx)
	je	.L18693
	xorl	%eax, %eax
	movq	%rcx, %rdi
	call	target_type
	testb	$64, 46(%rax)
	jne	.L19831
.L18694:
	movq	-56(%rbp), %r9
	movq	72(%r9), %rbx
	testq	%rbx, %rbx
	jne	.L18700
	.p2align 4,,7
.L18693:
	xorl	%eax, %eax
	call	do_pending_stack_adjust
	cmpq	$0, dtor_label(%rip)
	je	.L18701
	movq	current_class_type(%rip), %rcx
	xorl	%r15d, %r15d
	movq	global_binding_level(%rip), %r13
	cmpq	%r13, current_binding_level(%rip)
	movq	integer_one_node(%rip), %r14
	movq	in_charge_identifier(%rip), %rbx
	movq	120(%rcx), %rsi
	movq	%rcx, %rdi
	movq	%rsi, -128(%rbp)
	je	.L18702
	movq	48(%rbx), %rax
	testq	%rax, %rax
	movq	%rax, %r13
	jne	.L18703
.L18702:
	testq	%rdi, %rdi
	je	.L18704
	movq	56(%rbx), %r13
	testq	%r13, %r13
	jne	.L19762
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L18705
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L19832
.L18705:
	testq	%r13, %r13
	jne	.L19762
.L19763:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %r13
	jne	.L19762
.L18704:
	movq	40(%rbx), %r13
.L18703:
	testq	%r13, %r13
	je	.L18707
.L19762:
	cmpb	$32, 16(%r13)
	je	.L18707
	movl	looking_for_typename(%rip), %ecx
	testl	%ecx, %ecx
	js	.L18707
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L18715
	movq	80(%rax), %rdx
	cmpq	%rdx, %r13
	je	.L18717
	testl	%r15d, %r15d
	jle	.L19833
.L18717:
	movq	%rdx, %r13
.L18707:
	movl	current_function_assigns_this(%rip), %r8d
	movl	$0, -276(%rbp)
	testl	%r8d, %r8d
	jne	.L19834
	movq	current_class_type(%rip), %r15
	xorl	%r12d, %r12d
	movq	120(%r15), %r10
	movq	64(%r10), %rax
	testq	%rax, %rax
	je	.L18723
	movl	24(%rax), %r12d
.L18723:
	xorl	%eax, %eax
	call	get_last_insn
	movq	%rax, %rbx
	xorl	%eax, %eax
	call	get_first_nonparm_insn
	testb	$1, flag_this_is_variable(%rip)
	je	.L18728
	cmpq	%rax, %rbx
	je	.L19835
.L18721:
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L19836
.L18729:
	movq	free_binding_level(%rip), %rax
	testq	%rax, %rax
	je	.L18730
	movq	56(%rax), %rdx
	movq	%rax, %rdi
	movq	%rdx, free_binding_level(%rip)
.L18731:
	movq	clear_binding_level(%rip), %rdx
	movq	class_binding_level(%rip), %rax
	movl	keep_next_level_flag(%rip), %ecx
	movq	%rdx, (%rdi)
	testq	%rax, %rax
	movq	clear_binding_level+8(%rip), %rsi
	movq	%rsi, 8(%rdi)
	movq	clear_binding_level+16(%rip), %r9
	movq	%r9, 16(%rdi)
	movq	clear_binding_level+24(%rip), %r11
	movq	%r11, 24(%rdi)
	movq	clear_binding_level+32(%rip), %rbx
	movq	%rbx, 32(%rdi)
	movq	clear_binding_level+40(%rip), %r12
	movq	%r12, 40(%rdi)
	movq	clear_binding_level+48(%rip), %r15
	movq	%r15, 48(%rdi)
	movq	clear_binding_level+56(%rip), %r10
	movq	%r10, 56(%rdi)
	movq	clear_binding_level+64(%rip), %r8
	movq	%r8, 64(%rdi)
	je	.L18732
	movq	%rax, 56(%rdi)
	movq	$0, class_binding_level(%rip)
.L18733:
	movzbl	66(%rdi), %r15d
	movl	%ecx, %r12d
	movq	%rdi, current_binding_level(%rip)
	andb	$7, %r12b
	orb	$5, 67(%rdi)
	xorl	%eax, %eax
	salb	$4, %r12b
	andb	$15, %r15b
	orb	%r12b, %r15b
	movb	%r15b, 66(%rdi)
	call	GNU_xref_start_scope
	movl	current_function_assigns_this(%rip), %edi
	movl	$0, keep_next_level_flag(%rip)
	testl	%edi, %edi
	je	.L18736
	movl	$0, current_function_assigns_this(%rip)
	movl	$0, current_function_just_assigned_this(%rip)
.L18736:
	movq	current_class_type(%rip), %rcx
	andb	$-9, 46(%rcx)
	movq	current_class_type(%rip), %rdi
	testb	$2, 19(%rdi)
	jne	.L18738
	movq	144(%rdi), %rbx
	testb	$16, 2(%rbx)
	je	.L18737
.L18738:
	movq	C_C_D(%rip), %rsi
	movq	integer_zero_node(%rip), %rdx
.L19813:
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	xorl	%eax, %eax
	movl	$520, %ecx
	call	build_delete
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rbx
	je	.L19782
	cmpb	$102, 16(%rax)
	je	.L19837
.L18741:
	movq	dtor_label(%rip), %rdi
	xorl	%eax, %eax
	call	expand_label
	cmpq	integer_one_node(%rip), %r14
	je	.L18742
	movq	%r14, %rdi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	expand_start_cond
.L18742:
	cmpq	void_zero_node(%rip), %rbx
	je	.L18743
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	expand_expr_stmt
.L18743:
	movq	current_class_type(%rip), %rax
	testb	$2, 19(%rax)
	jne	.L19838
.L18744:
	xorl	%eax, %eax
	call	do_pending_stack_adjust
	cmpq	integer_one_node(%rip), %r14
	je	.L19782
	xorl	%eax, %eax
	call	expand_end_cond
.L19782:
	movq	current_class_type(%rip), %rdx
.L18740:
	orb	$8, 46(%rdx)
	xorl	%eax, %eax
	movq	current_class_type(%rip), %rdi
	call	c_sizeof
	movq	current_class_type(%rip), %rdx
	movq	%rax, %r12
	movq	144(%rdx), %r14
	testb	$16, 2(%r14)
	jne	.L19839
	testb	$2, 19(%rdx)
	jne	.L19840
	xorl	%ebx, %ebx
.L18752:
	testq	%rbx, %rbx
	jne	.L19841
.L18755:
	movq	current_binding_level(%rip), %r10
	movl	$2, -292(%rbp)
	movzbl	66(%r10), %ecx
	movzbl	66(%r10), %edi
	movq	40(%r10), %r8
	movq	56(%r10), %rsi
	andl	$15, %ecx
	movl	%edi, %edx
	movq	%r8, -288(%rbp)
	cmpl	$3, %ecx
	sete	%r12b
	xorl	%eax, %eax
	shrb	$4, %dil
	andl	$15, %edx
	movl	%edi, %ecx
	shrb	$3, %dil
	andl	$7, %ecx
	movzbl	%dil, %r8d
	movq	%r10, %rdi
	movzbl	%r12b, %r13d
	movl	%r13d, -132(%rbp)
	movq	8(%r10), %r13
	call	GNU_xref_end_scope
	movq	current_binding_level(%rip), %rbx
	movl	$1, %eax
	movzbl	66(%rbx), %esi
	shrb	$4, %sil
	andl	$7, %esi
	decl	%esi
	cmovne	-292(%rbp), %eax
	movl	%eax, -292(%rbp)
	xorl	%eax, %eax
	testl	%eax, %eax
	jne	.L19842
	movq	(%rbx), %r12
.L18764:
	testq	%r12, %r12
	movq	%r12, %rbx
	je	.L19657
	.p2align 4,,7
.L18770:
	movzwl	16(%rbx), %eax
	andl	$-32513, %eax
	cmpw	$29, %ax
	je	.L19843
.L18767:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L18770
.L19657:
	movq	current_binding_level(%rip), %r11
	xorl	%ebx, %ebx
	xorl	%r15d, %r15d
	movq	48(%r11), %rdx
	testq	%rdx, %rdx
	setne	%bl
	testl	%ebx, %ebx
	movl	%ebx, -136(%rbp)
	je	.L18771
	movq	%rdx, %r15
.L18772:
	testq	%r15, %r15
	jne	.L19844
.L18775:
	movl	-292(%rbp), %edx
	testl	%edx, %edx
	js	.L18776
	movq	-288(%rbp), %rax
	testq	%rax, %rax
	je	.L18776
	.p2align 4,,7
.L18781:
	movq	%r15, 56(%rax)
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L18781
.L18776:
	testq	%r12, %r12
	je	.L19660
	.p2align 4,,7
.L18790:
	movq	56(%r12), %rax
	testq	%rax, %rax
	je	.L18784
	testb	$1, 53(%r12)
	je	.L18787
	testb	$1, 18(%r12)
	je	.L18788
	movq	112(%r12), %r14
	orb	$1, 18(%r14)
.L18788:
	testb	$8, 17(%r12)
	je	.L19783
	movq	112(%r12), %rsi
	orb	$8, 17(%rsi)
.L19783:
	movq	56(%r12), %rax
.L18787:
	movq	$0, 48(%rax)
.L18784:
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L18790
.L19660:
	movq	current_binding_level(%rip), %r10
	movq	16(%r10), %rcx
	movq	%r10, %rdi
	testq	%rcx, %rcx
	je	.L19662
	.p2align 4,,7
.L18795:
	movq	24(%rcx), %r8
	movq	32(%rcx), %r13
	movq	%r13, 48(%r8)
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.L18795
.L19662:
	movq	24(%rdi), %rcx
	testq	%rcx, %rcx
	je	.L19664
	.p2align 4,,7
.L18800:
	movq	24(%rcx), %r12
	movq	32(%rcx), %rbx
	movq	%rbx, 56(%r12)
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.L18800
.L19664:
	movq	32(%rdi), %rcx
	testq	%rcx, %rcx
	je	.L19666
	.p2align 4,,7
.L18805:
	movq	24(%rcx), %rdi
	movq	32(%rcx), %r11
	movq	(%rcx), %rcx
	movq	%r11, 8(%rdi)
	testq	%rcx, %rcx
	jne	.L18805
.L19666:
	xorl	%ecx, %ecx
	testl	%ecx, %ecx
	je	.L18806
	movq	named_labels(%rip), %r9
	movq	$0, 32(%r15)
	testq	%r9, %r9
	movq	%r9, -304(%rbp)
	je	.L19668
.L18885:
	movq	-304(%rbp), %rax
	movq	32(%rax), %r14
	cmpq	$0, 88(%r14)
	je	.L19845
	movl	warn_unused(%rip), %eax
	testl	%eax, %eax
	je	.L18881
	testb	$1, 18(%r14)
	je	.L19846
.L18881:
	movq	56(%r14), %rbx
	cmpq	$0, 72(%rbx)
	je	.L19847
.L18884:
	movq	72(%rbx), %r9
	movq	$0, (%r9)
	movq	32(%r15), %r12
	movq	%r12, (%r14)
	movq	%r14, 32(%r15)
	movq	-304(%rbp), %r13
	movq	(%r13), %r14
	testq	%r14, %r14
	movq	%r14, -304(%rbp)
	jne	.L18885
.L19668:
	movq	$0, named_labels(%rip)
.L18806:
	movq	current_binding_level(%rip), %rsi
	movq	56(%rsi), %rcx
	testq	%rcx, %rcx
	je	.L18886
	movq	named_label_uses(%rip), %rdx
	testq	%rdx, %rdx
	je	.L18886
	.p2align 4,,7
.L18892:
	cmpq	%rsi, 8(%rdx)
	je	.L19848
.L18889:
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L18892
.L18886:
	movzbl	66(%rsi), %r8d
	movq	global_binding_level(%rip), %rax
	movl	$7, %r12d
	shrb	$4, %r8b
	andl	%r8d, %r12d
	testq	%rax, %rax
	je	.L18893
	cmpq	%rax, %rsi
	je	.L19849
.L18893:
	movq	%rsi, %rbx
	movq	free_binding_level(%rip), %rdi
	movq	56(%rsi), %rsi
	movq	%rsi, current_binding_level(%rip)
	movq	%rdi, 56(%rbx)
	movzbl	66(%rsi), %edx
	movq	%rbx, free_binding_level(%rip)
	andl	$15, %edx
	cmpl	$2, %edx
	je	.L19850
.L18900:
	xorl	%eax, %eax
	testl	%eax, %eax
	je	.L18901
	movq	current_function_decl(%rip), %r14
	movq	%r15, 88(%r14)
.L18902:
	cmpl	$2, %r12d
	je	.L19851
.L18909:
	testq	%r15, %r15
	je	.L18911
	orb	$1, 18(%r15)
.L18911:
	xorl	%eax, %eax
	call	get_last_insn
	movq	%rax, %r12
	xorl	%eax, %eax
	call	get_first_nonparm_insn
	movq	%r12, %r13
	testq	%rax, %rax
	jne	.L19852
.L18914:
	movq	current_class_type(%rip), %rdx
	movq	144(%rdx), %r9
	movq	48(%r9), %rax
	testq	%rax, %rax
	je	.L18915
	cmpq	$0, (%rax)
	movq	%rax, %rbx
	je	.L19675
	.p2align 4,,7
.L18922:
	movq	24(%rbx), %rdi
	movq	current_class_decl(%rip), %rdx
	testq	%rdi, %rdi
	jne	.L19853
.L18920:
	cmpq	error_mark_node(%rip), %rdx
	je	.L18918
	movq	-128(%rbp), %rdi
	movq	32(%rbx), %rsi
	xorl	%eax, %eax
	call	build_virtual_init
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	expand_expr_stmt
.L18918:
	movq	(%rbx), %rbx
	cmpq	$0, (%rbx)
	jne	.L18922
.L19675:
	movq	-128(%rbp), %rdi
	movq	current_class_decl(%rip), %rdx
	xorl	%eax, %eax
	movq	%rdi, %rsi
	call	build_virtual_init
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	expand_expr_stmt
	movq	current_class_type(%rip), %rdx
.L18915:
	testb	$2, 19(%rdx)
	jne	.L19854
.L18923:
	movl	-276(%rbp), %r10d
	testl	%r10d, %r10d
	je	.L19855
.L18924:
	xorl	%eax, %eax
	call	get_last_insn
	cmpq	%rax, %r12
	je	.L18925
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	next_insn
	movq	%rax, %r14
	xorl	%eax, %eax
	call	get_last_insn
	movq	%r13, %rdx
	movq	%r14, %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	reorder_insns
.L18925:
	movl	-276(%rbp), %r8d
	testl	%r8d, %r8d
	je	.L19856
.L18927:
	movl	flag_gc(%rip), %eax
	testl	%eax, %eax
	jne	.L19857
.L19294:
	movl	obey_regdecls(%rip), %eax
	testl	%eax, %eax
	je	.L19295
	movq	current_vtable_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L19858
.L19295:
	cmpq	$0, -456(%rbp)
	jne	.L19859
.L19296:
	cmpq	$0, cleanup_label(%rip)
	jne	.L19860
.L19297:
	movq	-56(%rbp), %rcx
	movl	flag_traditional(%rip), %r9d
	movq	80(%rcx), %r10
	movq	88(%rcx), %rdi
	testl	%r9d, %r9d
	movq	%rdi, 64(%r10)
	je	.L19455
	movl	current_function_calls_setjmp(%rip), %ebx
	testl	%ebx, %ebx
	jne	.L19861
.L19455:
	movq	cleanup_label(%rip), %rdi
	testq	%rdi, %rdi
	jne	.L19862
.L19456:
	movq	exception_throw_decl(%rip), %rdi
	testq	%rdi, %rdi
	je	.L19457
	movl	sets_exception_throw_decl(%rip), %edx
	testl	%edx, %edx
	je	.L19863
.L19457:
	movl	flag_handle_exceptions(%rip), %edi
	testl	%edi, %edi
	jne	.L19864
.L19458:
	xorl	%esi, %esi
	xorl	%edi, %edi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	expand_end_bindings
	movq	original_result_rtx(%rip), %rsi
	testq	%rsi, %rsi
	jne	.L19865
.L19459:
	cmpq	$0, -456(%rbp)
	jne	.L19461
	cmpq	$0, cleanup_label(%rip)
	je	.L19460
.L19461:
	movq	return_label(%rip), %rdi
	xorl	%eax, %eax
	call	emit_jump
.L19460:
	cmpq	$0, -456(%rbp)
	jne	.L19866
.L19462:
	cmpq	$0, current_class_name(%rip)
	je	.L19463
	movq	current_class_type(%rip), %r11
	movl	$1, %edi
	xorl	%eax, %eax
	movq	%r11, -512(%rbp)
	call	popclass
.L19464:
	movq	overloads_to_forget(%rip), %rcx
	testq	%rcx, %rcx
	je	.L19734
	.p2align 4,,7
.L19468:
	movq	24(%rcx), %rsi
	movq	32(%rcx), %r13
	movq	%r13, 40(%rsi)
	movq	(%rcx), %rax
	testq	%rax, %rax
	movq	%rax, overloads_to_forget(%rip)
	je	.L19734
	movq	%rax, %rcx
	jmp	.L19468
	.p2align 6,,7
.L19734:
	movl	-44(%rbp), %esi
	movq	input_filename(%rip), %rdi
	xorl	%eax, %eax
	call	expand_function_end
	movq	current_binding_level(%rip), %rsi
	movzbl	66(%rsi), %r14d
	andl	$15, %r14d
	decl	%r14d
	je	.L19469
	movl	$122, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	movq	current_binding_level(%rip), %rsi
.L19469:
	movzbl	66(%rsi), %r10d
	xorl	%r12d, %r12d
	movl	$1, %eax
	movq	40(%rsi), %r9
	movq	8(%rsi), %r14
	movq	%rsi, %rdi
	movl	$1, -532(%rbp)
	movl	%r10d, %edx
	movq	%r9, -528(%rbp)
	andl	$15, %edx
	cmpl	$3, %edx
	sete	%bl
	shrb	$4, %r10b
	andl	$7, %r10d
	cmpl	$2, %r10d
	cmove	%r12d, %eax
	movl	%eax, -516(%rbp)
	movzbl	%bl, %ecx
	movzbl	66(%rsi), %eax
	movq	56(%rsi), %rsi
	movl	%ecx, -196(%rbp)
	movl	%eax, %edx
	shrb	$4, %al
	movl	%eax, %ecx
	andl	$15, %edx
	shrb	$3, %al
	andl	$7, %ecx
	movzbl	%al, %r8d
	xorl	%eax, %eax
	call	GNU_xref_end_scope
	movq	current_binding_level(%rip), %r13
	movl	$1, %eax
	movzbl	66(%r13), %r15d
	shrb	$4, %r15b
	andl	$7, %r15d
	decl	%r15d
	cmovne	-532(%rbp), %eax
	testl	%r12d, %r12d
	movl	%eax, -532(%rbp)
	jne	.L19867
	movq	(%r13), %r12
.L19478:
	testq	%r12, %r12
	movq	%r12, %rbx
	je	.L19736
	.p2align 4,,7
.L19484:
	movzwl	16(%rbx), %eax
	andl	$-32513, %eax
	cmpw	$29, %ax
	je	.L19868
.L19481:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L19484
.L19736:
	movq	current_binding_level(%rip), %r8
	xorl	%edi, %edi
	xorl	%r15d, %r15d
	movq	48(%r8), %rdx
	testq	%rdx, %rdx
	setne	%dil
	testl	%edi, %edi
	movl	%edi, -200(%rbp)
	je	.L19485
	movq	%rdx, %r15
.L19486:
	testq	%r15, %r15
	jne	.L19869
.L19489:
	movl	-532(%rbp), %r13d
	testl	%r13d, %r13d
	js	.L19490
	movq	-528(%rbp), %rax
	testq	%rax, %rax
	je	.L19490
	.p2align 4,,7
.L19495:
	movq	%r15, 56(%rax)
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L19495
.L19490:
	testq	%r12, %r12
	je	.L19739
	.p2align 4,,7
.L19504:
	movq	56(%r12), %rax
	testq	%rax, %rax
	je	.L19498
	testb	$1, 53(%r12)
	je	.L19501
	testb	$1, 18(%r12)
	je	.L19502
	movq	112(%r12), %r14
	orb	$1, 18(%r14)
.L19502:
	testb	$8, 17(%r12)
	je	.L19797
	movq	112(%r12), %r9
	orb	$8, 17(%r9)
.L19797:
	movq	56(%r12), %rax
.L19501:
	movq	$0, 48(%rax)
.L19498:
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L19504
.L19739:
	movq	current_binding_level(%rip), %r12
	movq	16(%r12), %rcx
	movq	%r12, %rdi
	testq	%rcx, %rcx
	je	.L19741
	.p2align 4,,7
.L19509:
	movq	24(%rcx), %r10
	movq	32(%rcx), %rbx
	movq	%rbx, 48(%r10)
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.L19509
.L19741:
	movq	24(%rdi), %rcx
	testq	%rcx, %rcx
	je	.L19743
	.p2align 4,,7
.L19514:
	movq	24(%rcx), %r8
	movq	32(%rcx), %rdx
	movq	%rdx, 56(%r8)
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.L19514
.L19743:
	movq	32(%rdi), %rcx
	testq	%rcx, %rcx
	je	.L19745
	.p2align 4,,7
.L19519:
	movq	24(%rcx), %rdi
	movq	32(%rcx), %r11
	movq	(%rcx), %rcx
	movq	%r11, 8(%rdi)
	testq	%rcx, %rcx
	jne	.L19519
.L19745:
	movl	-516(%rbp), %eax
	testl	%eax, %eax
	je	.L19520
	movq	named_labels(%rip), %rax
	movq	$0, 32(%r15)
	testq	%rax, %rax
	movq	%rax, -544(%rbp)
	je	.L19747
.L19599:
	movq	-544(%rbp), %rcx
	movq	32(%rcx), %r14
	cmpq	$0, 88(%r14)
	je	.L19870
	movl	warn_unused(%rip), %eax
	testl	%eax, %eax
	je	.L19595
	testb	$1, 18(%r14)
	je	.L19871
.L19595:
	movq	56(%r14), %rbx
	cmpq	$0, 72(%rbx)
	je	.L19872
.L19598:
	movq	72(%rbx), %r11
	movq	$0, (%r11)
	movq	32(%r15), %r12
	movq	%r12, (%r14)
	movq	%r14, 32(%r15)
	movq	-544(%rbp), %r13
	movq	(%r13), %r14
	testq	%r14, %r14
	movq	%r14, -544(%rbp)
	jne	.L19599
.L19747:
	movq	$0, named_labels(%rip)
.L19520:
	movq	current_binding_level(%rip), %rsi
	movq	56(%rsi), %rcx
	testq	%rcx, %rcx
	je	.L19600
	movq	named_label_uses(%rip), %rdx
	testq	%rdx, %rdx
	je	.L19600
	.p2align 4,,7
.L19606:
	cmpq	%rsi, 8(%rdx)
	je	.L19873
.L19603:
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L19606
.L19600:
	movzbl	66(%rsi), %ecx
	movq	global_binding_level(%rip), %rax
	movl	$7, %r12d
	shrb	$4, %cl
	andl	%ecx, %r12d
	testq	%rax, %rax
	je	.L19607
	cmpq	%rax, %rsi
	je	.L19874
.L19607:
	movq	%rsi, %r10
	movq	free_binding_level(%rip), %rbx
	movq	56(%rsi), %rsi
	movq	%rsi, current_binding_level(%rip)
	movq	%rbx, 56(%r10)
	movzbl	66(%rsi), %r9d
	movq	%r10, free_binding_level(%rip)
	andl	$15, %r9d
	cmpl	$2, %r9d
	je	.L19875
.L19614:
	movl	-516(%rbp), %eax
	testl	%eax, %eax
	je	.L19615
	movq	current_function_decl(%rip), %r14
	movq	%r15, 88(%r14)
.L19616:
	cmpl	$2, %r12d
	je	.L19876
.L19623:
	testq	%r15, %r15
	je	.L19625
	orb	$1, 18(%r15)
.L19625:
	movq	-56(%rbp), %rsi
	movl	flag_pic(%rip), %r12d
	movq	88(%rsi), %r13
	testl	%r12d, %r12d
	movq	%rsi, 56(%r13)
	movl	$0, can_reach_end(%rip)
	je	.L19627
	movq	152(%rsi), %r11
	testb	$2, 1(%r11)
	jne	.L19628
	movq	112(%rsi), %rcx
	movq	32(%rcx), %rsi
	cmpb	$36, 1(%rsi)
	je	.L19628
.L19627:
	movq	-56(%rbp), %rsi
	movzbl	53(%rsi), %edx
	testb	$1, %dl
	je	.L19629
	testb	$8, %dl
	je	.L19800
	movl	flag_no_inline(%rip), %ecx
	testl	%ecx, %ecx
	je	.L19877
.L19630:
	movl	%edx, %r14d
	movl	rtl_dump_and_exit(%rip), %r12d
	movl	$1, rtl_dump_and_exit(%rip)
	shrb	$3, %r14b
	movl	%r14d, %ebx
	andl	$1, %ebx
	testl	%ecx, %ecx
	je	.L19631
	movq	-56(%rbp), %rax
	andb	$-9, %dl
	movb	%dl, 53(%rax)
.L19631:
	movq	-56(%rbp), %rdi
	xorl	%eax, %eax
	leal	0(,%rbx,8), %r13d
	call	rest_of_compilation
	movq	-56(%rbp), %r15
	movl	%r12d, rtl_dump_and_exit(%rip)
	movzbl	53(%r15), %r12d
	andb	$-9, %r12b
	orb	%r13b, %r12b
	movb	%r12b, 53(%r15)
.L19632:
	cmpq	$0, -512(%rbp)
	je	.L19633
	movq	-56(%rbp), %rdx
	testb	$-128, 17(%rdx)
	jne	.L19878
.L19633:
	movq	-56(%rbp), %rdx
	movl	can_reach_end(%rip), %eax
	orl	%eax, current_function_returns_null(%rip)
	movq	152(%rdx), %r11
	testb	$2, 1(%r11)
	jne	.L19635
	movq	80(%rdx), %rsi
	cmpq	$0, 56(%rsi)
	je	.L19634
.L19635:
	movl	$0, current_function_returns_null(%rip)
.L19634:
	movq	-56(%rbp), %r9
	testb	$16, 17(%r9)
	je	.L19636
	movl	current_function_returns_null(%rip), %ecx
	testl	%ecx, %ecx
	jne	.L19879
.L19636:
	movl	warn_return_type(%rip), %r10d
	testl	%r10d, %r10d
	je	.L19638
	movl	current_function_returns_null(%rip), %ebx
	testl	%ebx, %ebx
	je	.L19638
	movq	-64(%rbp), %r14
	movq	void_type_node(%rip), %r8
	movq	8(%r14), %rdi
	cmpq	%r8, 112(%rdi)
	je	.L19638
	movl	$.LC308, %edi
	xorl	%eax, %eax
	call	pedwarn
	.p2align 4,,7
.L19637:
	xorl	%eax, %eax
	call	permanent_allocation
	movl	flag_cadillac(%rip), %r13d
	testl	%r13d, %r13d
	jne	.L19880
.L19641:
	movq	-56(%rbp), %rcx
	cmpq	$0, 136(%rcx)
	jne	.L19642
	movq	error_mark_node(%rip), %r11
	movq	152(%rcx), %rdx
	movq	%r11, 88(%rcx)
	testb	$2, 1(%rdx)
	je	.L19644
	movq	-64(%rbp), %rcx
	movq	96(%rcx), %r9
	testb	$2, 19(%r9)
	jne	.L19642
.L19644:
	movq	-56(%rbp), %rsi
	movq	$0, 72(%rsi)
.L19642:
	xorl	%eax, %eax
	movq	$0, current_function_decl(%rip)
	movq	$0, named_label_uses(%rip)
	call	clear_anon_parm_name
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	leave
	ret
.L19880:
	movq	-56(%rbp), %rdi
	xorl	%eax, %eax
	call	cadillac_finish_function
	jmp	.L19641
.L19638:
	movl	extra_warnings(%rip), %eax
	testl	%eax, %eax
	je	.L19637
	movl	current_function_returns_value(%rip), %r15d
	testl	%r15d, %r15d
	je	.L19637
	movl	current_function_returns_null(%rip), %r12d
	testl	%r12d, %r12d
	je	.L19637
	movl	$.LC309, %edi
.L19821:
	xorl	%eax, %eax
	call	warning
	jmp	.L19637
.L19879:
	movl	$.LC307, %edi
	jmp	.L19821
.L19878:
	movq	-512(%rbp), %rdi
	xorl	%eax, %eax
	call	note_debug_info_needed
	jmp	.L19633
.L19877:
	xorl	%eax, %eax
	movq	%rsi, %rdi
	call	function_cannot_inline_p
	testq	%rax, %rax
	je	.L19629
	movq	-56(%rbp), %rdi
	movzbl	53(%rdi), %edx
.L19800:
	movl	flag_no_inline(%rip), %ecx
	jmp	.L19630
.L19629:
	movq	-56(%rbp), %rdi
	xorl	%eax, %eax
	call	rest_of_compilation
	jmp	.L19632
.L19628:
	movq	-64(%rbp), %rbx
	movq	96(%rbx), %r10
	movq	144(%r10), %r9
	testb	$8, 3(%r9)
	je	.L19627
	movq	-56(%rbp), %r8
	andb	$-9, 53(%r8)
	jmp	.L19627
.L19876:
	movl	-196(%rbp), %eax
	testl	%eax, %eax
	jne	.L19623
	movq	current_binding_level(%rip), %r15
	movl	-532(%rbp), %esi
	movl	$1, %edx
	xorl	%eax, %eax
	movq	(%r15), %rdi
	call	expand_end_bindings
	movl	-532(%rbp), %edi
	xorl	%esi, %esi
	movl	$1, %edx
	xorl	%eax, %eax
	call	poplevel
	movq	%rax, %r15
	jmp	.L19623
.L19615:
	testq	%r15, %r15
	je	.L19617
	movl	-200(%rbp), %eax
	testl	%eax, %eax
	jne	.L19616
	movq	current_binding_level(%rip), %rbx
	movq	%r15, %rsi
	movq	40(%rbx), %rdi
.L19820:
	xorl	%eax, %eax
	call	chainon
	movq	%rax, 40(%rbx)
	jmp	.L19616
.L19617:
	cmpq	$0, -528(%rbp)
	je	.L19616
	cmpl	$2, -532(%rbp)
	je	.L19881
	movq	current_binding_level(%rip), %rbx
	movq	-528(%rbp), %rsi
	movq	40(%rbx), %rdi
	jmp	.L19820
.L19881:
	movq	current_binding_level(%rip), %rbx
	movq	-528(%rbp), %rdi
	movq	40(%rbx), %rsi
	jmp	.L19820
.L19875:
	movq	%rsi, class_binding_level(%rip)
	.p2align 4,,7
.L19610:
	movq	current_binding_level(%rip), %rdi
	movq	56(%rdi), %rdx
	movzbl	66(%rdx), %r8d
	movq	%rdx, current_binding_level(%rip)
	andl	$15, %r8d
	cmpl	$2, %r8d
	je	.L19610
	jmp	.L19614
.L19874:
	movl	$123, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	movq	current_binding_level(%rip), %rsi
	jmp	.L19607
	.p2align 6,,7
.L19873:
	movq	%rcx, 8(%rdx)
	movq	(%rcx), %rsi
	movq	%rsi, 24(%rdx)
	movq	current_binding_level(%rip), %rsi
	jmp	.L19603
.L19872:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	movq	56(%r14), %rbx
	jmp	.L19598
.L19871:
	movq	%r14, %rdi
	movl	$.LC195, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L19595
.L19870:
	movl	$.LC190, %esi
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	error_with_decl
	xorl	%r13d, %r13d
	movq	input_filename(%rip), %rsi
	movq	%rsi, -208(%rbp)
	movq	56(%r14), %r12
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19527
	movq	(%rax), %r13
.L19527:
	testq	%r13, %r13
	je	.L19529
	movl	32(%r13), %eax
	testl	%eax, %eax
	jne	.L19528
.L19529:
	movq	named_label_uses(%rip), %rax
	testq	%rax, %rax
	je	.L19798
	movq	current_binding_level(%rip), %rsi
	movq	(%rsi), %r9
	cmpq	%r9, 24(%rax)
	je	.L19882
.L19530:
	movq	(%rsi), %rdi
	movq	named_label_uses(%rip), %rdx
	xorl	%eax, %eax
	movq	%r13, %rsi
	call	tree_cons
	movq	current_binding_level(%rip), %r10
	movq	%rax, named_label_uses(%rip)
	movq	%r10, 8(%rax)
.L19528:
	testq	%r13, %r13
	je	.L19531
	movq	current_function_decl(%rip), %rbx
	cmpq	%rbx, 64(%r13)
	je	.L19541
	testb	$-128, 18(%r13)
	jne	.L19541
	movq	72(%r12), %rax
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L19534
	movq	(%rax), %rbx
.L19534:
	testq	%rbx, %rbx
	jne	.L19883
.L19535:
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	lookup_label
	movq	%rax, %r13
.L19541:
	movq	current_binding_level(%rip), %rdi
	andb	$-2, 67(%rdi)
	testq	%r13, %r13
	je	.L19544
	movq	current_function_decl(%rip), %r11
	cmpq	%r11, 64(%r13)
	je	.L19544
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%r13, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19884
.L19546:
	movq	$0, (%rax)
	xorl	%ebx, %ebx
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19548
	movq	(%rax), %rbx
.L19548:
	testq	%rbx, %rbx
	je	.L19550
	movl	32(%rbx), %eax
	testl	%eax, %eax
	jne	.L19549
.L19550:
	movq	named_label_uses(%rip), %rax
	testq	%rax, %rax
	je	.L19799
	movq	current_binding_level(%rip), %rsi
	movq	(%rsi), %rcx
	cmpq	%rcx, 24(%rax)
	je	.L19885
.L19551:
	movq	(%rsi), %rdi
	movq	named_label_uses(%rip), %rdx
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	current_binding_level(%rip), %rsi
	movq	%rax, named_label_uses(%rip)
	movq	%rsi, 8(%rax)
.L19549:
	testq	%rbx, %rbx
	je	.L19552
	movq	current_function_decl(%rip), %rax
	cmpq	%rax, 64(%rbx)
	je	.L19562
	testb	$-128, 18(%rbx)
	jne	.L19562
	movq	72(%r12), %rax
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L19555
	movq	(%rax), %rbx
.L19555:
	testq	%rbx, %rbx
	jne	.L19886
.L19556:
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	lookup_label
	movq	%rax, %rbx
.L19562:
	movq	%rbx, %r13
.L19544:
	cmpq	$0, 88(%r13)
	jne	.L19887
	movq	error_mark_node(%rip), %r8
	movq	named_label_uses(%rip), %r12
	movq	%r8, 88(%r13)
	testq	%r12, %r12
	movq	-208(%rbp), %rbx
	movl	$1, 32(%r13)
	movq	%rbx, 24(%r13)
	movq	$0, -552(%rbp)
	je	.L19749
.L19594:
	cmpq	%r13, 32(%r12)
	je	.L19888
.L19570:
	movq	%r12, -552(%rbp)
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L19594
.L19749:
	movq	$0, current_function_return_value(%rip)
	jmp	.L19595
.L19888:
	movq	current_binding_level(%rip), %rdx
	movq	%rdx, -560(%rbp)
	movq	8(%r12), %rax
.L19591:
	movq	-560(%rbp), %rdi
	movq	$0, -568(%rbp)
	cmpq	%rax, %rdi
	movq	(%rdi), %rbx
	je	.L19889
.L19577:
	cmpq	-568(%rbp), %rbx
	je	.L19751
	.p2align 4,,7
.L19589:
	cmpb	$33, 16(%rbx)
	je	.L19890
.L19581:
	movq	(%rbx), %rbx
	cmpq	-568(%rbp), %rbx
	jne	.L19589
	movq	8(%r12), %rax
.L19751:
	cmpq	%rax, -560(%rbp)
	je	.L19574
	movq	-560(%rbp), %rbx
	movq	56(%rbx), %r10
	movq	%r10, -560(%rbp)
	jmp	.L19591
.L19574:
	cmpq	$0, -552(%rbp)
	je	.L19592
	movq	(%r12), %rdx
	movq	-552(%rbp), %r8
	movq	%rdx, (%r8)
	jmp	.L19570
.L19592:
	movq	(%r12), %rdi
	movq	%rdi, named_label_uses(%rip)
	jmp	.L19570
	.p2align 6,,7
.L19890:
	movq	56(%rbx), %rcx
	movl	$.LC192, %edi
	cld
	movq	32(%rcx), %rsi
	movl	$6, %ecx
	repz
	cmpsb
	je	.L19581
	movq	88(%rbx), %rax
	testq	%rax, %rax
	je	.L19583
	cmpq	error_mark_node(%rip), %rax
	je	.L19583
.L19582:
	movq	72(%r13), %rdx
	testq	%rdx, %rdx
	je	.L19586
	cmpq	$0, 32(%rdx)
	jne	.L19584
.L19586:
	movq	%r13, %rdi
	movl	$.LC193, %esi
	xorl	%eax, %eax
	call	error_with_decl
	movq	72(%r13), %rdx
.L19584:
	testq	%rdx, %rdx
	je	.L19891
.L19588:
	movq	current_function_decl(%rip), %r9
	movq	%rbx, %rdi
	movl	$.LC194, %esi
	xorl	%eax, %eax
	movq	%r9, 32(%rdx)
	call	error_with_decl
	jmp	.L19581
.L19891:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r13)
	movq	%rax, %rdx
	jmp	.L19588
.L19583:
	movq	8(%rbx), %rsi
	testb	$16, 46(%rsi)
	je	.L19581
	jmp	.L19582
.L19889:
	movq	24(%r12), %r11
	movq	%r11, -568(%rbp)
	jmp	.L19577
.L19887:
	movq	%r13, %rdi
	movl	$.LC191, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L19595
.L19886:
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19892
.L19558:
	movq	$0, (%rax)
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L19893
.L19560:
	movq	$0, (%rax)
	jmp	.L19556
.L19893:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	jmp	.L19560
.L19892:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L19558
	.p2align 6,,7
.L19552:
	movq	void_type_node(%rip), %rdx
	xorl	%eax, %eax
	movl	$30, %edi
	movq	%r12, %rsi
	call	build_decl
	movq	current_function_decl(%rip), %r10
	movq	%rax, %rbx
	movb	$0, 52(%rax)
	movq	input_filename(%rip), %r9
	movq	%r10, 64(%rax)
	movl	lineno(%rip), %eax
	movq	%r9, 24(%rbx)
	movl	%eax, 32(%rbx)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19894
.L19564:
	movq	named_labels(%rip), %rdx
	movq	%rbx, (%rax)
	xorl	%edi, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	named_label_uses(%rip), %r12
	movq	%rax, named_labels(%rip)
	movq	%rbx, 32(%r12)
	jmp	.L19562
.L19894:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L19564
.L19885:
	cmpq	%rbx, 32(%rax)
	je	.L19549
	jmp	.L19551
.L19799:
	movq	current_binding_level(%rip), %rsi
	jmp	.L19551
.L19884:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L19546
.L19883:
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19895
.L19537:
	movq	$0, (%rax)
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L19896
.L19539:
	movq	$0, (%rax)
	jmp	.L19535
.L19896:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	jmp	.L19539
.L19895:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L19537
	.p2align 6,,7
.L19531:
	movq	void_type_node(%rip), %rdx
	xorl	%eax, %eax
	movl	$30, %edi
	movq	%r12, %rsi
	call	build_decl
	movq	current_function_decl(%rip), %r8
	movq	%rax, %rbx
	movb	$0, 52(%rax)
	movq	input_filename(%rip), %r13
	movq	%r8, 64(%rax)
	movl	lineno(%rip), %eax
	movq	%r13, 24(%rbx)
	movl	%eax, 32(%rbx)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19897
.L19543:
	movq	named_labels(%rip), %rdx
	movq	%rbx, (%rax)
	xorl	%edi, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	movq	%rbx, %r13
	call	tree_cons
	movq	named_label_uses(%rip), %rdx
	movq	%rax, named_labels(%rip)
	movq	%rbx, 32(%rdx)
	jmp	.L19541
.L19897:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L19543
.L19882:
	cmpq	%r13, 32(%rax)
	je	.L19528
	jmp	.L19530
.L19798:
	movq	current_binding_level(%rip), %rsi
	jmp	.L19530
.L19869:
	movq	%r12, 32(%r15)
	movq	%r14, 40(%r15)
	movq	%r15, %rdi
	movq	-528(%rbp), %rsi
	xorl	%eax, %eax
	movq	%rsi, 48(%r15)
	call	remember_end_note
	jmp	.L19489
.L19485:
	cmpl	$1, -532(%rbp)
	je	.L19488
	movl	-516(%rbp), %r11d
	testl	%r11d, %r11d
	je	.L19486
.L19488:
	movl	$5, %edi
	xorl	%eax, %eax
	call	make_node
	movq	%rax, %r15
	jmp	.L19486
	.p2align 6,,7
.L19868:
	cmpq	$0, 88(%rbx)
	je	.L19481
	testb	$8, 17(%rbx)
	je	.L19481
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	output_inline_function
	jmp	.L19481
.L19867:
	movq	(%r13), %rdi
	xorl	%eax, %eax
	call	nreverse
	movq	%rax, %r12
	movq	%rax, (%r13)
	jmp	.L19478
.L19463:
	movl	$1, %edi
	xorl	%eax, %eax
	call	pop_memoized_context
	jmp	.L19464
.L19866:
	movq	-456(%rbp), %rdi
	xorl	%eax, %eax
	call	expand_label
	jmp	.L19462
.L19865:
	movq	-56(%rbp), %r8
	xorl	%eax, %eax
	movq	80(%r8), %rdi
	call	fixup_result_decl
	jmp	.L19459
.L19864:
	xorl	%eax, %eax
	call	expand_end_try
	xorl	%eax, %eax
	xorl	%esi, %esi
	xorl	%edi, %edi
	call	expand_start_except
	xorl	%eax, %eax
	call	expand_end_except
	jmp	.L19458
.L19863:
	movq	integer_zero_node(%rip), %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	expand_assignment
	jmp	.L19457
.L19862:
	xorl	%eax, %eax
	call	emit_label
	jmp	.L19456
.L19861:
	xorl	%eax, %eax
	call	setjmp_protect
	jmp	.L19455
.L19860:
	xorl	%edi, %edi
	xorl	%esi, %esi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	expand_end_bindings
	movq	current_binding_level(%rip), %r14
	movl	$0, -468(%rbp)
	movzbl	66(%r14), %edx
	movzbl	66(%r14), %eax
	movq	%r14, %rdi
	movq	40(%r14), %r15
	movq	56(%r14), %rsi
	andl	$15, %edx
	movq	%r15, -464(%rbp)
	cmpl	$3, %edx
	movl	%eax, %edx
	sete	%r12b
	shrb	$4, %al
	andl	$15, %edx
	movl	%eax, %ecx
	shrb	$3, %al
	andl	$7, %ecx
	movzbl	%al, %r8d
	xorl	%eax, %eax
	movzbl	%r12b, %r13d
	movl	%r13d, -180(%rbp)
	movq	8(%r14), %r13
	call	GNU_xref_end_scope
	movq	current_binding_level(%rip), %rbx
	movl	$1, %eax
	movzbl	66(%rbx), %esi
	shrb	$4, %sil
	andl	$7, %esi
	decl	%esi
	cmovne	-468(%rbp), %eax
	movl	%eax, -468(%rbp)
	xorl	%eax, %eax
	testl	%eax, %eax
	jne	.L19898
	movq	(%rbx), %r12
.L19306:
	testq	%r12, %r12
	movq	%r12, %rbx
	je	.L19716
	.p2align 4,,7
.L19312:
	movzwl	16(%rbx), %eax
	andl	$-32513, %eax
	cmpw	$29, %ax
	je	.L19899
.L19309:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L19312
.L19716:
	movq	current_binding_level(%rip), %r11
	xorl	%r8d, %r8d
	xorl	%r15d, %r15d
	movq	48(%r11), %rdx
	testq	%rdx, %rdx
	setne	%r8b
	testl	%r8d, %r8d
	movl	%r8d, -184(%rbp)
	je	.L19313
	movq	%rdx, %r15
.L19314:
	testq	%r15, %r15
	jne	.L19900
.L19317:
	movl	-468(%rbp), %eax
	testl	%eax, %eax
	js	.L19318
	movq	-464(%rbp), %rax
	testq	%rax, %rax
	je	.L19318
	.p2align 4,,7
.L19323:
	movq	%r15, 56(%rax)
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L19323
.L19318:
	testq	%r12, %r12
	je	.L19719
	.p2align 4,,7
.L19332:
	movq	56(%r12), %rax
	testq	%rax, %rax
	je	.L19326
	testb	$1, 53(%r12)
	je	.L19329
	testb	$1, 18(%r12)
	je	.L19330
	movq	112(%r12), %rbx
	orb	$1, 18(%rbx)
.L19330:
	testb	$8, 17(%r12)
	je	.L19793
	movq	112(%r12), %r10
	orb	$8, 17(%r10)
.L19793:
	movq	56(%r12), %rax
.L19329:
	movq	$0, 48(%rax)
.L19326:
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L19332
.L19719:
	movq	current_binding_level(%rip), %rcx
	movq	%rcx, %rdi
	movq	16(%rcx), %rcx
	testq	%rcx, %rcx
	je	.L19721
	.p2align 4,,7
.L19337:
	movq	24(%rcx), %rsi
	movq	32(%rcx), %r14
	movq	%r14, 48(%rsi)
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.L19337
.L19721:
	movq	24(%rdi), %rcx
	testq	%rcx, %rcx
	je	.L19723
	.p2align 4,,7
.L19342:
	movq	24(%rcx), %r13
	movq	32(%rcx), %r12
	movq	%r12, 56(%r13)
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.L19342
.L19723:
	movq	32(%rdi), %rcx
	testq	%rcx, %rcx
	je	.L19725
	.p2align 4,,7
.L19347:
	movq	24(%rcx), %r8
	movq	32(%rcx), %rdx
	movq	(%rcx), %rcx
	movq	%rdx, 8(%r8)
	testq	%rcx, %rcx
	jne	.L19347
.L19725:
	xorl	%eax, %eax
	testl	%eax, %eax
	je	.L19348
	movq	named_labels(%rip), %r11
	movq	$0, 32(%r15)
	testq	%r11, %r11
	movq	%r11, -480(%rbp)
	je	.L19727
.L19427:
	movq	-480(%rbp), %r9
	movq	32(%r9), %r14
	cmpq	$0, 88(%r14)
	je	.L19901
	movl	warn_unused(%rip), %r13d
	testl	%r13d, %r13d
	je	.L19423
	testb	$1, 18(%r14)
	je	.L19902
.L19423:
	movq	56(%r14), %rbx
	cmpq	$0, 72(%rbx)
	je	.L19903
.L19426:
	movq	72(%rbx), %r9
	movq	$0, (%r9)
	movq	32(%r15), %r12
	movq	%r12, (%r14)
	movq	%r14, 32(%r15)
	movq	-480(%rbp), %rax
	movq	(%rax), %r14
	testq	%r14, %r14
	movq	%r14, -480(%rbp)
	jne	.L19427
.L19727:
	movq	$0, named_labels(%rip)
.L19348:
	movq	current_binding_level(%rip), %rsi
	movq	56(%rsi), %rcx
	testq	%rcx, %rcx
	je	.L19428
	movq	named_label_uses(%rip), %rdx
	testq	%rdx, %rdx
	je	.L19428
	.p2align 4,,7
.L19434:
	cmpq	%rsi, 8(%rdx)
	je	.L19904
.L19431:
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L19434
.L19428:
	movzbl	66(%rsi), %r10d
	movq	global_binding_level(%rip), %rax
	movl	$7, %r12d
	shrb	$4, %r10b
	andl	%r10d, %r12d
	testq	%rax, %rax
	je	.L19435
	cmpq	%rax, %rsi
	je	.L19905
.L19435:
	movq	%rsi, %rbx
	movq	free_binding_level(%rip), %r8
	movq	56(%rsi), %rsi
	movq	%rsi, current_binding_level(%rip)
	movq	%r8, 56(%rbx)
	movzbl	66(%rsi), %ecx
	movq	%rbx, free_binding_level(%rip)
	andl	$15, %ecx
	cmpl	$2, %ecx
	je	.L19906
.L19442:
	xorl	%r13d, %r13d
	testl	%r13d, %r13d
	je	.L19443
	movq	current_function_decl(%rip), %r14
	movq	%r15, 88(%r14)
.L19444:
	cmpl	$2, %r12d
	je	.L19907
.L19451:
	testq	%r15, %r15
	je	.L19297
	orb	$1, 18(%r15)
	jmp	.L19297
.L19907:
	movl	-180(%rbp), %r12d
	testl	%r12d, %r12d
	jne	.L19451
	movq	current_binding_level(%rip), %r15
	movl	-468(%rbp), %esi
	movl	$1, %edx
	xorl	%eax, %eax
	movq	(%r15), %rdi
	call	expand_end_bindings
	movl	-468(%rbp), %edi
	xorl	%esi, %esi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	poplevel
	movq	%rax, %r15
	jmp	.L19451
.L19443:
	testq	%r15, %r15
	je	.L19445
	movl	-184(%rbp), %eax
	testl	%eax, %eax
	jne	.L19444
	movq	current_binding_level(%rip), %rbx
	movq	%r15, %rsi
	movq	40(%rbx), %rdi
.L19819:
	xorl	%eax, %eax
	call	chainon
	movq	%rax, 40(%rbx)
	jmp	.L19444
.L19445:
	cmpq	$0, -464(%rbp)
	je	.L19444
	cmpl	$2, -468(%rbp)
	je	.L19908
	movq	current_binding_level(%rip), %rbx
	movq	-464(%rbp), %rsi
	movq	40(%rbx), %rdi
	jmp	.L19819
.L19908:
	movq	current_binding_level(%rip), %rbx
	movq	-464(%rbp), %rdi
	movq	40(%rbx), %rsi
	jmp	.L19819
.L19906:
	movq	%rsi, class_binding_level(%rip)
	.p2align 4,,7
.L19438:
	movq	current_binding_level(%rip), %rsi
	movq	56(%rsi), %r11
	movzbl	66(%r11), %edx
	movq	%r11, current_binding_level(%rip)
	andl	$15, %edx
	cmpl	$2, %edx
	je	.L19438
	jmp	.L19442
.L19905:
	movl	$123, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	movq	current_binding_level(%rip), %rsi
	jmp	.L19435
	.p2align 6,,7
.L19904:
	movq	%rcx, 8(%rdx)
	movq	current_binding_level(%rip), %rsi
	movq	(%rcx), %rdi
	movq	%rdi, 24(%rdx)
	jmp	.L19431
.L19903:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	movq	56(%r14), %rbx
	jmp	.L19426
.L19902:
	movq	%r14, %rdi
	movl	$.LC195, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L19423
.L19901:
	movq	%r14, %rdi
	xorl	%eax, %eax
	movl	$.LC190, %esi
	call	error_with_decl
	xorl	%r13d, %r13d
	movq	input_filename(%rip), %rdi
	movq	%rdi, -192(%rbp)
	movq	56(%r14), %r12
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19355
	movq	(%rax), %r13
.L19355:
	testq	%r13, %r13
	je	.L19357
	movl	32(%r13), %eax
	testl	%eax, %eax
	jne	.L19356
.L19357:
	movq	named_label_uses(%rip), %rax
	testq	%rax, %rax
	je	.L19794
	movq	current_binding_level(%rip), %rsi
	movq	(%rsi), %rbx
	cmpq	%rbx, 24(%rax)
	je	.L19909
.L19358:
	movq	(%rsi), %rdi
	movq	named_label_uses(%rip), %rdx
	xorl	%eax, %eax
	movq	%r13, %rsi
	call	tree_cons
	movq	current_binding_level(%rip), %r10
	movq	%rax, named_label_uses(%rip)
	movq	%r10, 8(%rax)
.L19356:
	testq	%r13, %r13
	je	.L19359
	movq	current_function_decl(%rip), %rsi
	cmpq	%rsi, 64(%r13)
	je	.L19369
	testb	$-128, 18(%r13)
	jne	.L19369
	movq	72(%r12), %rax
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L19362
	movq	(%rax), %rbx
.L19362:
	testq	%rbx, %rbx
	jne	.L19910
.L19363:
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	lookup_label
	movq	%rax, %r13
.L19369:
	movq	current_binding_level(%rip), %rdx
	andb	$-2, 67(%rdx)
	testq	%r13, %r13
	je	.L19372
	movq	current_function_decl(%rip), %rax
	cmpq	%rax, 64(%r13)
	je	.L19372
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%r13, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19911
.L19374:
	movq	$0, (%rax)
	xorl	%ebx, %ebx
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19376
	movq	(%rax), %rbx
.L19376:
	testq	%rbx, %rbx
	je	.L19378
	movl	32(%rbx), %r11d
	testl	%r11d, %r11d
	jne	.L19377
.L19378:
	movq	named_label_uses(%rip), %rax
	testq	%rax, %rax
	je	.L19795
	movq	current_binding_level(%rip), %rsi
	movq	(%rsi), %r9
	cmpq	%r9, 24(%rax)
	je	.L19912
.L19379:
	movq	(%rsi), %rdi
	movq	named_label_uses(%rip), %rdx
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	current_binding_level(%rip), %rdi
	movq	%rax, named_label_uses(%rip)
	movq	%rdi, 8(%rax)
.L19377:
	testq	%rbx, %rbx
	je	.L19380
	movq	current_function_decl(%rip), %r10
	cmpq	%r10, 64(%rbx)
	je	.L19390
	testb	$-128, 18(%rbx)
	jne	.L19390
	movq	72(%r12), %rax
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L19383
	movq	(%rax), %rbx
.L19383:
	testq	%rbx, %rbx
	jne	.L19913
.L19384:
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	lookup_label
	movq	%rax, %rbx
.L19390:
	movq	%rbx, %r13
.L19372:
	cmpq	$0, 88(%r13)
	jne	.L19914
	movq	error_mark_node(%rip), %r8
	movq	named_label_uses(%rip), %r12
	movq	%r8, 88(%r13)
	testq	%r12, %r12
	movq	-192(%rbp), %rbx
	movl	$1, 32(%r13)
	movq	%rbx, 24(%r13)
	movq	$0, -488(%rbp)
	je	.L19729
.L19422:
	cmpq	%r13, 32(%r12)
	je	.L19915
.L19398:
	movq	%r12, -488(%rbp)
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L19422
.L19729:
	movq	$0, current_function_return_value(%rip)
	jmp	.L19423
.L19915:
	movq	current_binding_level(%rip), %rdx
	movq	%rdx, -496(%rbp)
	movq	8(%r12), %rax
.L19419:
	movq	-496(%rbp), %r11
	movq	$0, -504(%rbp)
	cmpq	%rax, %r11
	movq	(%r11), %rbx
	je	.L19916
.L19405:
	cmpq	-504(%rbp), %rbx
	je	.L19731
.L19417:
	cmpb	$33, 16(%rbx)
	je	.L19917
.L19409:
	movq	(%rbx), %rbx
	cmpq	-504(%rbp), %rbx
	jne	.L19417
	movq	8(%r12), %rax
.L19731:
	cmpq	%rax, -496(%rbp)
	je	.L19402
	movq	-496(%rbp), %rbx
	movq	56(%rbx), %rcx
	movq	%rcx, -496(%rbp)
	jmp	.L19419
.L19402:
	cmpq	$0, -488(%rbp)
	je	.L19420
	movq	(%r12), %rdx
	movq	-488(%rbp), %r8
	movq	%rdx, (%r8)
	jmp	.L19398
.L19420:
	movq	(%r12), %r11
	movq	%r11, named_label_uses(%rip)
	jmp	.L19398
	.p2align 6,,7
.L19917:
	movq	56(%rbx), %rdi
	movl	$6, %ecx
	cld
	movq	32(%rdi), %rsi
	movl	$.LC192, %edi
	repz
	cmpsb
	je	.L19409
	movq	88(%rbx), %rax
	testq	%rax, %rax
	je	.L19411
	cmpq	error_mark_node(%rip), %rax
	je	.L19411
.L19410:
	movq	72(%r13), %rdx
	testq	%rdx, %rdx
	je	.L19414
	cmpq	$0, 32(%rdx)
	jne	.L19412
.L19414:
	movq	%r13, %rdi
	movl	$.LC193, %esi
	xorl	%eax, %eax
	call	error_with_decl
	movq	72(%r13), %rdx
.L19412:
	testq	%rdx, %rdx
	je	.L19918
.L19416:
	movq	current_function_decl(%rip), %rsi
	movq	%rbx, %rdi
	xorl	%eax, %eax
	movq	%rsi, 32(%rdx)
	movl	$.LC194, %esi
	call	error_with_decl
	jmp	.L19409
.L19918:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r13)
	movq	%rax, %rdx
	jmp	.L19416
.L19411:
	movq	8(%rbx), %r10
	testb	$16, 46(%r10)
	je	.L19409
	jmp	.L19410
.L19916:
	movq	24(%r12), %r9
	movq	%r9, -504(%rbp)
	jmp	.L19405
.L19914:
	movq	%r13, %rdi
	movl	$.LC191, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L19423
.L19913:
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19919
.L19386:
	movq	$0, (%rax)
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L19920
.L19388:
	movq	$0, (%rax)
	jmp	.L19384
.L19920:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	jmp	.L19388
.L19919:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L19386
	.p2align 6,,7
.L19380:
	movq	void_type_node(%rip), %rdx
	movq	%r12, %rsi
	xorl	%eax, %eax
	movl	$30, %edi
	call	build_decl
	movq	current_function_decl(%rip), %rcx
	movq	%rax, %rbx
	movb	$0, 52(%rax)
	movq	input_filename(%rip), %rsi
	movq	%rcx, 64(%rax)
	movl	lineno(%rip), %eax
	movq	%rsi, 24(%rbx)
	movl	%eax, 32(%rbx)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19921
.L19392:
	movq	named_labels(%rip), %rdx
	movq	%rbx, (%rax)
	xorl	%edi, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	named_label_uses(%rip), %r12
	movq	%rax, named_labels(%rip)
	movq	%rbx, 32(%r12)
	jmp	.L19390
.L19921:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L19392
.L19912:
	cmpq	%rbx, 32(%rax)
	je	.L19377
	jmp	.L19379
.L19795:
	movq	current_binding_level(%rip), %rsi
	jmp	.L19379
.L19911:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L19374
.L19910:
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19922
.L19365:
	movq	$0, (%rax)
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L19923
.L19367:
	movq	$0, (%rax)
	jmp	.L19363
.L19923:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	jmp	.L19367
.L19922:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L19365
	.p2align 6,,7
.L19359:
	movq	void_type_node(%rip), %rdx
	xorl	%eax, %eax
	movl	$30, %edi
	movq	%r12, %rsi
	call	build_decl
	movq	current_function_decl(%rip), %r13
	movq	%rax, %rbx
	movb	$0, 52(%rax)
	movq	input_filename(%rip), %rcx
	movq	%r13, 64(%rax)
	movl	lineno(%rip), %eax
	movq	%rcx, 24(%rbx)
	movl	%eax, 32(%rbx)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19924
.L19371:
	movq	named_labels(%rip), %rdx
	movq	%rbx, (%rax)
	xorl	%edi, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	movq	%rbx, %r13
	call	tree_cons
	movq	named_label_uses(%rip), %r8
	movq	%rax, named_labels(%rip)
	movq	%rbx, 32(%r8)
	jmp	.L19369
.L19924:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L19371
.L19909:
	cmpq	%r13, 32(%rax)
	je	.L19356
	jmp	.L19358
.L19794:
	movq	current_binding_level(%rip), %rsi
	jmp	.L19358
.L19900:
	movq	%r12, 32(%r15)
	movq	%r13, 40(%r15)
	xorl	%eax, %eax
	movq	-464(%rbp), %rdi
	movq	%rdi, 48(%r15)
	movq	%r15, %rdi
	call	remember_end_note
	jmp	.L19317
.L19313:
	cmpl	$1, -468(%rbp)
	je	.L19316
	xorl	%r9d, %r9d
	testl	%r9d, %r9d
	je	.L19314
.L19316:
	movl	$5, %edi
	xorl	%eax, %eax
	call	make_node
	movq	%rax, %r15
	jmp	.L19314
.L19899:
	cmpq	$0, 88(%rbx)
	je	.L19309
	testb	$8, 17(%rbx)
	je	.L19309
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	output_inline_function
	jmp	.L19309
.L19898:
	movq	(%rbx), %rdi
	call	nreverse
	movq	%rax, %r12
	movq	%rax, (%rbx)
	jmp	.L19306
.L19859:
	movq	-456(%rbp), %r9
	movq	-56(%rbp), %rcx
	xorl	%eax, %eax
	movq	error_mark_node(%rip), %r10
	movq	input_filename(%rip), %rbx
	movq	%rcx, 64(%r9)
	movq	%r10, 88(%r9)
	movq	%rbx, 24(%r9)
	movl	-44(%rbp), %edi
	movl	%edi, 32(%r9)
	movq	%r9, %rdi
	call	expand_goto
	jmp	.L19296
.L19858:
	movq	32(%rax), %r11
	xorl	%eax, %eax
	movq	120(%r11), %rdi
	call	use_variable
	jmp	.L19295
.L19857:
	xorl	%eax, %eax
	call	expand_gc_prologue_and_epilogue
	jmp	.L19294
.L19856:
	xorl	%eax, %eax
	call	expand_end_cond
	jmp	.L18927
.L19855:
	movq	current_class_decl(%rip), %rsi
	movq	integer_zero_node(%rip), %rdx
	movl	$96, %edi
	xorl	%eax, %eax
	call	build_binary_op
	xorl	%esi, %esi
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	expand_start_cond
	jmp	.L18924
.L19854:
	movq	-128(%rbp), %rdi
	movq	C_C_D(%rip), %rdx
	xorl	%r8d, %r8d
	movq	current_class_decl(%rip), %rcx
	xorl	%eax, %eax
	movq	%rdi, %rsi
	call	build_vbase_vtables_init
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	expand_expr_stmt
	jmp	.L18923
.L19853:
	movq	%rdx, %rsi
	xorl	%eax, %eax
	call	convert_pointer_to
	movq	%rax, %rdx
	jmp	.L18920
.L19852:
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	previous_insn
	movq	%rax, %r13
	jmp	.L18914
.L19851:
	movl	-132(%rbp), %r12d
	testl	%r12d, %r12d
	jne	.L18909
	movq	current_binding_level(%rip), %r15
	movl	-292(%rbp), %esi
	movl	$1, %edx
	xorl	%eax, %eax
	movq	(%r15), %rdi
	call	expand_end_bindings
	movl	-292(%rbp), %edi
	xorl	%esi, %esi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	poplevel
	movq	%rax, %r15
	jmp	.L18909
.L18901:
	testq	%r15, %r15
	je	.L18903
	movl	-136(%rbp), %r13d
	testl	%r13d, %r13d
	jne	.L18902
	movq	current_binding_level(%rip), %rbx
	movq	%r15, %rsi
	movq	40(%rbx), %rdi
.L19815:
	xorl	%eax, %eax
	call	chainon
	movq	%rax, 40(%rbx)
	jmp	.L18902
.L18903:
	cmpq	$0, -288(%rbp)
	je	.L18902
	cmpl	$2, -292(%rbp)
	je	.L19925
	movq	current_binding_level(%rip), %rbx
	movq	-288(%rbp), %rsi
	movq	40(%rbx), %rdi
	jmp	.L19815
.L19925:
	movq	current_binding_level(%rip), %rbx
	movq	-288(%rbp), %rdi
	movq	40(%rbx), %rsi
	jmp	.L19815
.L19850:
	movq	%rsi, class_binding_level(%rip)
	.p2align 4,,7
.L18896:
	movq	current_binding_level(%rip), %rsi
	movq	56(%rsi), %rcx
	movzbl	66(%rcx), %r11d
	movq	%rcx, current_binding_level(%rip)
	andl	$15, %r11d
	cmpl	$2, %r11d
	je	.L18896
	jmp	.L18900
.L19849:
	movl	$123, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	movq	current_binding_level(%rip), %rsi
	jmp	.L18893
	.p2align 6,,7
.L19848:
	movq	%rcx, 8(%rdx)
	movq	current_binding_level(%rip), %rsi
	movq	(%rcx), %r10
	movq	%r10, 24(%rdx)
	jmp	.L18889
.L19847:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	movq	56(%r14), %rbx
	jmp	.L18884
.L19846:
	movq	%r14, %rdi
	movl	$.LC195, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L18881
.L19845:
	xorl	%eax, %eax
	movq	%r14, %rdi
	movl	$.LC190, %esi
	call	error_with_decl
	xorl	%r13d, %r13d
	movq	input_filename(%rip), %rdx
	movq	%rdx, -144(%rbp)
	movq	56(%r14), %r12
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L18813
	movq	(%rax), %r13
.L18813:
	testq	%r13, %r13
	je	.L18815
	movl	32(%r13), %esi
	testl	%esi, %esi
	jne	.L18814
.L18815:
	movq	named_label_uses(%rip), %rax
	testq	%rax, %rax
	je	.L19784
	movq	current_binding_level(%rip), %rsi
	movq	(%rsi), %r10
	cmpq	%r10, 24(%rax)
	je	.L19926
.L18816:
	movq	(%rsi), %rdi
	movq	named_label_uses(%rip), %rdx
	xorl	%eax, %eax
	movq	%r13, %rsi
	call	tree_cons
	movq	current_binding_level(%rip), %r8
	movq	%rax, named_label_uses(%rip)
	movq	%r8, 8(%rax)
.L18814:
	testq	%r13, %r13
	je	.L18817
	movq	current_function_decl(%rip), %rbx
	cmpq	%rbx, 64(%r13)
	je	.L18827
	testb	$-128, 18(%r13)
	jne	.L18827
	movq	72(%r12), %rax
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L18820
	movq	(%rax), %rbx
.L18820:
	testq	%rbx, %rbx
	jne	.L19927
.L18821:
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	lookup_label
	movq	%rax, %r13
.L18827:
	movq	current_binding_level(%rip), %rcx
	andb	$-2, 67(%rcx)
	testq	%r13, %r13
	je	.L18830
	movq	current_function_decl(%rip), %r9
	cmpq	%r9, 64(%r13)
	je	.L18830
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%r13, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19928
.L18832:
	movq	$0, (%rax)
	xorl	%ebx, %ebx
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L18834
	movq	(%rax), %rbx
.L18834:
	testq	%rbx, %rbx
	je	.L18836
	movl	32(%rbx), %eax
	testl	%eax, %eax
	jne	.L18835
.L18836:
	movq	named_label_uses(%rip), %rax
	testq	%rax, %rax
	je	.L19785
	movq	current_binding_level(%rip), %rsi
	movq	(%rsi), %r10
	cmpq	%r10, 24(%rax)
	je	.L19929
.L18837:
	movq	(%rsi), %rdi
	movq	named_label_uses(%rip), %rdx
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	current_binding_level(%rip), %rsi
	movq	%rax, named_label_uses(%rip)
	movq	%rsi, 8(%rax)
.L18835:
	testq	%rbx, %rbx
	je	.L18838
	movq	current_function_decl(%rip), %rdx
	cmpq	%rdx, 64(%rbx)
	je	.L18848
	testb	$-128, 18(%rbx)
	jne	.L18848
	movq	72(%r12), %rax
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L18841
	movq	(%rax), %rbx
.L18841:
	testq	%rbx, %rbx
	jne	.L19930
.L18842:
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	lookup_label
	movq	%rax, %rbx
.L18848:
	movq	%rbx, %r13
.L18830:
	cmpq	$0, 88(%r13)
	jne	.L19931
	movq	error_mark_node(%rip), %rdi
	movq	named_label_uses(%rip), %r12
	movq	%rdi, 88(%r13)
	testq	%r12, %r12
	movq	-144(%rbp), %rbx
	movl	$1, 32(%r13)
	movq	%rbx, 24(%r13)
	movq	$0, -312(%rbp)
	je	.L19670
.L18880:
	cmpq	%r13, 32(%r12)
	je	.L19932
.L18856:
	movq	%r12, -312(%rbp)
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L18880
.L19670:
	movq	$0, current_function_return_value(%rip)
	jmp	.L18881
.L19932:
	movq	current_binding_level(%rip), %r11
	movq	%r11, -320(%rbp)
	movq	8(%r12), %rax
.L18877:
	movq	-320(%rbp), %rcx
	movq	$0, -328(%rbp)
	cmpq	%rax, %rcx
	movq	(%rcx), %rbx
	je	.L19933
.L18863:
	cmpq	-328(%rbp), %rbx
	je	.L19672
	.p2align 4,,7
.L18875:
	cmpb	$33, 16(%rbx)
	je	.L19934
.L18867:
	movq	(%rbx), %rbx
	cmpq	-328(%rbp), %rbx
	jne	.L18875
	movq	8(%r12), %rax
.L19672:
	cmpq	%rax, -320(%rbp)
	je	.L18860
	movq	-320(%rbp), %rbx
	movq	56(%rbx), %rdx
	movq	%rdx, -320(%rbp)
	jmp	.L18877
.L18860:
	cmpq	$0, -312(%rbp)
	je	.L18878
	movq	(%r12), %r11
	movq	-312(%rbp), %rdi
	movq	%r11, (%rdi)
	jmp	.L18856
.L18878:
	movq	(%r12), %rcx
	movq	%rcx, named_label_uses(%rip)
	jmp	.L18856
	.p2align 6,,7
.L19934:
	movq	56(%rbx), %r10
	movl	$.LC192, %edi
	movl	$6, %ecx
	cld
	movq	32(%r10), %rsi
	repz
	cmpsb
	je	.L18867
	movq	88(%rbx), %rax
	testq	%rax, %rax
	je	.L18869
	cmpq	error_mark_node(%rip), %rax
	je	.L18869
.L18868:
	movq	72(%r13), %rdx
	testq	%rdx, %rdx
	je	.L18872
	cmpq	$0, 32(%rdx)
	jne	.L18870
.L18872:
	movq	%r13, %rdi
	movl	$.LC193, %esi
	xorl	%eax, %eax
	call	error_with_decl
	movq	72(%r13), %rdx
.L18870:
	testq	%rdx, %rdx
	je	.L19935
.L18874:
	movq	current_function_decl(%rip), %r8
	movq	%rbx, %rdi
	movl	$.LC194, %esi
	xorl	%eax, %eax
	movq	%r8, 32(%rdx)
	call	error_with_decl
	jmp	.L18867
.L19935:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r13)
	movq	%rax, %rdx
	jmp	.L18874
.L18869:
	movq	8(%rbx), %rsi
	testb	$16, 46(%rsi)
	je	.L18867
	jmp	.L18868
.L19933:
	movq	24(%r12), %r9
	movq	%r9, -328(%rbp)
	jmp	.L18863
.L19931:
	movq	%r13, %rdi
	movl	$.LC191, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L18881
.L19930:
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19936
.L18844:
	movq	$0, (%rax)
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L19937
.L18846:
	movq	$0, (%rax)
	jmp	.L18842
.L19937:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	jmp	.L18846
.L19936:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L18844
	.p2align 6,,7
.L18838:
	movq	void_type_node(%rip), %rdx
	xorl	%eax, %eax
	movl	$30, %edi
	movq	%r12, %rsi
	call	build_decl
	movq	current_function_decl(%rip), %r13
	movq	%rax, %rbx
	movb	$0, 52(%rax)
	movq	input_filename(%rip), %r8
	movq	%r13, 64(%rax)
	movl	lineno(%rip), %eax
	movq	%r8, 24(%rbx)
	movl	%eax, 32(%rbx)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19938
.L18850:
	movq	named_labels(%rip), %rdx
	movq	%rbx, (%rax)
	xorl	%edi, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	named_label_uses(%rip), %r12
	movq	%rax, named_labels(%rip)
	movq	%rbx, 32(%r12)
	jmp	.L18848
.L19938:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L18850
.L19929:
	cmpq	%rbx, 32(%rax)
	je	.L18835
	jmp	.L18837
.L19785:
	movq	current_binding_level(%rip), %rsi
	jmp	.L18837
.L19928:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L18832
.L19927:
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19939
.L18823:
	movq	$0, (%rax)
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L19940
.L18825:
	movq	$0, (%rax)
	jmp	.L18821
.L19940:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	jmp	.L18825
.L19939:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L18823
	.p2align 6,,7
.L18817:
	movq	void_type_node(%rip), %rdx
	movl	$30, %edi
	xorl	%eax, %eax
	movq	%r12, %rsi
	call	build_decl
	movq	current_function_decl(%rip), %rdi
	movq	%rax, %rbx
	movb	$0, 52(%rax)
	movq	input_filename(%rip), %r13
	movq	%rdi, 64(%rax)
	movl	lineno(%rip), %eax
	movq	%r13, 24(%rbx)
	movl	%eax, 32(%rbx)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19941
.L18829:
	movq	named_labels(%rip), %rdx
	movq	%rbx, (%rax)
	xorl	%edi, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	movq	%rbx, %r13
	call	tree_cons
	movq	named_label_uses(%rip), %r11
	movq	%rax, named_labels(%rip)
	movq	%rbx, 32(%r11)
	jmp	.L18827
.L19941:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L18829
.L19926:
	cmpq	%r13, 32(%rax)
	je	.L18814
	jmp	.L18816
.L19784:
	movq	current_binding_level(%rip), %rsi
	jmp	.L18816
.L19844:
	movq	%r12, 32(%r15)
	movq	%r13, 40(%r15)
	movq	%r15, %rdi
	movq	-288(%rbp), %r9
	xorl	%eax, %eax
	movq	%r9, 48(%r15)
	call	remember_end_note
	jmp	.L18775
.L18771:
	cmpl	$1, -292(%rbp)
	je	.L18774
	xorl	%eax, %eax
	testl	%eax, %eax
	je	.L18772
.L18774:
	movl	$5, %edi
	xorl	%eax, %eax
	call	make_node
	movq	%rax, %r15
	jmp	.L18772
	.p2align 6,,7
.L19843:
	cmpq	$0, 88(%rbx)
	je	.L18767
	testb	$8, 17(%rbx)
	je	.L18767
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	output_inline_function
	jmp	.L18767
.L19842:
	movq	(%rbx), %rdi
	call	nreverse
	movq	%rax, %r12
	movq	%rax, (%rbx)
	jmp	.L18764
.L19841:
	movq	integer_one_node(%rip), %rcx
	movq	integer_type_node(%rip), %rsi
	movq	%r13, %rdx
	movl	$83, %edi
	xorl	%eax, %eax
	call	build
	xorl	%esi, %esi
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	expand_start_cond
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	expand_expr_stmt
	xorl	%eax, %eax
	call	expand_end_cond
	jmp	.L18755
.L19840:
	movq	ptr_type_node(%rip), %rdi
	movq	current_class_decl(%rip), %rsi
	movq	%rax, %rcx
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	build_x_delete
.L19814:
	movq	%rax, %rbx
	jmp	.L18752
.L19839:
	movq	56(%rdx), %rsi
	movl	$102, %edi
	xorl	%eax, %eax
	movq	error_mark_node(%rip), %rdx
	call	build1
	movq	%r12, %rsi
	xorl	%edi, %edi
	movq	%rax, %r15
	xorl	%eax, %eax
	call	build_tree_list
	movq	current_class_decl(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	tree_cons
	movl	$3, %r8d
	xorl	%ecx, %ecx
	movq	ansi_opname+984(%rip), %rsi
	movq	%rax, %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	build_method_call
	jmp	.L19814
.L19838:
	movq	144(%rax), %r11
	xorl	%eax, %eax
	movq	56(%r11), %rdi
	call	copy_list
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	nreverse
	movq	integer_two_node(%rip), %rcx
	movq	%r13, %rdx
	movq	integer_type_node(%rip), %rsi
	movq	%rax, %rbx
	movl	$83, %edi
	xorl	%eax, %eax
	call	build
	xorl	%esi, %esi
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	expand_start_cond
	testq	%rbx, %rbx
	je	.L19655
	.p2align 4,,7
.L18749:
	movq	8(%rbx), %r9
	testb	$32, 46(%r9)
	jne	.L19942
.L18748:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L18749
.L19655:
	xorl	%eax, %eax
	call	expand_end_cond
	jmp	.L18744
.L19942:
	movq	current_class_decl(%rip), %rsi
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	convert_pointer_to_vbase
	xorl	%r9d, %r9d
	xorl	%r8d, %r8d
	movq	8(%rbx), %rdx
	movq	%rax, %rsi
	movl	$552, %ecx
	xorl	%eax, %eax
	movq	56(%rdx), %rdi
	movq	integer_zero_node(%rip), %rdx
	call	build_delete
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	expand_expr_stmt
	jmp	.L18748
.L19837:
	movq	integer_zero_node(%rip), %rax
	cmpq	%rax, 32(%rbx)
	jne	.L18741
	movq	current_class_type(%rip), %rdx
	testb	$2, 19(%rdx)
	je	.L18740
	jmp	.L18741
.L18737:
	movq	C_C_D(%rip), %rsi
	movq	%r13, %rdx
	jmp	.L19813
.L18732:
	movq	current_binding_level(%rip), %r8
	movq	%r8, 56(%rdi)
	jmp	.L18733
.L18730:
	movl	$72, %edi
	xorl	%eax, %eax
	call	xmalloc
	movq	%rax, %rdi
	jmp	.L18731
.L19836:
	cmpq	$0, named_labels(%rip)
	movl	$134, %esi
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	jmp	.L18729
.L19835:
	testl	%r12d, %r12d
	movl	$0, -276(%rbp)
	je	.L18728
	decl	%r12d
	jne	.L18721
	movq	current_class_type(%rip), %rsi
	movq	120(%rsi), %r9
	movq	64(%r9), %r11
	movq	32(%r11), %rbx
	movq	8(%rbx), %r12
	testb	$8, 46(%r12)
	je	.L18721
.L18728:
	movl	$1, -276(%rbp)
	jmp	.L18721
.L19834:
	movq	integer_type_node(%rip), %rsi
	movq	current_class_decl(%rip), %rdx
	movl	$96, %edi
	movq	integer_zero_node(%rip), %rcx
	xorl	%eax, %eax
	call	build
	movq	%rax, %r14
	jmp	.L18721
.L19833:
	testl	%ecx, %ecx
	jg	.L18717
	testl	%r15d, %r15d
	je	.L18707
	movq	%r13, %rsi
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	arbitrate_lookup
	movq	%rax, %r13
	jmp	.L18707
	.p2align 6,,7
.L18715:
	movq	8(%r13), %rdi
	cmpq	error_mark_node(%rip), %rdi
	cmove	%rdi, %r13
	jmp	.L18707
.L19832:
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %r15d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %r13
	je	.L18707
	testq	%rax, %rax
	je	.L19763
	cmpb	$32, 16(%rax)
	cmovne	%r12, %r13
	jmp	.L18705
	.p2align 6,,7
.L18701:
	movl	current_function_assigns_this(%rip), %eax
	testl	%eax, %eax
	je	.L18928
	movq	current_function_decl(%rip), %rdx
	movq	152(%rdx), %rbx
	testb	$2, 1(%rbx)
	jne	.L19943
	movq	80(%rdx), %rcx
	movq	void_type_node(%rip), %r12
	movq	8(%rcx), %rdi
	cmpq	%r12, 112(%rdi)
	je	.L19090
	cmpq	$0, return_label(%rip)
	jne	.L19944
.L19090:
	movl	$0, current_function_assigns_this(%rip)
	movl	$0, current_function_just_assigned_this(%rip)
	movq	$0, base_init_insns(%rip)
	jmp	.L18927
.L19944:
	movl	$30, %edi
	xorl	%esi, %esi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, -456(%rbp)
	jmp	.L19090
.L19943:
	movq	ctor_label(%rip), %rdi
	xorl	%eax, %eax
	call	expand_label
	movl	-272(%rbp), %eax
	movq	$0, ctor_label(%rip)
	testl	%eax, %eax
	je	.L18930
	cmpl	$2, flag_handle_exceptions(%rip)
	movq	current_binding_level(%rip), %rdx
	movq	(%rdx), %rbx
	je	.L19945
.L18932:
	testq	%rbx, %rbx
	movq	%rbx, %rdi
	setne	%al
	xorl	%edx, %edx
	movzbl	%al, %esi
	xorl	%eax, %eax
	call	expand_end_bindings
	movq	current_binding_level(%rip), %r11
	xorl	%r9d, %r9d
	testq	%rbx, %rbx
	setne	%r9b
	movzbl	66(%r11), %r15d
	movzbl	66(%r11), %esi
	movq	%r11, %rdi
	movq	40(%r11), %rcx
	movl	%r9d, -340(%rbp)
	andl	$15, %r15d
	movl	%esi, %edx
	movq	%rcx, -336(%rbp)
	cmpl	$3, %r15d
	sete	%r12b
	xorl	%eax, %eax
	shrb	$4, %sil
	andl	$15, %edx
	movl	%esi, %ecx
	shrb	$3, %sil
	movzbl	%sil, %r8d
	andl	$7, %ecx
	movq	56(%r11), %rsi
	movzbl	%r12b, %r13d
	movl	%r13d, -148(%rbp)
	movq	8(%r11), %r13
	call	GNU_xref_end_scope
	movq	current_binding_level(%rip), %rbx
	movl	$1, %eax
	movzbl	66(%rbx), %edi
	shrb	$4, %dil
	andl	$7, %edi
	decl	%edi
	cmovne	-340(%rbp), %eax
	movl	%eax, -340(%rbp)
	xorl	%eax, %eax
	testl	%eax, %eax
	jne	.L19946
	movq	(%rbx), %r12
.L18941:
	testq	%r12, %r12
	movq	%r12, %rbx
	je	.L19677
.L18947:
	movzwl	16(%rbx), %eax
	andl	$-32513, %eax
	cmpw	$29, %ax
	je	.L19947
.L18944:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L18947
.L19677:
	movq	current_binding_level(%rip), %r14
	xorl	%r10d, %r10d
	xorl	%r15d, %r15d
	movq	48(%r14), %rdx
	testq	%rdx, %rdx
	setne	%r10b
	testl	%r10d, %r10d
	movl	%r10d, -152(%rbp)
	je	.L18948
	movq	%rdx, %r15
.L18949:
	testq	%r15, %r15
	jne	.L19948
.L18952:
	movl	-340(%rbp), %eax
	testl	%eax, %eax
	js	.L18953
	movq	-336(%rbp), %rax
	testq	%rax, %rax
	je	.L18953
.L18958:
	movq	%r15, 56(%rax)
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L18958
.L18953:
	testq	%r12, %r12
	je	.L19680
.L18967:
	movq	56(%r12), %rax
	testq	%rax, %rax
	je	.L18961
	testb	$1, 53(%r12)
	je	.L18964
	testb	$1, 18(%r12)
	je	.L18965
	movq	112(%r12), %rdx
	orb	$1, 18(%rdx)
.L18965:
	testb	$8, 17(%r12)
	je	.L19786
	movq	112(%r12), %rdi
	orb	$8, 17(%rdi)
.L19786:
	movq	56(%r12), %rax
.L18964:
	movq	$0, 48(%rax)
.L18961:
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L18967
.L19680:
	movq	current_binding_level(%rip), %r11
	movq	16(%r11), %rcx
	movq	%r11, %rdi
	testq	%rcx, %rcx
	je	.L19682
.L18972:
	movq	24(%rcx), %rsi
	movq	32(%rcx), %r13
	movq	%r13, 48(%rsi)
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.L18972
.L19682:
	movq	24(%rdi), %rcx
	testq	%rcx, %rcx
	je	.L19684
.L18977:
	movq	24(%rcx), %r12
	movq	32(%rcx), %r9
	movq	%r9, 56(%r12)
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.L18977
.L19684:
	movq	32(%rdi), %rcx
	testq	%rcx, %rcx
	je	.L19686
.L18982:
	movq	24(%rcx), %r10
	movq	32(%rcx), %r14
	movq	(%rcx), %rcx
	movq	%r14, 8(%r10)
	testq	%rcx, %rcx
	jne	.L18982
.L19686:
	xorl	%ecx, %ecx
	testl	%ecx, %ecx
	je	.L18983
	movq	named_labels(%rip), %r8
	movq	$0, 32(%r15)
	testq	%r8, %r8
	movq	%r8, -352(%rbp)
	je	.L19688
.L19062:
	movq	-352(%rbp), %rax
	movq	32(%rax), %r14
	cmpq	$0, 88(%r14)
	je	.L19949
	movl	warn_unused(%rip), %eax
	testl	%eax, %eax
	je	.L19058
	testb	$1, 18(%r14)
	je	.L19950
.L19058:
	movq	56(%r14), %rbx
	cmpq	$0, 72(%rbx)
	je	.L19951
.L19061:
	movq	72(%rbx), %r8
	movq	$0, (%r8)
	movq	32(%r15), %r12
	movq	%r12, (%r14)
	movq	%r14, 32(%r15)
	movq	-352(%rbp), %r13
	movq	(%r13), %r14
	testq	%r14, %r14
	movq	%r14, -352(%rbp)
	jne	.L19062
.L19688:
	movq	$0, named_labels(%rip)
.L18983:
	movq	current_binding_level(%rip), %rsi
	movq	56(%rsi), %rcx
	testq	%rcx, %rcx
	je	.L19063
	movq	named_label_uses(%rip), %rdx
	testq	%rdx, %rdx
	je	.L19063
.L19069:
	cmpq	%rsi, 8(%rdx)
	je	.L19952
.L19066:
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L19069
.L19063:
	movzbl	66(%rsi), %ecx
	movq	global_binding_level(%rip), %rax
	movl	$7, %r12d
	shrb	$4, %cl
	andl	%ecx, %r12d
	testq	%rax, %rax
	je	.L19070
	cmpq	%rax, %rsi
	je	.L19953
.L19070:
	movq	%rsi, %rbx
	movq	free_binding_level(%rip), %rdx
	movq	56(%rsi), %rsi
	movq	%rsi, current_binding_level(%rip)
	movq	%rdx, 56(%rbx)
	movzbl	66(%rsi), %r11d
	movq	%rbx, free_binding_level(%rip)
	andl	$15, %r11d
	cmpl	$2, %r11d
	je	.L19954
.L19077:
	xorl	%eax, %eax
	testl	%eax, %eax
	je	.L19078
	movq	current_function_decl(%rip), %r14
	movq	%r15, 88(%r14)
.L19079:
	cmpl	$2, %r12d
	je	.L19955
.L19086:
	testq	%r15, %r15
	je	.L18930
	orb	$1, 18(%r15)
.L18930:
	movq	current_class_decl(%rip), %rdi
	xorl	%eax, %eax
	call	c_expand_return
	jmp	.L19090
.L19955:
	movl	-148(%rbp), %r13d
	testl	%r13d, %r13d
	jne	.L19086
	movq	current_binding_level(%rip), %r15
	movl	-340(%rbp), %esi
	movl	$1, %edx
	xorl	%eax, %eax
	movq	(%r15), %rdi
	call	expand_end_bindings
	movl	-340(%rbp), %edi
	xorl	%esi, %esi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	poplevel
	movq	%rax, %r15
	jmp	.L19086
.L19078:
	testq	%r15, %r15
	je	.L19080
	movl	-152(%rbp), %r8d
	testl	%r8d, %r8d
	jne	.L19079
	movq	current_binding_level(%rip), %rbx
	movq	%r15, %rsi
	movq	40(%rbx), %rdi
.L19816:
	xorl	%eax, %eax
	call	chainon
	movq	%rax, 40(%rbx)
	jmp	.L19079
.L19080:
	cmpq	$0, -336(%rbp)
	je	.L19079
	cmpl	$2, -340(%rbp)
	je	.L19956
	movq	current_binding_level(%rip), %rbx
	movq	-336(%rbp), %rsi
	movq	40(%rbx), %rdi
	jmp	.L19816
.L19956:
	movq	current_binding_level(%rip), %rbx
	movq	-336(%rbp), %rdi
	movq	40(%rbx), %rsi
	jmp	.L19816
.L19954:
	movq	%rsi, class_binding_level(%rip)
.L19073:
	movq	current_binding_level(%rip), %rsi
	movq	56(%rsi), %r10
	movzbl	66(%r10), %r9d
	movq	%r10, current_binding_level(%rip)
	andl	$15, %r9d
	cmpl	$2, %r9d
	je	.L19073
	jmp	.L19077
.L19953:
	movl	$123, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	movq	current_binding_level(%rip), %rsi
	jmp	.L19070
	.p2align 6,,7
.L19952:
	movq	%rcx, 8(%rdx)
	movq	current_binding_level(%rip), %rsi
	movq	(%rcx), %rdi
	movq	%rdi, 24(%rdx)
	jmp	.L19066
.L19951:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	movq	56(%r14), %rbx
	jmp	.L19061
.L19950:
	movq	%r14, %rdi
	movl	$.LC195, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L19058
.L19949:
	xorl	%eax, %eax
	movq	%r14, %rdi
	movl	$.LC190, %esi
	call	error_with_decl
	xorl	%r13d, %r13d
	movq	input_filename(%rip), %rbx
	movq	%rbx, -160(%rbp)
	movq	56(%r14), %r12
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L18990
	movq	(%rax), %r13
.L18990:
	testq	%r13, %r13
	je	.L18992
	movl	32(%r13), %eax
	testl	%eax, %eax
	jne	.L18991
.L18992:
	movq	named_label_uses(%rip), %rax
	testq	%rax, %rax
	je	.L19787
	movq	current_binding_level(%rip), %rsi
	movq	(%rsi), %rdi
	cmpq	%rdi, 24(%rax)
	je	.L19957
.L18993:
	movq	(%rsi), %rdi
	movq	named_label_uses(%rip), %rdx
	xorl	%eax, %eax
	movq	%r13, %rsi
	call	tree_cons
	movq	current_binding_level(%rip), %r11
	movq	%rax, named_label_uses(%rip)
	movq	%r11, 8(%rax)
.L18991:
	testq	%r13, %r13
	je	.L18994
	movq	current_function_decl(%rip), %rdx
	cmpq	%rdx, 64(%r13)
	je	.L19004
	testb	$-128, 18(%r13)
	jne	.L19004
	movq	72(%r12), %rax
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L18997
	movq	(%rax), %rbx
.L18997:
	testq	%rbx, %rbx
	jne	.L19958
.L18998:
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	lookup_label
	movq	%rax, %r13
.L19004:
	movq	current_binding_level(%rip), %r10
	andb	$-2, 67(%r10)
	testq	%r13, %r13
	je	.L19007
	movq	current_function_decl(%rip), %rcx
	cmpq	%rcx, 64(%r13)
	je	.L19007
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%r13, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19959
.L19009:
	movq	$0, (%rax)
	xorl	%ebx, %ebx
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19011
	movq	(%rax), %rbx
.L19011:
	testq	%rbx, %rbx
	je	.L19013
	movl	32(%rbx), %eax
	testl	%eax, %eax
	jne	.L19012
.L19013:
	movq	named_label_uses(%rip), %rax
	testq	%rax, %rax
	je	.L19788
	movq	current_binding_level(%rip), %rsi
	movq	(%rsi), %r8
	cmpq	%r8, 24(%rax)
	je	.L19960
.L19014:
	movq	(%rsi), %rdi
	movq	named_label_uses(%rip), %rdx
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	current_binding_level(%rip), %rdi
	movq	%rax, named_label_uses(%rip)
	movq	%rdi, 8(%rax)
.L19012:
	testq	%rbx, %rbx
	je	.L19015
	movq	current_function_decl(%rip), %rax
	cmpq	%rax, 64(%rbx)
	je	.L19025
	testb	$-128, 18(%rbx)
	jne	.L19025
	movq	72(%r12), %rax
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L19018
	movq	(%rax), %rbx
.L19018:
	testq	%rbx, %rbx
	jne	.L19961
.L19019:
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	lookup_label
	movq	%rax, %rbx
.L19025:
	movq	%rbx, %r13
.L19007:
	cmpq	$0, 88(%r13)
	jne	.L19962
	movq	error_mark_node(%rip), %rsi
	movq	named_label_uses(%rip), %r12
	movq	%rsi, 88(%r13)
	testq	%r12, %r12
	movq	-160(%rbp), %rbx
	movl	$1, 32(%r13)
	movq	%rbx, 24(%r13)
	movq	$0, -360(%rbp)
	je	.L19690
.L19057:
	cmpq	%r13, 32(%r12)
	je	.L19963
.L19033:
	movq	%r12, -360(%rbp)
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L19057
.L19690:
	movq	$0, current_function_return_value(%rip)
	jmp	.L19058
.L19963:
	movq	current_binding_level(%rip), %r9
	movq	%r9, -368(%rbp)
	movq	8(%r12), %rax
.L19054:
	movq	-368(%rbp), %r10
	movq	$0, -376(%rbp)
	cmpq	%rax, %r10
	movq	(%r10), %rbx
	je	.L19964
.L19040:
	cmpq	-376(%rbp), %rbx
	je	.L19692
.L19052:
	cmpb	$33, 16(%rbx)
	je	.L19965
.L19044:
	movq	(%rbx), %rbx
	cmpq	-376(%rbp), %rbx
	jne	.L19052
	movq	8(%r12), %rax
.L19692:
	cmpq	%rax, -368(%rbp)
	je	.L19037
	movq	-368(%rbp), %rbx
	movq	56(%rbx), %rdx
	movq	%rdx, -368(%rbp)
	jmp	.L19054
.L19037:
	cmpq	$0, -360(%rbp)
	je	.L19055
	movq	(%r12), %r9
	movq	-360(%rbp), %rsi
	movq	%r9, (%rsi)
	jmp	.L19033
.L19055:
	movq	(%r12), %r10
	movq	%r10, named_label_uses(%rip)
	jmp	.L19033
	.p2align 6,,7
.L19965:
	movq	56(%rbx), %rcx
	movl	$.LC192, %edi
	cld
	movq	32(%rcx), %rsi
	movl	$6, %ecx
	repz
	cmpsb
	je	.L19044
	movq	88(%rbx), %rax
	testq	%rax, %rax
	je	.L19046
	cmpq	error_mark_node(%rip), %rax
	je	.L19046
.L19045:
	movq	72(%r13), %rdx
	testq	%rdx, %rdx
	je	.L19049
	cmpq	$0, 32(%rdx)
	jne	.L19047
.L19049:
	movq	%r13, %rdi
	movl	$.LC193, %esi
	xorl	%eax, %eax
	call	error_with_decl
	movq	72(%r13), %rdx
.L19047:
	testq	%rdx, %rdx
	je	.L19966
.L19051:
	movq	current_function_decl(%rip), %r11
	movq	%rbx, %rdi
	movl	$.LC194, %esi
	xorl	%eax, %eax
	movq	%r11, 32(%rdx)
	call	error_with_decl
	jmp	.L19044
.L19966:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r13)
	movq	%rax, %rdx
	jmp	.L19051
.L19046:
	movq	8(%rbx), %rdi
	testb	$16, 46(%rdi)
	je	.L19044
	jmp	.L19045
.L19964:
	movq	24(%r12), %r8
	movq	%r8, -376(%rbp)
	jmp	.L19040
.L19962:
	movq	%r13, %rdi
	movl	$.LC191, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L19058
.L19961:
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19967
.L19021:
	movq	$0, (%rax)
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L19968
.L19023:
	movq	$0, (%rax)
	jmp	.L19019
.L19968:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	jmp	.L19023
.L19967:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L19021
	.p2align 6,,7
.L19015:
	movq	void_type_node(%rip), %rdx
	xorl	%eax, %eax
	movl	$30, %edi
	movq	%r12, %rsi
	call	build_decl
	movq	current_function_decl(%rip), %rdx
	movq	%rax, %rbx
	movb	$0, 52(%rax)
	movq	input_filename(%rip), %r11
	movq	%rdx, 64(%rax)
	movl	lineno(%rip), %eax
	movq	%r11, 24(%rbx)
	movl	%eax, 32(%rbx)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19969
.L19027:
	movq	named_labels(%rip), %rdx
	movq	%rbx, (%rax)
	xorl	%edi, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	named_label_uses(%rip), %r12
	movq	%rax, named_labels(%rip)
	movq	%rbx, 32(%r12)
	jmp	.L19025
.L19969:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L19027
.L19960:
	cmpq	%rbx, 32(%rax)
	je	.L19012
	jmp	.L19014
.L19788:
	movq	current_binding_level(%rip), %rsi
	jmp	.L19014
.L19959:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L19009
.L19958:
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19970
.L19000:
	movq	$0, (%rax)
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L19971
.L19002:
	movq	$0, (%rax)
	jmp	.L18998
.L19971:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	jmp	.L19002
.L19970:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L19000
.L18994:
	movq	void_type_node(%rip), %rdx
	movq	%r12, %rsi
	xorl	%eax, %eax
	movl	$30, %edi
	call	build_decl
	movq	current_function_decl(%rip), %r13
	movq	%rax, %rbx
	movb	$0, 52(%rax)
	movq	input_filename(%rip), %rsi
	movq	%r13, 64(%rax)
	movl	lineno(%rip), %eax
	movq	%rsi, 24(%rbx)
	movl	%eax, 32(%rbx)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19972
.L19006:
	movq	named_labels(%rip), %rdx
	movq	%rbx, (%rax)
	xorl	%edi, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	movq	%rbx, %r13
	call	tree_cons
	movq	named_label_uses(%rip), %r9
	movq	%rax, named_labels(%rip)
	movq	%rbx, 32(%r9)
	jmp	.L19004
.L19972:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L19006
.L19957:
	cmpq	%r13, 32(%rax)
	je	.L18991
	jmp	.L18993
.L19787:
	movq	current_binding_level(%rip), %rsi
	jmp	.L18993
.L19948:
	movq	%r12, 32(%r15)
	movq	%r13, 40(%r15)
	movq	%r15, %rdi
	movq	-336(%rbp), %rbx
	xorl	%eax, %eax
	movq	%rbx, 48(%r15)
	call	remember_end_note
	jmp	.L18952
.L18948:
	cmpl	$1, -340(%rbp)
	je	.L18951
	xorl	%r8d, %r8d
	testl	%r8d, %r8d
	je	.L18949
.L18951:
	movl	$5, %edi
	xorl	%eax, %eax
	call	make_node
	movq	%rax, %r15
	jmp	.L18949
.L19947:
	cmpq	$0, 88(%rbx)
	je	.L18944
	testb	$8, 17(%rbx)
	je	.L18944
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	output_inline_function
	jmp	.L18944
.L19946:
	movq	(%rbx), %rdi
	call	nreverse
	movq	%rax, %r12
	movq	%rax, (%rbx)
	jmp	.L18941
.L19945:
	xorl	%eax, %eax
	call	deactivate_exception_cleanups
	jmp	.L18932
	.p2align 6,,7
.L18928:
	movq	-56(%rbp), %rcx
	movq	152(%rcx), %r11
	testb	$2, 1(%r11)
	je	.L19093
	movq	current_class_type(%rip), %r10
	movq	144(%r10), %r9
	movq	128(%r9), %r13
	movq	$0, 128(%r9)
	movq	152(%rcx), %rdx
	orb	$4, 1(%rdx)
	movl	flag_this_is_variable(%rip), %ebx
	testl	%ebx, %ebx
	jle	.L19094
	movq	current_class_decl(%rip), %rsi
	movq	integer_zero_node(%rip), %rdx
	movl	$95, %edi
	xorl	%eax, %eax
	call	build_binary_op
	xorl	%ecx, %ecx
	movq	void_type_node(%rip), %rdx
	movq	current_class_type(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, -392(%rbp)
	xorl	%eax, %eax
	call	build_new
	movl	$102, %esi
	movq	current_class_decl(%rip), %rdi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	build_modify_expr
	cmpl	$2, flag_handle_exceptions(%rip)
	movq	%rax, -384(%rbp)
	je	.L19973
.L19789:
	movq	current_class_type(%rip), %rdx
.L19098:
	movq	144(%rdx), %rcx
	xorl	%eax, %eax
	movq	%r13, 128(%rcx)
	call	get_insns
	xorl	%eax, %eax
	call	get_last_insn
	movq	%rax, %r14
	movl	flag_this_is_variable(%rip), %eax
	testl	%eax, %eax
	jle	.L19100
	movq	-392(%rbp), %rdi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	expand_start_cond
	movq	-384(%rbp), %rdi
	xorl	%eax, %eax
	call	expand_expr_stmt
	cmpl	$2, flag_handle_exceptions(%rip)
	je	.L19974
.L19101:
	xorl	%eax, %eax
	call	expand_end_cond
.L19100:
	movq	-56(%rbp), %rdx
	cmpq	$0, 56(%rdx)
	jne	.L19102
	movq	72(%rdx), %rdx
	cmpq	$0, (%rdx)
	je	.L19102
	movq	current_class_type(%rip), %rcx
	xorl	%esi, %esi
	movq	120(%rcx), %r11
	movq	64(%r11), %rax
	testq	%rax, %rax
	je	.L19104
	movl	24(%rax), %esi
.L19104:
	testb	$2, 19(%rcx)
	movq	120(%rcx), %rbx
	movq	(%rdx), %rdx
	movq	24(%rcx), %r12
	movq	64(%rbx), %r13
	je	.L19105
	movq	(%rdx), %rdx
.L19105:
	movl	%esi, %ebx
	movq	72(%rdx), %r15
	decl	%ebx
	js	.L19695
.L19111:
	movslq	%ebx,%r10
	movq	32(%r13,%r10,8), %rdx
	movq	144(%rdx), %r9
	testb	$16, (%r9)
	je	.L19106
	movq	80(%rdx), %rdi
	cmpb	$32, 16(%rdi)
	je	.L19975
.L19110:
	movq	current_base_init_list(%rip), %rdx
	movq	%r15, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, current_base_init_list(%rip)
.L19106:
	decl	%ebx
	jns	.L19111
.L19695:
	testq	%r12, %r12
	je	.L19102
.L19124:
	testb	$4, 18(%r12)
	jne	.L19114
	cmpb	$36, 16(%r12)
	je	.L19976
.L19114:
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L19124
.L19102:
	movq	base_init_insns(%rip), %rdi
	xorl	%eax, %eax
	movq	%r14, %r12
	call	emit_insns
	xorl	%eax, %eax
	movq	$0, base_init_insns(%rip)
	call	get_first_nonparm_insn
	testq	%rax, %rax
	jne	.L19977
.L19127:
	xorl	%eax, %eax
	call	get_last_insn
	cmpq	%rax, %r14
	je	.L19128
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	next_insn
	movq	%rax, %r15
	xorl	%eax, %eax
	call	get_last_insn
	movq	%r12, %rdx
	movq	%r15, %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	reorder_insns
.L19128:
	movq	ctor_label(%rip), %rdi
	xorl	%eax, %eax
	call	expand_label
	cmpl	$2, flag_handle_exceptions(%rip)
	movq	$0, ctor_label(%rip)
	je	.L19978
.L19129:
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	pop_implicit_try_blocks
	movl	-272(%rbp), %r12d
	testl	%r12d, %r12d
	jne	.L19979
.L19131:
	movq	current_class_decl(%rip), %rdi
	xorl	%eax, %eax
	call	c_expand_return
	movl	$0, current_function_just_assigned_this(%rip)
	movl	$0, current_function_assigns_this(%rip)
	jmp	.L18927
.L19979:
	movq	current_binding_level(%rip), %r9
	xorl	%edx, %edx
	xorl	%eax, %eax
	movl	$1, %esi
	movq	(%r9), %rdi
	call	expand_end_bindings
	movq	current_binding_level(%rip), %r14
	movl	$1, -412(%rbp)
	movzbl	66(%r14), %ebx
	movzbl	66(%r14), %edi
	movq	40(%r14), %rcx
	movq	56(%r14), %rsi
	andl	$15, %ebx
	movl	%edi, %edx
	movq	%rcx, -408(%rbp)
	cmpl	$3, %ebx
	sete	%r11b
	xorl	%eax, %eax
	shrb	$4, %dil
	andl	$15, %edx
	movl	%edi, %ecx
	shrb	$3, %dil
	movzbl	%dil, %r8d
	andl	$7, %ecx
	movq	%r14, %rdi
	movzbl	%r11b, %r13d
	movl	%r13d, -164(%rbp)
	movq	8(%r14), %r13
	call	GNU_xref_end_scope
	movq	current_binding_level(%rip), %rbx
	movl	$1, %eax
	movzbl	66(%rbx), %r8d
	shrb	$4, %r8b
	andl	$7, %r8d
	decl	%r8d
	cmovne	-412(%rbp), %eax
	movl	%eax, -412(%rbp)
	movl	$1, %eax
	testl	%eax, %eax
	jne	.L19980
	movq	(%rbx), %r12
.L19141:
	testq	%r12, %r12
	movq	%r12, %rbx
	je	.L19698
.L19147:
	movzwl	16(%rbx), %eax
	andl	$-32513, %eax
	cmpw	$29, %ax
	je	.L19981
.L19144:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L19147
.L19698:
	movq	current_binding_level(%rip), %rsi
	xorl	%r10d, %r10d
	xorl	%r15d, %r15d
	movq	48(%rsi), %rdx
	testq	%rdx, %rdx
	setne	%r10b
	testl	%r10d, %r10d
	movl	%r10d, -168(%rbp)
	je	.L19148
	movq	%rdx, %r15
.L19149:
	testq	%r15, %r15
	jne	.L19982
.L19152:
	movl	-412(%rbp), %r8d
	testl	%r8d, %r8d
	js	.L19153
	movq	-408(%rbp), %rax
	testq	%rax, %rax
	je	.L19153
.L19158:
	movq	%r15, 56(%rax)
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L19158
.L19153:
	testq	%r12, %r12
	je	.L19701
.L19167:
	movq	56(%r12), %rax
	testq	%rax, %rax
	je	.L19161
	testb	$1, 53(%r12)
	je	.L19164
	testb	$1, 18(%r12)
	je	.L19165
	movq	112(%r12), %r14
	orb	$1, 18(%r14)
.L19165:
	testb	$8, 17(%r12)
	je	.L19790
	movq	112(%r12), %rdi
	orb	$8, 17(%rdi)
.L19790:
	movq	56(%r12), %rax
.L19164:
	movq	$0, 48(%rax)
.L19161:
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L19167
.L19701:
	movq	current_binding_level(%rip), %r12
	movq	16(%r12), %rcx
	movq	%r12, %rdi
	testq	%rcx, %rcx
	je	.L19703
.L19172:
	movq	24(%rcx), %r13
	movq	32(%rcx), %r11
	movq	%r11, 48(%r13)
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.L19172
.L19703:
	movq	24(%rdi), %rcx
	testq	%rcx, %rcx
	je	.L19705
.L19177:
	movq	24(%rcx), %rbx
	movq	32(%rcx), %r9
	movq	%r9, 56(%rbx)
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.L19177
.L19705:
	movq	32(%rdi), %rcx
	testq	%rcx, %rcx
	je	.L19707
.L19182:
	movq	24(%rcx), %r10
	movq	32(%rcx), %rsi
	movq	(%rcx), %rcx
	movq	%rsi, 8(%r10)
	testq	%rcx, %rcx
	jne	.L19182
.L19707:
	xorl	%ecx, %ecx
	testl	%ecx, %ecx
	je	.L19183
	movq	named_labels(%rip), %rdx
	movq	$0, 32(%r15)
	testq	%rdx, %rdx
	movq	%rdx, -424(%rbp)
	je	.L19709
.L19262:
	movq	-424(%rbp), %rax
	movq	32(%rax), %r14
	cmpq	$0, 88(%r14)
	je	.L19983
	movl	warn_unused(%rip), %eax
	testl	%eax, %eax
	je	.L19258
	testb	$1, 18(%r14)
	je	.L19984
.L19258:
	movq	56(%r14), %rbx
	cmpq	$0, 72(%rbx)
	je	.L19985
.L19261:
	movq	72(%rbx), %rdx
	movq	$0, (%rdx)
	movq	32(%r15), %r12
	movq	%r12, (%r14)
	movq	%r14, 32(%r15)
	movq	-424(%rbp), %r13
	movq	(%r13), %r14
	testq	%r14, %r14
	movq	%r14, -424(%rbp)
	jne	.L19262
.L19709:
	movq	$0, named_labels(%rip)
.L19183:
	movq	current_binding_level(%rip), %rsi
	movq	56(%rsi), %rcx
	testq	%rcx, %rcx
	je	.L19263
	movq	named_label_uses(%rip), %rdx
	testq	%rdx, %rdx
	je	.L19263
.L19269:
	cmpq	%rsi, 8(%rdx)
	je	.L19986
.L19266:
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L19269
.L19263:
	movzbl	66(%rsi), %edi
	movq	global_binding_level(%rip), %rax
	movl	$7, %r12d
	shrb	$4, %dil
	andl	%edi, %r12d
	testq	%rax, %rax
	je	.L19270
	cmpq	%rax, %rsi
	je	.L19987
.L19270:
	movq	%rsi, %r9
	movq	free_binding_level(%rip), %rbx
	movq	56(%rsi), %rsi
	movq	%rsi, current_binding_level(%rip)
	movq	%rbx, 56(%r9)
	movzbl	66(%rsi), %r11d
	movq	%r9, free_binding_level(%rip)
	andl	$15, %r11d
	cmpl	$2, %r11d
	je	.L19988
.L19277:
	xorl	%eax, %eax
	testl	%eax, %eax
	je	.L19278
	movq	current_function_decl(%rip), %r14
	movq	%r15, 88(%r14)
.L19279:
	cmpl	$2, %r12d
	je	.L19989
.L19286:
	testq	%r15, %r15
	je	.L19131
	orb	$1, 18(%r15)
	jmp	.L19131
.L19989:
	movl	-164(%rbp), %eax
	testl	%eax, %eax
	jne	.L19286
	movq	current_binding_level(%rip), %r15
	movl	-412(%rbp), %esi
	movl	$1, %edx
	xorl	%eax, %eax
	movq	(%r15), %rdi
	call	expand_end_bindings
	movl	-412(%rbp), %edi
	movl	$1, %esi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	poplevel
	movq	%rax, %r15
	jmp	.L19286
.L19278:
	testq	%r15, %r15
	je	.L19280
	movl	-168(%rbp), %eax
	testl	%eax, %eax
	jne	.L19279
	movq	current_binding_level(%rip), %rbx
	movq	%r15, %rsi
	movq	40(%rbx), %rdi
.L19818:
	xorl	%eax, %eax
	call	chainon
	movq	%rax, 40(%rbx)
	jmp	.L19279
.L19280:
	cmpq	$0, -408(%rbp)
	je	.L19279
	cmpl	$2, -412(%rbp)
	je	.L19990
	movq	current_binding_level(%rip), %rbx
	movq	-408(%rbp), %rsi
	movq	40(%rbx), %rdi
	jmp	.L19818
.L19990:
	movq	current_binding_level(%rip), %rbx
	movq	-408(%rbp), %rdi
	movq	40(%rbx), %rsi
	jmp	.L19818
.L19988:
	movq	%rsi, class_binding_level(%rip)
.L19273:
	movq	current_binding_level(%rip), %rsi
	movq	56(%rsi), %rcx
	movzbl	66(%rcx), %r10d
	movq	%rcx, current_binding_level(%rip)
	andl	$15, %r10d
	cmpl	$2, %r10d
	je	.L19273
	jmp	.L19277
.L19987:
	movl	$123, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	movq	current_binding_level(%rip), %rsi
	jmp	.L19270
	.p2align 6,,7
.L19986:
	movq	%rcx, 8(%rdx)
	movq	current_binding_level(%rip), %rsi
	movq	(%rcx), %r8
	movq	%r8, 24(%rdx)
	jmp	.L19266
.L19985:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	movq	56(%r14), %rbx
	jmp	.L19261
.L19984:
	movq	%r14, %rdi
	movl	$.LC195, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L19258
.L19983:
	xorl	%eax, %eax
	movq	%r14, %rdi
	movl	$.LC190, %esi
	call	error_with_decl
	xorl	%r13d, %r13d
	movq	input_filename(%rip), %r8
	movq	%r8, -176(%rbp)
	movq	56(%r14), %r12
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19190
	movq	(%rax), %r13
.L19190:
	testq	%r13, %r13
	je	.L19192
	movl	32(%r13), %edi
	testl	%edi, %edi
	jne	.L19191
.L19192:
	movq	named_label_uses(%rip), %rax
	testq	%rax, %rax
	je	.L19791
	movq	current_binding_level(%rip), %rsi
	movq	(%rsi), %r11
	cmpq	%r11, 24(%rax)
	je	.L19991
.L19193:
	movq	(%rsi), %rdi
	movq	named_label_uses(%rip), %rdx
	xorl	%eax, %eax
	movq	%r13, %rsi
	call	tree_cons
	movq	current_binding_level(%rip), %rbx
	movq	%rax, named_label_uses(%rip)
	movq	%rbx, 8(%rax)
.L19191:
	testq	%r13, %r13
	je	.L19194
	movq	current_function_decl(%rip), %r9
	cmpq	%r9, 64(%r13)
	je	.L19204
	testb	$-128, 18(%r13)
	jne	.L19204
	movq	72(%r12), %rax
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L19197
	movq	(%rax), %rbx
.L19197:
	testq	%rbx, %rbx
	jne	.L19992
.L19198:
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	lookup_label
	movq	%rax, %r13
.L19204:
	movq	current_binding_level(%rip), %rcx
	andb	$-2, 67(%rcx)
	testq	%r13, %r13
	je	.L19207
	movq	current_function_decl(%rip), %rdx
	cmpq	%rdx, 64(%r13)
	je	.L19207
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%r13, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19993
.L19209:
	movq	$0, (%rax)
	xorl	%ebx, %ebx
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L19211
	movq	(%rax), %rbx
.L19211:
	testq	%rbx, %rbx
	je	.L19213
	movl	32(%rbx), %eax
	testl	%eax, %eax
	jne	.L19212
.L19213:
	movq	named_label_uses(%rip), %rax
	testq	%rax, %rax
	je	.L19792
	movq	current_binding_level(%rip), %rsi
	movq	(%rsi), %r8
	cmpq	%r8, 24(%rax)
	je	.L19994
.L19214:
	movq	(%rsi), %rdi
	movq	named_label_uses(%rip), %rdx
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	current_binding_level(%rip), %rdi
	movq	%rax, named_label_uses(%rip)
	movq	%rdi, 8(%rax)
.L19212:
	testq	%rbx, %rbx
	je	.L19215
	movq	current_function_decl(%rip), %r11
	cmpq	%r11, 64(%rbx)
	je	.L19225
	testb	$-128, 18(%rbx)
	jne	.L19225
	movq	72(%r12), %rax
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L19218
	movq	(%rax), %rbx
.L19218:
	testq	%rbx, %rbx
	jne	.L19995
.L19219:
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	lookup_label
	movq	%rax, %rbx
.L19225:
	movq	%rbx, %r13
.L19207:
	cmpq	$0, 88(%r13)
	jne	.L19996
	movq	error_mark_node(%rip), %r10
	movq	named_label_uses(%rip), %r12
	movq	%r10, 88(%r13)
	testq	%r12, %r12
	movq	-176(%rbp), %rbx
	movl	$1, 32(%r13)
	movq	%rbx, 24(%r13)
	movq	$0, -432(%rbp)
	je	.L19711
.L19257:
	cmpq	%r13, 32(%r12)
	je	.L19997
.L19233:
	movq	%r12, -432(%rbp)
	movq	(%r12), %r12
	testq	%r12, %r12
	jne	.L19257
.L19711:
	movq	$0, current_function_return_value(%rip)
	jmp	.L19258
.L19997:
	movq	current_binding_level(%rip), %rsi
	movq	%rsi, -440(%rbp)
	movq	8(%r12), %rax
.L19254:
	movq	-440(%rbp), %rcx
	movq	$0, -448(%rbp)
	cmpq	%rax, %rcx
	movq	(%rcx), %rbx
	je	.L19998
.L19240:
	cmpq	-448(%rbp), %rbx
	je	.L19713
.L19252:
	cmpb	$33, 16(%rbx)
	je	.L19999
.L19244:
	movq	(%rbx), %rbx
	cmpq	-448(%rbp), %rbx
	jne	.L19252
	movq	8(%r12), %rax
.L19713:
	cmpq	%rax, -440(%rbp)
	je	.L19237
	movq	-440(%rbp), %rbx
	movq	56(%rbx), %r9
	movq	%r9, -440(%rbp)
	jmp	.L19254
.L19237:
	cmpq	$0, -432(%rbp)
	je	.L19255
	movq	(%r12), %rsi
	movq	-432(%rbp), %r10
	movq	%rsi, (%r10)
	jmp	.L19233
.L19255:
	movq	(%r12), %rcx
	movq	%rcx, named_label_uses(%rip)
	jmp	.L19233
	.p2align 6,,7
.L19999:
	movq	56(%rbx), %r8
	movl	$.LC192, %edi
	movl	$6, %ecx
	cld
	movq	32(%r8), %rsi
	repz
	cmpsb
	je	.L19244
	movq	88(%rbx), %rax
	testq	%rax, %rax
	je	.L19246
	cmpq	error_mark_node(%rip), %rax
	je	.L19246
.L19245:
	movq	72(%r13), %rdx
	testq	%rdx, %rdx
	je	.L19249
	cmpq	$0, 32(%rdx)
	jne	.L19247
.L19249:
	movq	%r13, %rdi
	movl	$.LC193, %esi
	xorl	%eax, %eax
	call	error_with_decl
	movq	72(%r13), %rdx
.L19247:
	testq	%rdx, %rdx
	je	.L20000
.L19251:
	movq	current_function_decl(%rip), %r11
	movq	%rbx, %rdi
	movl	$.LC194, %esi
	xorl	%eax, %eax
	movq	%r11, 32(%rdx)
	call	error_with_decl
	jmp	.L19244
.L20000:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r13)
	movq	%rax, %rdx
	jmp	.L19251
.L19246:
	movq	8(%rbx), %rdi
	testb	$16, 46(%rdi)
	je	.L19244
	jmp	.L19245
.L19998:
	movq	24(%r12), %rdx
	movq	%rdx, -448(%rbp)
	jmp	.L19240
.L19996:
	movq	%r13, %rdi
	movl	$.LC191, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L19258
.L19995:
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L20001
.L19221:
	movq	$0, (%rax)
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L20002
.L19223:
	movq	$0, (%rax)
	jmp	.L19219
.L20002:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	jmp	.L19223
.L20001:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L19221
	.p2align 6,,7
.L19215:
	movq	void_type_node(%rip), %rdx
	xorl	%eax, %eax
	movl	$30, %edi
	movq	%r12, %rsi
	call	build_decl
	movq	current_function_decl(%rip), %r13
	movq	%rax, %rbx
	movb	$0, 52(%rax)
	movq	input_filename(%rip), %r9
	movq	%r13, 64(%rax)
	movl	lineno(%rip), %eax
	movq	%r9, 24(%rbx)
	movl	%eax, 32(%rbx)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L20003
.L19227:
	movq	named_labels(%rip), %rdx
	movq	%rbx, (%rax)
	xorl	%edi, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	named_label_uses(%rip), %r12
	movq	%rax, named_labels(%rip)
	movq	%rbx, 32(%r12)
	jmp	.L19225
.L20003:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L19227
.L19994:
	cmpq	%rbx, 32(%rax)
	je	.L19212
	jmp	.L19214
.L19792:
	movq	current_binding_level(%rip), %rsi
	jmp	.L19214
.L19993:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L19209
.L19992:
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L20004
.L19200:
	movq	$0, (%rax)
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L20005
.L19202:
	movq	$0, (%rax)
	jmp	.L19198
.L20005:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	jmp	.L19202
.L20004:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L19200
.L19194:
	movq	void_type_node(%rip), %rdx
	xorl	%eax, %eax
	movl	$30, %edi
	movq	%r12, %rsi
	call	build_decl
	movq	current_function_decl(%rip), %r10
	movq	%rax, %rbx
	movb	$0, 52(%rax)
	movq	input_filename(%rip), %r13
	movq	%r10, 64(%rax)
	movl	lineno(%rip), %eax
	movq	%r13, 24(%rbx)
	movl	%eax, 32(%rbx)
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L20006
.L19206:
	movq	named_labels(%rip), %rdx
	movq	%rbx, (%rax)
	movq	%rbx, %rsi
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%rbx, %r13
	call	tree_cons
	movq	named_label_uses(%rip), %rsi
	movq	%rax, named_labels(%rip)
	movq	%rbx, 32(%rsi)
	jmp	.L19204
.L20006:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	jmp	.L19206
.L19991:
	cmpq	%r13, 32(%rax)
	je	.L19191
	jmp	.L19193
.L19791:
	movq	current_binding_level(%rip), %rsi
	jmp	.L19193
.L19982:
	movq	%r12, 32(%r15)
	movq	%r13, 40(%r15)
	movq	%r15, %rdi
	movq	-408(%rbp), %rdx
	xorl	%eax, %eax
	movq	%rdx, 48(%r15)
	call	remember_end_note
	jmp	.L19152
.L19148:
	cmpl	$1, -412(%rbp)
	je	.L19151
	xorl	%eax, %eax
	testl	%eax, %eax
	je	.L19149
.L19151:
	movl	$5, %edi
	xorl	%eax, %eax
	call	make_node
	movq	%rax, %r15
	jmp	.L19149
.L19981:
	cmpq	$0, 88(%rbx)
	je	.L19144
	testb	$8, 17(%rbx)
	je	.L19144
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	output_inline_function
	jmp	.L19144
.L19980:
	movq	(%rbx), %rdi
	xorl	%eax, %eax
	call	nreverse
	movq	%rax, %r12
	movq	%rax, (%rbx)
	jmp	.L19141
.L19978:
	movq	integer_zero_node(%rip), %rsi
	movq	-400(%rbp), %rdi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	expand_assignment
	movl	-272(%rbp), %esi
	testl	%esi, %esi
	je	.L19129
	xorl	%eax, %eax
	call	deactivate_exception_cleanups
	jmp	.L19129
.L19977:
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	previous_insn
	movq	%rax, %r12
	jmp	.L19127
.L19976:
	movq	56(%r12), %r9
	testq	%r9, %r9
	je	.L19118
	movq	32(%r9), %rsi
	movl	$6, %edx
	movl	$.LC306, %edi
	cld
	movq	%rdx, %rcx
	movq	%rsi, %r8
	repz
	cmpsb
	je	.L19114
	cmpb	$36, 3(%r8)
	je	.L20007
.L19120:
	cmpq	%r12, 56(%r9)
	jne	.L19114
.L19118:
	movq	8(%r12), %rsi
	xorl	%eax, %eax
	movl	$37, %edi
	movq	%r15, %rdx
	movq	%r12, %rcx
	call	build
	testb	$4, 53(%r12)
	movq	%rax, %rbx
	je	.L19122
	movq	8(%r12), %rsi
	movq	C_C_D(%rip), %rdx
	movl	$37, %edi
	movq	%r12, %rcx
	xorl	%eax, %eax
	call	build
	movq	%rax, %r13
.L19123:
	movq	current_member_init_list(%rip), %rdx
	movq	%r13, %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, current_member_init_list(%rip)
	jmp	.L19114
.L19122:
	movq	%rax, %rsi
	xorl	%edi, %edi
	movq	56(%r12), %r13
	xorl	%eax, %eax
	call	build_tree_list
	movq	%rax, %rbx
	jmp	.L19123
.L20007:
	cmpb	$98, 2(%r8)
	jne	.L19120
	cmpb	$118, 1(%r8)
	jne	.L19120
	jmp	.L19114
	.p2align 6,,7
.L19975:
	movq	56(%rdi), %rdi
	jmp	.L19110
.L19974:
	movq	-400(%rbp), %rdi
	movq	current_class_decl(%rip), %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	expand_assignment
	jmp	.L19101
.L19973:
	movq	current_class_type(%rip), %rdi
	xorl	%eax, %eax
	call	c_sizeof
	movq	ptr_type_node(%rip), %rdx
	xorl	%esi, %esi
	movl	$33, %edi
	movq	%rax, %rbx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, -400(%rbp)
	orb	$4, 53(%rax)
	xorl	%eax, %eax
	movq	-400(%rbp), %r8
	movq	error_mark_node(%rip), %r15
	movq	%r8, %rdi
	movq	%r15, 88(%r8)
	call	expand_decl
	xorl	%eax, %eax
	movq	-400(%rbp), %rdi
	call	expand_decl_init
	movq	current_class_type(%rip), %r14
	movq	144(%r14), %rsi
	testb	$16, 2(%rsi)
	je	.L19096
	movq	-400(%rbp), %rdx
	movl	$123, %edi
	movl	$3, %esi
	movq	%rbx, %rcx
	xorl	%eax, %eax
	call	build_opfncall
.L19817:
	movq	integer_zero_node(%rip), %rdx
	movq	current_class_decl(%rip), %rdi
	movq	%rax, %r12
	movl	$102, %esi
	xorl	%eax, %eax
	call	build_modify_expr
	xorl	%edi, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_tree_list
	movq	%r12, %rsi
	xorl	%edi, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	integer_zero_node(%rip), %rcx
	movq	-400(%rbp), %rdx
	movq	integer_type_node(%rip), %rsi
	movq	%rax, %r15
	movl	$96, %edi
	xorl	%eax, %eax
	call	build
	movq	%r15, %rdi
	movq	%rax, %r14
	xorl	%eax, %eax
	call	build_compound_expr
	movq	integer_zero_node(%rip), %r8
	movq	%r14, %rdx
	movq	integer_type_node(%rip), %rsi
	movq	%rax, %rcx
	movl	$48, %edi
	xorl	%eax, %eax
	call	build
	movq	-400(%rbp), %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	expand_decl_cleanup
	jmp	.L19789
.L19096:
	movq	-400(%rbp), %r12
	movq	integer_three_node(%rip), %rdx
	movl	$35, %ecx
	movl	$1, %r8d
	xorl	%r9d, %r9d
	xorl	%eax, %eax
	movq	8(%r12), %rdi
	movq	%r12, %rsi
	call	build_delete
	jmp	.L19817
.L19094:
	movq	current_class_type(%rip), %rdx
	movq	144(%rdx), %rdi
	testb	$8, 2(%rdi)
	je	.L19098
	movq	56(%rdx), %rsi
	movl	$102, %edi
	xorl	%eax, %eax
	movq	error_mark_node(%rip), %rdx
	call	build1
	movq	integer_zero_node(%rip), %rsi
	xorl	%edi, %edi
	movq	%rax, %r14
	xorl	%eax, %eax
	call	build_tree_list
	movl	$3, %r8d
	xorl	%ecx, %ecx
	movq	ansi_opname+1016(%rip), %rsi
	movq	%rax, %rdx
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	build_method_call
	jmp	.L19789
.L19093:
	movq	-56(%rbp), %r13
	movq	56(%r13), %rax
	cmpl	$4, 24(%rax)
	je	.L20008
.L19291:
	cmpq	$0, return_label(%rip)
	je	.L18927
	cmpq	$0, current_function_return_value(%rip)
	jne	.L18927
	movq	current_function_decl(%rip), %r8
	movq	80(%r8), %rdx
	cmpq	$0, 56(%rdx)
	jne	.L18927
	movl	$30, %edi
	xorl	%esi, %esi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, -456(%rbp)
	jmp	.L18927
.L20008:
	movq	32(%rax), %rsi
	movl	$.LC274, %edi
	movl	$5, %ecx
	cld
	repz
	cmpsb
	jne	.L19291
	movq	-56(%rbp), %r12
	cmpq	$0, 64(%r12)
	jne	.L19291
	movq	integer_zero_node(%rip), %rdi
	xorl	%eax, %eax
	call	c_expand_return
	jmp	.L18927
	.p2align 6,,7
.L18700:
	movq	8(%rbx), %rdi
	xorl	%eax, %eax
	call	target_type
	testb	$64, 46(%rax)
	jne	.L20009
.L18697:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L18700
	jmp	.L18693
.L20009:
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	note_debug_info_needed
	jmp	.L18697
.L19831:
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	note_debug_info_needed
	jmp	.L18694
.L19830:
	movq	32(%rax), %rsi
	movl	$.LC274, %edi
	movl	$5, %ecx
	cld
	repz
	cmpsb
	jne	.L18355
	movq	-56(%rbp), %rdi
	cmpq	$0, 64(%rdi)
	jne	.L18355
	xorl	%eax, %eax
	call	expand_main_function
	movl	flag_gc(%rip), %eax
	testl	%eax, %eax
	jne	.L20010
.L18666:
	movl	flag_dossier(%rip), %ebx
	testl	%ebx, %ebx
	je	.L18355
	cmpq	$0, builtin_type_tdescs_arr(%rip)
	je	.L18355
	xorl	%eax, %eax
	movl	$permanent_obstack, %edi
	movl	$permanent_obstack, %esi
	call	push_obstacks
	movl	builtin_type_tdescs_len(%rip), %eax
	testl	%eax, %eax
	jle	.L19652
.L18691:
	decl	%eax
	xorl	%esi, %esi
	movl	%eax, builtin_type_tdescs_len(%rip)
	cltq
	salq	$3, %rax
	addq	builtin_type_tdescs_arr(%rip), %rax
	movq	(%rax), %r14
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	build_t_desc
	movl	$2, %esi
	movq	%r14, %rdi
	andb	$127, 17(%rax)
	xorl	%eax, %eax
	call	build_t_desc
	movl	builtin_type_tdescs_len(%rip), %eax
	testl	%eax, %eax
	jg	.L18691
.L19652:
	movq	builtin_type_tdescs_arr(%rip), %rdi
	xorl	%eax, %eax
	call	free
	xorl	%eax, %eax
	movq	$0, builtin_type_tdescs_arr(%rip)
	call	pop_obstacks
	jmp	.L18355
.L20010:
	xorl	%eax, %eax
	movl	$.LC84, %edi
	xorl	%r13d, %r13d
	call	get_identifier
	movq	global_binding_level(%rip), %r8
	cmpq	%r8, current_binding_level(%rip)
	movq	%rax, %rbx
	je	.L18667
	movq	48(%rax), %r10
	testq	%r10, %r10
	movq	%r10, %rcx
	jne	.L18668
.L18667:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L18669
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L19760
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L18670
	movq	144(%rdi), %r15
	testb	$1, 3(%r15)
	jne	.L20011
.L18670:
	testq	%rcx, %rcx
	jne	.L19760
.L19761:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L19760
.L18669:
	movq	40(%rbx), %rcx
.L18668:
	testq	%rcx, %rcx
	je	.L18672
.L19760:
	cmpb	$32, 16(%rcx)
	je	.L18672
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L18672
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L18680
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L19812
	testl	%r13d, %r13d
	jle	.L20012
.L19812:
	movq	%rax, %rcx
.L18672:
	movq	%rcx, %rdi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_function_call
	xorl	%ecx, %ecx
	xorl	%edx, %edx
	movq	%rax, %rdi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	expand_expr
	jmp	.L18666
.L20012:
	testl	%edx, %edx
	jg	.L19812
	testl	%r13d, %r13d
	je	.L18672
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L19812
	.p2align 6,,7
.L18680:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L18672
.L20011:
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %r13d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L18672
	testq	%rax, %rax
	je	.L19761
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L18670
	.p2align 6,,7
.L19829:
	movq	error_mark_node(%rip), %rsi
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	build_tree_list
	xorl	%edi, %edi
	movq	%rax, %rsi
	movq	%rax, maybe_gc_cleanup(%rip)
	xorl	%eax, %eax
	call	expand_decl_cleanup
	jmp	.L18664
.L18660:
	movq	current_binding_level(%rip), %r14
	movq	%r14, 56(%rdi)
	jmp	.L18661
.L18658:
	movl	$72, %edi
	xorl	%eax, %eax
	call	xmalloc
	movq	%rax, %rdi
	jmp	.L18659
.L19828:
	cmpq	$0, named_labels(%rip)
	movl	$134, %esi
	sete	%r14b
	xorl	%eax, %eax
	movzbl	%r14b, %edi
	call	my_friendly_assert
	jmp	.L18657
.L19827:
	movq	-216(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	xorl	%eax, %eax
	movq	-216(%rbp), %rdi
	call	expand_decl_init
	jmp	.L18655
	.p2align 6,,7
.L19826:
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	maybe_build_cleanup
	movq	%rax, -88(%rbp)
	movq	56(%r13), %rdx
	testq	%rdx, %rdx
	jne	.L18366
	movq	current_function_decl(%rip), %rax
	movq	current_binding_level(%rip), %r15
	movq	112(%r13), %r14
	cmpq	%rax, %r13
	movq	%r15, -256(%rbp)
	je	.L19766
	movzbl	16(%r13), %ecx
	cmpb	$29, %cl
	je	.L20013
.L18368:
	movq	%rax, 64(%r13)
.L18367:
	cmpb	$32, %cl
	cmove	%rdx, %r14
	testq	%r14, %r14
	je	.L18370
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L20014
	cmpq	$0, 48(%r14)
	jne	.L18373
	movq	$0, -224(%rbp)
.L18372:
	cmpq	$0, -224(%rbp)
	je	.L18390
	movq	-224(%rbp), %rdx
	cmpq	error_mark_node(%rip), %rdx
	je	.L20015
.L18380:
	cmpq	$0, -224(%rbp)
	je	.L19770
	movq	-224(%rbp), %rsi
	cmpb	$34, 16(%rsi)
	je	.L20016
.L18382:
	movq	-224(%rbp), %rax
	testq	%rax, %rax
	movq	24(%rax), %rbx
	movl	32(%rax), %r12d
	je	.L19770
	movq	%rax, %rdx
	movzbl	16(%r13), %ecx
	movzbl	16(%rax), %eax
	cmpb	%cl, %al
	je	.L18384
	cmpb	$32, %al
	je	.L18390
	cmpb	$32, %cl
	je	.L19802
	xorl	%eax, %eax
	movq	%r13, %rdi
	movq	%rdx, %rsi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L19770
	.p2align 4,,7
.L18643:
	cmpq	$0, -88(%rbp)
	je	.L18363
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	expand_decl
	xorl	%eax, %eax
	movq	-88(%rbp), %rsi
	movq	%r13, %rdi
	call	expand_decl_cleanup
	movl	$1, -268(%rbp)
	jmp	.L18363
.L19770:
	movzbl	16(%r13), %ecx
.L18390:
	cmpb	$32, %cl
	je	.L19802
.L18398:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L18536
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L18536
	testb	$1, 53(%rax)
	jne	.L18537
	testb	$8, 18(%rax)
	je	.L18536
.L18537:
	andb	$8, %dl
	je	.L20017
.L18536:
	movl	flag_traditional(%rip), %ebx
	testl	%ebx, %ebx
	je	.L19778
	testb	$1, 53(%r13)
	je	.L19778
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %r11
	cmpq	%r11, current_binding_level(%rip)
	je	.L18540
	movq	48(%r14), %r15
	testq	%r15, %r15
	movq	%r15, %rcx
	jne	.L18541
.L18540:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L18542
	movq	56(%r14), %rcx
	testq	%rcx, %rcx
	jne	.L19758
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L18543
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L20018
.L18543:
	testq	%rcx, %rcx
	jne	.L19758
.L19759:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L19758
.L18542:
	movq	40(%r14), %rcx
.L18541:
	testq	%rcx, %rcx
	je	.L19765
.L19758:
	cmpb	$32, 16(%rcx)
	je	.L18545
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L18545
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L18553
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L19809
	testl	%ebx, %ebx
	jle	.L20019
.L19809:
	movq	%rax, %rcx
.L18545:
	testq	%rcx, %rcx
	jne	.L19778
.L19765:
	movq	global_binding_level(%rip), %rcx
	movq	%rcx, %rax
	movq	%rcx, -256(%rbp)
.L18539:
	cmpq	%rax, -256(%rbp)
	je	.L20020
	movq	current_binding_level(%rip), %rbx
	movq	48(%r14), %r12
	movq	40(%r14), %r15
	cmpq	%rax, %rbx
	je	.L20021
.L19810:
	movq	16(%rbx), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%rbx)
.L18584:
	testq	%r12, %r12
	movq	%r13, 48(%r14)
	je	.L20022
.L18595:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L18597
	testq	%r12, %r12
	je	.L18598
	testb	$1, 53(%r13)
	jne	.L18598
	cmpb	$34, 16(%r12)
	je	.L20023
.L18598:
	movl	warn_shadow(%rip), %r9d
	testl	%r9d, %r9d
	je	.L18597
	testb	$1, 53(%r13)
	jne	.L18597
	movl	32(%r13), %ecx
	testl	%ecx, %ecx
	je	.L18597
	testq	%rax, %rax
	jne	.L18597
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L18603
	cmpb	$34, 16(%r12)
	je	.L20024
.L18603:
	cmpq	$0, 56(%r14)
	je	.L18605
	movl	$.LC41, %edi
.L18604:
	testq	%rdi, %rdi
	jne	.L19811
.L18597:
	testq	%r12, %r12
	je	.L19779
	movq	-256(%rbp), %rax
	movq	%r12, %rsi
	movq	%r14, %rdi
	movq	16(%rax), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	-256(%rbp), %r12
	movq	%rax, 16(%r12)
.L19779:
	movzbl	16(%r13), %ecx
.L18582:
	leal	-128(%rcx), %edi
	cmpb	$1, %dil
	jbe	.L18370
	movq	8(%r13), %rdx
	cmpq	$0, 32(%rdx)
	jne	.L18370
	cmpb	$18, 16(%rdx)
	je	.L20025
.L18614:
	testb	$64, 46(%rdx)
	je	.L18370
.L18613:
	movq	-256(%rbp), %r8
	movzwl	64(%r8), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%r8)
	je	.L20026
.L19780:
	movzbl	16(%r13), %ecx
.L18370:
	cmpb	$32, %cl
	je	.L20027
.L18616:
	movq	-256(%rbp), %rdx
	cmpq	global_binding_level(%rip), %rdx
	movq	(%rdx), %rcx
	movq	%rcx, (%r13)
	movq	%r13, (%rdx)
	jne	.L18643
	testb	$4, 17(%r13)
	jne	.L18643
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L18643
.L20027:
	testq	%r14, %r14
	je	.L18616
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L18617
	cmpq	class_binding_level(%rip), %rax
	je	.L18618
	movq	48(%r14), %rax
	testq	%rax, %rax
	je	.L18622
	cmpb	$32, 16(%rax)
	je	.L18620
.L18622:
	cmpq	$0, current_class_type(%rip)
	je	.L18617
	movq	56(%r14), %rax
	testq	%rax, %rax
	je	.L18617
	cmpb	$32, 16(%rax)
	je	.L18620
.L18617:
	movq	40(%r14), %rax
	testq	%rax, %rax
	je	.L18621
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L18620
	cmpb	$-127, %dl
	je	.L20028
.L18621:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L18616
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L20029
.L18628:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L18632
	cmpq	class_binding_level(%rip), %rax
	je	.L18633
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L18637
	cmpb	$32, 16(%rax)
	je	.L18635
.L18637:
	cmpq	$0, current_class_type(%rip)
	je	.L18632
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L18632
	cmpb	$32, 16(%rax)
	je	.L18635
.L18632:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L18616
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L18635
	cmpb	$-127, %dl
	jne	.L18616
	movq	$0, 8(%rbx)
	jmp	.L18616
.L18635:
	movq	8(%rax), %r14
	movq	%r14, 8(%rbx)
	jmp	.L18616
.L18633:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L18637
.L20029:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %r12
	sete	%r9b
	movq	8(%r13), %r15
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r14)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%bl
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%r14), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L18628
.L20028:
	movq	$0, 8(%r14)
	jmp	.L18621
.L18620:
	movq	8(%rax), %r10
	movq	%r10, 8(%r14)
	jmp	.L18621
.L18618:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L18622
.L20026:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L19780
.L20025:
	movq	8(%rdx), %rsi
	testb	$64, 46(%rsi)
	jne	.L18613
	jmp	.L18614
.L19811:
	movq	32(%r14), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L18597
.L18605:
	testq	%r12, %r12
	je	.L18607
	movl	$.LC42, %edi
	jmp	.L18604
.L18607:
	testq	%r15, %r15
	movl	$.LC43, %edx
	cmovne	%rdx, %rdi
	jmp	.L18604
	.p2align 6,,7
.L20024:
	movl	$.LC40, %edi
	jmp	.L18604
	.p2align 6,,7
.L20023:
	cmpb	$34, 16(%r13)
	je	.L18598
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r15
	movq	56(%r15), %rax
	je	.L18599
	movq	56(%rax), %rax
.L18599:
	movzbl	66(%rax), %r11d
	andl	$15, %r11d
	decl	%r11d
	jne	.L18597
	movl	$.LC40, %edi
	jmp	.L19811
	.p2align 6,,7
.L20022:
	movzbl	53(%r13), %r8d
	andb	$9, %r8b
	decb	%r8b
	je	.L20030
.L18587:
	testq	%r12, %r12
	jne	.L18595
	testq	%r15, %r15
	jne	.L18595
	testb	$1, 53(%r13)
	je	.L18595
	testb	$8, 18(%r13)
	je	.L18595
	orb	$8, 18(%r14)
	jmp	.L18595
	.p2align 6,,7
.L20030:
	testq	%r15, %r15
	je	.L18587
	cmpb	$29, 16(%r13)
	jne	.L18587
	cmpb	$29, 16(%r15)
	jne	.L18587
	movq	8(%r13), %rdi
	movq	8(%r15), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L20031
	movzbl	53(%r15), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L18590
	movzbl	53(%r13), %r10d
	leal	0(,%rax,8), %ebx
	leaq	88(%r13), %rdx
	andb	$-9, %r10b
	orb	%bl, %r10b
	movb	%r10b, 53(%r13)
	cmpq	%r15, current_function_decl(%rip)
	je	.L18591
	movq	88(%r15), %rax
.L18592:
	movq	136(%r15), %r8
	movq	72(%r15), %rsi
	movq	%rax, (%rdx)
	movq	80(%r15), %rdi
	movzbl	17(%r13), %r11d
	movq	%r8, 136(%r13)
	movq	%rsi, 72(%r13)
	movq	%rdi, 80(%r13)
	movzbl	17(%r15), %ecx
	movq	%r15, 96(%r13)
	andb	$127, %r11b
	shrb	$7, %cl
	movzbl	%cl, %edx
	movl	%edx, %r9d
	salb	$7, %r9b
	orb	%r9b, %r11b
	movb	%r11b, 17(%r13)
	movzbl	53(%r15), %ecx
.L18590:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L18593
	movzbl	53(%r13), %r10d
	salb	$4, %al
	andb	$-17, %r10b
	orb	%al, %r10b
	movb	%r10b, 53(%r13)
	movl	128(%r15), %eax
	movl	%eax, 128(%r13)
.L18593:
	movq	8(%r15), %rdx
	cmpq	$0, 24(%rdx)
	je	.L18587
	cmpq	$0, 88(%r15)
	je	.L18587
	movq	8(%r13), %rbx
	cmpq	$0, 24(%rbx)
	jne	.L18587
	movq	%rdx, 8(%r13)
	jmp	.L18587
.L18591:
	xorl	%eax, %eax
	jmp	.L18592
.L20031:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L18587
	.p2align 6,,7
.L20021:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L18584
	jmp	.L19810
.L20020:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L20032
.L18559:
	cmpq	$0, 40(%r14)
	jne	.L18560
	testb	$8, 18(%r13)
	je	.L18560
	orb	$8, 18(%r14)
.L18560:
	movzbl	16(%r13), %ecx
	cmpb	$32, %cl
	je	.L20033
.L18562:
	movq	%r13, 40(%r14)
	movzbl	16(%r13), %ecx
.L18561:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L18573
	movq	8(%rax), %rdx
	testq	%rdx, %rdx
	je	.L18563
	testb	$1, 18(%rdx)
	je	.L18563
	orb	$1, 18(%r13)
	movq	72(%r14), %rax
.L18563:
	testq	%rax, %rax
	je	.L18573
	movq	8(%rax), %rdx
	testq	%rdx, %rdx
	je	.L18568
	testb	$8, 17(%rdx)
	je	.L18568
	orb	$8, 17(%r13)
	movq	72(%r14), %rax
.L18568:
	testq	%rax, %rax
	je	.L18573
	cmpq	$0, 8(%rax)
	je	.L18573
	cmpb	$29, %cl
	je	.L20034
.L18576:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %ecx
.L18573:
	testb	$8, 18(%r14)
	je	.L18582
	cmpb	$32, %cl
	je	.L18582
	testb	$8, 18(%r13)
	jne	.L18582
	testb	$1, 53(%r13)
	jne	.L18582
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L18578
	cmpq	$0, 8(%rax)
	jne	.L20035
.L18578:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L19823:
	xorl	%eax, %eax
	call	warning
	jmp	.L19779
.L20035:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L19823
.L20034:
	movq	8(%r13), %rsi
	movq	integer_type_node(%rip), %r12
	cmpq	%r12, 8(%rsi)
	jne	.L18576
	jmp	.L18573
	.p2align 6,,7
.L20033:
	cmpq	$0, -224(%rbp)
	je	.L18562
	movq	-224(%rbp), %rdi
	cmpb	$32, 16(%rdi)
	jne	.L18561
	jmp	.L18562
.L20032:
	testb	$8, 54(%r13)
	jne	.L18559
	andb	$-9, 18(%r13)
	jmp	.L18559
	.p2align 6,,7
.L19778:
	movq	global_binding_level(%rip), %rax
	jmp	.L18539
.L20019:
	testl	%edx, %edx
	jg	.L19809
	testl	%ebx, %ebx
	je	.L18545
	movq	%rax, %rdx
	movq	%r14, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L19809
	.p2align 6,,7
.L18553:
	movq	8(%rcx), %rdx
	cmpq	error_mark_node(%rip), %rdx
	cmove	%rdx, %rcx
	jmp	.L18545
.L20018:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L18545
	testq	%rax, %rax
	je	.L19759
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L18543
	.p2align 6,,7
.L20017:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L18536
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r14), %rdi
	call	warning_with_decl
	jmp	.L18536
	.p2align 6,,7
.L19802:
	movq	8(%r13), %rdx
	movq	80(%rdx), %rsi
	testq	%rsi, %rsi
	movq	%rsi, -248(%rbp)
	je	.L18400
	movzbl	16(%rsi), %eax
	cmpb	$32, %al
	je	.L18399
.L18400:
	movq	global_binding_level(%rip), %rdi
	movq	%r13, -248(%rbp)
	cmpq	%rdi, current_binding_level(%rip)
	jne	.L19771
	movq	%r13, 80(%rdx)
.L19771:
	movzbl	16(%r13), %eax
.L18403:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	-248(%rbp), %rsi
	movq	56(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L18527
	cmpq	$0, 72(%rsi)
	je	.L20036
.L18527:
	movq	8(%r13), %r15
	movq	80(%r15), %rax
	testq	%rax, %rax
	je	.L18398
	cmpq	$0, 56(%rax)
	je	.L18398
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %r12
	cmpq	global_binding_level(%rip), %rbx
	je	.L20037
.L19808:
	movq	8(%r12), %rsi
	movq	32(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L18533:
	movq	%r15, 8(%r12)
	jmp	.L18398
.L20037:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L18533
	jmp	.L19808
.L20036:
	cmpb	$32, 16(%r13)
	movq	current_class_name(%rip), %r12
	sete	%sil
	movq	8(%r13), %r15
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$136, %esi
	call	my_friendly_assert
	testq	%r12, %r12
	je	.L18528
	cmpb	$1, 16(%r12)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r12), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r12), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r15, 8(%rax)
	jmp	.L18527
.L18528:
	movq	%rbx, 72(%r13)
	jmp	.L18527
.L18399:
	movq	current_binding_level(%rip), %rsi
	movq	-248(%rbp), %r9
	cmpq	global_binding_level(%rip), %rsi
	movq	56(%r9), %r15
	jne	.L18403
	movq	32(%r15), %rcx
	cmpb	$36, (%rcx)
	jne	.L18403
	cmpb	$95, 1(%rcx)
	jne	.L18403
	movq	class_binding_level(%rip), %r8
	movq	%r13, 80(%rdx)
	movq	8(%r13), %r10
	testq	%r8, %r8
	movq	%r8, -232(%rbp)
	movq	%r10, -96(%rbp)
	jne	.L18407
	testb	$-128, 66(%rsi)
	movq	%rsi, -232(%rbp)
	je	.L18407
.L18411:
	movq	-232(%rbp), %r12
	movq	56(%r12), %r11
	testb	$-128, 66(%r11)
	movq	%r11, -232(%rbp)
	jne	.L18411
.L18407:
	movq	-232(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L20038
	movq	-232(%rbp), %rax
	movq	-96(%rbp), %rsi
	movq	%r15, %rdi
	movq	8(%rax), %rdx
	xorl	%eax, %eax
	call	saveable_tree_cons
	movq	-232(%rbp), %rdx
	movq	%rax, 8(%rdx)
.L18413:
	testq	%r15, %r15
	je	.L18414
	movq	-96(%rbp), %rax
	cmpq	$0, 80(%rax)
	jne	.L18415
	movq	%r15, 80(%rax)
.L18415:
	movq	-96(%rbp), %rdx
	cmpq	%rdx, 8(%r15)
	je	.L18416
	cmpb	$21, 16(%rdx)
	je	.L20039
.L18417:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L18419
	cmpq	$0, 32(%rax)
	je	.L18418
.L18419:
	movq	lang_name_cplusplus(%rip), %rdi
	cmpq	%rdi, current_lang_name(%rip)
	je	.L20040
.L18420:
	xorl	%ecx, %ecx
.L18455:
	testq	%rcx, %rcx
	jne	.L18456
.L19764:
	movq	-96(%rbp), %rdx
	movl	$32, %edi
	movq	%r15, %rsi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-96(%rbp), %rdi
	movq	%rax, -240(%rbp)
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	-240(%rbp), %rbx
	movq	%rax, 112(%rbx)
	movl	$0, 32(%rbx)
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	je	.L20041
.L19805:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L18458:
	movq	-96(%rbp), %r8
	movq	%r8, 8(%r15)
.L18461:
	movq	32(%r15), %rax
	cmpb	$36, (%rax)
	je	.L20042
.L18463:
	movq	-96(%rbp), %r11
	movq	80(%r11), %rdx
	testq	%rdx, %rdx
	je	.L18494
	cmpb	$32, 16(%rdx)
	je	.L20043
.L18464:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L18483
	movq	-240(%rbp), %rax
	movq	56(%rax), %r12
	testq	%r12, %r12
	je	.L19775
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L18485
	movq	24(%rbx), %rdx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L18485:
	movq	decl_obstack+24(%rip), %rdx
	movq	-240(%rbp), %rbx
	leaq	8(%rdx), %rsi
	movq	%rbx, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rsi
	ja	.L20044
.L18487:
	movq	-240(%rbp), %rsi
	movq	%rdx, %r8
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rsi, (%r8)
	cmpb	$32, 16(%rsi)
	je	.L20045
.L19775:
	movq	32(%r15), %rax
.L18494:
	cmpb	$36, (%rax)
	je	.L20046
.L18508:
	movq	current_class_type(%rip), %rdx
	movq	-240(%rbp), %rbx
	movq	-96(%rbp), %r12
	testq	%rdx, %rdx
	movq	%rbx, 80(%r12)
	jne	.L18511
	cmpq	$0, current_function_decl(%rip)
	je	.L18510
.L18511:
	movq	lang_name_cplusplus(%rip), %rsi
	cmpq	%rsi, current_lang_name(%rip)
	je	.L18509
.L18510:
	movq	-240(%rbp), %r8
	movq	%r15, 72(%r8)
.L18416:
	movq	-232(%rbp), %rsi
	movzbl	66(%rsi), %r8d
	andl	$15, %r8d
	cmpl	$2, %r8d
	je	.L20047
.L18414:
	movq	-96(%rbp), %rcx
	movq	80(%rcx), %rax
	cmpb	$32, 16(%rax)
	je	.L20048
	movq	-96(%rbp), %rdx
	movl	$32, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	-96(%rbp), %r12
	movq	%rax, (%r12)
	movq	-248(%rbp), %rdi
	movzbl	16(%rdi), %eax
	jmp	.L18403
.L20048:
	movq	%rax, (%rcx)
	movq	-248(%rbp), %rdx
	movzbl	16(%rdx), %eax
	jmp	.L18403
.L20047:
	movq	-96(%rbp), %rcx
	orb	$64, 18(%rcx)
	movq	-96(%rbp), %r11
	movq	current_class_type(%rip), %rax
	movq	80(%r11), %r10
	movq	%r10, 56(%r15)
	cmpq	$0, 32(%rax)
	jne	.L18414
	movq	144(%rax), %r15
	movq	8(%rsi), %r9
	movq	%r9, 72(%r15)
	jmp	.L18414
.L18509:
	movq	current_function_decl(%rip), %rax
	testq	%rax, %rax
	jne	.L20049
	cmpq	$0, 32(%rdx)
	jne	.L18416
	movq	-240(%rbp), %r8
	movq	80(%rdx), %r10
	cmpb	$32, 16(%r8)
	movq	72(%r10), %rbx
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$136, %esi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L18519
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-240(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-96(%rbp), %r11
	movq	%r11, 8(%rax)
.L18521:
	movq	current_class_type(%rip), %r12
	movq	-240(%rbp), %rsi
	movq	%r12, 64(%rsi)
	movq	-240(%rbp), %rbx
	movq	152(%rbx), %rdi
	movq	%r12, 16(%rdi)
	jmp	.L18416
.L18519:
	movq	-240(%rbp), %rax
	movq	%r15, 72(%rax)
	jmp	.L18521
.L20049:
	movq	-240(%rbp), %r11
	movq	112(%rax), %rbx
	movl	$136, %esi
	cmpb	$32, 16(%r11)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L18514
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-240(%rbp), %r9
	movq	%rax, 72(%r9)
	movq	-96(%rbp), %rcx
	movq	%rcx, 8(%rax)
.L18516:
	movq	current_function_decl(%rip), %rbx
	movq	-240(%rbp), %r12
	movq	%rbx, 64(%r12)
	jmp	.L18416
.L18514:
	movq	-240(%rbp), %rdi
	movq	%r15, 72(%rdi)
	jmp	.L18516
.L20046:
	cmpb	$95, 1(%rax)
	jne	.L18508
	movq	-240(%rbp), %rax
	orb	$64, 53(%rax)
	jmp	.L18508
.L20045:
	cmpq	$0, 72(%rsi)
	jne	.L19775
	movq	8(%rsi), %r10
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%r10, -104(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L18489
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-240(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-104(%rbp), %r11
	movq	%r11, 8(%rax)
	jmp	.L19775
.L18489:
	movq	-240(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L19775
.L20044:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L18487
.L18483:
	movq	-240(%rbp), %rdi
	xorl	%eax, %eax
	call	pushdecl
.L19822:
	movq	%rax, -240(%rbp)
	jmp	.L19775
.L20043:
	movq	global_binding_level(%rip), %rcx
	movl	$1, %r12d
	cmpq	%rcx, current_binding_level(%rip)
	je	.L18465
	movq	48(%r15), %r9
	testq	%r9, %r9
	movq	%r9, %rcx
	jne	.L18466
.L18465:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L18467
	movq	56(%r15), %rcx
	testq	%rcx, %rcx
	jne	.L19756
	movq	32(%rdi), %rbx
	testq	%rbx, %rbx
	jne	.L18468
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L20050
.L18468:
	testq	%rcx, %rcx
	jne	.L19756
.L19757:
	xorl	%eax, %eax
	movq	%r15, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L19756
.L18467:
	movq	40(%r15), %rcx
.L18466:
	testq	%rcx, %rcx
	je	.L18470
.L19756:
	cmpb	$32, 16(%rcx)
	je	.L18470
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L18470
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.L18478
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L19806
	testl	%r12d, %r12d
	jle	.L20051
.L19806:
	movq	%rax, %rcx
.L18470:
	movq	-96(%rbp), %rdi
	cmpq	80(%rdi), %rcx
	jne	.L18464
	jmp	.L19775
.L20051:
	testl	%edx, %edx
	jg	.L19806
	testl	%r12d, %r12d
	je	.L18470
	movq	%rax, %rdx
	movq	%r15, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L19806
.L18478:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L18470
.L20050:
	xorl	%ecx, %ecx
	movq	%r15, %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L18470
	testq	%rax, %rax
	je	.L19757
	cmpb	$32, 16(%rax)
	cmovne	%rbx, %rcx
	jmp	.L18468
.L20042:
	cmpb	$95, 1(%rax)
	jne	.L18463
	jmp	.L18494
.L20041:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L18458
	jmp	.L19805
.L18456:
	movq	80(%rcx), %r10
	movq	%r10, -240(%rbp)
	jmp	.L18461
.L20040:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L18422
	movq	80(%rax), %rbx
.L18422:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L18455
.L18454:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L18431
	cmpl	$32, %eax
	je	.L20052
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L18425:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L18455
	jmp	.L18454
.L20052:
	movq	8(%rbx), %r10
	movq	-96(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%r10), %r8
	movq	72(%r8), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L19801
	movq	64(%rbx), %rbx
	jmp	.L18425
.L19801:
	movq	32(%rax), %rcx
	jmp	.L18455
.L18431:
	movq	-96(%rbp), %r12
	movq	80(%r12), %r11
	movq	56(%r11), %rbx
	testq	%rbx, %rbx
	je	.L18420
	movq	global_binding_level(%rip), %rcx
	cmpq	%rcx, current_binding_level(%rip)
	je	.L18434
	movq	48(%rbx), %r9
	testq	%r9, %r9
	movq	%r9, %rcx
	jne	.L18435
.L18434:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L18436
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L19754
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L18437
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L20053
.L18437:
	testq	%rcx, %rcx
	jne	.L19754
.L19755:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L19754
.L18436:
	movq	40(%rbx), %rcx
.L18435:
	testq	%rcx, %rcx
	je	.L19764
.L19754:
	cmpb	$32, 16(%rcx)
	je	.L18455
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L18455
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L18447
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L19804
	movl	$1, %edi
	testl	%edi, %edi
	jle	.L20054
.L19804:
	movq	%rax, %rcx
	jmp	.L18455
.L20054:
	testl	%edx, %edx
	jg	.L19804
	movl	$1, %esi
	testl	%esi, %esi
	je	.L18455
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L19804
.L18447:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L18455
	jmp	.L19804
.L20053:
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %eax
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L18455
	testq	%rax, %rax
	je	.L19755
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L18437
.L18418:
	movq	-96(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r15, %rsi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -112(%rbp)
	je	.L20055
.L19807:
	movq	8(%r15), %rsi
	movq	32(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L18496:
	movq	-96(%rbp), %r12
	movq	%r12, 8(%r15)
	movq	-112(%rbp), %rax
	movq	56(%rax), %r12
	testq	%r12, %r12
	je	.L18499
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L18500
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L18500:
	movq	decl_obstack+24(%rip), %rdx
	movq	-112(%rbp), %rbx
	leaq	8(%rdx), %rsi
	movq	%rbx, 56(%r12)
	cmpq	decl_obstack+32(%rip), %rsi
	ja	.L20056
.L18502:
	movq	-112(%rbp), %rsi
	movq	%rdx, %r8
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%rsi, (%r8)
	cmpb	$32, 16(%rsi)
	je	.L20057
.L18499:
	movq	-112(%rbp), %rax
	jmp	.L19822
.L20057:
	cmpq	$0, 72(%rsi)
	jne	.L18499
	movq	8(%rsi), %r10
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%r10, -120(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L18504
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-112(%rbp), %rcx
	movq	%rax, 72(%rcx)
	movq	-120(%rbp), %r11
	movq	%r11, 8(%rax)
	jmp	.L18499
.L18504:
	movq	-112(%rbp), %rdi
	movq	%r12, 72(%rdi)
	jmp	.L18499
.L20056:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L18502
.L20055:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L18496
	jmp	.L19807
.L20039:
	cmpq	$0, class_binding_level(%rip)
	je	.L18417
	movq	144(%rdx), %rsi
	testb	$16, 3(%rsi)
	jne	.L18416
	jmp	.L18417
.L20038:
	movq	-232(%rbp), %r9
	movq	-96(%rbp), %rsi
	movq	%r15, %rdi
	xorl	%eax, %eax
	movq	8(%r9), %rdx
	call	perm_tree_cons
	movq	-232(%rbp), %rcx
	movq	%rax, 8(%rcx)
	jmp	.L18413
	.p2align 6,,7
.L18384:
	movq	-224(%rbp), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L19770
	movl	flag_traditional(%rip), %ecx
	testl	%ecx, %ecx
	jne	.L18643
	testb	$8, 18(%r14)
	je	.L18643
	testb	$8, 18(%r13)
	jne	.L18643
	testb	$9, 53(%r13)
	jne	.L18643
	cmpq	%r13, current_function_decl(%rip)
	je	.L20058
.L18393:
	movq	72(%r14), %rax
	testq	%rax, %rax
	je	.L18394
	cmpq	$0, 8(%rax)
	jne	.L20059
.L18394:
	movq	-224(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L19803:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	-224(%rbp), %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%r12d, %esi
	movq	%rax, %rcx
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L18643
.L20059:
	movq	-224(%rbp), %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L19803
.L20058:
	movq	-224(%rbp), %rsi
	movq	%rsi, current_function_decl(%rip)
	jmp	.L18393
	.p2align 6,,7
.L20016:
	cmpq	$0, 64(%rsi)
	jne	.L18382
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L18382
.L20015:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	movq	$0, -224(%rbp)
	call	error_with_decl
	jmp	.L18380
.L18373:
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.L18375
.L18379:
	cmpq	%r14, 56(%rdi)
	je	.L18375
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L18379
.L18375:
	movq	%rdi, -224(%rbp)
	jmp	.L18372
.L20014:
	movq	40(%r14), %rax
	movq	%rax, -224(%rbp)
	jmp	.L18372
.L20013:
	testb	$32, 53(%r13)
	jne	.L18367
	jmp	.L18368
.L19766:
	movzbl	16(%r13), %ecx
	jmp	.L18367
.L18366:
	movq	8(%r13), %rax
	movq	void_type_node(%rip), %rdi
	cmpq	%rdi, 112(%rax)
	je	.L20060
	cmpb	$15, 16(%rax)
	je	.L20061
.L18646:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	pushdecl
	jmp	.L18643
.L20061:
	movq	8(%rax), %rsi
	cmpq	$0, 32(%rsi)
	je	.L18646
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	convert_from_reference
	movq	%rax, 72(%r13)
	jmp	.L18646
.L20060:
	movq	%r13, %rdi
	movl	$.LC305, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L18643
.L18359:
	movq	-56(%rbp), %rax
	movq	$0, 72(%rax)
	jmp	.L18653
.L19825:
	xorl	%eax, %eax
	call	setup_exception_throw_decl
	movl	flag_handle_exceptions(%rip), %r9d
	movq	current_binding_level(%rip), %r8
	movq	(%r8), %r12
	testl	%r9d, %r9d
	movq	%r12, -216(%rbp)
	movq	(%r12), %r10
	movq	%r10, (%r8)
	je	.L18358
	movq	integer_one_node(%rip), %rdi
	xorl	%esi, %esi
	movl	$1, %edx
	xorl	%eax, %eax
	call	expand_start_try
	jmp	.L18358
.L19824:
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L18356
.LFE13:
.Lfe13:
	.size	finish_function,.Lfe13-finish_function
	.align 2
	.p2align 4,,15
.globl maybe_build_cleanup
	.type	maybe_build_cleanup,@function
maybe_build_cleanup:
.LFB14:
	subq	$40, %rsp
.LCFI60:
	movq	%rbx, (%rsp)
.LCFI61:
	movq	%rbp, 8(%rsp)
.LCFI62:
	movq	%r12, 16(%rsp)
.LCFI63:
	movq	%r13, 24(%rsp)
.LCFI64:
	movq	%r14, 32(%rsp)
.LCFI65:
	movq	%rdi, %rbx
	movq	8(%rdi), %rbp
	testb	$32, 46(%rbp)
	je	.L20063
	xorl	%r14d, %r14d
	movl	building_cleanup(%rip), %r13d
	movl	$515, %r12d
	cmpb	$34, 16(%rdi)
	movl	$1, building_cleanup(%rip)
	je	.L20064
	xorl	%eax, %eax
	call	suspend_momentary
	movl	%eax, %r14d
.L20064:
	cmpb	$18, 16(%rbp)
	je	.L20072
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	mark_addressable
	xorl	%eax, %eax
	xorl	%edx, %edx
	movl	$106, %edi
	movq	%rbx, %rsi
	call	build_unary_op
	movq	%rax, %rdx
.L20066:
	testb	$2, 19(%rbp)
	je	.L20068
	movl	flag_expensive_optimizations(%rip), %eax
	testl	%eax, %eax
	je	.L20067
.L20068:
	movl	$523, %r12d
.L20067:
	movq	8(%rdx), %rcx
	movq	8(%rcx), %rax
	testb	$32, 17(%rax)
	jne	.L20073
.L20069:
	movq	8(%rdx), %rdi
	movq	%rdx, %rsi
	movl	%r12d, %ecx
	movq	integer_two_node(%rip), %rdx
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	xorl	%eax, %eax
	call	build_delete
	testb	$2, 19(%rbp)
	movq	%rax, %r12
	je	.L20070
	testb	$8, 46(%rbp)
	je	.L20074
.L20070:
	movq	current_binding_level(%rip), %rsi
	orb	$2, 67(%rsi)
	movq	current_binding_level(%rip), %rdx
	andb	$-5, 67(%rdx)
	cmpb	$34, 16(%rbx)
	je	.L20071
	movl	%r14d, %edi
	xorl	%eax, %eax
	call	resume_momentary
.L20071:
	movl	%r13d, building_cleanup(%rip)
.L20062:
	movq	%r12, %rax
	movq	(%rsp), %rbx
	movq	8(%rsp), %rbp
	movq	16(%rsp), %r12
	movq	24(%rsp), %r13
	movq	32(%rsp), %r14
	addq	$40, %rsp
	ret
.L20074:
	movq	%rbp, %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	build_vbase_delete
	xorl	%edi, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_tree_list
	movq	%r12, %rsi
	xorl	%edi, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	build_compound_expr
	movq	%rax, %r12
	jmp	.L20070
	.p2align 6,,7
.L20073:
	movq	112(%rax), %r8
	movl	$102, %edi
	xorl	%eax, %eax
	movq	56(%r8), %rsi
	call	build1
	movq	%rax, %rdx
	jmp	.L20069
	.p2align 6,,7
.L20072:
	movq	%rbx, %rdx
	jmp	.L20066
	.p2align 6,,7
.L20063:
	xorl	%r12d, %r12d
	jmp	.L20062
.LFE14:
.Lfe14:
	.size	maybe_build_cleanup,.Lfe14-maybe_build_cleanup
	.section	.rodata.str1.1
.LC310:
	.string	"(compiler error)"
	.text
	.align 2
	.p2align 4,,15
.globl pop_implicit_try_blocks
	.type	pop_implicit_try_blocks,@function
pop_implicit_try_blocks:
.LFB15:
	pushq	%r14
.LCFI66:
	testq	%rdi, %rdi
	pushq	%r13
.LCFI67:
	pushq	%r12
.LCFI68:
	pushq	%rbp
.LCFI69:
	movq	%rdi, %rbp
	pushq	%rbx
.LCFI70:
	je	.L20084
	movq	current_binding_level(%rip), %rcx
	movl	$166, %esi
	movzbl	66(%rcx), %edx
	andl	$15, %edx
	cmpl	$3, %edx
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	(%rbp), %rcx
	movq	current_binding_level(%rip), %rdx
	movq	%rcx, (%rdx)
.L20076:
	movzbl	66(%rdx), %ebx
	andl	$15, %ebx
	cmpl	$3, %ebx
	je	.L20080
.L20083:
	testq	%rbp, %rbp
	je	.L20075
	movq	(%rdx), %rdi
	movq	%rdi, (%rbp)
	movq	%rbp, (%rdx)
.L20075:
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	ret
	.p2align 6,,7
.L20080:
	movl	$.LC310, %edi
	xorl	%eax, %eax
	call	get_identifier
	movl	$2, %edi
	movq	current_exception_object(%rip), %r14
	movq	%rax, %rbx
	movq	current_exception_type(%rip), %r12
	movq	current_exception_decl(%rip), %r13
	xorl	%eax, %eax
	call	cplus_expand_end_try
	movq	%rbx, %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	cplus_expand_start_except
	xorl	%eax, %eax
	xorl	%edi, %edi
	call	cplus_expand_reraise
	xorl	%eax, %eax
	movq	error_mark_node(%rip), %rdi
	movq	%r12, current_exception_type(%rip)
	movq	%r13, current_exception_decl(%rip)
	movq	%r14, current_exception_object(%rip)
	call	cplus_expand_end_except
	movq	current_binding_level(%rip), %rdx
	movzbl	66(%rdx), %esi
	andl	$15, %esi
	cmpl	$3, %esi
	je	.L20080
	jmp	.L20083
	.p2align 6,,7
.L20084:
	movq	current_binding_level(%rip), %rdx
	jmp	.L20076
.LFE15:
.Lfe15:
	.size	pop_implicit_try_blocks,.Lfe15-pop_implicit_try_blocks
	.section	.rodata.str1.1
.LC311:
	.string	"exception cleanup"
	.text
	.align 2
	.p2align 4,,15
	.type	deactivate_exception_cleanups,@function
deactivate_exception_cleanups:
.LFB16:
	pushq	%r12
.LCFI71:
	xorl	%eax, %eax
	movl	$.LC311, %edi
	pushq	%rbp
.LCFI72:
	movq	current_binding_level(%rip), %rbp
	pushq	%rbx
.LCFI73:
	call	get_identifier
	movq	class_binding_level(%rip), %rdx
	movq	%rax, %r12
	cmpq	%rdx, %rbp
	je	.L20097
	.p2align 4,,7
.L20095:
	movzbl	66(%rbp), %ecx
	andl	$15, %ecx
	cmpl	$3, %ecx
	je	.L20099
.L20089:
	movq	56(%rbp), %rbp
	cmpq	%rdx, %rbp
	jne	.L20095
.L20097:
	popq	%rbx
	popq	%rbp
	popq	%r12
	ret
	.p2align 6,,7
.L20099:
	movq	(%rbp), %rbx
	testq	%rbx, %rbx
	je	.L20089
	.p2align 4,,7
.L20094:
	cmpq	%r12, 56(%rbx)
	je	.L20100
.L20093:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L20094
	movq	class_binding_level(%rip), %rdx
	jmp	.L20089
.L20100:
	movq	integer_zero_node(%rip), %rsi
	movq	%rbx, %rdi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	expand_assignment
	jmp	.L20093
.LFE16:
.Lfe16:
	.size	deactivate_exception_cleanups,.Lfe16-deactivate_exception_cleanups
	.align 2
	.p2align 4,,15
	.type	revert_static_member_fn,@function
revert_static_member_fn:
.LFB17:
	subq	$24, %rsp
.LCFI74:
	xorl	%eax, %eax
	movq	%r12, 8(%rsp)
.LCFI75:
	movq	%r13, 16(%rsp)
.LCFI76:
	movq	%rbx, (%rsp)
.LCFI77:
	movq	%rdi, %r12
	movq	(%rdi), %rbx
	movq	%rsi, %r13
	movq	(%rdx), %rdi
	movq	(%rdi), %rsi
	movq	%rsi, (%rdx)
	movq	8(%rbx), %rdi
	call	build_function_type
	movzbl	17(%rbx), %edx
	movq	%rax, %rdi
	xorl	%eax, %eax
	movl	%edx, %r8d
	shrb	$4, %dl
	shrb	$5, %r8b
	andl	$1, %edx
	movl	%r8d, %esi
	andl	$1, %esi
	call	build_type_variant
	movq	128(%rbx), %rdx
	movq	96(%rbx), %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_exception_variant
	movq	(%r13), %rbx
	movq	%rax, 8(%rbx)
	movq	%rax, (%r12)
	movq	(%r13), %rcx
	movq	152(%rcx), %rdx
	orb	$32, 1(%rdx)
	movq	(%rsp), %rbx
	movq	8(%rsp), %r12
	movq	16(%rsp), %r13
	addq	$24, %rsp
	ret
.LFE17:
.Lfe17:
	.size	revert_static_member_fn,.Lfe17-revert_static_member_fn
	.align 2
	.p2align 4,,15
.globl push_decl_level
	.type	push_decl_level,@function
push_decl_level:
.LFB18:
	subq	$40, %rsp
.LCFI78:
	movq	%rsi, %rdx
	xorl	%eax, %eax
	movq	%rdi, (%rsp)
	movq	%rsp, %rsi
	movq	%rdx, %rdi
	movl	$32, %edx
	call	push_stack_level
	addq	$40, %rsp
	ret
.LFE18:
.Lfe18:
	.size	push_decl_level,.Lfe18-push_decl_level
	.align 2
	.p2align 4,,15
.globl global_bindings_p
	.type	global_bindings_p,@function
global_bindings_p:
.LFB19:
	movq	global_binding_level(%rip), %rdx
	cmpq	%rdx, current_binding_level(%rip)
	sete	%dl
	movzbl	%dl, %eax
	ret
.LFE19:
.Lfe19:
	.size	global_bindings_p,.Lfe19-global_bindings_p
	.align 2
	.p2align 4,,15
.globl keep_next_level
	.type	keep_next_level,@function
keep_next_level:
.LFB20:
	movl	$1, keep_next_level_flag(%rip)
	ret
.LFE20:
.Lfe20:
	.size	keep_next_level,.Lfe20-keep_next_level
	.align 2
	.p2align 4,,15
.globl kept_level_p
	.type	kept_level_p,@function
kept_level_p:
.LFB21:
	movq	current_binding_level(%rip), %rdx
	xorl	%eax, %eax
	cmpq	$0, 40(%rdx)
	jne	.L20124
	movzbl	66(%rdx), %ecx
	testb	$112, %cl
	jne	.L20124
	cmpq	$0, (%rdx)
	jne	.L20124
	cmpq	$0, 8(%rdx)
	je	.L20123
	andb	$-128, %cl
	jne	.L20123
	.p2align 4,,7
.L20124:
	movl	$1, %eax
.L20123:
	ret
.LFE21:
.Lfe21:
	.size	kept_level_p,.Lfe21-kept_level_p
	.align 2
	.p2align 4,,15
.globl declare_parm_level
	.type	declare_parm_level,@function
declare_parm_level:
.LFB22:
	movq	current_binding_level(%rip), %rcx
	movzbl	66(%rcx), %edx
	andb	$-16, %dl
	orb	$1, %dl
	movb	%dl, 66(%rcx)
	ret
.LFE22:
.Lfe22:
	.size	declare_parm_level,.Lfe22-declare_parm_level
	.align 2
	.p2align 4,,15
.globl declare_implicit_exception
	.type	declare_implicit_exception,@function
declare_implicit_exception:
.LFB23:
	movq	current_binding_level(%rip), %rcx
	movzbl	66(%rcx), %edx
	andb	$-16, %dl
	orb	$3, %dl
	movb	%dl, 66(%rcx)
	ret
.LFE23:
.Lfe23:
	.size	declare_implicit_exception,.Lfe23-declare_implicit_exception
	.align 2
	.p2align 4,,15
.globl have_exceptions_p
	.type	have_exceptions_p,@function
have_exceptions_p:
.LFB24:
	movq	current_binding_level(%rip), %rdx
	movzbl	67(%rdx), %eax
	shrb	$3, %al
	andl	$1, %eax
	ret
.LFE24:
.Lfe24:
	.size	have_exceptions_p,.Lfe24-have_exceptions_p
	.align 2
	.p2align 4,,15
.globl declare_uninstantiated_type_level
	.type	declare_uninstantiated_type_level,@function
declare_uninstantiated_type_level:
.LFB25:
	movq	current_binding_level(%rip), %rdx
	orb	$16, 67(%rdx)
	ret
.LFE25:
.Lfe25:
	.size	declare_uninstantiated_type_level,.Lfe25-declare_uninstantiated_type_level
	.align 2
	.p2align 4,,15
.globl uninstantiated_type_level_p
	.type	uninstantiated_type_level_p,@function
uninstantiated_type_level_p:
.LFB26:
	movq	current_binding_level(%rip), %rdx
	movzbl	67(%rdx), %eax
	shrb	$4, %al
	andl	$1, %eax
	ret
.LFE26:
.Lfe26:
	.size	uninstantiated_type_level_p,.Lfe26-uninstantiated_type_level_p
	.align 2
	.p2align 4,,15
.globl declare_pseudo_global_level
	.type	declare_pseudo_global_level,@function
declare_pseudo_global_level:
.LFB27:
	movq	current_binding_level(%rip), %rdx
	orb	$32, 67(%rdx)
	ret
.LFE27:
.Lfe27:
	.size	declare_pseudo_global_level,.Lfe27-declare_pseudo_global_level
	.align 2
	.p2align 4,,15
.globl pseudo_global_level_p
	.type	pseudo_global_level_p,@function
pseudo_global_level_p:
.LFB28:
	movq	current_binding_level(%rip), %rdx
	movzbl	67(%rdx), %eax
	shrb	$5, %al
	andl	$1, %eax
	ret
.LFE28:
.Lfe28:
	.size	pseudo_global_level_p,.Lfe28-pseudo_global_level_p
	.align 2
	.p2align 4,,15
.globl pushlevel
	.type	pushlevel,@function
pushlevel:
.LFB29:
	movq	global_binding_level(%rip), %rdx
	pushq	%rbx
.LCFI79:
	cmpq	%rdx, current_binding_level(%rip)
	movl	%edi, %ebx
	je	.L20139
.L20133:
	movq	free_binding_level(%rip), %rdi
	testq	%rdi, %rdi
	je	.L20134
	movq	56(%rdi), %rdx
	movq	%rdx, free_binding_level(%rip)
.L20135:
	movq	clear_binding_level(%rip), %r9
	movq	class_binding_level(%rip), %rax
	movl	keep_next_level_flag(%rip), %ecx
	movq	%r9, (%rdi)
	testq	%rax, %rax
	movq	clear_binding_level+8(%rip), %r8
	movq	%r8, 8(%rdi)
	movq	clear_binding_level+16(%rip), %rsi
	movq	%rsi, 16(%rdi)
	movq	clear_binding_level+24(%rip), %rdx
	movq	%rdx, 24(%rdi)
	movq	clear_binding_level+32(%rip), %r11
	movq	%r11, 32(%rdi)
	movq	clear_binding_level+40(%rip), %r10
	movq	%r10, 40(%rdi)
	movq	clear_binding_level+48(%rip), %r9
	movq	%r9, 48(%rdi)
	movq	clear_binding_level+56(%rip), %r8
	movq	%r8, 56(%rdi)
	movq	clear_binding_level+64(%rip), %rsi
	movq	%rsi, 64(%rdi)
	je	.L20136
	movq	%rax, 56(%rdi)
	movq	$0, class_binding_level(%rip)
.L20137:
	movl	%ebx, %edx
	movl	%ecx, %r11d
	movq	%rdi, current_binding_level(%rip)
	movzbl	66(%rdi), %ebx
	salb	$7, %dl
	andb	$7, %r11b
	orb	$5, 67(%rdi)
	salb	$4, %r11b
	xorl	%eax, %eax
	andb	$127, %bl
	orb	%dl, %bl
	andb	$-113, %bl
	orb	%r11b, %bl
	movb	%bl, 66(%rdi)
	call	GNU_xref_start_scope
	popq	%rbx
	movl	$0, keep_next_level_flag(%rip)
	ret
	.p2align 6,,7
.L20136:
	movq	current_binding_level(%rip), %r10
	movq	%r10, 56(%rdi)
	jmp	.L20137
	.p2align 6,,7
.L20134:
	movl	$72, %edi
	xorl	%eax, %eax
	call	xmalloc
	movq	%rax, %rdi
	jmp	.L20135
	.p2align 6,,7
.L20139:
	cmpq	$0, named_labels(%rip)
	movl	$134, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	jmp	.L20133
.LFE29:
.Lfe29:
	.size	pushlevel,.Lfe29-pushlevel
	.align 2
	.p2align 4,,15
.globl pushlevel_temporary
	.type	pushlevel_temporary,@function
pushlevel_temporary:
.LFB30:
	movq	global_binding_level(%rip), %rdx
	pushq	%rbx
.LCFI80:
	cmpq	%rdx, current_binding_level(%rip)
	movl	%edi, %ebx
	je	.L20148
.L20141:
	movq	free_binding_level(%rip), %rdi
	testq	%rdi, %rdi
	je	.L20142
	movq	56(%rdi), %rdx
	movq	%rdx, free_binding_level(%rip)
.L20143:
	movq	clear_binding_level(%rip), %r9
	movq	class_binding_level(%rip), %rax
	movl	keep_next_level_flag(%rip), %ecx
	movq	%r9, (%rdi)
	testq	%rax, %rax
	movq	clear_binding_level+8(%rip), %r8
	movq	%r8, 8(%rdi)
	movq	clear_binding_level+16(%rip), %rsi
	movq	%rsi, 16(%rdi)
	movq	clear_binding_level+24(%rip), %rdx
	movq	%rdx, 24(%rdi)
	movq	clear_binding_level+32(%rip), %r11
	movq	%r11, 32(%rdi)
	movq	clear_binding_level+40(%rip), %r10
	movq	%r10, 40(%rdi)
	movq	clear_binding_level+48(%rip), %r9
	movq	%r9, 48(%rdi)
	movq	clear_binding_level+56(%rip), %r8
	movq	%r8, 56(%rdi)
	movq	clear_binding_level+64(%rip), %rsi
	movq	%rsi, 64(%rdi)
	je	.L20144
	movq	%rax, 56(%rdi)
	movq	$0, class_binding_level(%rip)
.L20145:
	movzbl	66(%rdi), %r11d
	movl	%ebx, %esi
	movl	%ecx, %eax
	salb	$7, %sil
	movq	%rdi, current_binding_level(%rip)
	andb	$7, %al
	orb	$5, 67(%rdi)
	salb	$4, %al
	andb	$127, %r11b
	orb	%sil, %r11b
	andb	$-113, %r11b
	orb	%al, %r11b
	xorl	%eax, %eax
	movb	%r11b, 66(%rdi)
	call	GNU_xref_start_scope
	movq	current_binding_level(%rip), %rcx
	movl	$0, keep_next_level_flag(%rip)
	xorl	%eax, %eax
	movzbl	66(%rcx), %ebx
	andb	$-113, %bl
	orb	$32, %bl
	movb	%bl, 66(%rcx)
	call	clear_last_expr
	popq	%rbx
	xorl	%edi, %edi
	xorl	%eax, %eax
	jmp	expand_start_bindings
	.p2align 6,,7
.L20144:
	movq	current_binding_level(%rip), %r10
	movq	%r10, 56(%rdi)
	jmp	.L20145
	.p2align 6,,7
.L20142:
	movl	$72, %edi
	xorl	%eax, %eax
	call	xmalloc
	movq	%rax, %rdi
	jmp	.L20143
	.p2align 6,,7
.L20148:
	cmpq	$0, named_labels(%rip)
	movl	$134, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	jmp	.L20141
.LFE30:
.Lfe30:
	.size	pushlevel_temporary,.Lfe30-pushlevel_temporary
	.align 2
	.p2align 4,,15
.globl poplevel
	.type	poplevel,@function
poplevel:
.LFB31:
	pushq	%r15
.LCFI81:
	pushq	%r14
.LCFI82:
	pushq	%r13
.LCFI83:
	pushq	%r12
.LCFI84:
	pushq	%rbp
.LCFI85:
	pushq	%rbx
.LCFI86:
	subq	$72, %rsp
.LCFI87:
	movq	current_binding_level(%rip), %rcx
	movl	%edi, 36(%rsp)
	movl	%edx, 56(%rsp)
	movl	%esi, 68(%rsp)
	movl	$0, 52(%rsp)
	movzbl	66(%rcx), %ebx
	movq	%rcx, %rsi
	movl	%ebx, %ebp
	andl	$15, %ebp
	cmpl	$3, %ebp
	sete	%dil
	shrb	$4, %bl
	andl	$7, %ebx
	cmpl	$2, %ebx
	movzbl	%dil, %eax
	movl	%eax, 64(%rsp)
	movl	$0, %eax
	cmovne	56(%rsp), %eax
	xorl	%r12d, %r12d
	testl	%eax, %eax
	movl	%eax, 52(%rsp)
	js	.L20153
	movq	8(%rcx), %r12
.L20153:
	movl	52(%rsp), %ecx
	movq	$0, 40(%rsp)
	testl	%ecx, %ecx
	js	.L20155
	movq	40(%rsi), %rbx
	movq	%rbx, 40(%rsp)
.L20155:
	movzbl	66(%rsi), %r9d
	movq	%rsi, %rdi
	xorl	%eax, %eax
	movq	56(%rsi), %rsi
	movl	%r9d, %edx
	shrb	$4, %r9b
	movl	%r9d, %ecx
	andl	$15, %edx
	shrb	$3, %r9b
	andl	$7, %ecx
	movzbl	%r9b, %r8d
	call	GNU_xref_end_scope
	movq	current_binding_level(%rip), %rbx
	movl	$1, %eax
	movzbl	66(%rbx), %edx
	shrb	$4, %dl
	andl	$7, %edx
	decl	%edx
	cmovne	36(%rsp), %eax
	movl	%eax, 36(%rsp)
	movl	68(%rsp), %eax
	testl	%eax, %eax
	jne	.L20330
	movq	(%rbx), %rbp
.L20158:
	testq	%rbp, %rbp
	movq	%rbp, %rbx
	je	.L20308
	.p2align 4,,7
.L20164:
	movzwl	16(%rbx), %eax
	andl	$-32513, %eax
	cmpw	$29, %ax
	je	.L20331
.L20161:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L20164
.L20308:
	movq	current_binding_level(%rip), %r8
	xorl	%esi, %esi
	xorl	%r14d, %r14d
	movq	48(%r8), %rdx
	testq	%rdx, %rdx
	setne	%sil
	testl	%esi, %esi
	movl	%esi, 60(%rsp)
	je	.L20165
	movq	%rdx, %r14
.L20166:
	testq	%r14, %r14
	jne	.L20332
.L20169:
	movl	36(%rsp), %eax
	testl	%eax, %eax
	js	.L20170
	movq	40(%rsp), %rax
	testq	%rax, %rax
	je	.L20170
	.p2align 4,,7
.L20175:
	movq	%r14, 56(%rax)
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L20175
.L20170:
	testq	%rbp, %rbp
	je	.L20311
	.p2align 4,,7
.L20184:
	movq	56(%rbp), %rax
	testq	%rax, %rax
	je	.L20178
	testb	$1, 53(%rbp)
	je	.L20181
	testb	$1, 18(%rbp)
	je	.L20182
	movq	112(%rbp), %r11
	orb	$1, 18(%r11)
.L20182:
	testb	$8, 17(%rbp)
	je	.L20325
	movq	112(%rbp), %r12
	orb	$8, 17(%r12)
.L20325:
	movq	56(%rbp), %rax
.L20181:
	movq	$0, 48(%rax)
.L20178:
	movq	(%rbp), %rbp
	testq	%rbp, %rbp
	jne	.L20184
.L20311:
	movq	current_binding_level(%rip), %r13
	movq	16(%r13), %rcx
	movq	%r13, %rsi
	testq	%rcx, %rcx
	je	.L20313
	.p2align 4,,7
.L20189:
	movq	24(%rcx), %r15
	movq	32(%rcx), %rdi
	movq	%rdi, 48(%r15)
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.L20189
.L20313:
	movq	24(%rsi), %rcx
	testq	%rcx, %rcx
	je	.L20315
	.p2align 4,,7
.L20194:
	movq	24(%rcx), %rbp
	movq	32(%rcx), %rbx
	movq	%rbx, 56(%rbp)
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.L20194
.L20315:
	movq	32(%rsi), %rcx
	testq	%rcx, %rcx
	je	.L20317
	.p2align 4,,7
.L20199:
	movq	24(%rcx), %r9
	movq	32(%rcx), %rdx
	movq	(%rcx), %rcx
	movq	%rdx, 8(%r9)
	testq	%rcx, %rcx
	jne	.L20199
.L20317:
	movl	52(%rsp), %eax
	testl	%eax, %eax
	je	.L20200
	movq	named_labels(%rip), %rax
	movq	$0, 32(%r14)
	testq	%rax, %rax
	movq	%rax, 24(%rsp)
	je	.L20319
.L20279:
	movq	24(%rsp), %rcx
	movq	32(%rcx), %r13
	cmpq	$0, 88(%r13)
	je	.L20333
	movl	warn_unused(%rip), %eax
	testl	%eax, %eax
	je	.L20275
	testb	$1, 18(%r13)
	je	.L20334
.L20275:
	movq	56(%r13), %rbx
	cmpq	$0, 72(%rbx)
	je	.L20335
.L20278:
	movq	72(%rbx), %r15
	movq	$0, (%r15)
	movq	32(%r14), %rbp
	movq	%rbp, (%r13)
	movq	%r13, 32(%r14)
	movq	24(%rsp), %r12
	movq	(%r12), %r13
	testq	%r13, %r13
	movq	%r13, 24(%rsp)
	jne	.L20279
.L20319:
	movq	$0, named_labels(%rip)
.L20200:
	movq	current_binding_level(%rip), %rcx
	movq	56(%rcx), %rsi
	testq	%rsi, %rsi
	je	.L20280
	movq	named_label_uses(%rip), %rdx
	testq	%rdx, %rdx
	je	.L20280
	movq	%rcx, %rdi
	.p2align 4,,7
.L20286:
	cmpq	%rcx, 8(%rdx)
	je	.L20336
.L20283:
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L20286
.L20280:
	movzbl	66(%rcx), %edi
	movq	global_binding_level(%rip), %rax
	movl	$7, %ebp
	shrb	$4, %dil
	andl	%edi, %ebp
	testq	%rax, %rax
	je	.L20287
	cmpq	%rax, %rcx
	je	.L20337
.L20287:
	movq	%rcx, %rbx
	movq	free_binding_level(%rip), %r8
	movq	56(%rcx), %rcx
	movq	%rcx, current_binding_level(%rip)
	movq	%r8, 56(%rbx)
	movzbl	66(%rcx), %esi
	movq	%rbx, free_binding_level(%rip)
	andl	$15, %esi
	cmpl	$2, %esi
	je	.L20338
.L20294:
	movl	52(%rsp), %r10d
	testl	%r10d, %r10d
	je	.L20295
	movq	current_function_decl(%rip), %rdx
	movq	%r14, 88(%rdx)
.L20296:
	cmpl	$2, %ebp
	je	.L20339
.L20303:
	testq	%r14, %r14
	je	.L20306
	orb	$1, 18(%r14)
.L20306:
	addq	$72, %rsp
	movq	%r14, %rax
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	ret
.L20339:
	movl	64(%rsp), %eax
	testl	%eax, %eax
	jne	.L20303
	movq	current_binding_level(%rip), %r14
	movl	36(%rsp), %esi
	movl	$1, %edx
	xorl	%eax, %eax
	movq	(%r14), %rdi
	call	expand_end_bindings
	movl	36(%rsp), %edi
	movl	68(%rsp), %esi
	xorl	%eax, %eax
	movl	56(%rsp), %edx
	call	poplevel
	movq	%rax, %r14
	jmp	.L20303
.L20295:
	testq	%r14, %r14
	je	.L20297
	movl	60(%rsp), %r11d
	testl	%r11d, %r11d
	jne	.L20296
	movq	current_binding_level(%rip), %rbx
	movq	%r14, %rsi
	movq	40(%rbx), %rdi
.L20329:
	xorl	%eax, %eax
	call	chainon
	movq	%rax, 40(%rbx)
	jmp	.L20296
.L20297:
	cmpq	$0, 40(%rsp)
	je	.L20296
	cmpl	$2, 36(%rsp)
	je	.L20340
	movq	current_binding_level(%rip), %rbx
	movq	40(%rsp), %rsi
	movq	40(%rbx), %rdi
	jmp	.L20329
.L20340:
	movq	current_binding_level(%rip), %rbx
	movq	40(%rsp), %rdi
	movq	40(%rbx), %rsi
	jmp	.L20329
.L20338:
	movq	%rcx, class_binding_level(%rip)
	movq	%rcx, %rdx
	.p2align 4,,7
.L20290:
	movq	56(%rdx), %rdx
	movzbl	66(%rdx), %ecx
	andl	$15, %ecx
	cmpl	$2, %ecx
	je	.L20290
	movq	%rdx, current_binding_level(%rip)
	jmp	.L20294
.L20337:
	movl	$123, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	movq	current_binding_level(%rip), %rcx
	jmp	.L20287
	.p2align 6,,7
.L20336:
	movq	%rsi, 8(%rdx)
	movq	%rdi, %rcx
	movq	(%rsi), %r9
	movq	%r9, 24(%rdx)
	jmp	.L20283
.L20335:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	movq	56(%r13), %rbx
	jmp	.L20278
.L20334:
	movq	%r13, %rdi
	movl	$.LC195, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L20275
.L20333:
	xorl	%eax, %eax
	movq	%r13, %rdi
	movl	$.LC190, %esi
	call	error_with_decl
	xorl	%r12d, %r12d
	movq	56(%r13), %rbp
	movq	input_filename(%rip), %r15
	movq	72(%rbp), %rax
	testq	%rax, %rax
	je	.L20207
	movq	(%rax), %r12
.L20207:
	testq	%r12, %r12
	je	.L20209
	movl	32(%r12), %eax
	testl	%eax, %eax
	jne	.L20208
.L20209:
	movq	named_label_uses(%rip), %rax
	testq	%rax, %rax
	je	.L20326
	movq	current_binding_level(%rip), %rcx
	movq	(%rcx), %rsi
	cmpq	%rsi, 24(%rax)
	je	.L20341
.L20210:
	movq	(%rcx), %rdi
	movq	named_label_uses(%rip), %rdx
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	current_binding_level(%rip), %r8
	movq	%rax, named_label_uses(%rip)
	movq	%r8, 8(%rax)
.L20208:
	testq	%r12, %r12
	je	.L20211
	movq	current_function_decl(%rip), %r10
	cmpq	%r10, 64(%r12)
	je	.L20221
	testb	$-128, 18(%r12)
	jne	.L20221
	movq	72(%rbp), %rax
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L20214
	movq	(%rax), %rbx
.L20214:
	testq	%rbx, %rbx
	jne	.L20342
.L20215:
	movq	%rbp, %rdi
	xorl	%eax, %eax
	call	lookup_label
	movq	%rax, %r12
.L20221:
	movq	current_binding_level(%rip), %rbx
	andb	$-2, 67(%rbx)
	testq	%r12, %r12
	je	.L20224
	movq	current_function_decl(%rip), %r9
	cmpq	%r9, 64(%r12)
	je	.L20224
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%r12, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%rbp), %rax
	testq	%rax, %rax
	je	.L20343
.L20226:
	movq	$0, (%rax)
	xorl	%ebx, %ebx
	movq	72(%rbp), %rax
	testq	%rax, %rax
	je	.L20228
	movq	(%rax), %rbx
.L20228:
	testq	%rbx, %rbx
	je	.L20230
	movl	32(%rbx), %eax
	testl	%eax, %eax
	jne	.L20229
.L20230:
	movq	named_label_uses(%rip), %rax
	testq	%rax, %rax
	je	.L20327
	movq	current_binding_level(%rip), %rcx
	movq	(%rcx), %rsi
	cmpq	%rsi, 24(%rax)
	je	.L20344
.L20231:
	movq	(%rcx), %rdi
	movq	named_label_uses(%rip), %rdx
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	current_binding_level(%rip), %rcx
	movq	%rax, named_label_uses(%rip)
	movq	%rcx, 8(%rax)
.L20229:
	testq	%rbx, %rbx
	je	.L20232
	movq	current_function_decl(%rip), %rdx
	cmpq	%rdx, 64(%rbx)
	je	.L20242
	testb	$-128, 18(%rbx)
	jne	.L20242
	movq	72(%rbp), %rax
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L20235
	movq	(%rax), %rbx
.L20235:
	testq	%rbx, %rbx
	jne	.L20345
.L20236:
	movq	%rbp, %rdi
	xorl	%eax, %eax
	call	lookup_label
	movq	%rax, %rbx
.L20242:
	movq	%rbx, %r12
.L20224:
	cmpq	$0, 88(%r12)
	jne	.L20346
	movq	named_label_uses(%rip), %rbp
	movq	error_mark_node(%rip), %r11
	movl	$1, 32(%r12)
	movq	%r15, 24(%r12)
	testq	%rbp, %rbp
	movq	%r11, 88(%r12)
	movq	$0, 16(%rsp)
	je	.L20321
.L20274:
	cmpq	%r12, 32(%rbp)
	je	.L20347
.L20250:
	movq	%rbp, 16(%rsp)
	movq	(%rbp), %rbp
	testq	%rbp, %rbp
	jne	.L20274
.L20321:
	movq	$0, current_function_return_value(%rip)
	jmp	.L20275
.L20347:
	movq	current_binding_level(%rip), %r15
	movq	%r15, 8(%rsp)
	movq	8(%rbp), %rax
.L20271:
	movq	8(%rsp), %rdi
	xorl	%r15d, %r15d
	cmpq	%rax, %rdi
	movq	(%rdi), %rbx
	je	.L20348
.L20257:
	cmpq	%r15, %rbx
	je	.L20323
	.p2align 4,,7
.L20269:
	cmpb	$33, 16(%rbx)
	je	.L20349
.L20261:
	movq	(%rbx), %rbx
	cmpq	%r15, %rbx
	jne	.L20269
	movq	8(%rbp), %rax
.L20323:
	cmpq	%rax, 8(%rsp)
	je	.L20254
	movq	8(%rsp), %r8
	movq	56(%r8), %rbx
	movq	%rbx, 8(%rsp)
	jmp	.L20271
.L20254:
	cmpq	$0, 16(%rsp)
	je	.L20272
	movq	(%rbp), %rdx
	movq	16(%rsp), %r10
	movq	%rdx, (%r10)
	jmp	.L20250
.L20272:
	movq	(%rbp), %r11
	movq	%r11, named_label_uses(%rip)
	jmp	.L20250
	.p2align 6,,7
.L20349:
	movq	56(%rbx), %r9
	movl	$.LC192, %edi
	movl	$6, %ecx
	cld
	movq	32(%r9), %rsi
	repz
	cmpsb
	je	.L20261
	movq	88(%rbx), %rax
	testq	%rax, %rax
	je	.L20263
	cmpq	error_mark_node(%rip), %rax
	je	.L20263
.L20262:
	movq	72(%r12), %rdx
	testq	%rdx, %rdx
	je	.L20266
	cmpq	$0, 32(%rdx)
	jne	.L20264
.L20266:
	movq	%r12, %rdi
	movl	$.LC193, %esi
	xorl	%eax, %eax
	call	error_with_decl
	movq	72(%r12), %rdx
.L20264:
	testq	%rdx, %rdx
	je	.L20350
.L20268:
	movq	current_function_decl(%rip), %rcx
	movq	%rbx, %rdi
	movl	$.LC194, %esi
	xorl	%eax, %eax
	movq	%rcx, 32(%rdx)
	call	error_with_decl
	jmp	.L20261
.L20350:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	movq	%rax, %rdx
	jmp	.L20268
.L20263:
	movq	8(%rbx), %rsi
	testb	$16, 46(%rsi)
	je	.L20261
	jmp	.L20262
.L20348:
	movq	24(%rbp), %r15
	jmp	.L20257
.L20346:
	movq	%r12, %rdi
	movl	$.LC191, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L20275
.L20345:
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%rbp), %rax
	testq	%rax, %rax
	je	.L20351
.L20238:
	movq	$0, (%rax)
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L20352
.L20240:
	movq	$0, (%rax)
	jmp	.L20236
.L20352:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	jmp	.L20240
.L20351:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbp)
	jmp	.L20238
	.p2align 6,,7
.L20232:
	movq	void_type_node(%rip), %rdx
	xorl	%eax, %eax
	movl	$30, %edi
	movq	%rbp, %rsi
	call	build_decl
	movq	current_function_decl(%rip), %r10
	movq	%rax, %rbx
	movb	$0, 52(%rax)
	movq	input_filename(%rip), %r8
	movq	%r10, 64(%rax)
	movl	lineno(%rip), %eax
	movq	%r8, 24(%rbx)
	movl	%eax, 32(%rbx)
	movq	72(%rbp), %rax
	testq	%rax, %rax
	je	.L20353
.L20244:
	movq	named_labels(%rip), %rdx
	movq	%rbx, (%rax)
	xorl	%edi, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	named_label_uses(%rip), %rbp
	movq	%rax, named_labels(%rip)
	movq	%rbx, 32(%rbp)
	jmp	.L20242
.L20353:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbp)
	jmp	.L20244
.L20344:
	cmpq	%rbx, 32(%rax)
	je	.L20229
	jmp	.L20231
.L20327:
	movq	current_binding_level(%rip), %rcx
	jmp	.L20231
.L20343:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbp)
	jmp	.L20226
.L20342:
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%rbp), %rax
	testq	%rax, %rax
	je	.L20354
.L20217:
	movq	$0, (%rax)
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L20355
.L20219:
	movq	$0, (%rax)
	jmp	.L20215
.L20355:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	jmp	.L20219
.L20354:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbp)
	jmp	.L20217
	.p2align 6,,7
.L20211:
	movq	void_type_node(%rip), %rdx
	xorl	%eax, %eax
	movl	$30, %edi
	movq	%rbp, %rsi
	call	build_decl
	movq	current_function_decl(%rip), %r12
	movq	%rax, %rbx
	movb	$0, 52(%rax)
	movq	input_filename(%rip), %r11
	movq	%r12, 64(%rax)
	movl	lineno(%rip), %eax
	movq	%r11, 24(%rbx)
	movl	%eax, 32(%rbx)
	movq	72(%rbp), %rax
	testq	%rax, %rax
	je	.L20356
.L20223:
	movq	named_labels(%rip), %rdx
	movq	%rbx, (%rax)
	xorl	%edi, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	movq	%rbx, %r12
	call	tree_cons
	movq	named_label_uses(%rip), %rdi
	movq	%rax, named_labels(%rip)
	movq	%rbx, 32(%rdi)
	jmp	.L20221
.L20356:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbp)
	jmp	.L20223
.L20341:
	cmpq	%r12, 32(%rax)
	je	.L20208
	jmp	.L20210
.L20326:
	movq	current_binding_level(%rip), %rcx
	jmp	.L20210
.L20332:
	movq	%rbp, 32(%r14)
	movq	%r12, 40(%r14)
	movq	%r14, %rdi
	movq	40(%rsp), %r10
	xorl	%eax, %eax
	movq	%r10, 48(%r14)
	call	remember_end_note
	jmp	.L20169
.L20165:
	cmpl	$1, 36(%rsp)
	je	.L20168
	movl	52(%rsp), %eax
	testl	%eax, %eax
	je	.L20166
.L20168:
	movl	$5, %edi
	xorl	%eax, %eax
	call	make_node
	movq	%rax, %r14
	jmp	.L20166
	.p2align 6,,7
.L20331:
	cmpq	$0, 88(%rbx)
	je	.L20161
	testb	$8, 17(%rbx)
	je	.L20161
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	output_inline_function
	jmp	.L20161
.L20330:
	movq	(%rbx), %rdi
	xorl	%eax, %eax
	call	nreverse
	movq	%rax, %rbp
	movq	%rax, (%rbx)
	jmp	.L20158
.LFE31:
.Lfe31:
	.size	poplevel,.Lfe31-poplevel
	.align 2
	.p2align 4,,15
.globl delete_block
	.type	delete_block,@function
delete_block:
.LFB32:
	movq	current_binding_level(%rip), %rdx
	cmpq	%rdi, 40(%rdx)
	je	.L20368
.L20358:
	movq	40(%rdx), %rdx
	testq	%rdx, %rdx
	je	.L20367
	.p2align 4,,7
.L20365:
	movq	(%rdx), %rax
	cmpq	%rdi, %rax
	je	.L20369
	movq	%rax, %rdx
.L20359:
	testq	%rdx, %rdx
	jne	.L20365
.L20367:
	andb	$-2, 18(%rdi)
	movq	$0, (%rdi)
	ret
	.p2align 6,,7
.L20369:
	movq	(%rdi), %rcx
	movq	%rcx, (%rdx)
	jmp	.L20359
.L20368:
	movq	(%rdi), %rcx
	movq	%rcx, 40(%rdx)
	jmp	.L20358
.LFE32:
.Lfe32:
	.size	delete_block,.Lfe32-delete_block
	.align 2
	.p2align 4,,15
.globl insert_block
	.type	insert_block,@function
insert_block:
.LFB33:
	pushq	%rbx
.LCFI88:
	movq	%rdi, %rdx
	xorl	%eax, %eax
	orb	$1, 18(%rdi)
	movq	%rdx, %rsi
	movq	current_binding_level(%rip), %rbx
	movq	40(%rbx), %rdi
	call	chainon
	movq	%rax, 40(%rbx)
	popq	%rbx
	ret
.LFE33:
.Lfe33:
	.size	insert_block,.Lfe33-insert_block
	.align 2
	.p2align 4,,15
.globl add_block_current_level
	.type	add_block_current_level,@function
add_block_current_level:
.LFB34:
	pushq	%rbx
.LCFI89:
	movq	%rdi, %rdx
	xorl	%eax, %eax
	movq	current_binding_level(%rip), %rbx
	movq	%rdx, %rsi
	movq	40(%rbx), %rdi
	call	chainon
	movq	%rax, 40(%rbx)
	popq	%rbx
	ret
.LFE34:
.Lfe34:
	.size	add_block_current_level,.Lfe34-add_block_current_level
	.align 2
	.p2align 4,,15
.globl set_block
	.type	set_block,@function
set_block:
.LFB35:
	movq	current_binding_level(%rip), %rdx
	movq	%rdi, 48(%rdx)
	ret
.LFE35:
.Lfe35:
	.size	set_block,.Lfe35-set_block
	.align 2
	.p2align 4,,15
.globl pushlevel_class
	.type	pushlevel_class,@function
pushlevel_class:
.LFB36:
	subq	$40, %rsp
.LCFI90:
	movq	global_binding_level(%rip), %rdx
	cmpq	%rdx, current_binding_level(%rip)
	je	.L20387
.L20374:
	movq	free_binding_level(%rip), %rdi
	testq	%rdi, %rdi
	je	.L20375
	movq	56(%rdi), %rdx
	movq	%rdx, free_binding_level(%rip)
.L20376:
	movq	clear_binding_level(%rip), %r9
	movq	class_binding_level(%rip), %rax
	movl	keep_next_level_flag(%rip), %ecx
	movq	%r9, (%rdi)
	testq	%rax, %rax
	movq	clear_binding_level+8(%rip), %r8
	movq	%r8, 8(%rdi)
	movq	clear_binding_level+16(%rip), %rsi
	movq	%rsi, 16(%rdi)
	movq	clear_binding_level+24(%rip), %rdx
	movq	%rdx, 24(%rdi)
	movq	clear_binding_level+32(%rip), %r11
	movq	%r11, 32(%rdi)
	movq	clear_binding_level+40(%rip), %r10
	movq	%r10, 40(%rdi)
	movq	clear_binding_level+48(%rip), %r9
	movq	%r9, 48(%rdi)
	movq	clear_binding_level+56(%rip), %r8
	movq	%r8, 56(%rdi)
	movq	clear_binding_level+64(%rip), %rsi
	movq	%rsi, 64(%rdi)
	je	.L20377
	movq	%rax, 56(%rdi)
	movq	$0, class_binding_level(%rip)
.L20378:
	movzbl	66(%rdi), %esi
	movl	%ecx, %edx
	movq	%rdi, current_binding_level(%rip)
	andb	$7, %dl
	orb	$5, 67(%rdi)
	xorl	%eax, %eax
	salb	$4, %dl
	andb	$15, %sil
	orb	%dl, %sil
	movb	%sil, 66(%rdi)
	call	GNU_xref_start_scope
	movq	decl_stack(%rip), %r11
	movl	$decl_obstack, %edi
	movl	$32, %edx
	movq	%rsp, %rsi
	xorl	%eax, %eax
	movl	$0, keep_next_level_flag(%rip)
	movq	%r11, (%rsp)
	call	push_stack_level
	movq	current_binding_level(%rip), %rcx
	movq	%rax, decl_stack(%rip)
	movzbl	66(%rcx), %edi
	movq	%rcx, class_binding_level(%rip)
	andb	$-16, %dil
	orb	$2, %dil
	movb	%dil, 66(%rcx)
	movq	current_binding_level(%rip), %rdx
	.p2align 4,,7
.L20382:
	movq	56(%rdx), %rdx
	movzbl	66(%rdx), %r8d
	andl	$15, %r8d
	cmpl	$2, %r8d
	je	.L20382
	movq	%rdx, current_binding_level(%rip)
	addq	$40, %rsp
	ret
.L20377:
	movq	current_binding_level(%rip), %r10
	movq	%r10, 56(%rdi)
	jmp	.L20378
.L20375:
	movl	$72, %edi
	xorl	%eax, %eax
	call	xmalloc
	movq	%rax, %rdi
	jmp	.L20376
.L20387:
	cmpq	$0, named_labels(%rip)
	movl	$134, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	jmp	.L20374
.LFE36:
.Lfe36:
	.size	pushlevel_class,.Lfe36-pushlevel_class
	.section	.rodata.str1.1
.LC312:
	.string	"syntax error too serious"
	.text
	.align 2
	.p2align 4,,15
.globl poplevel_class
	.type	poplevel_class,@function
poplevel_class:
.LFB37:
	pushq	%rbp
.LCFI91:
	xorl	%ebp, %ebp
	pushq	%rbx
.LCFI92:
	subq	$8, %rsp
.LCFI93:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	jne	.L20389
	cmpq	$0, current_binding_level(%rip)
	je	.L20427
	.p2align 4,,7
.L20394:
	xorl	%edi, %edi
	xorl	%esi, %esi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	poplevel
	movq	%rax, %rbp
	movq	current_binding_level(%rip), %rax
	testq	%rax, %rax
	je	.L20427
	cmpq	$0, class_binding_level(%rip)
	je	.L20394
	testq	%rax, %rax
	jne	.L20395
.L20427:
	movl	$.LC312, %edi
	xorl	%eax, %eax
	call	fatal
.L20395:
	movq	class_binding_level(%rip), %rbx
.L20389:
	movq	decl_stack(%rip), %rdi
	movq	8(%rdi), %rsi
	movq	16(%rdi), %rcx
	movq	24(%rsi), %rdx
	cmpq	%rcx, %rdx
	je	.L20420
	.p2align 4,,7
.L20400:
	subq	$8, %rdx
	movq	(%rdx), %rax
	testq	%rax, %rax
	je	.L20396
	movq	56(%rax), %rsi
	movq	$0, 56(%rsi)
.L20396:
	cmpq	%rcx, %rdx
	jne	.L20400
.L20420:
	xorl	%eax, %eax
	call	pop_stack_level
	movq	16(%rbx), %rcx
	movq	%rax, decl_stack(%rip)
	testq	%rcx, %rcx
	je	.L20422
	.p2align 4,,7
.L20406:
	movq	24(%rcx), %rdi
	movq	32(%rcx), %rdx
	movq	%rdx, 48(%rdi)
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.L20406
.L20422:
	movq	24(%rbx), %rcx
	testq	%rcx, %rcx
	je	.L20424
	.p2align 4,,7
.L20411:
	movq	24(%rcx), %r8
	movq	32(%rcx), %r9
	movq	%r9, 56(%r8)
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.L20411
.L20424:
	movq	32(%rbx), %rcx
	testq	%rcx, %rcx
	je	.L20426
	.p2align 4,,7
.L20416:
	movq	24(%rcx), %r10
	movq	32(%rcx), %r11
	movq	(%rcx), %rcx
	movq	%r11, 8(%r10)
	testq	%rcx, %rcx
	jne	.L20416
.L20426:
	movq	class_binding_level(%rip), %r9
	movzbl	66(%r9), %eax
	movq	56(%r9), %rsi
	movq	%r9, %rdi
	movl	%eax, %edx
	shrb	$4, %al
	movl	%eax, %ecx
	andl	$15, %edx
	shrb	$3, %al
	andl	$7, %ecx
	movzbl	%al, %r8d
	xorl	%eax, %eax
	call	GNU_xref_end_scope
	movq	56(%rbx), %rsi
	movzbl	66(%rsi), %ecx
	movq	%rsi, class_binding_level(%rip)
	andl	$15, %ecx
	cmpl	$2, %ecx
	je	.L20417
	movq	$0, class_binding_level(%rip)
.L20417:
	movq	free_binding_level(%rip), %rdi
	movq	%rbp, %rax
	movq	%rdi, 56(%rbx)
	movq	%rbx, free_binding_level(%rip)
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	ret
.LFE37:
.Lfe37:
	.size	poplevel_class,.Lfe37-poplevel_class
	.section	.rodata.str1.1
.LC313:
	.string	" blocks="
.LC314:
	.string	"%lx"
	.section	.rodata.str1.32
	.align 32
.LC315:
	.string	" n_incomplete=%d parm_flag=%d keep=%d"
	.section	.rodata.str1.1
.LC321:
	.string	"\n"
.LC333:
	.string	" type-shadowed:"
.LC331:
	.string	" %s "
.LC332:
	.string	" class-shadowed:"
.LC330:
	.string	" shadowed:"
.LC326:
	.string	" tags:\t"
.LC329:
	.string	"<typedef"
.LC325:
	.string	""
.LC328:
	.string	">"
.LC327:
	.string	"<unnamed-typedef"
.LC324:
	.string	"\n\t"
.LC322:
	.string	" names:\t"
.LC323:
	.string	"<built-in>"
.LC320:
	.string	" have-exceptions"
.LC319:
	.string	" more-exceptions-ok"
.LC318:
	.string	" have-cleanups"
.LC317:
	.string	" more-cleanups-ok"
.LC316:
	.string	" tag-transparent"
	.text
	.align 2
	.p2align 4,,15
.globl print_binding_level
	.type	print_binding_level,@function
print_binding_level:
.LFB38:
	pushq	%r15
.LCFI94:
	movl	$.LC313, %esi
	xorl	%eax, %eax
	pushq	%r14
.LCFI95:
	pushq	%r13
.LCFI96:
	xorl	%r13d, %r13d
	pushq	%r12
.LCFI97:
	movq	%rdi, %r12
	pushq	%rbp
.LCFI98:
	pushq	%rbx
.LCFI99:
	movq	$_iob+112, %rbx
	subq	$8, %rsp
.LCFI100:
	movq	%rbx, %rdi
	call	fprintf
	xorl	%eax, %eax
	movq	40(%r12), %rdx
	movq	%rbx, %rdi
	movl	$.LC314, %esi
	call	fprintf
	xorl	%eax, %eax
	movl	$.LC315, %esi
	movzbl	66(%r12), %r8d
	movzwl	64(%r12), %edx
	movq	%rbx, %rdi
	movl	%r8d, %ecx
	shrb	$4, %r8b
	andl	$15, %ecx
	andl	$7, %r8d
	call	fprintf
	testb	$-128, 66(%r12)
	jne	.L20492
.L20429:
	movzbl	67(%r12), %eax
	testb	$1, %al
	jne	.L20493
.L20430:
	testb	$2, %al
	jne	.L20494
.L20431:
	testb	$4, %al
	jne	.L20495
.L20432:
	testb	$8, %al
	jne	.L20496
.L20433:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	movl	$.LC321, %esi
	call	fprintf
	cmpq	$0, (%r12)
	jne	.L20497
.L20434:
	cmpq	$0, 8(%r12)
	jne	.L20498
.L20447:
	cmpq	$0, 16(%r12)
	jne	.L20499
.L20463:
	cmpq	$0, 24(%r12)
	jne	.L20500
.L20469:
	cmpq	$0, 32(%r12)
	jne	.L20501
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	ret
	.p2align 6,,7
.L20501:
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC333, %esi
	call	fprintf
	movq	32(%r12), %rbx
	testq	%rbx, %rbx
	jne	.L20480
.L20489:
	addq	$8, %rsp
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	xorl	%eax, %eax
	jmp	fprintf
	.p2align 6,,7
.L20480:
	movq	24(%rbx), %r11
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC331, %esi
	movq	32(%r11), %rdx
	call	fprintf
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L20480
	jmp	.L20489
	.p2align 6,,7
.L20500:
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC332, %esi
	call	fprintf
	movq	24(%r12), %rbx
	testq	%rbx, %rbx
	jne	.L20474
.L20487:
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20469
	.p2align 6,,7
.L20474:
	movq	24(%rbx), %r10
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC331, %esi
	movq	32(%r10), %rdx
	call	fprintf
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L20474
	jmp	.L20487
	.p2align 6,,7
.L20499:
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC330, %esi
	call	fprintf
	movq	16(%r12), %rbx
	testq	%rbx, %rbx
	jne	.L20468
.L20485:
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20463
	.p2align 6,,7
.L20468:
	movq	24(%rbx), %r9
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC331, %esi
	movq	32(%r9), %rdx
	call	fprintf
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L20468
	jmp	.L20485
	.p2align 6,,7
.L20498:
	movq	$_iob+112, %rbp
	xorl	%eax, %eax
	movl	$.LC326, %esi
	movq	%rbp, %rdi
	xorl	%r13d, %r13d
	call	fprintf
	movq	8(%r12), %rbx
	testq	%rbx, %rbx
	je	.L20483
	movq	%rbp, %r14
	movq	%rbp, %r15
	.p2align 4,,7
.L20461:
	movq	24(%rbx), %rdx
	movl	$3, %ebp
	testq	%rdx, %rdx
	je	.L20453
	movq	32(%rbx), %rbp
	movq	80(%rbp), %rdi
	cmpq	56(%rdi), %rdx
	setne	%sil
	movzbl	%sil, %ecx
	leal	2(%rcx,%rcx), %ebp
.L20453:
	addl	%ebp, %r13d
	cmpl	$5, %r13d
	jg	.L20502
.L20456:
	testq	%rdx, %rdx
	je	.L20503
	movq	32(%rbx), %rcx
	movq	80(%rcx), %r8
	cmpq	56(%r8), %rdx
	je	.L20504
	movq	%r14, %rdi
	movl	$.LC329, %esi
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	print_node_brief
	movl	$.LC325, %esi
	movq	%r14, %rdi
.L20491:
	movq	32(%rbx), %rdx
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	print_node_brief
	xorl	%eax, %eax
	movl	$.LC328, %esi
	movq	$_iob+112, %rdi
	call	fprintf
.L20450:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L20461
.L20483:
	testl	%r13d, %r13d
	je	.L20447
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20447
	.p2align 6,,7
.L20504:
	movq	%rcx, %rdx
	movq	$_iob+112, %rdi
	movl	$.LC325, %esi
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	print_node_brief
	jmp	.L20450
	.p2align 6,,7
.L20503:
	movq	%r15, %rdi
	movl	$.LC327, %esi
	jmp	.L20491
	.p2align 6,,7
.L20502:
	movq	$_iob+112, %rdi
	movl	$.LC324, %esi
	xorl	%eax, %eax
	call	fprintf
	movl	%ebp, %r13d
	movq	24(%rbx), %rdx
	jmp	.L20456
	.p2align 6,,7
.L20497:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	movl	$.LC322, %esi
	call	fprintf
	movq	(%r12), %rbp
	testq	%rbp, %rbp
	je	.L20436
	.p2align 4,,7
.L20445:
	movl	no_print_functions(%rip), %eax
	testl	%eax, %eax
	je	.L20490
	movzbl	16(%rbp), %r8d
	cmpb	$29, %r8b
	je	.L20437
.L20439:
	movl	no_print_builtins(%rip), %eax
	testl	%eax, %eax
	je	.L20440
	cmpb	$32, %r8b
	je	.L20505
.L20440:
	xorl	%ebx, %ebx
	cmpb	$29, %r8b
	sete	%bl
	addl	$2, %ebx
	addl	%ebx, %r13d
	cmpl	$6, %r13d
	jg	.L20506
.L20443:
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC325, %esi
	movq	%rbp, %rdx
	call	print_node_brief
	cmpb	$0, 16(%rbp)
	je	.L20436
.L20437:
	movq	(%rbp), %rbp
	testq	%rbp, %rbp
	jne	.L20445
.L20436:
	testl	%r13d, %r13d
	je	.L20434
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20434
	.p2align 6,,7
.L20506:
	movq	$_iob+112, %rdi
	movl	$.LC324, %esi
	xorl	%eax, %eax
	call	fprintf
	movl	%ebx, %r13d
	jmp	.L20443
.L20505:
	movq	24(%rbp), %rsi
	movl	$11, %edx
	movl	$.LC323, %edi
	cld
	movq	%rdx, %rcx
	repz
	cmpsb
	je	.L20437
	jmp	.L20440
	.p2align 6,,7
.L20490:
	movzbl	16(%rbp), %r8d
	jmp	.L20439
	.p2align 6,,7
.L20496:
	movq	%rbx, %rdi
	movl	$.LC320, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20433
	.p2align 6,,7
.L20495:
	movq	%rbx, %rdi
	movl	$.LC319, %esi
	xorl	%eax, %eax
	call	fprintf
	movzbl	67(%r12), %eax
	jmp	.L20432
	.p2align 6,,7
.L20494:
	movq	%rbx, %rdi
	movl	$.LC318, %esi
	xorl	%eax, %eax
	call	fprintf
	movzbl	67(%r12), %eax
	jmp	.L20431
	.p2align 6,,7
.L20493:
	movq	%rbx, %rdi
	movl	$.LC317, %esi
	xorl	%eax, %eax
	call	fprintf
	movzbl	67(%r12), %eax
	jmp	.L20430
	.p2align 6,,7
.L20492:
	movq	%rbx, %rdi
	movl	$.LC316, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20429
.LFE38:
.Lfe38:
	.size	print_binding_level,.Lfe38-print_binding_level
	.section	.rodata.str1.1
.LC334:
	.string	"binding level "
	.text
	.align 2
	.p2align 4,,15
.globl print_other_binding_stack
	.type	print_other_binding_stack,@function
print_other_binding_stack:
.LFB39:
	pushq	%r15
.LCFI101:
	pushq	%r14
.LCFI102:
	pushq	%r13
.LCFI103:
	pushq	%r12
.LCFI104:
	movq	%rdi, %r12
	pushq	%rbp
.LCFI105:
	pushq	%rbx
.LCFI106:
	subq	$8, %rsp
.LCFI107:
	cmpq	global_binding_level(%rip), %rdi
	je	.L20567
	movq	$_iob+112, %r15
	.p2align 4,,7
.L20565:
	movq	%r15, %rdi
	movl	$.LC334, %esi
	xorl	%eax, %eax
	call	fprintf
	xorl	%r13d, %r13d
	xorl	%eax, %eax
	movq	%r12, %rdx
	movq	%r15, %rdi
	movl	$.LC314, %esi
	call	fprintf
	xorl	%eax, %eax
	movl	$.LC321, %esi
	movq	%r15, %rdi
	call	fprintf
	xorl	%eax, %eax
	movl	$.LC313, %esi
	movq	%r15, %rdi
	call	fprintf
	xorl	%eax, %eax
	movq	40(%r12), %rdx
	movq	%r15, %rdi
	movl	$.LC314, %esi
	call	fprintf
	xorl	%eax, %eax
	movl	$.LC315, %esi
	movzbl	66(%r12), %r8d
	movzwl	64(%r12), %edx
	movq	%r15, %rdi
	movl	%r8d, %ecx
	shrb	$4, %r8b
	andl	$15, %ecx
	andl	$7, %r8d
	call	fprintf
	testb	$-128, 66(%r12)
	jne	.L20579
.L20512:
	movzbl	67(%r12), %eax
	testb	$1, %al
	jne	.L20580
.L20513:
	testb	$2, %al
	jne	.L20581
.L20514:
	testb	$4, %al
	jne	.L20582
.L20515:
	testb	$8, %al
	jne	.L20583
.L20516:
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	call	fprintf
	cmpq	$0, (%r12)
	jne	.L20584
.L20517:
	cmpq	$0, 8(%r12)
	jne	.L20585
.L20530:
	cmpq	$0, 16(%r12)
	jne	.L20586
.L20546:
	cmpq	$0, 24(%r12)
	jne	.L20587
.L20552:
	cmpq	$0, 32(%r12)
	jne	.L20588
.L20510:
	movq	56(%r12), %r12
	cmpq	global_binding_level(%rip), %r12
	jne	.L20565
.L20567:
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	ret
	.p2align 6,,7
.L20588:
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC333, %esi
	call	fprintf
	movq	32(%r12), %rbx
	testq	%rbx, %rbx
	jne	.L20563
.L20576:
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20510
	.p2align 6,,7
.L20563:
	movq	24(%rbx), %r11
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC331, %esi
	movq	32(%r11), %rdx
	call	fprintf
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L20563
	jmp	.L20576
	.p2align 6,,7
.L20587:
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC332, %esi
	call	fprintf
	movq	24(%r12), %rbx
	testq	%rbx, %rbx
	jne	.L20557
.L20574:
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20552
	.p2align 6,,7
.L20557:
	movq	24(%rbx), %r10
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC331, %esi
	movq	32(%r10), %rdx
	call	fprintf
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L20557
	jmp	.L20574
	.p2align 6,,7
.L20586:
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC330, %esi
	call	fprintf
	movq	16(%r12), %rbx
	testq	%rbx, %rbx
	jne	.L20551
.L20572:
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20546
	.p2align 6,,7
.L20551:
	movq	24(%rbx), %r9
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC331, %esi
	movq	32(%r9), %rdx
	call	fprintf
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L20551
	jmp	.L20572
	.p2align 6,,7
.L20585:
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC326, %esi
	call	fprintf
	xorl	%r13d, %r13d
	movq	8(%r12), %rbx
	testq	%rbx, %rbx
	je	.L20570
	movq	$_iob+112, %r14
	.p2align 4,,7
.L20544:
	movq	24(%rbx), %rdx
	movl	$3, %ebp
	testq	%rdx, %rdx
	je	.L20536
	movq	32(%rbx), %rbp
	movq	80(%rbp), %rdi
	cmpq	56(%rdi), %rdx
	setne	%sil
	movzbl	%sil, %ecx
	leal	2(%rcx,%rcx), %ebp
.L20536:
	addl	%ebp, %r13d
	cmpl	$5, %r13d
	jg	.L20589
.L20539:
	testq	%rdx, %rdx
	je	.L20590
	movq	32(%rbx), %rcx
	movq	80(%rcx), %r8
	cmpq	56(%r8), %rdx
	je	.L20591
	movq	%r14, %rdi
	movl	$.LC329, %esi
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	print_node_brief
	movl	$.LC325, %esi
	movq	%r14, %rdi
.L20578:
	movq	32(%rbx), %rdx
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	print_node_brief
	xorl	%eax, %eax
	movl	$.LC328, %esi
	movq	$_iob+112, %rdi
	call	fprintf
.L20533:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L20544
.L20570:
	testl	%r13d, %r13d
	je	.L20530
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20530
	.p2align 6,,7
.L20591:
	movq	%rcx, %rdx
	movq	$_iob+112, %rdi
	movl	$.LC325, %esi
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	print_node_brief
	jmp	.L20533
	.p2align 6,,7
.L20590:
	movq	$_iob+112, %rdi
	movl	$.LC327, %esi
	jmp	.L20578
	.p2align 6,,7
.L20589:
	movq	$_iob+112, %rdi
	movl	$.LC324, %esi
	xorl	%eax, %eax
	call	fprintf
	movl	%ebp, %r13d
	movq	24(%rbx), %rdx
	jmp	.L20539
	.p2align 6,,7
.L20584:
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC322, %esi
	call	fprintf
	movq	(%r12), %rbp
	testq	%rbp, %rbp
	je	.L20519
	.p2align 4,,7
.L20528:
	movl	no_print_functions(%rip), %eax
	testl	%eax, %eax
	je	.L20577
	movzbl	16(%rbp), %eax
	cmpb	$29, %al
	je	.L20520
.L20522:
	movl	no_print_builtins(%rip), %edx
	testl	%edx, %edx
	je	.L20523
	cmpb	$32, %al
	je	.L20592
.L20523:
	xorl	%ebx, %ebx
	cmpb	$29, %al
	sete	%bl
	addl	$2, %ebx
	addl	%ebx, %r13d
	cmpl	$6, %r13d
	jg	.L20593
.L20526:
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC325, %esi
	movq	%rbp, %rdx
	call	print_node_brief
	cmpb	$0, 16(%rbp)
	je	.L20519
.L20520:
	movq	(%rbp), %rbp
	testq	%rbp, %rbp
	jne	.L20528
.L20519:
	testl	%r13d, %r13d
	je	.L20517
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20517
	.p2align 6,,7
.L20593:
	movq	$_iob+112, %rdi
	movl	$.LC324, %esi
	xorl	%eax, %eax
	call	fprintf
	movl	%ebx, %r13d
	jmp	.L20526
.L20592:
	movq	24(%rbp), %rdi
	movl	$.LC323, %esi
	movl	$11, %edx
	call	strcmp
	testl	%eax, %eax
	je	.L20520
	movzbl	16(%rbp), %eax
	jmp	.L20523
	.p2align 6,,7
.L20577:
	movzbl	16(%rbp), %eax
	jmp	.L20522
	.p2align 6,,7
.L20583:
	movq	$_iob+112, %rdi
	movl	$.LC320, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20516
	.p2align 6,,7
.L20582:
	movq	$_iob+112, %rdi
	movl	$.LC319, %esi
	xorl	%eax, %eax
	call	fprintf
	movzbl	67(%r12), %eax
	jmp	.L20515
	.p2align 6,,7
.L20581:
	movq	$_iob+112, %rdi
	movl	$.LC318, %esi
	xorl	%eax, %eax
	call	fprintf
	movzbl	67(%r12), %eax
	jmp	.L20514
	.p2align 6,,7
.L20580:
	movq	$_iob+112, %rdi
	movl	$.LC317, %esi
	xorl	%eax, %eax
	call	fprintf
	movzbl	67(%r12), %eax
	jmp	.L20513
	.p2align 6,,7
.L20579:
	movq	%r15, %rdi
	movl	$.LC316, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20512
.LFE39:
.Lfe39:
	.size	print_other_binding_stack,.Lfe39-print_other_binding_stack
	.section	.rodata.str1.1
.LC335:
	.string	"current_binding_level="
.LC336:
	.string	"\nclass_binding_level="
.LC337:
	.string	"\nglobal_binding_level="
.LC338:
	.string	"global:\n"
	.text
	.align 2
	.p2align 4,,15
.globl print_binding_stack
	.type	print_binding_stack,@function
print_binding_stack:
.LFB40:
	pushq	%r15
.LCFI108:
	movl	$.LC335, %esi
	xorl	%eax, %eax
	pushq	%r14
.LCFI109:
	pushq	%r13
.LCFI110:
	pushq	%r12
.LCFI111:
	pushq	%rbp
.LCFI112:
	movq	$_iob+112, %rbp
	pushq	%rbx
.LCFI113:
	movq	%rbp, %rdi
	subq	$8, %rsp
.LCFI114:
	call	fprintf
	xorl	%eax, %eax
	movq	current_binding_level(%rip), %rdx
	movq	%rbp, %rdi
	movl	$.LC314, %esi
	call	fprintf
	xorl	%eax, %eax
	movl	$.LC336, %esi
	movq	%rbp, %rdi
	call	fprintf
	xorl	%eax, %eax
	movq	class_binding_level(%rip), %rdx
	movq	%rbp, %rdi
	movl	$.LC314, %esi
	call	fprintf
	xorl	%eax, %eax
	movl	$.LC337, %esi
	movq	%rbp, %rdi
	call	fprintf
	xorl	%eax, %eax
	movq	global_binding_level(%rip), %rdx
	movq	%rbp, %rdi
	movl	$.LC314, %esi
	call	fprintf
	xorl	%eax, %eax
	movl	$.LC321, %esi
	movq	%rbp, %rdi
	call	fprintf
	movq	class_binding_level(%rip), %rdx
	testq	%rdx, %rdx
	je	.L20595
	movq	%rdx, %rax
	movq	current_binding_level(%rip), %rcx
	.p2align 4,,7
.L20601:
	cmpq	%rcx, %rax
	je	.L20597
	movq	56(%rax), %rax
	testq	%rax, %rax
	jne	.L20601
.L20602:
	movq	%rcx, %r12
.L20604:
	cmpq	global_binding_level(%rip), %r12
	je	.L20719
	movq	$_iob+112, %r15
	.p2align 4,,7
.L20662:
	movq	%r15, %rdi
	movl	$.LC334, %esi
	xorl	%eax, %eax
	call	fprintf
	xorl	%r13d, %r13d
	xorl	%eax, %eax
	movq	%r12, %rdx
	movq	%r15, %rdi
	movl	$.LC314, %esi
	call	fprintf
	xorl	%eax, %eax
	movl	$.LC321, %esi
	movq	%r15, %rdi
	call	fprintf
	xorl	%eax, %eax
	movl	$.LC313, %esi
	movq	%r15, %rdi
	call	fprintf
	xorl	%eax, %eax
	movq	40(%r12), %rdx
	movq	%r15, %rdi
	movl	$.LC314, %esi
	call	fprintf
	xorl	%eax, %eax
	movl	$.LC315, %esi
	movzbl	66(%r12), %r8d
	movzwl	64(%r12), %edx
	movq	%r15, %rdi
	movl	%r8d, %ecx
	shrb	$4, %r8b
	andl	$15, %ecx
	andl	$7, %r8d
	call	fprintf
	testb	$-128, 66(%r12)
	jne	.L20742
.L20609:
	movzbl	67(%r12), %eax
	testb	$1, %al
	jne	.L20743
.L20610:
	testb	$2, %al
	jne	.L20744
.L20611:
	testb	$4, %al
	jne	.L20745
.L20612:
	testb	$8, %al
	jne	.L20746
.L20613:
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	call	fprintf
	cmpq	$0, (%r12)
	jne	.L20747
.L20614:
	cmpq	$0, 8(%r12)
	jne	.L20748
.L20627:
	cmpq	$0, 16(%r12)
	jne	.L20749
.L20643:
	cmpq	$0, 24(%r12)
	jne	.L20750
.L20649:
	cmpq	$0, 32(%r12)
	jne	.L20751
.L20607:
	movq	56(%r12), %r12
	cmpq	global_binding_level(%rip), %r12
	jne	.L20662
.L20719:
	movq	$_iob+112, %rbx
	movl	$.LC338, %esi
	xorl	%eax, %eax
	movq	%rbx, %rdi
	xorl	%r13d, %r13d
	call	fprintf
	xorl	%eax, %eax
	movl	$.LC313, %esi
	movq	global_binding_level(%rip), %r12
	movq	%rbx, %rdi
	call	fprintf
	xorl	%eax, %eax
	movl	$.LC314, %esi
	movq	%rbx, %rdi
	movq	40(%r12), %rdx
	call	fprintf
	xorl	%eax, %eax
	movl	$.LC315, %esi
	movzbl	66(%r12), %r8d
	movzwl	64(%r12), %edx
	movq	%rbx, %rdi
	movl	%r8d, %ecx
	shrb	$4, %r8b
	andl	$15, %ecx
	andl	$7, %r8d
	call	fprintf
	testb	$-128, 66(%r12)
	jne	.L20752
.L20664:
	movzbl	67(%r12), %eax
	testb	$1, %al
	jne	.L20753
.L20665:
	testb	$2, %al
	jne	.L20754
.L20666:
	testb	$4, %al
	jne	.L20755
.L20667:
	testb	$8, %al
	jne	.L20756
.L20668:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	movl	$.LC321, %esi
	call	fprintf
	cmpq	$0, (%r12)
	jne	.L20757
.L20669:
	cmpq	$0, 8(%r12)
	jne	.L20758
.L20682:
	cmpq	$0, 16(%r12)
	jne	.L20759
.L20698:
	cmpq	$0, 24(%r12)
	jne	.L20760
.L20704:
	cmpq	$0, 32(%r12)
	jne	.L20761
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	ret
.L20761:
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC333, %esi
	call	fprintf
	movq	32(%r12), %rbx
	testq	%rbx, %rbx
	jne	.L20715
.L20737:
	addq	$8, %rsp
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	xorl	%eax, %eax
	jmp	fprintf
	.p2align 6,,7
.L20715:
	movq	24(%rbx), %r12
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC331, %esi
	movq	32(%r12), %rdx
	call	fprintf
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L20715
	jmp	.L20737
.L20760:
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC332, %esi
	call	fprintf
	movq	24(%r12), %rbx
	testq	%rbx, %rbx
	jne	.L20709
.L20735:
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20704
.L20709:
	movq	24(%rbx), %r15
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC331, %esi
	movq	32(%r15), %rdx
	call	fprintf
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L20709
	jmp	.L20735
.L20759:
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC330, %esi
	call	fprintf
	movq	16(%r12), %rbx
	testq	%rbx, %rbx
	jne	.L20703
.L20733:
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20698
.L20703:
	movq	24(%rbx), %r13
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC331, %esi
	movq	32(%r13), %rdx
	call	fprintf
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L20703
	jmp	.L20733
.L20758:
	movq	$_iob+112, %rbp
	xorl	%eax, %eax
	movl	$.LC326, %esi
	movq	%rbp, %rdi
	xorl	%r13d, %r13d
	call	fprintf
	movq	8(%r12), %rbx
	testq	%rbx, %rbx
	je	.L20731
	movq	%rbp, %r14
	movq	%rbp, %r15
	.p2align 4,,7
.L20696:
	movq	24(%rbx), %rdx
	movl	$3, %ebp
	testq	%rdx, %rdx
	je	.L20688
	movq	32(%rbx), %rbp
	movq	80(%rbp), %rdi
	cmpq	56(%rdi), %rdx
	setne	%sil
	movzbl	%sil, %ecx
	leal	2(%rcx,%rcx), %ebp
.L20688:
	addl	%ebp, %r13d
	cmpl	$5, %r13d
	jg	.L20762
.L20691:
	testq	%rdx, %rdx
	je	.L20763
	movq	32(%rbx), %rcx
	movq	80(%rcx), %r8
	cmpq	56(%r8), %rdx
	je	.L20764
	movq	%r14, %rdi
	movl	$.LC329, %esi
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	print_node_brief
	movl	$.LC325, %esi
	movq	%r14, %rdi
.L20741:
	movq	32(%rbx), %rdx
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	print_node_brief
	xorl	%eax, %eax
	movl	$.LC328, %esi
	movq	$_iob+112, %rdi
	call	fprintf
.L20685:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L20696
.L20731:
	testl	%r13d, %r13d
	je	.L20682
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20682
.L20764:
	movq	%rcx, %rdx
	movq	$_iob+112, %rdi
	movl	$.LC325, %esi
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	print_node_brief
	jmp	.L20685
.L20763:
	movq	%r15, %rdi
	movl	$.LC327, %esi
	jmp	.L20741
.L20762:
	movq	$_iob+112, %rdi
	movl	$.LC324, %esi
	xorl	%eax, %eax
	call	fprintf
	movl	%ebp, %r13d
	movq	24(%rbx), %rdx
	jmp	.L20691
.L20757:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	movl	$.LC322, %esi
	call	fprintf
	movq	(%r12), %rbp
	testq	%rbp, %rbp
	je	.L20671
	.p2align 4,,7
.L20680:
	movl	no_print_functions(%rip), %ebx
	testl	%ebx, %ebx
	je	.L20739
	movzbl	16(%rbp), %eax
	cmpb	$29, %al
	je	.L20672
.L20674:
	movl	no_print_builtins(%rip), %r14d
	testl	%r14d, %r14d
	je	.L20675
	cmpb	$32, %al
	je	.L20765
.L20675:
	xorl	%ebx, %ebx
	cmpb	$29, %al
	sete	%bl
	addl	$2, %ebx
	addl	%ebx, %r13d
	cmpl	$6, %r13d
	jg	.L20766
.L20678:
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC325, %esi
	movq	%rbp, %rdx
	call	print_node_brief
	cmpb	$0, 16(%rbp)
	je	.L20671
.L20672:
	movq	(%rbp), %rbp
	testq	%rbp, %rbp
	jne	.L20680
.L20671:
	testl	%r13d, %r13d
	je	.L20669
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20669
.L20766:
	movq	$_iob+112, %rdi
	movl	$.LC324, %esi
	xorl	%eax, %eax
	call	fprintf
	movl	%ebx, %r13d
	jmp	.L20678
.L20765:
	movq	24(%rbp), %rdi
	movl	$.LC323, %esi
	movl	$11, %edx
	call	strcmp
	testl	%eax, %eax
	je	.L20672
	movzbl	16(%rbp), %eax
	jmp	.L20675
	.p2align 6,,7
.L20739:
	movzbl	16(%rbp), %eax
	jmp	.L20674
.L20756:
	movq	%rbx, %rdi
	movl	$.LC320, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20668
.L20755:
	movq	%rbx, %rdi
	movl	$.LC319, %esi
	xorl	%eax, %eax
	call	fprintf
	movzbl	67(%r12), %eax
	jmp	.L20667
.L20754:
	movq	%rbx, %rdi
	movl	$.LC318, %esi
	xorl	%eax, %eax
	call	fprintf
	movzbl	67(%r12), %eax
	jmp	.L20666
.L20753:
	movq	%rbx, %rdi
	movl	$.LC317, %esi
	xorl	%eax, %eax
	call	fprintf
	movzbl	67(%r12), %eax
	jmp	.L20665
.L20752:
	movq	%rbx, %rdi
	movl	$.LC316, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20664
	.p2align 6,,7
.L20751:
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC333, %esi
	call	fprintf
	movq	32(%r12), %rbx
	testq	%rbx, %rbx
	jne	.L20660
.L20728:
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20607
	.p2align 6,,7
.L20660:
	movq	24(%rbx), %r11
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC331, %esi
	movq	32(%r11), %rdx
	call	fprintf
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L20660
	jmp	.L20728
	.p2align 6,,7
.L20750:
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC332, %esi
	call	fprintf
	movq	24(%r12), %rbx
	testq	%rbx, %rbx
	jne	.L20654
.L20726:
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20649
	.p2align 6,,7
.L20654:
	movq	24(%rbx), %r10
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC331, %esi
	movq	32(%r10), %rdx
	call	fprintf
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L20654
	jmp	.L20726
	.p2align 6,,7
.L20749:
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC330, %esi
	call	fprintf
	movq	16(%r12), %rbx
	testq	%rbx, %rbx
	jne	.L20648
.L20724:
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20643
	.p2align 6,,7
.L20648:
	movq	24(%rbx), %r9
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC331, %esi
	movq	32(%r9), %rdx
	call	fprintf
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L20648
	jmp	.L20724
	.p2align 6,,7
.L20748:
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC326, %esi
	call	fprintf
	xorl	%r13d, %r13d
	movq	8(%r12), %rbx
	testq	%rbx, %rbx
	je	.L20722
	movq	$_iob+112, %r14
	.p2align 4,,7
.L20641:
	movq	24(%rbx), %rdx
	movl	$3, %ebp
	testq	%rdx, %rdx
	je	.L20633
	movq	32(%rbx), %rbp
	movq	80(%rbp), %rdi
	cmpq	56(%rdi), %rdx
	setne	%sil
	movzbl	%sil, %ecx
	leal	2(%rcx,%rcx), %ebp
.L20633:
	addl	%ebp, %r13d
	cmpl	$5, %r13d
	jg	.L20767
.L20636:
	testq	%rdx, %rdx
	je	.L20768
	movq	32(%rbx), %rcx
	movq	80(%rcx), %r8
	cmpq	56(%r8), %rdx
	je	.L20769
	movq	%r14, %rdi
	movl	$.LC329, %esi
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	print_node_brief
	movl	$.LC325, %esi
	movq	%r14, %rdi
.L20740:
	movq	32(%rbx), %rdx
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	print_node_brief
	xorl	%eax, %eax
	movl	$.LC328, %esi
	movq	$_iob+112, %rdi
	call	fprintf
.L20630:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L20641
.L20722:
	testl	%r13d, %r13d
	je	.L20627
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20627
	.p2align 6,,7
.L20769:
	movq	%rcx, %rdx
	movq	$_iob+112, %rdi
	movl	$.LC325, %esi
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	call	print_node_brief
	jmp	.L20630
	.p2align 6,,7
.L20768:
	movq	$_iob+112, %rdi
	movl	$.LC327, %esi
	jmp	.L20740
	.p2align 6,,7
.L20767:
	movq	$_iob+112, %rdi
	movl	$.LC324, %esi
	xorl	%eax, %eax
	call	fprintf
	movl	%ebp, %r13d
	movq	24(%rbx), %rdx
	jmp	.L20636
	.p2align 6,,7
.L20747:
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC322, %esi
	call	fprintf
	movq	(%r12), %rbp
	testq	%rbp, %rbp
	je	.L20616
	.p2align 4,,7
.L20625:
	movl	no_print_functions(%rip), %eax
	testl	%eax, %eax
	je	.L20738
	movzbl	16(%rbp), %eax
	cmpb	$29, %al
	je	.L20617
.L20619:
	movl	no_print_builtins(%rip), %edx
	testl	%edx, %edx
	je	.L20620
	cmpb	$32, %al
	je	.L20770
.L20620:
	xorl	%ebx, %ebx
	cmpb	$29, %al
	sete	%bl
	addl	$2, %ebx
	addl	%ebx, %r13d
	cmpl	$6, %r13d
	jg	.L20771
.L20623:
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	movq	$_iob+112, %rdi
	movl	$.LC325, %esi
	movq	%rbp, %rdx
	call	print_node_brief
	cmpb	$0, 16(%rbp)
	je	.L20616
.L20617:
	movq	(%rbp), %rbp
	testq	%rbp, %rbp
	jne	.L20625
.L20616:
	testl	%r13d, %r13d
	je	.L20614
	movq	$_iob+112, %rdi
	movl	$.LC321, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20614
	.p2align 6,,7
.L20771:
	movq	$_iob+112, %rdi
	movl	$.LC324, %esi
	xorl	%eax, %eax
	call	fprintf
	movl	%ebx, %r13d
	jmp	.L20623
.L20770:
	movq	24(%rbp), %rdi
	movl	$.LC323, %esi
	movl	$11, %edx
	call	strcmp
	testl	%eax, %eax
	je	.L20617
	movzbl	16(%rbp), %eax
	jmp	.L20620
	.p2align 6,,7
.L20738:
	movzbl	16(%rbp), %eax
	jmp	.L20619
	.p2align 6,,7
.L20746:
	movq	$_iob+112, %rdi
	movl	$.LC320, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20613
	.p2align 6,,7
.L20745:
	movq	$_iob+112, %rdi
	movl	$.LC319, %esi
	xorl	%eax, %eax
	call	fprintf
	movzbl	67(%r12), %eax
	jmp	.L20612
	.p2align 6,,7
.L20744:
	movq	$_iob+112, %rdi
	movl	$.LC318, %esi
	xorl	%eax, %eax
	call	fprintf
	movzbl	67(%r12), %eax
	jmp	.L20611
	.p2align 6,,7
.L20743:
	movq	$_iob+112, %rdi
	movl	$.LC317, %esi
	xorl	%eax, %eax
	call	fprintf
	movzbl	67(%r12), %eax
	jmp	.L20610
	.p2align 6,,7
.L20742:
	movq	%r15, %rdi
	movl	$.LC316, %esi
	xorl	%eax, %eax
	call	fprintf
	jmp	.L20609
.L20597:
	testq	%rax, %rax
	movq	%rdx, %r12
	jne	.L20604
	jmp	.L20602
.L20595:
	movq	current_binding_level(%rip), %r12
	jmp	.L20604
.LFE40:
.Lfe40:
	.size	print_binding_stack,.Lfe40-print_binding_stack
	.align 2
	.p2align 4,,15
.globl push_to_top_level
	.type	push_to_top_level,@function
push_to_top_level:
.LFB41:
	pushq	%r15
.LCFI115:
	xorl	%eax, %eax
	movl	$64, %edi
	pushq	%r14
.LCFI116:
	xorl	%r14d, %r14d
	pushq	%r13
.LCFI117:
	pushq	%r12
.LCFI118:
	pushq	%rbp
.LCFI119:
	pushq	%rbx
.LCFI120:
	subq	$8, %rsp
.LCFI121:
	call	xmalloc
	movq	%rax, %r15
	movq	current_binding_level(%rip), %rax
	testq	%rax, %rax
	movq	%rax, %r13
	je	.L20811
.L20809:
	movq	(%r13), %rbp
	testq	%rbp, %rbp
	je	.L20817
	movq	global_binding_level(%rip), %rdx
	.p2align 4,,7
.L20802:
	cmpq	%rdx, %r13
	je	.L20779
	movq	112(%rbp), %rbx
	testq	%rbx, %rbx
	je	.L20779
	cmpq	$0, 48(%rbx)
	jne	.L20782
	cmpq	$0, 56(%rbx)
	je	.L20779
.L20782:
	testq	%r14, %r14
	movq	%r14, %rax
	je	.L20815
	.p2align 4,,7
.L20790:
	cmpq	%rbx, 32(%rax)
	je	.L20779
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L20790
.L20815:
	xorl	%eax, %eax
	movl	$4, %edi
	call	make_tree_vec
	testq	%rbx, %rbx
	movq	%rax, %r12
	je	.L20791
	cmpb	$1, 16(%rbx)
	movl	$135, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	current_binding_level(%rip), %rax
	movq	%rbx, 32(%r12)
	movq	8(%rbx), %rcx
	cmpq	global_binding_level(%rip), %rax
	movq	%rcx, 40(%r12)
	movq	48(%rbx), %rdx
	movq	%rdx, 48(%r12)
	movq	56(%rbx), %rdx
	movq	%rdx, 56(%r12)
	movq	$0, 56(%rbx)
	movq	$0, 48(%rbx)
	je	.L20792
	cmpq	class_binding_level(%rip), %rax
	je	.L20793
.L20797:
	cmpq	$0, current_class_type(%rip)
	je	.L20792
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L20792
	cmpb	$32, 16(%rax)
	je	.L20795
.L20792:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L20791
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L20795
	cmpb	$-127, %dl
	je	.L20818
	.p2align 4,,7
.L20791:
	movq	%r14, (%r12)
	movq	global_binding_level(%rip), %rdx
	movq	%r12, %r14
.L20789:
.L20779:
	movq	(%rbp), %rbp
	testq	%rbp, %rbp
	jne	.L20802
.L20813:
	cmpq	%rdx, %r13
	je	.L20775
	movq	32(%r13), %rcx
	testq	%rcx, %rcx
	je	.L20775
	.p2align 4,,7
.L20808:
	movq	24(%rcx), %rbx
	movq	32(%rcx), %rdi
	movq	(%rcx), %rcx
	movq	%rdi, 8(%rbx)
	testq	%rcx, %rcx
	jne	.L20808
.L20775:
	movq	56(%r13), %r13
	testq	%r13, %r13
	jne	.L20809
	movq	current_binding_level(%rip), %rax
.L20811:
	movq	current_class_name(%rip), %r12
	movq	current_class_type(%rip), %r11
	movq	%rax, (%r15)
	movq	current_class_decl(%rip), %r10
	movq	global_binding_level(%rip), %r13
	movq	current_function_decl(%rip), %r9
	movq	current_saved_scope(%rip), %rbp
	movq	class_binding_level(%rip), %r8
	movq	%r12, 24(%r15)
	movq	%r11, 32(%r15)
	movq	%r10, 40(%r15)
	movq	%r13, current_binding_level(%rip)
	movq	%r9, 48(%r15)
	movq	%rbp, 16(%r15)
	movq	$0, current_function_decl(%rip)
	movq	%r8, 56(%r15)
	movq	$0, current_class_decl(%rip)
	movq	$0, current_class_type(%rip)
	movq	$0, current_class_name(%rip)
	movq	%r15, current_saved_scope(%rip)
	movq	$0, class_binding_level(%rip)
	movq	%r14, 8(%r15)
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	ret
.L20818:
	movq	$0, 8(%rbx)
	jmp	.L20791
.L20795:
	movq	8(%rax), %rsi
	movq	%rsi, 8(%rbx)
	jmp	.L20791
.L20793:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L20797
.L20817:
	movq	global_binding_level(%rip), %rdx
	jmp	.L20813
.LFE41:
.Lfe41:
	.size	push_to_top_level,.Lfe41-push_to_top_level
	.align 2
	.p2align 4,,15
.globl pop_from_top_level
	.type	pop_from_top_level,@function
pop_from_top_level:
.LFB42:
	movq	current_saved_scope(%rip), %rdi
	movq	(%rdi), %rdx
	movq	%rdx, current_binding_level(%rip)
	movq	16(%rdi), %rdx
	movq	%rdx, current_saved_scope(%rip)
	movq	8(%rdi), %rdx
	testq	%rdx, %rdx
	je	.L20829
	.p2align 4,,7
.L20825:
	movq	32(%rdx), %rcx
	testq	%rcx, %rcx
	je	.L20822
	movq	40(%rdx), %r9
	movq	%r9, 8(%rcx)
	movq	48(%rdx), %r8
	movq	%r8, 48(%rcx)
	movq	56(%rdx), %rsi
	movq	%rsi, 56(%rcx)
.L20822:
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L20825
.L20829:
	movq	32(%rdi), %rdx
	movq	24(%rdi), %r10
	movq	40(%rdi), %rcx
	testq	%rdx, %rdx
	movq	%r10, current_class_name(%rip)
	movq	%rdx, current_class_type(%rip)
	movq	%rcx, current_class_decl(%rip)
	je	.L20826
	movq	144(%rdx), %rsi
	movq	168(%rsi), %r11
	movq	%r11, C_C_D(%rip)
.L20827:
	movq	48(%rdi), %r8
	movq	56(%rdi), %rdx
	xorl	%eax, %eax
	movq	%r8, current_function_decl(%rip)
	movq	%rdx, class_binding_level(%rip)
	jmp	free
.L20826:
	movq	$0, C_C_D(%rip)
	jmp	.L20827
.LFE42:
.Lfe42:
	.size	pop_from_top_level,.Lfe42-pop_from_top_level
	.align 2
	.p2align 4,,15
.globl set_identifier_type_value
	.type	set_identifier_type_value,@function
set_identifier_type_value:
.LFB43:
	subq	$24, %rsp
.LCFI122:
	movq	%rbx, (%rsp)
.LCFI123:
	movq	%rbp, 8(%rsp)
.LCFI124:
	movq	%r12, 16(%rsp)
.LCFI125:
	movq	current_binding_level(%rip), %rbx
	movq	%rdi, %rbp
	movq	%rsi, %r12
	cmpq	global_binding_level(%rip), %rbx
	je	.L20831
	movq	8(%rdi), %rsi
.L20834:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L20832:
	movq	%r12, 8(%rbp)
	movq	16(%rsp), %r12
	movq	8(%rsp), %rbp
	movq	(%rsp), %rbx
	addq	$24, %rsp
	ret
	.p2align 6,,7
.L20831:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L20832
	movq	8(%rdi), %rsi
	jmp	.L20834
.LFE43:
.Lfe43:
	.size	set_identifier_type_value,.Lfe43-set_identifier_type_value
	.align 2
	.p2align 4,,15
.globl set_identifier_local_value
	.type	set_identifier_local_value,@function
set_identifier_local_value:
.LFB44:
	subq	$24, %rsp
.LCFI126:
	movq	%rbx, (%rsp)
.LCFI127:
	movq	%rbp, 8(%rsp)
.LCFI128:
	movq	%r12, 16(%rsp)
.LCFI129:
	movq	current_binding_level(%rip), %rbx
	movq	%rdi, %rbp
	movq	%rsi, %r12
	cmpq	global_binding_level(%rip), %rbx
	je	.L20836
	movq	48(%rdi), %rsi
.L20839:
	movq	16(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%rbx)
.L20837:
	movq	%r12, 48(%rbp)
	movq	16(%rsp), %r12
	movq	8(%rsp), %rbp
	movq	(%rsp), %rbx
	addq	$24, %rsp
	ret
	.p2align 6,,7
.L20836:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L20837
	movq	48(%rdi), %rsi
	jmp	.L20839
.LFE44:
.Lfe44:
	.size	set_identifier_local_value,.Lfe44-set_identifier_local_value
	.align 2
	.p2align 4,,15
.globl pushtag
	.type	pushtag,@function
pushtag:
.LFB45:
	pushq	%rbp
.LCFI130:
	movq	%rsp, %rbp
.LCFI131:
	pushq	%r15
.LCFI132:
	pushq	%r14
.LCFI133:
	movq	%rdi, %r14
	pushq	%r13
.LCFI134:
	pushq	%r12
.LCFI135:
	pushq	%rbx
.LCFI136:
	subq	$152, %rsp
.LCFI137:
	movq	class_binding_level(%rip), %r13
	movq	%rsi, -48(%rbp)
	testq	%r13, %r13
	jne	.L20845
	movq	current_binding_level(%rip), %r13
	testb	$-128, 66(%r13)
	je	.L20845
	.p2align 4,,7
.L20849:
	movq	56(%r13), %r13
	testb	$-128, 66(%r13)
	jne	.L20849
.L20845:
	cmpq	global_binding_level(%rip), %r13
	je	.L21343
	movq	-48(%rbp), %rsi
	movq	8(%r13), %rdx
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	saveable_tree_cons
.L21326:
	testq	%r14, %r14
	movq	%rax, 8(%r13)
	je	.L20852
	movq	-48(%rbp), %rax
	cmpq	$0, 80(%rax)
	jne	.L20853
	movq	%r14, 80(%rax)
.L20853:
	movq	-48(%rbp), %rdx
	cmpq	%rdx, 8(%r14)
	je	.L20854
	cmpb	$21, 16(%rdx)
	je	.L21344
.L20855:
	movq	current_class_type(%rip), %rax
	testq	%rax, %rax
	je	.L20857
	cmpq	$0, 32(%rax)
	je	.L20856
.L20857:
	movq	lang_name_cplusplus(%rip), %rdx
	cmpq	%rdx, current_lang_name(%rip)
	je	.L21345
.L20858:
	xorl	%ecx, %ecx
.L20893:
	testq	%rcx, %rcx
	jne	.L20894
.L21291:
	movq	-48(%rbp), %rdx
	movl	$32, %edi
	movq	%r14, %rsi
	xorl	%eax, %eax
	call	build_decl
	movl	$1, %edx
	movl	$1, %esi
	movq	-48(%rbp), %rdi
	movq	%rax, %r15
	xorl	%eax, %eax
	call	build_overload_name
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	get_identifier
	movq	current_binding_level(%rip), %rbx
	movl	$0, 32(%r15)
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, 112(%r15)
	je	.L21346
.L21328:
	movq	8(%r14), %rsi
	movq	32(%rbx), %rdx
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L20896:
	movq	-48(%rbp), %rbx
	movq	%rbx, 8(%r14)
.L20899:
	movq	32(%r14), %rdx
	cmpb	$36, (%rdx)
	je	.L21347
.L20901:
	movq	-48(%rbp), %r11
	movq	%r15, %r12
	movq	80(%r11), %rax
	testq	%rax, %rax
	je	.L21088
	cmpb	$32, 16(%rax)
	je	.L21348
.L20902:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L20921
	movq	%r15, %r12
	movq	56(%r15), %r15
	testq	%r15, %r15
	je	.L21305
	movq	56(%r15), %rsi
	testq	%rsi, %rsi
	je	.L20923
	movq	24(%rbx), %rdx
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 24(%rbx)
.L20923:
	movq	decl_obstack+24(%rip), %rdx
	movq	%r12, 56(%r15)
	leaq	8(%rdx), %r9
	cmpq	decl_obstack+32(%rip), %r9
	ja	.L21349
.L20925:
	movq	%rdx, %r10
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%r12, (%r10)
	cmpb	$32, 16(%r12)
	je	.L21350
.L21305:
	movq	32(%r14), %rdx
.L21088:
	cmpb	$36, (%rdx)
	je	.L21351
.L21102:
	movq	current_class_type(%rip), %rax
	movq	-48(%rbp), %r15
	testq	%rax, %rax
	movq	%r12, 80(%r15)
	jne	.L21105
	cmpq	$0, current_function_decl(%rip)
	je	.L21104
.L21105:
	movq	lang_name_cplusplus(%rip), %rdi
	cmpq	%rdi, current_lang_name(%rip)
	je	.L21103
.L21104:
	movq	%r14, 72(%r12)
.L20854:
	movzbl	66(%r13), %r12d
	andl	$15, %r12d
	cmpl	$2, %r12d
	je	.L21352
.L20852:
	movq	-48(%rbp), %rcx
	movq	80(%rcx), %rax
	cmpb	$32, 16(%rax)
	je	.L21353
	movq	-48(%rbp), %rdx
	xorl	%esi, %esi
	xorl	%eax, %eax
	movl	$32, %edi
	call	build_decl
	movq	current_binding_level(%rip), %r15
	movq	%rax, %r13
	movq	112(%rax), %r12
	movq	current_function_decl(%rip), %rax
	cmpq	%rax, %r13
	je	.L21312
	movzbl	16(%r13), %edx
	cmpb	$29, %dl
	je	.L21354
.L21121:
	movq	%rax, 64(%r13)
.L21120:
	cmpb	$32, %dl
	je	.L21355
.L21122:
	testq	%r12, %r12
	je	.L21123
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L21356
	cmpq	$0, 48(%r12)
	jne	.L21126
	xorl	%r14d, %r14d
.L21125:
	testq	%r14, %r14
	je	.L21143
	cmpq	error_mark_node(%rip), %r14
	je	.L21357
.L21133:
	testq	%r14, %r14
	je	.L21316
	cmpb	$34, 16(%r14)
	je	.L21358
.L21135:
	movq	24(%r14), %rax
	testq	%r14, %r14
	movq	%rax, -184(%rbp)
	movl	32(%r14), %ebx
	je	.L21316
	movzbl	16(%r14), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L21137
	cmpb	$32, %al
	je	.L21143
	cmpb	$32, %dl
	je	.L21325
	xorl	%eax, %eax
	movq	%r13, %rdi
	movq	%r14, %rsi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L21316
	.p2align 4,,7
.L21142:
	movq	-48(%rbp), %r13
	movq	%r14, (%r13)
.L20843:
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	leave
	ret
.L21316:
	movzbl	16(%r13), %edx
.L21143:
	cmpb	$32, %dl
	je	.L21325
.L21151:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L21168
	movq	40(%r12), %rax
	testq	%rax, %rax
	je	.L21168
	testb	$1, 53(%rax)
	jne	.L21169
	testb	$8, 18(%rax)
	je	.L21168
.L21169:
	andb	$8, %dl
	je	.L21359
.L21168:
	movl	flag_traditional(%rip), %r9d
	testl	%r9d, %r9d
	je	.L21320
	testb	$1, 53(%r13)
	je	.L21320
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %r10
	cmpq	%r10, current_binding_level(%rip)
	je	.L21172
	movq	48(%r12), %rsi
	testq	%rsi, %rsi
	movq	%rsi, %rdx
	jne	.L21173
.L21172:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L21174
	movq	56(%r12), %rdx
	testq	%rdx, %rdx
	jne	.L21289
	movq	32(%rdi), %rax
	testq	%rax, %rax
	movq	%rax, -152(%rbp)
	jne	.L21175
	movq	144(%rdi), %rcx
	testb	$1, 3(%rcx)
	jne	.L21360
.L21175:
	testq	%rdx, %rdx
	jne	.L21289
.L21290:
	xorl	%eax, %eax
	movq	%r12, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rdx
	jne	.L21289
.L21174:
	movq	40(%r12), %rdx
.L21173:
	testq	%rdx, %rdx
	je	.L21293
.L21289:
	cmpb	$32, 16(%rdx)
	je	.L21177
	movl	looking_for_typename(%rip), %ecx
	testl	%ecx, %ecx
	js	.L21177
	movq	8(%r12), %rax
	testq	%rax, %rax
	je	.L21185
	movq	80(%rax), %rax
	cmpq	%rax, %rdx
	je	.L21338
	testl	%ebx, %ebx
	jle	.L21361
.L21338:
	movq	%rax, %rdx
.L21177:
	testq	%rdx, %rdx
	jne	.L21320
.L21293:
	movq	global_binding_level(%rip), %r15
	movq	%r15, %rax
.L21171:
	cmpq	%rax, %r15
	je	.L21362
	movq	current_binding_level(%rip), %rbx
	movq	48(%r12), %r14
	movq	40(%r12), %r8
	cmpq	%rax, %rbx
	je	.L21363
.L21339:
	movq	16(%rbx), %rdx
	movq	%r12, %rdi
	movq	%r14, %rsi
	xorl	%eax, %eax
	movq	%r8, -192(%rbp)
	call	tree_cons
	movq	-192(%rbp), %r8
	movq	%rax, 16(%rbx)
.L21216:
	testq	%r14, %r14
	movq	%r13, 48(%r12)
	je	.L21364
.L21227:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L21229
	testq	%r14, %r14
	je	.L21230
	testb	$1, 53(%r13)
	jne	.L21230
	cmpb	$34, 16(%r14)
	je	.L21365
.L21230:
	movl	warn_shadow(%rip), %edi
	testl	%edi, %edi
	je	.L21229
	testb	$1, 53(%r13)
	jne	.L21229
	movl	32(%r13), %ecx
	testl	%ecx, %ecx
	je	.L21229
	testq	%rax, %rax
	jne	.L21229
	xorl	%edi, %edi
	testq	%r14, %r14
	je	.L21235
	cmpb	$34, 16(%r14)
	je	.L21366
.L21235:
	cmpq	$0, 56(%r12)
	je	.L21237
	movl	$.LC41, %edi
.L21236:
	testq	%rdi, %rdi
	jne	.L21340
.L21229:
	testq	%r14, %r14
	je	.L21321
	movq	16(%r15), %rdx
	movq	%r12, %rdi
	movq	%r14, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%r15)
.L21321:
	movzbl	16(%r13), %edx
.L21214:
	leal	-128(%rdx), %r14d
	cmpb	$1, %r14b
	jbe	.L21123
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L21123
	cmpb	$18, 16(%rcx)
	je	.L21367
.L21246:
	testb	$64, 46(%rcx)
	je	.L21123
.L21245:
	movzwl	64(%r15), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%r15)
	je	.L21368
.L21322:
	movzbl	16(%r13), %edx
	.p2align 4,,7
.L21123:
	cmpb	$32, %dl
	je	.L21369
.L21248:
	cmpq	global_binding_level(%rip), %r15
	movq	(%r15), %r8
	movq	%r8, (%r13)
	movq	%r13, (%r15)
	je	.L21370
.L21274:
	movq	%r13, %r14
	jmp	.L21142
.L21370:
	testb	$4, 17(%r13)
	jne	.L21274
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L21274
.L21369:
	testq	%r12, %r12
	je	.L21248
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L21249
	cmpq	class_binding_level(%rip), %rax
	je	.L21250
	movq	48(%r12), %rax
	testq	%rax, %rax
	je	.L21254
	cmpb	$32, 16(%rax)
	je	.L21252
.L21254:
	cmpq	$0, current_class_type(%rip)
	je	.L21249
	movq	56(%r12), %rax
	testq	%rax, %rax
	je	.L21249
	cmpb	$32, 16(%rax)
	je	.L21252
.L21249:
	movq	40(%r12), %rax
	testq	%rax, %rax
	je	.L21253
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L21252
	cmpb	$-127, %dl
	je	.L21371
.L21253:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L21248
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L21372
.L21260:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L21264
	cmpq	class_binding_level(%rip), %rax
	je	.L21265
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L21269
	cmpb	$32, 16(%rax)
	je	.L21267
.L21269:
	cmpq	$0, current_class_type(%rip)
	je	.L21264
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L21264
	cmpb	$32, 16(%rax)
	je	.L21267
.L21264:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L21248
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L21267
	cmpb	$-127, %dl
	jne	.L21248
	movq	$0, 8(%rbx)
	jmp	.L21248
.L21267:
	movq	8(%rax), %r12
	movq	%r12, 8(%rbx)
	jmp	.L21248
.L21265:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L21269
.L21372:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %rbx
	sete	%r10b
	movq	8(%r13), %r12
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r14)
	sete	%r9b
	xorl	%eax, %eax
	movzbl	%r9b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r14), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r12, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L21260
.L21371:
	movq	$0, 8(%r12)
	jmp	.L21253
.L21252:
	movq	8(%rax), %rdx
	movq	%rdx, 8(%r12)
	jmp	.L21253
.L21250:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L21254
.L21368:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L21322
.L21367:
	movq	8(%rcx), %rbx
	testb	$64, 46(%rbx)
	jne	.L21245
	jmp	.L21246
.L21340:
	movq	32(%r12), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L21229
.L21237:
	testq	%r14, %r14
	je	.L21239
	movl	$.LC42, %edi
	jmp	.L21236
.L21239:
	testq	%r8, %r8
	movl	$.LC43, %r11d
	cmovne	%r11, %rdi
	jmp	.L21236
.L21366:
	movl	$.LC40, %edi
	jmp	.L21236
.L21365:
	cmpb	$34, 16(%r13)
	je	.L21230
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r8
	movq	56(%r8), %rax
	je	.L21231
	movq	56(%rax), %rax
.L21231:
	movzbl	66(%rax), %esi
	andl	$15, %esi
	decl	%esi
	jne	.L21229
	movl	$.LC40, %edi
	jmp	.L21340
	.p2align 6,,7
.L21364:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L21373
.L21219:
	testq	%r14, %r14
	jne	.L21227
	testq	%r8, %r8
	jne	.L21227
	testb	$1, 53(%r13)
	je	.L21227
	testb	$8, 18(%r13)
	je	.L21227
	orb	$8, 18(%r12)
	jmp	.L21227
	.p2align 6,,7
.L21373:
	testq	%r8, %r8
	je	.L21219
	cmpb	$29, 16(%r13)
	jne	.L21219
	cmpb	$29, 16(%r8)
	jne	.L21219
	movq	8(%r8), %rsi
	movq	8(%r13), %rdi
	xorl	%eax, %eax
	movl	$1, %edx
	movq	%r8, -192(%rbp)
	call	comptypes
	movq	-192(%rbp), %r8
	testl	%eax, %eax
	je	.L21374
	movzbl	53(%r8), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L21222
	movzbl	53(%r13), %ebx
	leal	0(,%rax,8), %r9d
	leaq	88(%r13), %rdx
	andb	$-9, %bl
	orb	%r9b, %bl
	movb	%bl, 53(%r13)
	cmpq	%r8, current_function_decl(%rip)
	je	.L21223
	movq	88(%r8), %rax
.L21224:
	movq	%rax, (%rdx)
	movq	136(%r8), %rbx
	movq	80(%r8), %r11
	movq	72(%r8), %rdx
	movzbl	17(%r13), %r10d
	movq	%rbx, 136(%r13)
	movq	%r11, 80(%r13)
	movq	%rdx, 72(%r13)
	movzbl	17(%r8), %edi
	movq	%r8, 96(%r13)
	andb	$127, %r10b
	shrb	$7, %dil
	movzbl	%dil, %ecx
	movl	%ecx, %esi
	salb	$7, %sil
	orb	%sil, %r10b
	movb	%r10b, 17(%r13)
	movzbl	53(%r8), %ecx
.L21222:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L21225
	movzbl	53(%r13), %r9d
	salb	$4, %al
	andb	$-17, %r9b
	orb	%al, %r9b
	movb	%r9b, 53(%r13)
	movl	128(%r8), %eax
	movl	%eax, 128(%r13)
.L21225:
	movq	8(%r8), %rdx
	cmpq	$0, 24(%rdx)
	je	.L21219
	cmpq	$0, 88(%r8)
	je	.L21219
	movq	8(%r13), %r10
	cmpq	$0, 24(%r10)
	jne	.L21219
	movq	%rdx, 8(%r13)
	jmp	.L21219
.L21223:
	xorl	%eax, %eax
	jmp	.L21224
.L21374:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	movq	-192(%rbp), %r8
	jmp	.L21219
	.p2align 6,,7
.L21363:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L21216
	jmp	.L21339
.L21362:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L21375
.L21191:
	cmpq	$0, 40(%r12)
	jne	.L21192
	testb	$8, 18(%r13)
	je	.L21192
	orb	$8, 18(%r12)
.L21192:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L21376
.L21194:
	movq	%r13, 40(%r12)
	movzbl	16(%r13), %edx
.L21193:
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L21205
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L21195
	testb	$1, 18(%rcx)
	je	.L21195
	orb	$1, 18(%r13)
	movq	72(%r12), %rax
.L21195:
	testq	%rax, %rax
	je	.L21205
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L21200
	testb	$8, 17(%rcx)
	je	.L21200
	orb	$8, 17(%r13)
	movq	72(%r12), %rax
.L21200:
	testq	%rax, %rax
	je	.L21205
	cmpq	$0, 8(%rax)
	je	.L21205
	cmpb	$29, %dl
	je	.L21377
.L21208:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
.L21205:
	testb	$8, 18(%r12)
	je	.L21214
	cmpb	$32, %dl
	je	.L21214
	testb	$8, 18(%r13)
	jne	.L21214
	testb	$1, 53(%r13)
	jne	.L21214
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L21210
	cmpq	$0, 8(%rax)
	jne	.L21378
.L21210:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L21342:
	xorl	%eax, %eax
	call	warning
	jmp	.L21321
.L21378:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L21342
.L21377:
	movq	8(%r13), %r11
	movq	integer_type_node(%rip), %r14
	cmpq	%r14, 8(%r11)
	jne	.L21208
	jmp	.L21205
	.p2align 6,,7
.L21376:
	testq	%r14, %r14
	je	.L21194
	cmpb	$32, 16(%r14)
	jne	.L21193
	jmp	.L21194
.L21375:
	testb	$8, 54(%r13)
	jne	.L21191
	andb	$-9, 18(%r13)
	jmp	.L21191
	.p2align 6,,7
.L21320:
	movq	global_binding_level(%rip), %rax
	jmp	.L21171
.L21361:
	testl	%ecx, %ecx
	jg	.L21338
	testl	%ebx, %ebx
	je	.L21177
	movq	%rdx, %rsi
	movq	%r12, %rdi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L21338
	.p2align 6,,7
.L21185:
	movq	8(%rdx), %rdi
	cmpq	error_mark_node(%rip), %rdi
	cmove	%rdi, %rdx
	jmp	.L21177
.L21360:
	xorl	%ecx, %ecx
	movq	%r12, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rdx
	je	.L21177
	testq	%rax, %rax
	je	.L21290
	cmpb	$32, 16(%rax)
	cmovne	-152(%rbp), %rdx
	jmp	.L21175
	.p2align 6,,7
.L21359:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L21168
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r12), %rdi
	call	warning_with_decl
	jmp	.L21168
	.p2align 6,,7
.L21325:
	movq	8(%r13), %rdx
	movq	80(%rdx), %rbx
	testq	%rbx, %rbx
	je	.L21153
	movzbl	16(%rbx), %eax
	cmpb	$32, %al
	je	.L21152
.L21153:
	movq	global_binding_level(%rip), %rcx
	movq	%r13, %rbx
	cmpq	%rcx, current_binding_level(%rip)
	jne	.L21317
	movq	%r13, 80(%rdx)
.L21317:
	movzbl	16(%r13), %eax
.L21156:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	56(%rbx), %rdi
	testq	%rdi, %rdi
	movq	%rdi, -120(%rbp)
	je	.L21159
	cmpq	$0, 72(%rbx)
	je	.L21379
.L21159:
	movq	8(%r13), %r11
	movq	%r11, -136(%rbp)
	movq	80(%r11), %rax
	testq	%rax, %rax
	je	.L21151
	cmpq	$0, 56(%rax)
	je	.L21151
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %rax
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -144(%rbp)
	je	.L21164
	movq	8(%rax), %rsi
	movq	%rax, %rdi
.L21337:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L21165:
	movq	-136(%rbp), %rbx
	movq	-144(%rbp), %rdx
	movq	%rbx, 8(%rdx)
	jmp	.L21151
.L21164:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L21165
	movq	-144(%rbp), %r8
	movq	8(%r8), %rsi
	movq	%r8, %rdi
	jmp	.L21337
.L21379:
	movq	8(%r13), %rdx
	movq	current_class_name(%rip), %rbx
	movl	$136, %esi
	movq	%rdx, -128(%rbp)
	cmpb	$32, 16(%r13)
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L21160
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movq	-120(%rbp), %rsi
	cmpb	$1, 16(%rsi)
	movl	$138, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-120(%rbp), %r10
	movl	24(%r10), %eax
	movq	32(%r10), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	-128(%rbp), %rbx
	movq	%rbx, 8(%rax)
	jmp	.L21159
.L21160:
	movq	-120(%rbp), %rdi
	movq	%rdi, 72(%r13)
	jmp	.L21159
.L21152:
	movq	global_binding_level(%rip), %r10
	movq	56(%rbx), %rdi
	cmpq	%r10, current_binding_level(%rip)
	jne	.L21156
	movq	32(%rdi), %rcx
	cmpb	$36, (%rcx)
	jne	.L21156
	cmpb	$95, 1(%rcx)
	jne	.L21156
	movq	%r13, 80(%rdx)
	xorl	%eax, %eax
	movq	8(%r13), %rsi
	call	pushtag
	movzbl	16(%rbx), %eax
	jmp	.L21156
	.p2align 6,,7
.L21137:
	xorl	%eax, %eax
	movq	%r13, %rdi
	movq	%r14, %rsi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L21316
	movl	flag_traditional(%rip), %esi
	testl	%esi, %esi
	jne	.L21142
	testb	$8, 18(%r12)
	je	.L21142
	testb	$8, 18(%r13)
	jne	.L21142
	testb	$9, 53(%r13)
	jne	.L21142
	cmpq	%r13, current_function_decl(%rip)
	je	.L21380
.L21146:
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L21147
	cmpq	$0, 8(%rax)
	jne	.L21381
.L21147:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L21336:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	-184(%rbp), %rdi
	movq	%rax, %rcx
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L21142
.L21381:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L21336
.L21380:
	movq	%r14, current_function_decl(%rip)
	jmp	.L21146
	.p2align 6,,7
.L21358:
	cmpq	$0, 64(%r14)
	jne	.L21135
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L21135
.L21357:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	xorl	%r14d, %r14d
	call	error_with_decl
	jmp	.L21133
.L21126:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L21128
	.p2align 4,,7
.L21132:
	cmpq	%r12, 56(%rax)
	je	.L21128
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L21132
.L21128:
	movq	%rax, %r14
	jmp	.L21125
.L21356:
	movq	40(%r12), %r14
	jmp	.L21125
.L21355:
	movq	56(%r13), %r12
	jmp	.L21122
.L21354:
	testb	$32, 53(%r13)
	jne	.L21120
	jmp	.L21121
.L21312:
	movzbl	16(%r13), %edx
	jmp	.L21120
	.p2align 6,,7
.L21353:
	movq	%rax, (%rcx)
	jmp	.L20843
.L21352:
	movq	-48(%rbp), %rdx
	orb	$64, 18(%rdx)
	movq	-48(%rbp), %r8
	movq	current_class_type(%rip), %rax
	movq	80(%r8), %r11
	movq	%r11, 56(%r14)
	cmpq	$0, 32(%rax)
	jne	.L20852
	movq	144(%rax), %r14
	movq	8(%r13), %r9
	movq	%r9, 72(%r14)
	jmp	.L20852
.L21103:
	movq	current_function_decl(%rip), %rdx
	testq	%rdx, %rdx
	jne	.L21382
	cmpq	$0, 32(%rax)
	jne	.L20854
	movq	80(%rax), %rsi
	cmpb	$32, 16(%r12)
	sete	%al
	movq	72(%rsi), %rbx
	movl	$136, %esi
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L21113
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r15b
	xorl	%eax, %eax
	movzbl	%r15b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r14)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movq	32(%r14), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r14), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r12)
	movq	-48(%rbp), %rcx
	movq	%rcx, 8(%rax)
.L21115:
	movq	current_class_type(%rip), %rbx
	movq	152(%r12), %rdi
	movq	%rbx, 64(%r12)
	movq	%rbx, 16(%rdi)
	jmp	.L20854
.L21113:
	movq	%r14, 72(%r12)
	jmp	.L21115
.L21382:
	cmpb	$32, 16(%r12)
	movq	112(%rdx), %rbx
	movl	$136, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L21108
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r14)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movq	32(%r14), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r14), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r12)
	movq	-48(%rbp), %rbx
	movq	%rbx, 8(%rax)
.L21110:
	movq	current_function_decl(%rip), %r9
	movq	%r9, 64(%r12)
	jmp	.L20854
.L21108:
	movq	%r14, 72(%r12)
	jmp	.L21110
	.p2align 6,,7
.L21351:
	cmpb	$95, 1(%rdx)
	jne	.L21102
	orb	$64, 53(%r12)
	jmp	.L21102
.L21350:
	cmpq	$0, 72(%r12)
	jne	.L21305
	movq	8(%r12), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	%rax, -56(%rbp)
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L20927
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r15)
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movq	32(%r15), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r15), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r12)
	movq	-56(%rbp), %r15
	movq	%r15, 8(%rax)
	jmp	.L21305
.L20927:
	movq	%r15, 72(%r12)
	jmp	.L21305
	.p2align 6,,7
.L21349:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L20925
.L20921:
	movq	current_function_decl(%rip), %rax
	movq	112(%r15), %r12
	movq	current_binding_level(%rip), %rbx
	cmpq	%rax, %r15
	movq	%r12, -160(%rbp)
	movq	%rbx, -176(%rbp)
	je	.L21297
	movzbl	16(%r15), %edx
	cmpb	$29, %dl
	je	.L21383
.L20933:
	movq	%rax, 64(%r15)
.L20932:
	cmpb	$32, %dl
	je	.L21384
.L20934:
	cmpq	$0, -160(%rbp)
	je	.L20935
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L21385
	movq	-160(%rbp), %rdi
	cmpq	$0, 48(%rdi)
	jne	.L20938
	xorl	%r12d, %r12d
.L20937:
	testq	%r12, %r12
	je	.L20955
	cmpq	error_mark_node(%rip), %r12
	je	.L21386
.L20945:
	testq	%r12, %r12
	je	.L21301
	cmpb	$34, 16(%r12)
	je	.L21387
.L20947:
	movq	24(%r12), %r9
	testq	%r12, %r12
	movq	%r9, -168(%rbp)
	movl	32(%r12), %ebx
	je	.L21301
	movzbl	16(%r12), %eax
	movzbl	16(%r15), %edx
	cmpb	%dl, %al
	je	.L20949
	cmpb	$32, %al
	je	.L20955
	cmpb	$32, %dl
	je	.L21324
	xorl	%eax, %eax
	movq	%r15, %rdi
	movq	%r12, %rsi
	call	duplicate_decls
	testl	%eax, %eax
	jne	.L21305
.L21301:
	movzbl	16(%r15), %edx
.L20955:
	cmpb	$32, %dl
	je	.L21324
.L20963:
	movzbl	53(%r15), %edx
	testb	$1, %dl
	je	.L20981
	movq	-160(%rbp), %rsi
	movq	40(%rsi), %rax
	testq	%rax, %rax
	je	.L20981
	testb	$1, 53(%rax)
	jne	.L20982
	testb	$8, 18(%rax)
	je	.L20981
.L20982:
	andb	$8, %dl
	je	.L21388
.L20981:
	movl	flag_traditional(%rip), %r10d
	testl	%r10d, %r10d
	je	.L21309
	testb	$1, 53(%r15)
	je	.L21309
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %r11
	cmpq	%r11, current_binding_level(%rip)
	je	.L20985
	movq	-160(%rbp), %rax
	movq	48(%rax), %r8
	testq	%r8, %r8
	movq	%r8, %rcx
	jne	.L20986
.L20985:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L20987
	movq	-160(%rbp), %rsi
	movq	56(%rsi), %rcx
	testq	%rcx, %rcx
	jne	.L21287
	movq	32(%rdi), %rdx
	testq	%rdx, %rdx
	movq	%rdx, -96(%rbp)
	jne	.L20988
	movq	144(%rdi), %r9
	testb	$1, 3(%r9)
	jne	.L21389
.L20988:
	testq	%rcx, %rcx
	jne	.L21287
.L21288:
	movq	-160(%rbp), %rdi
	xorl	%eax, %eax
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L21287
	movq	-160(%rbp), %rdi
	movq	40(%rdi), %rcx
.L20986:
	testq	%rcx, %rcx
	je	.L21292
.L21287:
	cmpb	$32, 16(%rcx)
	je	.L20990
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L20990
	movq	-160(%rbp), %r11
	movq	8(%r11), %rax
	testq	%rax, %rax
	je	.L20998
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L21332
	testl	%ebx, %ebx
	jle	.L21390
.L21332:
	movq	%rax, %rcx
.L20990:
	testq	%rcx, %rcx
	jne	.L21309
.L21292:
	movq	global_binding_level(%rip), %rax
	movq	%rax, -176(%rbp)
.L20984:
	cmpq	%rax, -176(%rbp)
	je	.L21391
	movq	current_binding_level(%rip), %rbx
	movq	-160(%rbp), %rcx
	cmpq	%rax, %rbx
	movq	48(%rcx), %r12
	movq	40(%rcx), %r8
	movq	%rcx, %rdi
	je	.L21392
.L21333:
	movq	16(%rbx), %rdx
	movq	%r12, %rsi
	xorl	%eax, %eax
	movq	%r8, -192(%rbp)
	call	tree_cons
	movq	-192(%rbp), %r8
	movq	%rax, 16(%rbx)
.L21029:
	movq	-160(%rbp), %rax
	testq	%r12, %r12
	movq	%r15, 48(%rax)
	je	.L21393
.L21040:
	movq	96(%r15), %rax
	testq	%rax, %rax
	jne	.L21042
	testq	%r12, %r12
	je	.L21043
	testb	$1, 53(%r15)
	jne	.L21043
	cmpb	$34, 16(%r12)
	je	.L21394
.L21043:
	movl	warn_shadow(%rip), %edi
	testl	%edi, %edi
	je	.L21042
	testb	$1, 53(%r15)
	jne	.L21042
	movl	32(%r15), %r10d
	testl	%r10d, %r10d
	je	.L21042
	testq	%rax, %rax
	jne	.L21042
	xorl	%edi, %edi
	testq	%r12, %r12
	je	.L21048
	cmpb	$34, 16(%r12)
	je	.L21395
.L21048:
	movq	-160(%rbp), %rdx
	cmpq	$0, 56(%rdx)
	je	.L21050
	movl	$.LC41, %edi
.L21049:
	testq	%rdi, %rdi
	jne	.L21396
.L21042:
	testq	%r12, %r12
	je	.L21310
	movq	-176(%rbp), %r8
	movq	-160(%rbp), %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	movq	16(%r8), %rdx
	call	tree_cons
	movq	-176(%rbp), %r12
	movq	%rax, 16(%r12)
.L21310:
	movzbl	16(%r15), %edx
.L21027:
	leal	-128(%rdx), %esi
	cmpb	$1, %sil
	jbe	.L20935
	movq	8(%r15), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L20935
	cmpb	$18, 16(%rcx)
	je	.L21397
.L21059:
	testb	$64, 46(%rcx)
	je	.L20935
.L21058:
	movq	-176(%rbp), %rcx
	movzwl	64(%rcx), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%rcx)
	je	.L21398
.L21311:
	movzbl	16(%r15), %edx
.L20935:
	cmpb	$32, %dl
	je	.L21399
.L21061:
	movq	-176(%rbp), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	(%rbx), %rdx
	movq	%rdx, (%r15)
	movq	%r15, (%rbx)
	je	.L21400
.L21282:
	movq	%r15, %r12
	jmp	.L21305
.L21400:
	testb	$4, 17(%r15)
	jne	.L21282
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L21282
.L21399:
	cmpq	$0, -160(%rbp)
	je	.L21061
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L21062
	cmpq	class_binding_level(%rip), %rax
	je	.L21063
	movq	-160(%rbp), %rdi
	movq	48(%rdi), %rax
	testq	%rax, %rax
	je	.L21067
	cmpb	$32, 16(%rax)
	je	.L21065
.L21067:
	cmpq	$0, current_class_type(%rip)
	je	.L21062
	movq	-160(%rbp), %r11
	movq	56(%r11), %rax
	testq	%rax, %rax
	je	.L21062
	cmpb	$32, 16(%rax)
	je	.L21065
.L21062:
	movq	-160(%rbp), %rcx
	movq	40(%rcx), %rax
	testq	%rax, %rax
	je	.L21066
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L21065
	cmpb	$-127, %dl
	je	.L21401
.L21066:
	movq	current_class_name(%rip), %rax
	testq	%rax, %rax
	movq	%rax, -104(%rbp)
	je	.L21061
	movq	72(%r15), %rbx
	testq	%rbx, %rbx
	je	.L21402
.L21073:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L21077
	cmpq	class_binding_level(%rip), %rax
	je	.L21078
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L21082
	cmpb	$32, 16(%rax)
	je	.L21080
.L21082:
	cmpq	$0, current_class_type(%rip)
	je	.L21077
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L21077
	cmpb	$32, 16(%rax)
	je	.L21080
.L21077:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L21061
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L21080
	cmpb	$-127, %dl
	jne	.L21061
	movq	$0, 8(%rbx)
	jmp	.L21061
.L21080:
	movq	8(%rax), %r12
	movq	%r12, 8(%rbx)
	jmp	.L21061
.L21078:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L21082
.L21402:
	cmpb	$32, 16(%r15)
	movl	$136, %esi
	movq	56(%r15), %rbx
	sete	%r10b
	movq	8(%r15), %r12
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$137, %esi
	movq	-104(%rbp), %rdi
	cmpb	$1, 16(%rdi)
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	cmpb	$1, 16(%rbx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$138, %esi
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movl	$.LC35, %esi
	movq	-104(%rbp), %r9
	movl	24(%rbx), %eax
	addl	24(%r9), %eax
	movq	32(%r9), %rdx
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	%r12, 8(%rax)
	movq	72(%r15), %rbx
	jmp	.L21073
.L21401:
	movq	$0, 8(%rcx)
	jmp	.L21066
.L21065:
	movq	8(%rax), %rdx
	movq	-160(%rbp), %r10
	movq	%rdx, 8(%r10)
	jmp	.L21066
.L21063:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L21067
.L21398:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L21311
.L21397:
	movq	8(%rcx), %r9
	testb	$64, 46(%r9)
	jne	.L21058
	jmp	.L21059
.L21396:
	movq	-160(%rbp), %rbx
	movq	32(%rbx), %rsi
.L21334:
	xorl	%eax, %eax
	call	warning
	jmp	.L21042
.L21050:
	testq	%r12, %r12
	je	.L21052
	movl	$.LC42, %edi
	jmp	.L21049
.L21052:
	testq	%r8, %r8
	movl	$.LC43, %r11d
	cmovne	%r11, %rdi
	jmp	.L21049
	.p2align 6,,7
.L21395:
	movl	$.LC40, %edi
	jmp	.L21049
.L21394:
	cmpb	$34, 16(%r15)
	je	.L21043
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r8
	movq	56(%r8), %rax
	je	.L21044
	movq	56(%rax), %rax
.L21044:
	movzbl	66(%rax), %r9d
	andl	$15, %r9d
	decl	%r9d
	jne	.L21042
	movq	-160(%rbp), %rax
	movl	$.LC40, %edi
	movq	32(%rax), %rsi
	jmp	.L21334
	.p2align 6,,7
.L21393:
	movzbl	53(%r15), %edx
	andb	$9, %dl
	decb	%dl
	je	.L21403
.L21032:
	testq	%r12, %r12
	jne	.L21040
	testq	%r8, %r8
	jne	.L21040
	testb	$1, 53(%r15)
	je	.L21040
	testb	$8, 18(%r15)
	je	.L21040
	movq	-160(%rbp), %rcx
	orb	$8, 18(%rcx)
	jmp	.L21040
	.p2align 6,,7
.L21403:
	testq	%r8, %r8
	je	.L21032
	cmpb	$29, 16(%r15)
	jne	.L21032
	cmpb	$29, 16(%r8)
	jne	.L21032
	movq	8(%r8), %rsi
	movq	8(%r15), %rdi
	xorl	%eax, %eax
	movl	$1, %edx
	movq	%r8, -192(%rbp)
	call	comptypes
	movq	-192(%rbp), %r8
	testl	%eax, %eax
	je	.L21404
	movzbl	53(%r8), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L21035
	movzbl	53(%r15), %r11d
	leal	0(,%rax,8), %ebx
	leaq	88(%r15), %rdx
	andb	$-9, %r11b
	orb	%bl, %r11b
	movb	%r11b, 53(%r15)
	cmpq	%r8, current_function_decl(%rip)
	je	.L21036
	movq	88(%r8), %rax
.L21037:
	movq	%rax, (%rdx)
	movq	136(%r8), %r11
	movq	80(%r8), %r10
	movq	72(%r8), %rdx
	movzbl	17(%r15), %esi
	movq	%r11, 136(%r15)
	movq	%r10, 80(%r15)
	movq	%rdx, 72(%r15)
	movzbl	17(%r8), %edi
	movq	%r8, 96(%r15)
	andb	$127, %sil
	shrb	$7, %dil
	movzbl	%dil, %r9d
	movl	%r9d, %ecx
	salb	$7, %cl
	orb	%cl, %sil
	movb	%sil, 17(%r15)
	movzbl	53(%r8), %ecx
.L21035:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L21038
	movzbl	53(%r15), %ebx
	salb	$4, %al
	andb	$-17, %bl
	orb	%al, %bl
	movb	%bl, 53(%r15)
	movl	128(%r8), %eax
	movl	%eax, 128(%r15)
.L21038:
	movq	8(%r8), %rdx
	cmpq	$0, 24(%rdx)
	je	.L21032
	cmpq	$0, 88(%r8)
	je	.L21032
	movq	8(%r15), %rsi
	cmpq	$0, 24(%rsi)
	jne	.L21032
	movq	%rdx, 8(%r15)
	jmp	.L21032
.L21036:
	xorl	%eax, %eax
	jmp	.L21037
.L21404:
	movq	%r15, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	movq	-192(%rbp), %r8
	jmp	.L21032
	.p2align 6,,7
.L21392:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L21029
	movq	-160(%rbp), %rdi
	jmp	.L21333
.L21391:
	movzwl	16(%r15), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L21405
.L21004:
	movq	-160(%rbp), %rax
	cmpq	$0, 40(%rax)
	jne	.L21005
	testb	$8, 18(%r15)
	je	.L21005
	orb	$8, 18(%rax)
.L21005:
	movzbl	16(%r15), %edx
	cmpb	$32, %dl
	je	.L21406
.L21007:
	movq	-160(%rbp), %r12
	movq	%r15, 40(%r12)
	movzbl	16(%r15), %edx
.L21006:
	movq	-160(%rbp), %rsi
	movq	72(%rsi), %rax
	testq	%rax, %rax
	je	.L21018
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L21008
	testb	$1, 18(%rcx)
	je	.L21008
	orb	$1, 18(%r15)
	movq	-160(%rbp), %rcx
	movq	72(%rcx), %rax
.L21008:
	testq	%rax, %rax
	je	.L21018
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L21013
	testb	$8, 17(%rcx)
	je	.L21013
	orb	$8, 17(%r15)
	movq	-160(%rbp), %r8
	movq	72(%r8), %rax
.L21013:
	testq	%rax, %rax
	je	.L21018
	cmpq	$0, 8(%rax)
	je	.L21018
	cmpb	$29, %dl
	je	.L21407
.L21021:
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r15), %edx
.L21018:
	movq	-160(%rbp), %rax
	testb	$8, 18(%rax)
	je	.L21027
	cmpb	$32, %dl
	je	.L21027
	testb	$8, 18(%r15)
	jne	.L21027
	testb	$1, 53(%r15)
	jne	.L21027
	movq	72(%rax), %rax
	testq	%rax, %rax
	je	.L21023
	cmpq	$0, 8(%rax)
	jne	.L21408
.L21023:
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L21341:
	xorl	%eax, %eax
	call	warning
	jmp	.L21310
.L21408:
	movq	%r15, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L21341
.L21407:
	movq	8(%r15), %rdi
	movq	integer_type_node(%rip), %r9
	cmpq	%r9, 8(%rdi)
	jne	.L21021
	jmp	.L21018
	.p2align 6,,7
.L21406:
	testq	%r12, %r12
	je	.L21007
	cmpb	$32, 16(%r12)
	jne	.L21006
	jmp	.L21007
.L21405:
	testb	$8, 54(%r15)
	jne	.L21004
	andb	$-9, 18(%r15)
	jmp	.L21004
	.p2align 6,,7
.L21309:
	movq	global_binding_level(%rip), %rax
	jmp	.L20984
.L21390:
	testl	%edx, %edx
	jg	.L21332
	testl	%ebx, %ebx
	je	.L20990
	movq	-160(%rbp), %rdi
	movq	%rax, %rdx
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L21332
	.p2align 6,,7
.L20998:
	movq	8(%rcx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rcx
	jmp	.L20990
.L21389:
	xorl	%ecx, %ecx
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L20990
	testq	%rax, %rax
	je	.L21288
	cmpb	$32, 16(%rax)
	cmovne	-96(%rbp), %rcx
	jmp	.L20988
	.p2align 6,,7
.L20987:
	movq	-160(%rbp), %r10
	movq	40(%r10), %rcx
	jmp	.L20986
.L21388:
	movq	8(%rax), %rsi
	movq	8(%r15), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L20981
	movq	%r15, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	-160(%rbp), %r9
	movq	40(%r9), %rdi
	call	warning_with_decl
	jmp	.L20981
	.p2align 6,,7
.L21324:
	movq	8(%r15), %rdx
	movq	80(%rdx), %rbx
	testq	%rbx, %rbx
	je	.L20965
	movzbl	16(%rbx), %eax
	cmpb	$32, %al
	je	.L20964
.L20965:
	movq	global_binding_level(%rip), %rax
	movq	%r15, %rbx
	cmpq	%rax, current_binding_level(%rip)
	jne	.L21306
	movq	%r15, 80(%rdx)
.L21306:
	movzbl	16(%r15), %eax
.L20968:
	cmpb	$32, %al
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$140, %esi
	call	my_friendly_assert
	movq	56(%rbx), %rdx
	testq	%rdx, %rdx
	movq	%rdx, -64(%rbp)
	je	.L20972
	cmpq	$0, 72(%rbx)
	je	.L21409
.L20972:
	movq	8(%r15), %rcx
	movq	%rcx, -80(%rbp)
	movq	80(%rcx), %rax
	testq	%rax, %rax
	je	.L20963
	cmpq	$0, 56(%rax)
	je	.L20963
	movq	current_binding_level(%rip), %rbx
	movq	56(%r15), %rax
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, -88(%rbp)
	je	.L20977
	movq	8(%rax), %rsi
	movq	%rax, %rdi
.L21331:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L20978:
	movq	-80(%rbp), %rbx
	movq	-88(%rbp), %rdi
	movq	%rbx, 8(%rdi)
	jmp	.L20963
.L20977:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L20978
	movq	-88(%rbp), %r8
	movq	8(%r8), %rsi
	movq	%r8, %rdi
	jmp	.L21331
.L21409:
	movq	8(%r15), %rdi
	movq	current_class_name(%rip), %rbx
	movl	$136, %esi
	movq	%rdi, -72(%rbp)
	cmpb	$32, 16(%r15)
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L20973
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	movq	-64(%rbp), %rax
	cmpb	$1, 16(%rax)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movq	32(%rbx), %rdx
	movl	$.LC35, %esi
	movq	-64(%rbp), %r9
	movl	24(%r9), %eax
	movq	32(%r9), %rcx
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-72(%rbp), %rbx
	movq	%rbx, 8(%rax)
	jmp	.L20972
.L20973:
	movq	-64(%rbp), %rdx
	movq	%rdx, 72(%r15)
	jmp	.L20972
.L20964:
	movq	global_binding_level(%rip), %r11
	movq	56(%rbx), %rdi
	cmpq	%r11, current_binding_level(%rip)
	jne	.L20968
	movq	32(%rdi), %rcx
	cmpb	$36, (%rcx)
	jne	.L20968
	cmpb	$95, 1(%rcx)
	jne	.L20968
	movq	%r15, 80(%rdx)
	xorl	%eax, %eax
	movq	8(%r15), %rsi
	call	pushtag
	movzbl	16(%rbx), %eax
	jmp	.L20968
	.p2align 6,,7
.L20949:
	xorl	%eax, %eax
	movq	%r15, %rdi
	movq	%r12, %rsi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L21301
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	jne	.L21305
	movq	-160(%rbp), %r10
	testb	$8, 18(%r10)
	je	.L21305
	testb	$8, 18(%r15)
	jne	.L21305
	testb	$9, 53(%r15)
	jne	.L21305
	cmpq	%r15, current_function_decl(%rip)
	je	.L21410
.L20958:
	movq	-160(%rbp), %r15
	movq	72(%r15), %rax
	testq	%rax, %rax
	je	.L20959
	cmpq	$0, 8(%rax)
	jne	.L21411
.L20959:
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L21330:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	%r12, %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	-168(%rbp), %rdi
	movq	%rax, %rcx
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L21305
.L21411:
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L21330
.L21410:
	movq	%r12, current_function_decl(%rip)
	jmp	.L20958
	.p2align 6,,7
.L21387:
	cmpq	$0, 64(%r12)
	jne	.L20947
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L20947
.L21386:
	movq	%r15, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	xorl	%r12d, %r12d
	call	error_with_decl
	jmp	.L20945
.L20938:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L20940
.L20944:
	movq	-160(%rbp), %r8
	cmpq	%r8, 56(%rax)
	je	.L20940
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L20944
.L20940:
	movq	%rax, %r12
	jmp	.L20937
.L21385:
	movq	-160(%rbp), %rcx
	movq	40(%rcx), %r12
	jmp	.L20937
.L21384:
	movq	56(%r15), %rsi
	movq	%rsi, -160(%rbp)
	jmp	.L20934
.L21383:
	testb	$32, 53(%r15)
	jne	.L20932
	jmp	.L20933
.L21297:
	movzbl	16(%r15), %edx
	jmp	.L20932
.L21348:
	movq	global_binding_level(%rip), %r12
	movl	$1, %ebx
	cmpq	%r12, current_binding_level(%rip)
	je	.L20903
	movq	48(%r14), %rcx
	testq	%rcx, %rcx
	movq	%rcx, %rdx
	jne	.L20904
.L20903:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L20905
	movq	56(%r14), %rdx
	testq	%rdx, %rdx
	jne	.L21285
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L20906
	movq	144(%rdi), %rsi
	testb	$1, 3(%rsi)
	jne	.L21412
.L20906:
	testq	%rdx, %rdx
	jne	.L21285
.L21286:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rdx
	jne	.L21285
.L20905:
	movq	40(%r14), %rdx
.L20904:
	testq	%rdx, %rdx
	je	.L20908
.L21285:
	cmpb	$32, 16(%rdx)
	je	.L20908
	movl	looking_for_typename(%rip), %ecx
	testl	%ecx, %ecx
	js	.L20908
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L20916
	movq	80(%rax), %rax
	cmpq	%rax, %rdx
	je	.L21329
	testl	%ebx, %ebx
	jle	.L21413
.L21329:
	movq	%rax, %rdx
.L20908:
	movq	-48(%rbp), %r8
	cmpq	80(%r8), %rdx
	jne	.L20902
	jmp	.L21282
.L21413:
	testl	%ecx, %ecx
	jg	.L21329
	testl	%ebx, %ebx
	je	.L20908
	movq	%rdx, %rsi
	movq	%r14, %rdi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L21329
	.p2align 6,,7
.L20916:
	movq	8(%rdx), %rdi
	cmpq	error_mark_node(%rip), %rdi
	cmove	%rdi, %rdx
	jmp	.L20908
.L21412:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rdx
	je	.L20908
	testq	%rax, %rax
	je	.L21286
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rdx
	jmp	.L20906
	.p2align 6,,7
.L21347:
	cmpb	$95, 1(%rdx)
	jne	.L20901
	movq	%r15, %r12
	jmp	.L21088
.L21346:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L20896
	jmp	.L21328
.L20894:
	movq	80(%rcx), %r15
	jmp	.L20899
.L21345:
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L20860
	movq	80(%rax), %rbx
.L20860:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L20893
	.p2align 4,,7
.L20892:
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L20869
	cmpl	$32, %eax
	je	.L21414
	movl	$12, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L20863:
	xorl	%ecx, %ecx
	testq	%rbx, %rbx
	je	.L20893
	jmp	.L20892
.L21414:
	movq	8(%rbx), %rsi
	movq	-48(%rbp), %rdi
	xorl	%eax, %eax
	movq	144(%rsi), %rcx
	movq	72(%rcx), %rsi
	call	value_member
	testq	%rax, %rax
	jne	.L21323
	movq	64(%rbx), %rbx
	jmp	.L20863
.L21323:
	movq	32(%rax), %rcx
	jmp	.L20893
.L20869:
	movq	-48(%rbp), %rax
	movq	80(%rax), %rdi
	movq	56(%rdi), %rbx
	testq	%rbx, %rbx
	je	.L20858
	movq	global_binding_level(%rip), %r8
	movl	$1, %r15d
	cmpq	%r8, current_binding_level(%rip)
	je	.L20872
	movq	48(%rbx), %r9
	testq	%r9, %r9
	movq	%r9, %rcx
	jne	.L20873
.L20872:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L20874
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L21283
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L20875
	movq	144(%rdi), %r10
	testb	$1, 3(%r10)
	jne	.L21415
.L20875:
	testq	%rcx, %rcx
	jne	.L21283
.L21284:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L21283
.L20874:
	movq	40(%rbx), %rcx
.L20873:
	testq	%rcx, %rcx
	je	.L21291
.L21283:
	cmpb	$32, 16(%rcx)
	je	.L20893
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L20893
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L20885
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L21327
	testl	%r15d, %r15d
	jle	.L21416
.L21327:
	movq	%rax, %rcx
	jmp	.L20893
.L21416:
	testl	%edx, %edx
	jg	.L21327
	testl	%r15d, %r15d
	je	.L20893
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L21327
	.p2align 6,,7
.L20885:
	movq	8(%rcx), %rax
	cmpq	error_mark_node(%rip), %rax
	jne	.L20893
	jmp	.L21327
.L21415:
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %r15d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L20893
	testq	%rax, %rax
	je	.L21284
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L20875
	.p2align 6,,7
.L20856:
	movq	-48(%rbp), %rdx
	xorl	%eax, %eax
	movl	$32, %edi
	movq	%r14, %rsi
	call	build_lang_field_decl
	movq	current_binding_level(%rip), %rbx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rax, %r15
	je	.L21417
.L21335:
	movq	8(%r14), %rsi
	movq	32(%rbx), %rdx
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L21090:
	movq	-48(%rbp), %r11
	movq	%r11, 8(%r14)
	movq	56(%r15), %r12
	testq	%r12, %r12
	je	.L21282
	movq	56(%r12), %rsi
	testq	%rsi, %rsi
	je	.L21094
	movq	class_binding_level(%rip), %rbx
	movq	%r12, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L21094:
	movq	decl_obstack+24(%rip), %rdx
	movq	%r15, 56(%r12)
	leaq	8(%rdx), %r8
	cmpq	decl_obstack+32(%rip), %r8
	ja	.L21418
.L21096:
	movq	%rdx, %r9
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%r15, (%r9)
	cmpb	$32, 16(%r15)
	jne	.L21282
	cmpq	$0, 72(%r15)
	jne	.L21282
	movq	8(%r15), %rax
	movq	current_class_name(%rip), %rbx
	movl	$1, %edi
	movl	$136, %esi
	movq	%rax, -112(%rbp)
	xorl	%eax, %eax
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L21098
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r12)
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movq	32(%r12), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r12), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r15)
	movq	-112(%rbp), %rsi
	movq	%rsi, 8(%rax)
	jmp	.L21282
.L21098:
	movq	%r12, 72(%r15)
	jmp	.L21282
.L21418:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L21096
.L21417:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L21090
	jmp	.L21335
	.p2align 6,,7
.L21344:
	cmpq	$0, class_binding_level(%rip)
	je	.L20855
	movq	144(%rdx), %rcx
	testb	$16, 3(%rcx)
	jne	.L20854
	jmp	.L20855
.L21343:
	movq	-48(%rbp), %rsi
	movq	8(%r13), %rdx
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	perm_tree_cons
	jmp	.L21326
.LFE45:
.Lfe45:
	.size	pushtag,.Lfe45-pushtag
	.section	.rodata.str1.1
.LC339:
	.string	"$_%d"
	.text
	.align 2
	.p2align 4,,15
.globl make_anon_name
	.type	make_anon_name,@function
make_anon_name:
.LFB46:
	subq	$40, %rsp
.LCFI138:
	movl	$.LC339, %esi
	xorl	%eax, %eax
	movl	anon_cnt(%rip), %edx
	movq	%rsp, %rdi
	movq	%rbx, 32(%rsp)
.LCFI139:
	leal	1(%rdx), %ecx
	movl	%ecx, anon_cnt(%rip)
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	32(%rsp), %rbx
	addq	$40, %rsp
	ret
.LFE46:
.Lfe46:
	.size	make_anon_name,.Lfe46-make_anon_name
	.data
	.align 4
	.type	last_cnt.0,@object
	.size	last_cnt.0,4
last_cnt.0:
	.long	0
	.text
	.align 2
	.p2align 4,,15
.globl clear_anon_tags
	.type	clear_anon_tags,@function
clear_anon_tags:
.LFB47:
	movl	anon_cnt(%rip), %ecx
	cmpl	%ecx, last_cnt.0(%rip)
	je	.L21420
	movq	current_binding_level(%rip), %rax
	testb	$-128, 66(%rax)
	je	.L21433
	.p2align 4,,7
.L21425:
	movq	56(%rax), %rax
	testb	$-128, 66(%rax)
	jne	.L21425
.L21433:
	movq	8(%rax), %rdx
	testq	%rdx, %rdx
	je	.L21427
	.p2align 4,,7
.L21431:
	movq	24(%rdx), %rax
	testq	%rax, %rax
	je	.L21435
	movq	32(%rax), %rax
	cmpb	$36, (%rax)
	je	.L21436
.L21430:
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L21431
.L21435:
	movl	anon_cnt(%rip), %ecx
.L21427:
	movl	%ecx, last_cnt.0(%rip)
.L21420:
	ret
	.p2align 6,,7
.L21436:
	cmpb	$95, 1(%rax)
	jne	.L21430
	movq	$0, 24(%rdx)
	jmp	.L21430
.LFE47:
.Lfe47:
	.size	clear_anon_tags,.Lfe47-clear_anon_tags
	.align 2
	.p2align 4,,15
.globl adjust_type_value
	.type	adjust_type_value,@function
adjust_type_value:
.LFB48:
	movq	current_binding_level(%rip), %rax
	pushq	%rbx
.LCFI140:
	cmpq	global_binding_level(%rip), %rax
	movq	%rdi, %rbx
	je	.L21453
	cmpq	class_binding_level(%rip), %rax
	je	.L21454
	movq	48(%rdi), %rax
	testq	%rax, %rax
	je	.L21457
	cmpb	$32, 16(%rax)
	je	.L21456
.L21457:
	cmpq	$0, current_class_type(%rip)
	je	.L21453
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L21453
	cmpb	$32, 16(%rax)
	je	.L21456
	.p2align 4,,7
.L21453:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L21452
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L21456
	cmpb	$-127, %dl
	je	.L21462
.L21452:
	popq	%rbx
	ret
.L21462:
	movq	$0, 8(%rbx)
	jmp	.L21452
	.p2align 6,,7
.L21456:
	movq	8(%rax), %rdx
	movq	%rdx, 8(%rbx)
	jmp	.L21452
	.p2align 6,,7
.L21454:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L21457
.LFE48:
.Lfe48:
	.size	adjust_type_value,.Lfe48-adjust_type_value
	.align 2
	.p2align 4,,15
.globl pushdecl
	.type	pushdecl,@function
pushdecl:
.LFB49:
	pushq	%rbp
.LCFI141:
	movq	%rsp, %rbp
.LCFI142:
	pushq	%r15
.LCFI143:
	pushq	%r14
.LCFI144:
	pushq	%r13
.LCFI145:
	movq	%rdi, %r13
	pushq	%r12
.LCFI146:
	pushq	%rbx
.LCFI147:
	subq	$56, %rsp
.LCFI148:
	movq	current_function_decl(%rip), %rax
	movq	current_binding_level(%rip), %r15
	movq	112(%rdi), %r12
	cmpq	%rax, %rdi
	je	.L21622
	movzbl	16(%rdi), %edx
	cmpb	$29, %dl
	je	.L21640
.L21465:
	movq	%rax, 64(%r13)
.L21464:
	cmpb	$32, %dl
	je	.L21641
.L21466:
	testq	%r12, %r12
	je	.L21467
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L21642
	cmpq	$0, 48(%r12)
	jne	.L21470
	xorl	%r14d, %r14d
.L21469:
	testq	%r14, %r14
	je	.L21486
	cmpq	error_mark_node(%rip), %r14
	je	.L21643
.L21477:
	testq	%r14, %r14
	je	.L21626
	cmpb	$34, 16(%r14)
	je	.L21644
.L21479:
	movq	24(%r14), %rdx
	testq	%r14, %r14
	movq	%rdx, -88(%rbp)
	movl	32(%r14), %ebx
	je	.L21626
	movzbl	16(%r14), %eax
	movzbl	16(%r13), %edx
	cmpb	%dl, %al
	je	.L21481
	cmpb	$32, %al
	je	.L21486
	cmpb	$32, %dl
	je	.L21633
	xorl	%eax, %eax
	movq	%r13, %rdi
	movq	%r14, %rsi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L21626
	.p2align 4,,7
.L21463:
	leaq	-40(%rbp), %rsp
	movq	%r14, %rax
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	leave
	ret
	.p2align 6,,7
.L21626:
	movzbl	16(%r13), %edx
.L21486:
	cmpb	$32, %dl
	je	.L21633
.L21494:
	movzbl	53(%r13), %edx
	testb	$1, %dl
	je	.L21511
	movq	40(%r12), %rax
	testq	%rax, %rax
	je	.L21511
	testb	$1, 53(%rax)
	jne	.L21512
	testb	$8, 18(%rax)
	je	.L21511
.L21512:
	andb	$8, %dl
	je	.L21645
	.p2align 4,,7
.L21511:
	movl	flag_traditional(%rip), %r11d
	testl	%r11d, %r11d
	je	.L21630
	testb	$1, 53(%r13)
	je	.L21630
	xorl	%ebx, %ebx
	movq	global_binding_level(%rip), %rsi
	cmpq	%rsi, current_binding_level(%rip)
	je	.L21515
	movq	48(%r12), %r8
	testq	%r8, %r8
	movq	%r8, %rdx
	jne	.L21516
.L21515:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L21517
	movq	56(%r12), %rdx
	testq	%rdx, %rdx
	jne	.L21619
	movq	32(%rdi), %rax
	testq	%rax, %rax
	movq	%rax, -80(%rbp)
	jne	.L21518
	movq	144(%rdi), %rcx
	testb	$1, 3(%rcx)
	jne	.L21646
.L21518:
	testq	%rdx, %rdx
	jne	.L21619
.L21620:
	xorl	%eax, %eax
	movq	%r12, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rdx
	jne	.L21619
.L21517:
	movq	40(%r12), %rdx
.L21516:
	testq	%rdx, %rdx
	je	.L21621
.L21619:
	cmpb	$32, 16(%rdx)
	je	.L21520
	movl	looking_for_typename(%rip), %ecx
	testl	%ecx, %ecx
	js	.L21520
	movq	8(%r12), %rax
	testq	%rax, %rax
	je	.L21528
	movq	80(%rax), %rax
	cmpq	%rax, %rdx
	je	.L21636
	testl	%ebx, %ebx
	jle	.L21647
.L21636:
	movq	%rax, %rdx
.L21520:
	testq	%rdx, %rdx
	jne	.L21630
.L21621:
	movq	global_binding_level(%rip), %r15
	movq	%r15, %rax
.L21514:
	cmpq	%rax, %r15
	je	.L21648
	movq	current_binding_level(%rip), %rbx
	movq	48(%r12), %r14
	movq	40(%r12), %r8
	cmpq	%rax, %rbx
	je	.L21649
.L21637:
	movq	16(%rbx), %rdx
	movq	%r12, %rdi
	movq	%r14, %rsi
	xorl	%eax, %eax
	movq	%r8, -96(%rbp)
	call	tree_cons
	movq	-96(%rbp), %r8
	movq	%rax, 16(%rbx)
.L21559:
	testq	%r14, %r14
	movq	%r13, 48(%r12)
	je	.L21650
.L21570:
	movq	96(%r13), %rax
	testq	%rax, %rax
	jne	.L21572
	testq	%r14, %r14
	je	.L21573
	testb	$1, 53(%r13)
	jne	.L21573
	cmpb	$34, 16(%r14)
	je	.L21651
.L21573:
	movl	warn_shadow(%rip), %r9d
	testl	%r9d, %r9d
	je	.L21572
	testb	$1, 53(%r13)
	jne	.L21572
	movl	32(%r13), %ecx
	testl	%ecx, %ecx
	je	.L21572
	testq	%rax, %rax
	jne	.L21572
	xorl	%edi, %edi
	testq	%r14, %r14
	je	.L21578
	cmpb	$34, 16(%r14)
	je	.L21652
.L21578:
	cmpq	$0, 56(%r12)
	je	.L21580
	movl	$.LC41, %edi
.L21579:
	testq	%rdi, %rdi
	jne	.L21638
	.p2align 4,,7
.L21572:
	testq	%r14, %r14
	je	.L21631
	movq	16(%r15), %rdx
	movq	%r12, %rdi
	movq	%r14, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 16(%r15)
.L21631:
	movzbl	16(%r13), %edx
.L21557:
	leal	-128(%rdx), %r14d
	cmpb	$1, %r14b
	jbe	.L21467
	movq	8(%r13), %rcx
	cmpq	$0, 32(%rcx)
	jne	.L21467
	cmpb	$18, 16(%rcx)
	je	.L21653
.L21589:
	testb	$64, 46(%rcx)
	je	.L21467
.L21588:
	movzwl	64(%r15), %eax
	incl	%eax
	testw	%ax, %ax
	movw	%ax, 64(%r15)
	je	.L21654
.L21632:
	movzbl	16(%r13), %edx
	.p2align 4,,7
.L21467:
	cmpb	$32, %dl
	je	.L21655
.L21591:
	cmpq	global_binding_level(%rip), %r15
	movq	(%r15), %rbx
	movq	%rbx, (%r13)
	movq	%r13, (%r15)
	je	.L21656
.L21617:
	movq	%r13, %r14
	jmp	.L21463
	.p2align 6,,7
.L21656:
	testb	$4, 17(%r13)
	jne	.L21617
	movl	$124, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L21617
	.p2align 6,,7
.L21655:
	testq	%r12, %r12
	je	.L21591
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L21592
	cmpq	class_binding_level(%rip), %rax
	je	.L21593
	movq	48(%r12), %rax
	testq	%rax, %rax
	je	.L21597
	cmpb	$32, 16(%rax)
	je	.L21595
.L21597:
	cmpq	$0, current_class_type(%rip)
	je	.L21592
	movq	56(%r12), %rax
	testq	%rax, %rax
	je	.L21592
	cmpb	$32, 16(%rax)
	je	.L21595
	.p2align 4,,7
.L21592:
	movq	40(%r12), %rax
	testq	%rax, %rax
	je	.L21596
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L21595
	cmpb	$-127, %dl
	je	.L21657
.L21596:
	movq	current_class_name(%rip), %r14
	testq	%r14, %r14
	je	.L21591
	movq	72(%r13), %rbx
	testq	%rbx, %rbx
	je	.L21658
.L21603:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L21607
	cmpq	class_binding_level(%rip), %rax
	je	.L21608
	movq	48(%rbx), %rax
	testq	%rax, %rax
	je	.L21612
	cmpb	$32, 16(%rax)
	je	.L21610
.L21612:
	cmpq	$0, current_class_type(%rip)
	je	.L21607
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L21607
	cmpb	$32, 16(%rax)
	je	.L21610
.L21607:
	movq	40(%rbx), %rax
	testq	%rax, %rax
	je	.L21591
	movzbl	16(%rax), %edx
	cmpb	$32, %dl
	je	.L21610
	cmpb	$-127, %dl
	jne	.L21591
	movq	$0, 8(%rbx)
	jmp	.L21591
.L21610:
	movq	8(%rax), %r12
	movq	%r12, 8(%rbx)
	jmp	.L21591
.L21608:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L21612
.L21658:
	cmpb	$32, 16(%r13)
	movl	$136, %esi
	movq	56(%r13), %rbx
	sete	%r8b
	movq	8(%r13), %r12
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$137, %esi
	cmpb	$1, 16(%r14)
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%rbx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%rbx), %rcx
	movq	32(%r14), %rdx
	movl	24(%rbx), %eax
	movl	$.LC35, %esi
	addl	24(%r14), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	%r12, 8(%rax)
	movq	72(%r13), %rbx
	jmp	.L21603
.L21657:
	movq	$0, 8(%r12)
	jmp	.L21596
.L21595:
	movq	8(%rax), %rdx
	movq	%rdx, 8(%r12)
	jmp	.L21596
.L21593:
	movl	$7, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L21597
.L21654:
	movl	$.LC44, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L21632
.L21653:
	movq	8(%rcx), %rdi
	testb	$64, 46(%rdi)
	jne	.L21588
	jmp	.L21589
.L21638:
	movq	32(%r12), %rsi
	xorl	%eax, %eax
	call	warning
	jmp	.L21572
.L21580:
	testq	%r14, %r14
	je	.L21582
	movl	$.LC42, %edi
	jmp	.L21579
.L21582:
	testq	%r8, %r8
	movl	$.LC43, %r10d
	cmovne	%r10, %rdi
	jmp	.L21579
.L21652:
	movl	$.LC40, %edi
	jmp	.L21579
.L21651:
	cmpb	$34, 16(%r13)
	je	.L21573
	cmpq	$0, cleanup_label(%rip)
	movq	current_binding_level(%rip), %r8
	movq	56(%r8), %rax
	je	.L21574
	movq	56(%rax), %rax
.L21574:
	movzbl	66(%rax), %esi
	andl	$15, %esi
	decl	%esi
	jne	.L21572
	movl	$.LC40, %edi
	jmp	.L21638
	.p2align 6,,7
.L21650:
	movzbl	53(%r13), %edx
	andb	$9, %dl
	decb	%dl
	je	.L21659
.L21562:
	testq	%r14, %r14
	jne	.L21570
	testq	%r8, %r8
	jne	.L21570
	testb	$1, 53(%r13)
	je	.L21570
	testb	$8, 18(%r13)
	je	.L21570
	orb	$8, 18(%r12)
	jmp	.L21570
	.p2align 6,,7
.L21659:
	testq	%r8, %r8
	je	.L21562
	cmpb	$29, 16(%r13)
	jne	.L21562
	cmpb	$29, 16(%r8)
	jne	.L21562
	movq	8(%r8), %rsi
	movq	8(%r13), %rdi
	xorl	%eax, %eax
	movl	$1, %edx
	movq	%r8, -96(%rbp)
	call	comptypes
	movq	-96(%rbp), %r8
	testl	%eax, %eax
	je	.L21660
	movzbl	53(%r8), %ecx
	movl	%ecx, %eax
	shrb	$3, %al
	andl	$1, %eax
	je	.L21565
	movzbl	53(%r13), %edi
	leal	0(,%rax,8), %ebx
	leaq	88(%r13), %rdx
	andb	$-9, %dil
	orb	%bl, %dil
	movb	%dil, 53(%r13)
	cmpq	%r8, current_function_decl(%rip)
	je	.L21566
	movq	88(%r8), %rax
.L21567:
	movq	%rax, (%rdx)
	movq	136(%r8), %rdi
	movq	80(%r8), %r10
	movq	72(%r8), %rdx
	movzbl	17(%r13), %r11d
	movq	%rdi, 136(%r13)
	movq	%r10, 80(%r13)
	movq	%rdx, 72(%r13)
	movzbl	17(%r8), %r9d
	movq	%r8, 96(%r13)
	andb	$127, %r11b
	shrb	$7, %r9b
	movzbl	%r9b, %ecx
	movl	%ecx, %esi
	salb	$7, %sil
	orb	%sil, %r11b
	movb	%r11b, 17(%r13)
	movzbl	53(%r8), %ecx
.L21565:
	shrb	$4, %cl
	movl	%ecx, %eax
	andl	$1, %eax
	je	.L21568
	movzbl	53(%r13), %ebx
	salb	$4, %al
	andb	$-17, %bl
	orb	%al, %bl
	movb	%bl, 53(%r13)
	movl	128(%r8), %eax
	movl	%eax, 128(%r13)
.L21568:
	movq	8(%r8), %rdx
	cmpq	$0, 24(%rdx)
	je	.L21562
	cmpq	$0, 88(%r8)
	je	.L21562
	movq	8(%r13), %r11
	cmpq	$0, 24(%r11)
	jne	.L21562
	movq	%rdx, 8(%r13)
	jmp	.L21562
.L21566:
	xorl	%eax, %eax
	jmp	.L21567
	.p2align 6,,7
.L21660:
	movq	%r13, %rdi
	movl	$.LC39, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	movq	-96(%rbp), %r8
	jmp	.L21562
	.p2align 6,,7
.L21649:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L21559
	jmp	.L21637
	.p2align 6,,7
.L21648:
	movzwl	16(%r13), %eax
	andl	$8447, %eax
	cmpw	$8225, %ax
	je	.L21661
.L21534:
	cmpq	$0, 40(%r12)
	jne	.L21535
	testb	$8, 18(%r13)
	je	.L21535
	orb	$8, 18(%r12)
.L21535:
	movzbl	16(%r13), %edx
	cmpb	$32, %dl
	je	.L21662
.L21537:
	movq	%r13, 40(%r12)
	movzbl	16(%r13), %edx
.L21536:
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L21548
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L21538
	testb	$1, 18(%rcx)
	je	.L21538
	orb	$1, 18(%r13)
	movq	72(%r12), %rax
.L21538:
	testq	%rax, %rax
	je	.L21548
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	.L21543
	testb	$8, 17(%rcx)
	je	.L21543
	orb	$8, 17(%r13)
	movq	72(%r12), %rax
.L21543:
	testq	%rax, %rax
	je	.L21548
	cmpq	$0, 8(%rax)
	je	.L21548
	cmpb	$29, %dl
	je	.L21663
.L21551:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC38, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	warning
	movzbl	16(%r13), %edx
	.p2align 4,,7
.L21548:
	testb	$8, 18(%r12)
	je	.L21557
	cmpb	$32, %dl
	je	.L21557
	testb	$8, 18(%r13)
	jne	.L21557
	testb	$1, 53(%r13)
	jne	.L21557
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L21553
	cmpq	$0, 8(%rax)
	jne	.L21664
.L21553:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L21639:
	xorl	%eax, %eax
	call	warning
	jmp	.L21631
.L21664:
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L21639
.L21663:
	movq	8(%r13), %r10
	movq	integer_type_node(%rip), %r14
	cmpq	%r14, 8(%r10)
	jne	.L21551
	jmp	.L21548
	.p2align 6,,7
.L21662:
	testq	%r14, %r14
	je	.L21537
	cmpb	$32, 16(%r14)
	jne	.L21536
	jmp	.L21537
.L21661:
	testb	$8, 54(%r13)
	jne	.L21534
	andb	$-9, 18(%r13)
	jmp	.L21534
	.p2align 6,,7
.L21630:
	movq	global_binding_level(%rip), %rax
	jmp	.L21514
.L21647:
	testl	%ecx, %ecx
	jg	.L21636
	testl	%ebx, %ebx
	je	.L21520
	movq	%rdx, %rsi
	movq	%r12, %rdi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L21636
	.p2align 6,,7
.L21528:
	movq	8(%rdx), %r9
	cmpq	error_mark_node(%rip), %r9
	cmove	%r9, %rdx
	jmp	.L21520
.L21646:
	xorl	%ecx, %ecx
	movq	%r12, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rdx
	je	.L21520
	testq	%rax, %rax
	je	.L21620
	cmpb	$32, 16(%rax)
	cmovne	-80(%rbp), %rdx
	jmp	.L21518
	.p2align 6,,7
.L21645:
	movq	8(%rax), %rsi
	movq	8(%r13), %rdi
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	testl	%eax, %eax
	jne	.L21511
	movq	%r13, %rdi
	movl	$.LC36, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC37, %esi
	movq	40(%r12), %rdi
	call	warning_with_decl
	jmp	.L21511
	.p2align 6,,7
.L21633:
	movq	8(%r13), %rdx
	movq	80(%rdx), %rbx
	testq	%rbx, %rbx
	je	.L21496
	movzbl	16(%rbx), %eax
	cmpb	$32, %al
	je	.L21495
.L21496:
	movq	global_binding_level(%rip), %rsi
	movq	%r13, %rbx
	cmpq	%rsi, current_binding_level(%rip)
	jne	.L21627
	movq	%r13, 80(%rdx)
.L21627:
	movzbl	16(%r13), %eax
.L21499:
	cmpb	$32, %al
	movl	$140, %esi
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movq	56(%rbx), %rdx
	testq	%rdx, %rdx
	movq	%rdx, -48(%rbp)
	je	.L21502
	cmpq	$0, 72(%rbx)
	je	.L21665
.L21502:
	movq	8(%r13), %r9
	movq	%r9, -64(%rbp)
	movq	80(%r9), %rax
	testq	%rax, %rax
	je	.L21494
	cmpq	$0, 56(%rax)
	je	.L21494
	movq	current_binding_level(%rip), %rbx
	movq	56(%r13), %rcx
	cmpq	global_binding_level(%rip), %rbx
	movq	%rcx, -72(%rbp)
	je	.L21507
	movq	8(%rcx), %rsi
	movq	%rcx, %rdi
.L21635:
	movq	32(%rbx), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, 32(%rbx)
.L21508:
	movq	-64(%rbp), %rbx
	movq	-72(%rbp), %rdi
	movq	%rbx, 8(%rdi)
	jmp	.L21494
.L21507:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	je	.L21508
	movq	-72(%rbp), %r10
	movq	8(%r10), %rsi
	movq	%r10, %rdi
	jmp	.L21635
.L21665:
	cmpb	$32, 16(%r13)
	movq	8(%r13), %rdi
	movl	$136, %esi
	sete	%r9b
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movq	%rdi, -56(%rbp)
	movzbl	%r9b, %edi
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L21503
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movq	-48(%rbp), %rsi
	cmpb	$1, 16(%rsi)
	movl	$138, %esi
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	-48(%rbp), %r10
	movq	32(%rbx), %rdx
	movq	-48(%rbp), %r11
	movl	$.LC35, %esi
	movq	32(%r10), %rcx
	movl	24(%r11), %eax
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	-56(%rbp), %rbx
	movq	%rax, 72(%r13)
	movq	%rbx, 8(%rax)
	jmp	.L21502
.L21503:
	movq	-48(%rbp), %rdx
	movq	%rdx, 72(%r13)
	jmp	.L21502
.L21495:
	movq	global_binding_level(%rip), %r8
	movq	56(%rbx), %rdi
	cmpq	%r8, current_binding_level(%rip)
	jne	.L21499
	movq	32(%rdi), %rcx
	cmpb	$36, (%rcx)
	jne	.L21499
	cmpb	$95, 1(%rcx)
	jne	.L21499
	movq	%r13, 80(%rdx)
	xorl	%eax, %eax
	movq	8(%r13), %rsi
	call	pushtag
	movzbl	16(%rbx), %eax
	jmp	.L21499
	.p2align 6,,7
.L21481:
	xorl	%eax, %eax
	movq	%r13, %rdi
	movq	%r14, %rsi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L21626
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	jne	.L21463
	testb	$8, 18(%r12)
	je	.L21463
	testb	$8, 18(%r13)
	jne	.L21463
	testb	$9, 53(%r13)
	jne	.L21463
	cmpq	%r13, current_function_decl(%rip)
	je	.L21666
.L21489:
	movq	72(%r12), %rax
	testq	%rax, %rax
	je	.L21490
	cmpq	$0, 8(%rax)
	jne	.L21667
.L21490:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC34, %edi
	movq	%rax, %rsi
.L21634:
	xorl	%eax, %eax
	call	warning
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lang_printable_name
	movl	$.LC6, %edx
	movl	%ebx, %esi
	movq	-88(%rbp), %rdi
	movq	%rax, %rcx
	xorl	%eax, %eax
	call	warning_with_file_and_line
	jmp	.L21463
.L21667:
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	lang_printable_name
	movl	$.LC33, %edi
	movq	%rax, %rsi
	jmp	.L21634
.L21666:
	movq	%r14, current_function_decl(%rip)
	jmp	.L21489
	.p2align 6,,7
.L21644:
	cmpq	$0, 64(%r14)
	jne	.L21479
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L21479
.L21643:
	movq	%r13, %rdi
	movl	$.LC31, %esi
	xorl	%eax, %eax
	xorl	%r14d, %r14d
	call	error_with_decl
	jmp	.L21477
	.p2align 6,,7
.L21470:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L21472
	.p2align 4,,7
.L21476:
	cmpq	%r12, 56(%rax)
	je	.L21472
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L21476
.L21472:
	movq	%rax, %r14
	jmp	.L21469
	.p2align 6,,7
.L21642:
	movq	40(%r12), %r14
	jmp	.L21469
	.p2align 6,,7
.L21641:
	movq	56(%r13), %r12
	jmp	.L21466
	.p2align 6,,7
.L21640:
	testb	$32, 53(%rdi)
	jne	.L21464
	jmp	.L21465
	.p2align 6,,7
.L21622:
	movzbl	16(%rdi), %edx
	jmp	.L21464
.LFE49:
.Lfe49:
	.size	pushdecl,.Lfe49-pushdecl
	.align 2
	.p2align 4,,15
.globl pushdecl_top_level
	.type	pushdecl_top_level,@function
pushdecl_top_level:
.LFB50:
	pushq	%rbp
.LCFI149:
	xorl	%eax, %eax
	movq	%rdi, %rbp
	pushq	%rbx
.LCFI150:
	subq	$8, %rsp
.LCFI151:
	movq	global_binding_level(%rip), %rdx
	movq	current_binding_level(%rip), %rbx
	movq	%rdx, current_binding_level(%rip)
	call	pushdecl
	movq	class_binding_level(%rip), %rdx
	movq	%rbx, current_binding_level(%rip)
	movq	%rax, %r8
	testq	%rdx, %rdx
	cmovne	%rdx, %rbx
	cmpb	$32, 16(%rbp)
	je	.L21688
.L21670:
	addq	$8, %rsp
	movq	%r8, %rax
	popq	%rbx
	popq	%rbp
	ret
.L21688:
	movq	global_binding_level(%rip), %rdi
	xorl	%ecx, %ecx
	movq	56(%rbp), %rsi
	cmpq	%rdi, %rbx
	je	.L21685
	.p2align 4,,7
.L21681:
	movq	32(%rbx), %rdx
	testq	%rdx, %rdx
	je	.L21687
	.p2align 4,,7
.L21680:
	cmpq	%rsi, 24(%rdx)
	leaq	32(%rdx), %r9
	movq	(%rdx), %rdx
	cmove	%r9, %rcx
	testq	%rdx, %rdx
	jne	.L21680
.L21687:
	movq	56(%rbx), %rbx
	cmpq	%rdi, %rbx
	jne	.L21681
.L21685:
	testq	%rcx, %rcx
	movq	8(%rbp), %rax
	jne	.L21682
	movq	%rax, 8(%rsi)
	jmp	.L21670
.L21682:
	movq	%rax, (%rcx)
	jmp	.L21670
.LFE50:
.Lfe50:
	.size	pushdecl_top_level,.Lfe50-pushdecl_top_level
	.align 2
	.p2align 4,,15
.globl push_overloaded_decl_top_level
	.type	push_overloaded_decl_top_level,@function
push_overloaded_decl_top_level:
.LFB51:
	pushq	%r15
.LCFI152:
	pushq	%r14
.LCFI153:
	movl	%esi, %r14d
	pushq	%r13
.LCFI154:
	pushq	%r12
.LCFI155:
	pushq	%rbp
.LCFI156:
	movq	%rdi, %rbp
	pushq	%rbx
.LCFI157:
	subq	$8, %rsp
.LCFI158:
	movq	56(%rdi), %r13
	movq	global_binding_level(%rip), %rdx
	movq	current_binding_level(%rip), %r15
	movq	40(%r13), %r12
	movq	%rdx, current_binding_level(%rip)
	orb	$32, 54(%rdi)
	testq	%r12, %r12
	je	.L21690
	movzbl	16(%r12), %edx
	cmpb	$3, %dl
	je	.L21691
	movq	152(%rdi), %rcx
	cmpb	$0, (%rcx)
	jne	.L21692
	cmpb	$29, %dl
	je	.L21728
	movl	$9, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L21692:
	testl	%r14d, %r14d
	je	.L21696
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	jne	.L21696
	testb	$4, 17(%r12)
	jne	.L21729
.L21696:
	movzbl	16(%r12), %eax
	cmpb	$106, %al
	je	.L21730
.L21698:
	cmpb	$29, %al
	je	.L21731
.L21699:
	movl	pedantic(%rip), %r14d
	testl	%r14d, %r14d
	je	.L21703
	cmpb	$33, 16(%r12)
	je	.L21732
.L21703:
	movq	%r13, %rdi
	movq	%r12, %rsi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rbp, %rsi
	movq	24(%rax), %rdi
	movq	%rax, %rdx
.L21727:
	xorl	%eax, %eax
	call	tree_cons
	movq	unknown_type_node(%rip), %r12
	movq	%rax, 40(%r13)
	movq	%r12, 8(%rax)
.L21701:
	movq	%r15, current_binding_level(%rip)
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	ret
.L21732:
	movq	tree_code_type(%rip), %rbx
	movl	$143, %esi
	movq	264(%rbx), %rdx
	cmpb	$100, (%rdx)
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	xorl	%eax, %eax
	movl	$.LC151, %esi
	movq	%r12, %rdi
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC152, %esi
	movq	%rbp, %rdi
	call	error_with_decl
	jmp	.L21703
	.p2align 6,,7
.L21731:
	movq	152(%rbp), %r8
	movq	152(%r12), %rdi
	movzbl	(%r8), %esi
	cmpb	%sil, (%rdi)
	je	.L21699
	movq	8(%r12), %rdi
	movq	8(%rbp), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L21699
	movq	current_lang_base(%rip), %r9
	cmpq	%r9, current_lang_stack(%rip)
	je	.L21733
	movq	%rbp, %rdi
	movl	$.LC149, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC150, %esi
	movq	%r12, %rdi
	call	error_with_decl
	jmp	.L21699
.L21733:
	movq	152(%r12), %r11
	movq	152(%rbp), %r10
	movzbl	(%r11), %ebp
	movb	%bpl, (%r10)
	jmp	.L21701
	.p2align 6,,7
.L21730:
	movq	32(%r12), %r12
	movzbl	16(%r12), %eax
	jmp	.L21698
.L21729:
	movq	global_binding_level(%rip), %rbx
	cmpq	%rbx, current_binding_level(%rip)
	je	.L21696
	movq	overloads_to_forget(%rip), %rdx
	movq	%r13, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, overloads_to_forget(%rip)
	jmp	.L21696
	.p2align 6,,7
.L21728:
	movq	152(%r12), %rdx
	cmpb	$0, (%rdx)
	jne	.L21692
	movl	$.LC147, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC148, %esi
	movq	%r12, %rdi
	call	error_with_decl
	jmp	.L21692
	.p2align 6,,7
.L21691:
	cmpq	$0, 32(%r12)
	jne	.L21704
	movq	%rdi, 32(%r12)
	jmp	.L21701
.L21704:
	cmpb	$-127, 16(%rdi)
	je	.L21690
	movq	112(%rdi), %rsi
	movq	%r12, %rbx
	movq	%rsi, (%rsp)
	.p2align 4,,7
.L21712:
	movq	32(%rbx), %rcx
	cmpb	$29, 16(%rcx)
	je	.L21734
.L21710:
	cmpb	$-127, 16(%rcx)
	je	.L21708
	movq	(%rsp), %r9
	cmpq	%r9, 112(%rcx)
	je	.L21701
.L21708:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L21712
	.p2align 4,,7
.L21690:
	movq	152(%rbp), %r10
	cmpb	$0, (%r10)
	jne	.L21713
	testq	%r12, %r12
	movq	%r12, %rbx
	je	.L21713
	movq	32(%r12), %rcx
	movq	152(%rcx), %r11
	cmpb	$1, (%r11)
	je	.L21718
.L21715:
	testq	%rbx, %rbx
	jne	.L21735
.L21713:
	testl	%r14d, %r14d
	je	.L21720
	movl	flag_traditional(%rip), %r14d
	testl	%r14d, %r14d
	jne	.L21720
	testq	%r12, %r12
	je	.L21721
	testb	$4, 17(%r12)
	jne	.L21721
	.p2align 4,,7
.L21720:
	movq	%r13, %rdi
	movq	%rbp, %rsi
	movq	%r12, %rdx
	jmp	.L21727
.L21721:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L21720
	testb	$32, 67(%rax)
	jne	.L21720
	movq	overloads_to_forget(%rip), %rdx
	movq	%r13, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, overloads_to_forget(%rip)
	jmp	.L21720
.L21735:
	movq	%rbp, %rdi
	movl	$.LC147, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC148, %esi
	movq	32(%rbx), %rdi
	call	error_with_decl
	jmp	.L21713
	.p2align 6,,7
.L21718:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	je	.L21713
	movq	32(%rbx), %rsi
	movq	152(%rsi), %rdx
	cmpb	$1, (%rdx)
	je	.L21718
	jmp	.L21715
	.p2align 6,,7
.L21734:
	movq	152(%rbp), %rax
	movq	152(%rcx), %r8
	movzbl	(%rax), %edi
	cmpb	%dil, (%r8)
	je	.L21710
	movq	8(%rcx), %rdi
	movq	8(%rbp), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	jne	.L21736
.L21726:
	movq	32(%rbx), %rcx
	jmp	.L21710
.L21736:
	movq	%rbp, %rdi
	movl	$.LC149, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC150, %esi
	movq	32(%rbx), %rdi
	call	error_with_decl
	jmp	.L21726
.LFE51:
.Lfe51:
	.size	push_overloaded_decl_top_level,.Lfe51-push_overloaded_decl_top_level
	.align 2
	.p2align 4,,15
.globl pushdecl_class_level
	.type	pushdecl_class_level,@function
pushdecl_class_level:
.LFB52:
	pushq	%rbp
.LCFI159:
	movq	%rsp, %rbp
.LCFI160:
	subq	$32, %rsp
.LCFI161:
	movq	%r12, 8(%rsp)
.LCFI162:
	movq	%rbx, (%rsp)
.LCFI163:
	movq	%r13, 16(%rsp)
.LCFI164:
	movq	%r14, 24(%rsp)
.LCFI165:
	movq	%rdi, %r12
	movq	56(%rdi), %r13
	testq	%r13, %r13
	je	.L21738
	movq	56(%r13), %rsi
	testq	%rsi, %rsi
	je	.L21739
	movq	class_binding_level(%rip), %r14
	movq	%r13, %rdi
	xorl	%eax, %eax
	movq	24(%r14), %rdx
	call	tree_cons
	movq	%rax, 24(%r14)
.L21739:
	movq	decl_obstack+24(%rip), %rdx
	movq	%r12, 56(%r13)
	leaq	8(%rdx), %rcx
	cmpq	decl_obstack+32(%rip), %rcx
	ja	.L21746
.L21741:
	movq	%rdx, %rbx
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%r12, (%rbx)
	cmpb	$32, 16(%r12)
	je	.L21747
.L21738:
	movq	%r12, %rax
	movq	-32(%rbp), %rbx
	movq	-16(%rbp), %r13
	movq	-24(%rbp), %r12
	movq	-8(%rbp), %r14
	leave
	ret
	.p2align 6,,7
.L21747:
	cmpq	$0, 72(%r12)
	jne	.L21738
	movq	current_class_name(%rip), %rbx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	8(%r12), %r14
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L21743
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r13)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r13), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r13), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r12)
	movq	%r14, 8(%rax)
	jmp	.L21738
.L21743:
	movq	%r13, 72(%r12)
	jmp	.L21738
	.p2align 6,,7
.L21746:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L21741
.LFE52:
.Lfe52:
	.size	pushdecl_class_level,.Lfe52-pushdecl_class_level
	.align 2
	.p2align 4,,15
.globl overloaded_globals_p
	.type	overloaded_globals_p,@function
overloaded_globals_p:
.LFB53:
	pushq	%rbx
.LCFI166:
	movl	$142, %esi
	cmpb	$3, 16(%rdi)
	sete	%al
	movq	%rdi, %rbx
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	testb	$64, 18(%rbx)
	je	.L21749
	movl	$-1, %eax
.L21748:
	popq	%rbx
	ret
	.p2align 6,,7
.L21749:
	movq	24(%rbx), %rcx
	cmpb	$1, 16(%rcx)
	sete	%dl
	movzbl	%dl, %eax
	jmp	.L21748
.LFE53:
.Lfe53:
	.size	overloaded_globals_p,.Lfe53-overloaded_globals_p
	.align 2
	.p2align 4,,15
.globl push_overloaded_decl
	.type	push_overloaded_decl,@function
push_overloaded_decl:
.LFB54:
	pushq	%r15
.LCFI167:
	pushq	%r14
.LCFI168:
	movl	%esi, %r14d
	pushq	%r13
.LCFI169:
	pushq	%r12
.LCFI170:
	pushq	%rbp
.LCFI171:
	movq	%rdi, %rbp
	pushq	%rbx
.LCFI172:
	subq	$8, %rsp
.LCFI173:
	movq	56(%rdi), %r13
	movq	40(%r13), %r12
	orb	$32, 54(%rdi)
	testq	%r12, %r12
	je	.L21752
	movzbl	16(%r12), %edx
	cmpb	$3, %dl
	je	.L21753
	movq	152(%rdi), %rcx
	cmpb	$0, (%rcx)
	jne	.L21754
	cmpb	$29, %dl
	je	.L21789
	movl	$9, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L21754:
	testl	%r14d, %r14d
	je	.L21758
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	jne	.L21758
	testb	$4, 17(%r12)
	jne	.L21790
.L21758:
	movzbl	16(%r12), %eax
	cmpb	$106, %al
	je	.L21791
.L21760:
	cmpb	$29, %al
	je	.L21792
.L21761:
	movl	pedantic(%rip), %r11d
	testl	%r11d, %r11d
	je	.L21764
	cmpb	$33, 16(%r12)
	je	.L21793
.L21764:
	movq	%r13, %rdi
	movq	%r12, %rsi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rbp, %rsi
	movq	24(%rax), %rdi
	movq	%rax, %rdx
.L21788:
	xorl	%eax, %eax
	call	tree_cons
	movq	unknown_type_node(%rip), %r12
	movq	%rax, 40(%r13)
	movq	%r12, 8(%rax)
.L21751:
	addq	$8, %rsp
	movq	%rbp, %rax
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	ret
.L21793:
	movq	tree_code_type(%rip), %rdx
	movl	$143, %esi
	movq	264(%rdx), %r15
	cmpb	$100, (%r15)
	sete	%r14b
	xorl	%eax, %eax
	movzbl	%r14b, %edi
	call	my_friendly_assert
	xorl	%eax, %eax
	movl	$.LC151, %esi
	movq	%r12, %rdi
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC152, %esi
	movq	%rbp, %rdi
	call	error_with_decl
	jmp	.L21764
	.p2align 6,,7
.L21792:
	movq	152(%rbp), %rdi
	movq	152(%r12), %rsi
	movzbl	(%rdi), %ebx
	cmpb	%bl, (%rsi)
	je	.L21761
	movq	8(%r12), %rdi
	movq	8(%rbp), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L21761
	movq	current_lang_base(%rip), %r8
	cmpq	%r8, current_lang_stack(%rip)
	je	.L21794
	movq	%rbp, %rdi
	movl	$.LC149, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC150, %esi
	movq	%r12, %rdi
	call	error_with_decl
	jmp	.L21761
.L21794:
	movq	152(%r12), %r10
	movq	152(%rbp), %r9
	movzbl	(%r10), %ebp
	movb	%bpl, (%r9)
	movq	%r12, %rbp
	jmp	.L21751
	.p2align 6,,7
.L21791:
	movq	32(%r12), %r12
	movzbl	16(%r12), %eax
	jmp	.L21760
.L21790:
	movq	global_binding_level(%rip), %rcx
	cmpq	%rcx, current_binding_level(%rip)
	je	.L21758
	movq	overloads_to_forget(%rip), %rdx
	movq	%r13, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, overloads_to_forget(%rip)
	jmp	.L21758
	.p2align 6,,7
.L21789:
	movq	152(%r12), %rdx
	cmpb	$0, (%rdx)
	jne	.L21754
	movl	$.LC147, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC148, %esi
	movq	%r12, %rdi
	call	error_with_decl
	jmp	.L21754
	.p2align 6,,7
.L21753:
	cmpq	$0, 32(%r12)
	jne	.L21765
	movq	%rdi, 32(%r12)
	jmp	.L21751
.L21765:
	cmpb	$-127, 16(%rdi)
	je	.L21752
	movq	112(%rdi), %r15
	movq	%r12, %rbx
	.p2align 4,,7
.L21773:
	movq	32(%rbx), %rcx
	cmpb	$29, 16(%rcx)
	je	.L21795
.L21771:
	cmpb	$-127, 16(%rcx)
	je	.L21769
	cmpq	%r15, 112(%rcx)
	je	.L21751
.L21769:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L21773
	.p2align 4,,7
.L21752:
	movq	152(%rbp), %rcx
	cmpb	$0, (%rcx)
	jne	.L21774
	testq	%r12, %r12
	movq	%r12, %rbx
	je	.L21774
	movq	32(%r12), %r9
	movq	152(%r9), %r8
	cmpb	$1, (%r8)
	je	.L21779
.L21776:
	testq	%rbx, %rbx
	jne	.L21796
.L21774:
	testl	%r14d, %r14d
	je	.L21781
	movl	flag_traditional(%rip), %ebx
	testl	%ebx, %ebx
	jne	.L21781
	testq	%r12, %r12
	je	.L21782
	testb	$4, 17(%r12)
	jne	.L21782
	.p2align 4,,7
.L21781:
	movq	%r13, %rdi
	movq	%rbp, %rsi
	movq	%r12, %rdx
	jmp	.L21788
.L21782:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L21781
	testb	$32, 67(%rax)
	jne	.L21781
	movq	overloads_to_forget(%rip), %rdx
	movq	%r13, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, overloads_to_forget(%rip)
	jmp	.L21781
.L21796:
	movq	%rbp, %rdi
	movl	$.LC147, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC148, %esi
	movq	32(%rbx), %rdi
	call	error_with_decl
	jmp	.L21774
	.p2align 6,,7
.L21779:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	je	.L21774
	movq	32(%rbx), %r11
	movq	152(%r11), %r10
	cmpb	$1, (%r10)
	je	.L21779
	jmp	.L21776
	.p2align 6,,7
.L21795:
	movq	152(%rbp), %rax
	movq	152(%rcx), %rdi
	movzbl	(%rax), %esi
	cmpb	%sil, (%rdi)
	je	.L21771
	movq	8(%rcx), %rdi
	movq	8(%rbp), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	jne	.L21797
.L21787:
	movq	32(%rbx), %rcx
	jmp	.L21771
.L21797:
	movq	%rbp, %rdi
	movl	$.LC149, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC150, %esi
	movq	32(%rbx), %rdi
	call	error_with_decl
	jmp	.L21787
.LFE54:
.Lfe54:
	.size	push_overloaded_decl,.Lfe54-push_overloaded_decl
	.section	.rodata.str1.32
	.align 32
.LC340:
	.string	"implicit declaration of function `%s'"
	.text
	.align 2
	.p2align 4,,15
.globl implicitly_declare
	.type	implicitly_declare,@function
implicitly_declare:
.LFB55:
	pushq	%rbp
.LCFI174:
	xorl	%eax, %eax
	movq	%rdi, %rbp
	pushq	%rbx
.LCFI175:
	subq	$8, %rsp
.LCFI176:
	call	allocation_temporary_p
	movl	%eax, %ebx
	xorl	%eax, %eax
	call	push_obstacks_nochange
	testl	%ebx, %ebx
	je	.L21799
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	jne	.L21800
	movl	warn_implicit(%rip), %eax
	testl	%eax, %eax
	je	.L21800
	movq	global_binding_level(%rip), %rdx
	cmpq	%rdx, current_binding_level(%rip)
	je	.L21800
	.p2align 4,,7
.L21799:
	movq	default_function_type(%rip), %rdx
	movq	%rbp, %rsi
	movl	$29, %edi
	xorl	%eax, %eax
	call	build_lang_decl
	orb	$1, 53(%rax)
	orb	$8, 18(%rax)
	movq	%rax, %rdi
	movq	%rax, %rbx
	xorl	%eax, %eax
	call	pushdecl
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	xorl	%esi, %esi
	xorl	%edx, %edx
	movq	%rbx, %rdi
	call	rest_of_decl_compilation
	movl	warn_implicit(%rip), %eax
	testl	%eax, %eax
	je	.L21806
	movq	72(%rbp), %rax
	testq	%rax, %rax
	je	.L21803
	cmpq	$0, 8(%rax)
	jne	.L21801
.L21803:
	movq	32(%rbp), %rsi
	movl	$.LC340, %edi
	xorl	%eax, %eax
	call	pedwarn
.L21806:
	movq	72(%rbp), %rax
.L21801:
	testq	%rax, %rax
	je	.L21807
.L21805:
	movq	%rbx, 8(%rax)
	xorl	%eax, %eax
	call	pop_obstacks
	addq	$8, %rsp
	movq	%rbx, %rax
	popq	%rbx
	popq	%rbp
	ret
	.p2align 6,,7
.L21807:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbp)
	jmp	.L21805
	.p2align 6,,7
.L21800:
	xorl	%eax, %eax
	call	end_temporary_allocation
	jmp	.L21799
.LFE55:
.Lfe55:
	.size	implicitly_declare,.Lfe55-implicitly_declare
	.align 2
	.p2align 4,,15
.globl lookup_label
	.type	lookup_label,@function
lookup_label:
.LFB56:
	pushq	%rbp
.LCFI177:
	movq	%rdi, %rbp
	pushq	%rbx
.LCFI178:
	subq	$8, %rsp
.LCFI179:
	movq	72(%rdi), %rdx
	.p2align 4,,7
.L21823:
	xorl	%ebx, %ebx
	testq	%rdx, %rdx
	je	.L21810
	movq	(%rdx), %rbx
.L21810:
	testq	%rbx, %rbx
	je	.L21812
	movl	32(%rbx), %eax
	testl	%eax, %eax
	jne	.L21811
.L21812:
	movq	named_label_uses(%rip), %rax
	testq	%rax, %rax
	je	.L21827
	movq	current_binding_level(%rip), %rdx
	movq	(%rdx), %rsi
	cmpq	%rsi, 24(%rax)
	je	.L21828
.L21813:
	movq	(%rdx), %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	movq	named_label_uses(%rip), %rdx
	call	tree_cons
	movq	current_binding_level(%rip), %rcx
	movq	%rax, named_label_uses(%rip)
	movq	%rcx, 8(%rax)
.L21811:
	testq	%rbx, %rbx
	je	.L21814
	movq	current_function_decl(%rip), %rdx
	cmpq	%rdx, 64(%rbx)
	je	.L21808
	testb	$-128, 18(%rbx)
	jne	.L21808
	movq	72(%rbp), %rdx
	xorl	%ebx, %ebx
	testq	%rdx, %rdx
	je	.L21817
	movq	(%rdx), %rbx
.L21817:
	testq	%rbx, %rbx
	je	.L21823
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	72(%rbp), %rdx
	movq	%rax, shadowed_labels(%rip)
	testq	%rdx, %rdx
	je	.L21829
.L21820:
	movq	72(%rbx), %rax
	movq	$0, (%rdx)
	testq	%rax, %rax
	je	.L21830
.L21822:
	movq	$0, (%rax)
	jmp	.L21823
.L21830:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	movq	72(%rbp), %rdx
	jmp	.L21822
.L21829:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbp)
	movq	%rax, %rdx
	jmp	.L21820
.L21808:
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	ret
.L21814:
	movq	void_type_node(%rip), %rdx
	movl	$30, %edi
	movq	%rbp, %rsi
	xorl	%eax, %eax
	call	build_decl
	movq	current_function_decl(%rip), %rdi
	movq	%rax, %rbx
	movb	$0, 52(%rax)
	movq	input_filename(%rip), %rsi
	movq	%rdi, 64(%rax)
	movl	lineno(%rip), %eax
	movq	%rsi, 24(%rbx)
	movl	%eax, 32(%rbx)
	movq	72(%rbp), %rdx
	testq	%rdx, %rdx
	je	.L21831
.L21826:
	movq	%rbx, (%rdx)
	xorl	%edi, %edi
	movq	%rbx, %rsi
	movq	named_labels(%rip), %rdx
	xorl	%eax, %eax
	call	tree_cons
	movq	named_label_uses(%rip), %rbp
	movq	%rax, named_labels(%rip)
	movq	%rbx, 32(%rbp)
	jmp	.L21808
.L21831:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbp)
	movq	%rax, %rdx
	jmp	.L21826
	.p2align 6,,7
.L21828:
	cmpq	%rbx, 32(%rax)
	je	.L21811
	jmp	.L21813
	.p2align 6,,7
.L21827:
	movq	current_binding_level(%rip), %rdx
	jmp	.L21813
.LFE56:
.Lfe56:
	.size	lookup_label,.Lfe56-lookup_label
	.align 2
	.p2align 4,,15
.globl shadow_label
	.type	shadow_label,@function
shadow_label:
.LFB57:
	subq	$24, %rsp
.LCFI180:
	movq	%rbx, 8(%rsp)
.LCFI181:
	movq	%rbp, 16(%rsp)
.LCFI182:
	movq	%rdi, %rbx
	movq	72(%rdi), %rax
	xorl	%ebp, %ebp
	testq	%rax, %rax
	je	.L21834
	movq	(%rax), %rbp
.L21834:
	testq	%rbp, %rbp
	jne	.L21840
.L21835:
	movq	%rbx, %rdi
	movq	16(%rsp), %rbp
	xorl	%eax, %eax
	movq	8(%rsp), %rbx
	addq	$24, %rsp
	jmp	lookup_label
	.p2align 6,,7
.L21840:
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%rbp, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L21841
.L21837:
	movq	$0, (%rax)
	movq	72(%rbp), %rax
	testq	%rax, %rax
	je	.L21842
.L21839:
	movq	$0, (%rax)
	jmp	.L21835
.L21842:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbp)
	jmp	.L21839
.L21841:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	jmp	.L21837
.LFE57:
.Lfe57:
	.size	shadow_label,.Lfe57-shadow_label
	.align 2
	.p2align 4,,15
.globl define_label
	.type	define_label,@function
define_label:
.LFB58:
	pushq	%r15
.LCFI183:
	pushq	%r14
.LCFI184:
	movl	%esi, %r14d
	pushq	%r13
.LCFI185:
	movq	%rdi, %r13
	pushq	%r12
.LCFI186:
	xorl	%r12d, %r12d
	pushq	%rbp
.LCFI187:
	movq	%rdx, %rbp
	pushq	%rbx
.LCFI188:
	subq	$8, %rsp
.LCFI189:
	movq	72(%rdx), %rax
	testq	%rax, %rax
	je	.L21845
	movq	(%rax), %r12
.L21845:
	testq	%r12, %r12
	je	.L21847
	movl	32(%r12), %eax
	testl	%eax, %eax
	jne	.L21846
.L21847:
	movq	named_label_uses(%rip), %rax
	testq	%rax, %rax
	je	.L21916
	movq	current_binding_level(%rip), %rdx
	movq	(%rdx), %rbx
	cmpq	%rbx, 24(%rax)
	je	.L21918
.L21848:
	movq	(%rdx), %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	movq	named_label_uses(%rip), %rdx
	call	tree_cons
	movq	current_binding_level(%rip), %rcx
	movq	%rax, named_label_uses(%rip)
	movq	%rcx, 8(%rax)
.L21846:
	testq	%r12, %r12
	je	.L21849
	movq	current_function_decl(%rip), %rdx
	cmpq	%rdx, 64(%r12)
	je	.L21859
	testb	$-128, 18(%r12)
	jne	.L21859
	movq	72(%rbp), %rax
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L21852
	movq	(%rax), %rbx
.L21852:
	testq	%rbx, %rbx
	jne	.L21919
.L21853:
	movq	%rbp, %rdi
	xorl	%eax, %eax
	call	lookup_label
	movq	%rax, %r12
.L21859:
	movq	current_binding_level(%rip), %rbx
	andb	$-2, 67(%rbx)
	testq	%r12, %r12
	je	.L21862
	movq	current_function_decl(%rip), %rax
	cmpq	%rax, 64(%r12)
	je	.L21862
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%r12, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%rbp), %rax
	testq	%rax, %rax
	je	.L21920
.L21864:
	movq	$0, (%rax)
	xorl	%ebx, %ebx
	movq	72(%rbp), %rax
	testq	%rax, %rax
	je	.L21866
	movq	(%rax), %rbx
.L21866:
	testq	%rbx, %rbx
	je	.L21868
	movl	32(%rbx), %eax
	testl	%eax, %eax
	jne	.L21867
.L21868:
	movq	named_label_uses(%rip), %rax
	testq	%rax, %rax
	je	.L21917
	movq	current_binding_level(%rip), %rdx
	movq	(%rdx), %r9
	cmpq	%r9, 24(%rax)
	je	.L21921
.L21869:
	movq	(%rdx), %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	movq	named_label_uses(%rip), %rdx
	call	tree_cons
	movq	current_binding_level(%rip), %r10
	movq	%rax, named_label_uses(%rip)
	movq	%r10, 8(%rax)
.L21867:
	testq	%rbx, %rbx
	je	.L21870
	movq	current_function_decl(%rip), %r11
	cmpq	%r11, 64(%rbx)
	je	.L21880
	testb	$-128, 18(%rbx)
	jne	.L21880
	movq	72(%rbp), %rax
	xorl	%ebx, %ebx
	testq	%rax, %rax
	je	.L21873
	movq	(%rax), %rbx
.L21873:
	testq	%rbx, %rbx
	jne	.L21922
.L21874:
	movq	%rbp, %rdi
	xorl	%eax, %eax
	call	lookup_label
	movq	%rax, %rbx
.L21880:
	movq	%rbx, %r12
.L21862:
	cmpq	$0, 88(%r12)
	jne	.L21923
	movq	named_label_uses(%rip), %rbp
	movq	error_mark_node(%rip), %rcx
	xorl	%r15d, %r15d
	movq	%r13, 24(%r12)
	movl	%r14d, 32(%r12)
	testq	%rbp, %rbp
	movq	%rcx, 88(%r12)
	je	.L21913
.L21911:
	cmpq	%r12, 32(%rbp)
	je	.L21924
.L21887:
	movq	%rbp, %r15
	movq	(%rbp), %rbp
	testq	%rbp, %rbp
	jne	.L21911
.L21913:
	movq	$0, current_function_return_value(%rip)
	movq	%r12, %rax
.L21843:
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	ret
	.p2align 6,,7
.L21924:
	movq	current_binding_level(%rip), %r14
	movq	8(%rbp), %rax
.L21908:
	xorl	%r13d, %r13d
	movq	(%r14), %rbx
	cmpq	%rax, %r14
	je	.L21925
.L21894:
	cmpq	%r13, %rbx
	je	.L21915
	.p2align 4,,7
.L21906:
	cmpb	$33, 16(%rbx)
	je	.L21926
.L21898:
	movq	(%rbx), %rbx
	cmpq	%r13, %rbx
	jne	.L21906
	movq	8(%rbp), %rax
.L21915:
	cmpq	%rax, %r14
	je	.L21891
	movq	56(%r14), %r14
	jmp	.L21908
.L21891:
	testq	%r15, %r15
	je	.L21909
	movq	(%rbp), %r13
	movq	%r13, (%r15)
	jmp	.L21887
.L21909:
	movq	(%rbp), %r14
	movq	%r14, named_label_uses(%rip)
	jmp	.L21887
	.p2align 6,,7
.L21926:
	movq	56(%rbx), %rdx
	movl	$.LC192, %edi
	movl	$6, %ecx
	cld
	movq	32(%rdx), %rsi
	repz
	cmpsb
	je	.L21898
	movq	88(%rbx), %rax
	testq	%rax, %rax
	je	.L21900
	cmpq	error_mark_node(%rip), %rax
	je	.L21900
.L21899:
	movq	72(%r12), %rdx
	testq	%rdx, %rdx
	je	.L21903
	cmpq	$0, 32(%rdx)
	jne	.L21901
.L21903:
	movq	%r12, %rdi
	movl	$.LC193, %esi
	xorl	%eax, %eax
	call	error_with_decl
	movq	72(%r12), %rdx
.L21901:
	testq	%rdx, %rdx
	je	.L21927
.L21905:
	movq	current_function_decl(%rip), %rdi
	movl	$.LC194, %esi
	xorl	%eax, %eax
	movq	%rdi, 32(%rdx)
	movq	%rbx, %rdi
	call	error_with_decl
	jmp	.L21898
.L21927:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%r12)
	movq	%rax, %rdx
	jmp	.L21905
.L21900:
	movq	8(%rbx), %rsi
	testb	$16, 46(%rsi)
	je	.L21898
	jmp	.L21899
.L21925:
	movq	24(%rbp), %r13
	jmp	.L21894
.L21923:
	movq	%r12, %rdi
	movl	$.LC191, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	jmp	.L21843
.L21922:
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%rbp), %rax
	testq	%rax, %rax
	je	.L21928
.L21876:
	movq	$0, (%rax)
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L21929
.L21878:
	movq	$0, (%rax)
	jmp	.L21874
.L21929:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	jmp	.L21878
.L21928:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbp)
	jmp	.L21876
	.p2align 6,,7
.L21870:
	movq	void_type_node(%rip), %rdx
	xorl	%eax, %eax
	movl	$30, %edi
	movq	%rbp, %rsi
	call	build_decl
	movq	current_function_decl(%rip), %r15
	movq	%rax, %rbx
	movb	$0, 52(%rax)
	movq	input_filename(%rip), %r12
	movq	%r15, 64(%rax)
	movl	lineno(%rip), %eax
	movq	%r12, 24(%rbx)
	movl	%eax, 32(%rbx)
	movq	72(%rbp), %rax
	testq	%rax, %rax
	je	.L21930
.L21882:
	movq	named_labels(%rip), %rdx
	movq	%rbx, (%rax)
	xorl	%edi, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	named_label_uses(%rip), %rbp
	movq	%rax, named_labels(%rip)
	movq	%rbx, 32(%rbp)
	jmp	.L21880
.L21930:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbp)
	jmp	.L21882
.L21921:
	cmpq	%rbx, 32(%rax)
	je	.L21867
	jmp	.L21869
.L21917:
	movq	current_binding_level(%rip), %rdx
	jmp	.L21869
.L21920:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbp)
	jmp	.L21864
.L21919:
	movq	shadowed_labels(%rip), %rdx
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	call	tree_cons
	movq	%rax, shadowed_labels(%rip)
	movq	72(%rbp), %rax
	testq	%rax, %rax
	je	.L21931
.L21855:
	movq	$0, (%rax)
	movq	72(%rbx), %rax
	testq	%rax, %rax
	je	.L21932
.L21857:
	movq	$0, (%rax)
	jmp	.L21853
.L21932:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	jmp	.L21857
.L21931:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbp)
	jmp	.L21855
	.p2align 6,,7
.L21849:
	movq	void_type_node(%rip), %rdx
	movl	$30, %edi
	movq	%rbp, %rsi
	xorl	%eax, %eax
	call	build_decl
	movq	current_function_decl(%rip), %rdi
	movq	%rax, %rbx
	movb	$0, 52(%rax)
	movq	input_filename(%rip), %rsi
	movq	%rdi, 64(%rax)
	movl	lineno(%rip), %eax
	movq	%rsi, 24(%rbx)
	movl	%eax, 32(%rbx)
	movq	72(%rbp), %rax
	testq	%rax, %rax
	je	.L21933
.L21861:
	movq	named_labels(%rip), %rdx
	movq	%rbx, (%rax)
	xorl	%edi, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	movq	%rbx, %r12
	call	tree_cons
	movq	named_label_uses(%rip), %r8
	movq	%rax, named_labels(%rip)
	movq	%rbx, 32(%r8)
	jmp	.L21859
.L21933:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbp)
	jmp	.L21861
.L21918:
	cmpq	%r12, 32(%rax)
	je	.L21846
	jmp	.L21848
.L21916:
	movq	current_binding_level(%rip), %rdx
	jmp	.L21848
.LFE58:
.Lfe58:
	.size	define_label,.Lfe58-define_label
	.data
	.align 4
	.type	explained.1,@object
	.size	explained.1,4
explained.1:
	.long	0
	.section	.rodata.str1.1
.LC341:
	.string	"destructor needed for `%s'"
.LC342:
	.string	"where case label appears here"
	.section	.rodata.str1.32
	.align 32
.LC343:
	.string	"(enclose actions of previous case statements requiring"
	.align 32
.LC344:
	.string	"destructors in their own binding contours.)"
	.text
	.align 2
	.p2align 4,,15
.globl define_case_label
	.type	define_case_label,@function
define_case_label:
.LFB59:
	subq	$8, %rsp
.LCFI190:
	xorl	%eax, %eax
	call	last_cleanup_this_contour
	testq	%rax, %rax
	je	.L21935
	movq	24(%rax), %rdi
	movl	$.LC341, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC342, %edi
	call	error
	movl	explained.1(%rip), %eax
	testl	%eax, %eax
	je	.L21937
.L21935:
	movq	current_binding_level(%rip), %rdx
	andb	$-2, 67(%rdx)
	movq	$0, current_function_return_value(%rip)
	addq	$8, %rsp
	ret
	.p2align 6,,7
.L21937:
	movl	$.LC343, %edi
	xorl	%eax, %eax
	call	error
	xorl	%eax, %eax
	movl	$.LC344, %edi
	call	error
	movl	$1, explained.1(%rip)
	jmp	.L21935
.LFE59:
.Lfe59:
	.size	define_case_label,.Lfe59-define_case_label
	.align 2
	.p2align 4,,15
.globl getdecls
	.type	getdecls,@function
getdecls:
.LFB60:
	movq	current_binding_level(%rip), %rdx
	movq	(%rdx), %rax
	ret
.LFE60:
.Lfe60:
	.size	getdecls,.Lfe60-getdecls
	.align 2
	.p2align 4,,15
.globl gettags
	.type	gettags,@function
gettags:
.LFB61:
	movq	current_binding_level(%rip), %rdx
	movq	8(%rdx), %rax
	ret
.LFE61:
.Lfe61:
	.size	gettags,.Lfe61-gettags
	.align 2
	.p2align 4,,15
.globl set_current_level_tags_transparency
	.type	set_current_level_tags_transparency,@function
set_current_level_tags_transparency:
.LFB62:
	movq	current_binding_level(%rip), %rsi
	movl	%edi, %eax
	salb	$7, %al
	movzbl	66(%rsi), %ecx
	andb	$127, %cl
	orb	%al, %cl
	movb	%cl, 66(%rsi)
	ret
.LFE62:
.Lfe62:
	.size	set_current_level_tags_transparency,.Lfe62-set_current_level_tags_transparency
	.align 2
	.p2align 4,,15
.globl typedecl_for_tag
	.type	typedecl_for_tag,@function
typedecl_for_tag:
.LFB63:
	movq	80(%rdi), %rax
	movq	current_binding_level(%rip), %rdx
	cmpb	$32, 16(%rax)
	je	.L22004
	testq	%rdx, %rdx
	je	.L22017
	.p2align 4,,7
.L22015:
	movq	(%rdx), %rax
	testq	%rax, %rax
	je	.L22014
	.p2align 4,,7
.L22013:
	cmpb	$32, 16(%rax)
	je	.L22019
.L22012:
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L22013
.L22014:
	movq	56(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L22015
.L22017:
	xorl	%eax, %eax
.L22004:
	ret
	.p2align 6,,7
.L22019:
	cmpq	%rdi, 8(%rax)
	jne	.L22012
	testq	%rax, %rax
	je	.L22014
	jmp	.L22004
.LFE63:
.Lfe63:
	.size	typedecl_for_tag,.Lfe63-typedecl_for_tag
	.align 2
	.p2align 4,,15
.globl lookup_name
	.type	lookup_name,@function
lookup_name:
.LFB64:
	subq	$24, %rsp
.LCFI191:
	movq	global_binding_level(%rip), %rdx
	cmpq	%rdx, current_binding_level(%rip)
	movq	%rbx, (%rsp)
.LCFI192:
	movq	%rbp, 8(%rsp)
.LCFI193:
	movq	%r12, 16(%rsp)
.LCFI194:
	movq	%rdi, %rbx
	movl	%esi, %ebp
	je	.L22182
	movq	48(%rdi), %rdx
	testq	%rdx, %rdx
	movq	%rdx, %rcx
	jne	.L22183
.L22182:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L22184
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L22199
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L22185
	movq	144(%rdi), %rsi
	testb	$1, 3(%rsi)
	jne	.L22201
.L22185:
	testq	%rcx, %rcx
	jne	.L22199
.L22200:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L22199
	.p2align 4,,7
.L22184:
	movq	40(%rbx), %rcx
.L22183:
	testq	%rcx, %rcx
	je	.L22181
.L22199:
	cmpb	$32, 16(%rcx)
	je	.L22181
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L22181
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L22194
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L22196
	testl	%ebp, %ebp
	jle	.L22202
.L22196:
	movq	%rax, %rcx
.L22181:
	movq	(%rsp), %rbx
	movq	8(%rsp), %rbp
	movq	%rcx, %rax
	movq	16(%rsp), %r12
	addq	$24, %rsp
	ret
.L22202:
	testl	%edx, %edx
	jg	.L22196
	testl	%ebp, %ebp
	je	.L22181
	movq	%rbx, %rdi
	movq	%rax, %rdx
	movq	8(%rsp), %rbp
	movq	(%rsp), %rbx
	movq	16(%rsp), %r12
	movq	%rcx, %rsi
	xorl	%eax, %eax
	addq	$24, %rsp
	jmp	arbitrate_lookup
	.p2align 6,,7
.L22194:
	movq	8(%rcx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rcx
	jmp	.L22181
.L22201:
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %ebp
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L22181
	testq	%rax, %rax
	je	.L22200
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L22185
.LFE64:
.Lfe64:
	.size	lookup_name,.Lfe64-lookup_name
	.section	.rodata.str1.32
	.align 32
.LC350:
	.string	"multiple types in one declaration"
	.align 32
.LC349:
	.string	"redeclaration of exception `%s'"
	.align 32
.LC348:
	.string	"anonymous union cannot have a function member"
	.align 32
.LC347:
	.string	"useless keyword or type name in declaration"
	.align 32
.LC346:
	.string	"`%s' defined as wrong kind of tag in class scope"
	.align 32
.LC345:
	.string	"`%s' defined as wrong kind of tag"
	.text
	.align 2
	.p2align 4,,15
.globl shadow_tag
	.type	shadow_tag,@function
shadow_tag:
.LFB65:
	pushq	%r15
.LCFI195:
	movq	%rdi, %r15
	pushq	%r14
.LCFI196:
	pushq	%r13
.LCFI197:
	pushq	%r12
.LCFI198:
	pushq	%rbp
.LCFI199:
	pushq	%rbx
.LCFI200:
	xorl	%ebx, %ebx
	subq	$24, %rsp
.LCFI201:
	testq	%rdi, %rdi
	movq	%rdi, 16(%rsp)
	movl	$0, 4(%rsp)
	movl	$0, 8(%rsp)
	movl	$0, 12(%rsp)
	je	.L22280
	.p2align 4,,7
.L22407:
	movq	32(%r15), %rcx
	movzbl	16(%rcx), %r14d
	leal	-21(%r14), %edx
	cmpl	$1, %edx
	jbe	.L22284
	cmpl	$10, %r14d
	je	.L22284
.L22281:
	movq	(%r15), %r15
	testq	%r15, %r15
	jne	.L22407
.L22280:
	cmpl	$22, 12(%rsp)
	je	.L22456
.L22408:
	cmpl	$21, 12(%rsp)
	je	.L22457
.L22414:
	movl	8(%rsp), %r15d
	testl	%r15d, %r15d
	jne	.L22278
	cmpl	$1, 4(%rsp)
	jg	.L22458
.L22278:
	addq	$24, %rsp
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	ret
.L22458:
	addq	$24, %rsp
	movl	$.LC350, %edi
	xorl	%eax, %eax
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	jmp	warning
.L22457:
	cmpl	$1, 4(%rsp)
	jne	.L22414
	movq	144(%rbx), %rax
	testq	%rax, %rax
	je	.L22414
	testb	$16, 3(%rax)
	je	.L22414
	cmpq	$0, 32(%rbx)
	jne	.L22459
	movl	$permanent_obstack, %edi
	movl	$permanent_obstack, %esi
	xorl	%eax, %eax
	call	push_obstacks
	xorl	%eax, %eax
	xorl	%esi, %esi
	movq	%rbx, %rdi
	call	pushclass
	xorl	%esi, %esi
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	finish_exception
	movq	80(%rbx), %rsi
	cmpb	$32, 16(%rsi)
	je	.L22460
.L22417:
	movq	%rbx, %rdx
	movl	$33, %edi
	xorl	%eax, %eax
	call	build_lang_field_decl
	movq	current_class_name(%rip), %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	finish_exception_decl
	xorl	%eax, %eax
	call	end_exception_decls
	addq	$24, %rsp
	xorl	%eax, %eax
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	jmp	pop_obstacks
.L22460:
	movq	56(%rsi), %rsi
	jmp	.L22417
.L22459:
	addq	$24, %rsp
	movq	%rbx, %rdi
	movl	$.LC349, %esi
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	xorl	%eax, %eax
	jmp	error_with_aggr_type
	.p2align 6,,7
.L22456:
	testq	%rbx, %rbx
	je	.L22408
	movq	80(%rbx), %rax
	cmpb	$1, 16(%rax)
	je	.L22461
.L22410:
	cmpb	$32, 16(%rax)
	jne	.L22408
	movq	56(%rax), %r14
	movq	32(%r14), %rax
	cmpb	$36, (%rax)
	jne	.L22408
	cmpb	$95, 1(%rax)
	jne	.L22408
.L22409:
	cmpq	$0, 24(%rbx)
	je	.L22411
	movq	16(%rsp), %rsi
	xorl	%edi, %edi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	xorl	%r8d, %r8d
	xorl	%eax, %eax
	call	grokdeclarator
	addq	$24, %rsp
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	movq	%rax, %rdi
	xorl	%eax, %eax
	jmp	finish_anon_union
.L22411:
	addq	$24, %rsp
	movl	$.LC348, %edi
	xorl	%eax, %eax
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	jmp	error
	.p2align 6,,7
.L22461:
	movq	32(%rax), %rdx
	cmpb	$36, (%rdx)
	jne	.L22410
	cmpb	$95, 1(%rdx)
	jne	.L22410
	jmp	.L22409
	.p2align 6,,7
.L22284:
	movq	80(%rcx), %r12
	testq	%r12, %r12
	jne	.L22439
	movq	current_binding_level(%rip), %rax
	testq	%rax, %rax
	je	.L22422
.L22298:
	movq	8(%rax), %rdx
	testq	%rdx, %rdx
	je	.L22424
	.p2align 4,,7
.L22297:
	cmpq	%rcx, 32(%rdx)
	je	.L22462
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L22297
.L22424:
	movq	56(%rax), %rax
	testq	%rax, %rax
	jne	.L22298
.L22422:
	xorl	%edi, %edi
.L22296:
	testq	%rdi, %rdi
	movq	%rdi, %r12
	je	.L22299
.L22439:
	cmpb	$32, 16(%r12)
	je	.L22463
.L22299:
	movq	class_binding_level(%rip), %rax
	testq	%rax, %rax
	je	.L22300
	movq	%rax, %r13
.L22348:
	movq	32(%r12), %rax
	cmpb	$36, (%rax)
	je	.L22464
.L22305:
	movq	8(%r13), %rbx
	testq	%rbx, %rbx
	je	.L22313
	.p2align 4,,7
.L22321:
	cmpq	%r12, 24(%rbx)
	je	.L22465
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L22321
.L22313:
	movl	$1, %eax
	testl	%eax, %eax
	je	.L22322
	testb	$-128, 66(%r13)
	je	.L22449
.L22322:
	movq	current_class_type(%rip), %rbp
	testq	%rbp, %rbp
	je	.L22443
	movq	56(%r13), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L22347
.L22303:
	xorl	%ebx, %ebx
	movq	%rax, %r13
	testq	%rax, %rax
	jne	.L22348
	.p2align 4,,7
.L22349:
	testq	%rbx, %rbx
	je	.L22466
	testq	%r12, %r12
	jne	.L22403
	cmpl	$10, %r14d
	je	.L22403
.L22401:
	movl	12(%rsp), %eax
	testl	%eax, %eax
	je	.L22404
	incl	4(%rsp)
	jmp	.L22281
.L22404:
	movl	8(%rsp), %r12d
	testl	%r12d, %r12d
	je	.L22467
.L22406:
	movl	$1, 8(%rsp)
	jmp	.L22281
.L22467:
	movl	$.LC347, %edi
	xorl	%eax, %eax
	call	warning
	jmp	.L22406
.L22403:
	movl	%r14d, 12(%rsp)
	jmp	.L22401
.L22466:
	xorl	%eax, %eax
	movl	$permanent_obstack, %edi
	movl	$permanent_obstack, %esi
	leal	-21(%r14), %ebx
	call	push_obstacks
	cmpl	$1, %ebx
	ja	.L22399
	movl	%r14d, %edi
	xorl	%eax, %eax
	call	make_lang_type
.L22454:
	movq	%rax, %rsi
	movq	%r12, %rdi
	movq	%rax, %rbx
	xorl	%eax, %eax
	call	pushtag
	xorl	%eax, %eax
	call	pop_obstacks
	movl	%r14d, 12(%rsp)
	jmp	.L22280
.L22399:
	movl	%r14d, %edi
	xorl	%eax, %eax
	call	make_node
	jmp	.L22454
	.p2align 6,,7
.L22347:
	movzbq	16(%rbp), %rsi
	salq	$3, %rsi
	addq	tree_code_type(%rip), %rsi
	movq	(%rsi), %rdx
	movsbl	(%rdx),%eax
	cmpl	$100, %eax
	je	.L22443
	cmpl	$116, %eax
	je	.L22468
.L22343:
	xorl	%eax, %eax
	movl	$10, %edi
	call	my_friendly_abort
	testq	%rbp, %rbp
	jne	.L22347
	.p2align 4,,7
.L22443:
	movq	56(%r13), %rax
	jmp	.L22303
.L22468:
	movq	32(%r12), %rax
	movq	144(%rbp), %rdi
	cmpb	$36, (%rax)
	movq	72(%rdi), %rdx
	je	.L22469
.L22329:
	testq	%rdx, %rdx
	je	.L22443
.L22341:
	cmpq	%r12, 24(%rdx)
	je	.L22470
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L22341
	jmp	.L22443
.L22470:
	movq	32(%rdx), %r10
	movzbl	16(%r10), %r9d
	cmpl	%r14d, %r9d
	je	.L22450
	movq	32(%r12), %rsi
	movl	$.LC346, %edi
	xorl	%eax, %eax
	call	error
.L22450:
	movq	32(%rbx), %rbx
	jmp	.L22349
.L22469:
	cmpb	$95, 1(%rax)
	jne	.L22329
	testq	%rdx, %rdx
	je	.L22443
.L22334:
	movq	32(%rdx), %r8
	movq	80(%r8), %rbp
	cmpq	%r12, 56(%rbp)
	je	.L22450
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L22334
	jmp	.L22443
.L22449:
	xorl	%ebx, %ebx
	jmp	.L22349
	.p2align 6,,7
.L22465:
	movq	32(%rbx), %rax
	movzbl	16(%rax), %edx
	cmpl	%r14d, %edx
	je	.L22360
	cmpl	$10, %r14d
	je	.L22320
	cmpl	$129, %edx
	je	.L22360
	cmpl	$132, %edx
	je	.L22360
.L22320:
	movl	$.LC345, %edi
.L22455:
	movq	32(%r12), %rsi
	xorl	%eax, %eax
	call	error
.L22389:
	movq	32(%rbx), %rax
	.p2align 4,,7
.L22360:
	movq	%rax, %rbx
	jmp	.L22349
.L22464:
	cmpb	$95, 1(%rax)
	jne	.L22305
	movq	8(%r13), %rbx
	testq	%rbx, %rbx
	je	.L22313
.L22312:
	movq	32(%rbx), %rdx
	movq	80(%rdx), %rcx
	cmpq	%r12, 56(%rcx)
	je	.L22448
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L22312
	jmp	.L22313
.L22448:
	movq	%rdx, %rbx
	jmp	.L22349
	.p2align 6,,7
.L22300:
	movq	current_binding_level(%rip), %r13
	testq	%r13, %r13
	je	.L22433
.L22397:
	movq	32(%r12), %rax
	cmpb	$36, (%rax)
	je	.L22471
.L22354:
	movq	8(%r13), %rbx
	testq	%rbx, %rbx
	je	.L22362
	.p2align 4,,7
.L22370:
	cmpq	%r12, 24(%rbx)
	je	.L22472
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L22370
.L22362:
	movl	$1, %eax
	testl	%eax, %eax
	je	.L22371
	testb	$-128, 66(%r13)
	je	.L22433
.L22371:
	movq	current_class_type(%rip), %rbp
	testq	%rbp, %rbp
	je	.L22447
	movq	56(%r13), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L22396
.L22352:
	testq	%rax, %rax
	movq	%rax, %r13
	jne	.L22397
.L22433:
	xorl	%eax, %eax
	jmp	.L22360
	.p2align 6,,7
.L22396:
	movzbq	16(%rbp), %rdx
	salq	$3, %rdx
	addq	tree_code_type(%rip), %rdx
	movq	(%rdx), %rcx
	movsbl	(%rcx),%eax
	cmpl	$100, %eax
	je	.L22447
	cmpl	$116, %eax
	je	.L22473
.L22392:
	xorl	%eax, %eax
	movl	$10, %edi
	call	my_friendly_abort
	testq	%rbp, %rbp
	jne	.L22396
.L22447:
	movq	56(%r13), %rax
	jmp	.L22352
.L22473:
	movq	32(%r12), %rax
	movq	144(%rbp), %rsi
	cmpb	$36, (%rax)
	movq	72(%rsi), %rdx
	je	.L22474
.L22378:
	testq	%rdx, %rdx
	je	.L22447
.L22390:
	cmpq	%r12, 24(%rdx)
	je	.L22475
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L22390
	jmp	.L22447
.L22475:
	movq	32(%rdx), %r8
	movzbl	16(%r8), %r13d
	cmpl	%r14d, %r13d
	je	.L22389
	movl	$.LC346, %edi
	jmp	.L22455
.L22474:
	cmpb	$95, 1(%rax)
	jne	.L22378
	testq	%rdx, %rdx
	je	.L22447
.L22383:
	movq	32(%rdx), %rbp
	movq	80(%rbp), %rdi
	cmpq	%r12, 56(%rdi)
	je	.L22389
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L22383
	jmp	.L22447
	.p2align 6,,7
.L22472:
	movq	32(%rbx), %rdx
	movzbl	16(%rdx), %eax
	cmpl	%r14d, %eax
	je	.L22368
	cmpl	$10, %r14d
	je	.L22369
	cmpl	$129, %eax
	je	.L22368
	cmpl	$132, %eax
	je	.L22368
.L22369:
	movq	32(%r12), %rsi
	movl	$.LC345, %edi
	xorl	%eax, %eax
	call	error
	movq	32(%rbx), %rdx
.L22368:
	movq	%rdx, %rax
	jmp	.L22360
.L22471:
	cmpb	$95, 1(%rax)
	jne	.L22354
	movq	8(%r13), %rbx
	testq	%rbx, %rbx
	je	.L22362
.L22361:
	movq	32(%rbx), %rdx
	movq	80(%rdx), %r11
	cmpq	%r12, 56(%r11)
	je	.L22368
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L22361
	jmp	.L22362
.L22463:
	movq	56(%r12), %r12
	jmp	.L22299
.L22462:
	xorl	%eax, %eax
	testq	%rax, %rax
	je	.L22295
	movq	%rax, 24(%rdx)
.L22295:
	movq	24(%rdx), %rdi
	jmp	.L22296
.LFE65:
.Lfe65:
	.size	shadow_tag,.Lfe65-shadow_tag
	.align 2
	.p2align 4,,15
.globl groktypename
	.type	groktypename,@function
groktypename:
.LFB66:
	cmpb	$3, 16(%rdi)
	movq	%rdi, %rax
	je	.L22479
	ret
	.p2align 6,,7
.L22479:
	movq	24(%rax), %rsi
	movq	32(%rdi), %rdi
	movl	$5, %edx
	xorl	%ecx, %ecx
	xorl	%r8d, %r8d
	xorl	%eax, %eax
	jmp	grokdeclarator
.LFE66:
.Lfe66:
	.size	groktypename,.Lfe66-groktypename
	.align 2
	.p2align 4,,15
.globl start_decl
	.type	start_decl,@function
start_decl:
.LFB67:
	pushq	%r15
.LCFI202:
	pushq	%r14
.LCFI203:
	pushq	%r13
.LCFI204:
	movq	%rsi, %r13
	pushq	%r12
.LCFI205:
	movl	%edx, %r12d
	pushq	%rbp
.LCFI206:
	movq	%rcx, %rbp
	pushq	%rbx
.LCFI207:
	movq	%rdi, %rbx
	subq	$72, %rsp
.LCFI208:
	movl	have_extern_spec(%rip), %eax
	movl	%edx, 20(%rsp)
	testl	%eax, %eax
	je	.L22481
	movl	used_extern_spec(%rip), %eax
	testl	%eax, %eax
	je	.L22682
.L22481:
	movq	%rbx, %rdi
	xorl	%edx, %edx
	xorl	%eax, %eax
	movq	%r13, %rsi
	movl	%r12d, %ecx
	movq	%rbp, %r8
	call	grokdeclarator
	testq	%rax, %rax
	movq	%rax, %rbx
	je	.L22661
	cmpq	void_type_node(%rip), %rax
	je	.L22661
	testb	$4, 18(%rax)
	movq	8(%rax), %r14
	je	.L22484
	testb	$32, 46(%r14)
	je	.L22484
	testb	$4, 17(%rax)
	je	.L22683
.L22484:
	cmpb	$21, 16(%r14)
	je	.L22684
.L22487:
	xorl	%eax, %eax
	call	push_obstacks_nochange
	movzbl	16(%rbx), %ecx
	cmpb	$29, %cl
	movl	%ecx, %edx
	je	.L22685
.L22488:
	movq	64(%rbx), %rbp
.L22489:
	movl	processing_template_decl(%rip), %eax
	testl	%eax, %eax
	je	.L22490
	cmpb	$29, %dl
	je	.L22686
.L22491:
	movq	8(%rbx), %rdx
	movq	56(%rbx), %rsi
	movl	$129, %edi
	xorl	%eax, %eax
	call	build_lang_decl
	xorl	%edx, %edx
	andb	$-9, 18(%rbx)
	movzbl	18(%rax), %edi
	movq	%rax, %rcx
	movl	%edi, %r9d
	andb	$-13, %dil
	andb	$-9, %r9b
	movb	%r9b, 18(%rax)
	movzbl	18(%rbx), %r8d
	andb	$4, %r8b
	orb	%r8b, %dil
	movb	%dil, 18(%rax)
	testb	$1, 53(%rbx)
	je	.L22494
	testq	%rbp, %rbp
	je	.L22495
	testb	$8, 54(%rbx)
	je	.L22494
.L22495:
	movl	$1, %edx
.L22494:
	movzbl	53(%rcx), %r10d
	movq	%rbx, 80(%rcx)
	orb	$32, 54(%rcx)
	movq	%rcx, %rbx
	andb	$-2, %r10b
	orb	%dl, %r10b
	movb	%r10b, 53(%rcx)
.L22490:
	testq	%rbp, %rbp
	je	.L22496
	cmpq	$0, 32(%rbp)
	je	.L22496
	testb	$8, 54(%rbx)
	jne	.L22497
	andb	$-2, 53(%rbx)
.L22497:
	cmpq	$0, 152(%rbx)
	je	.L22498
	andb	$-17, 54(%rbx)
.L22498:
	movq	%rbp, %rdi
	movl	$2, %esi
	xorl	%eax, %eax
	call	pushclass
.L22496:
	testb	$32, 46(%r14)
	je	.L22499
	movq	current_binding_level(%rip), %rax
	testb	$1, 67(%rax)
	jne	.L22499
	cmpq	global_binding_level(%rip), %rax
	je	.L22687
.L22500:
	movq	free_binding_level(%rip), %rdi
	testq	%rdi, %rdi
	je	.L22501
	movq	56(%rdi), %rbp
	movq	%rbp, free_binding_level(%rip)
.L22502:
	movq	clear_binding_level(%rip), %r11
	movq	class_binding_level(%rip), %rax
	movl	keep_next_level_flag(%rip), %ecx
	movq	%r11, (%rdi)
	testq	%rax, %rax
	movq	clear_binding_level+8(%rip), %rbp
	movq	%rbp, 8(%rdi)
	movq	clear_binding_level+16(%rip), %rdx
	movq	%rdx, 16(%rdi)
	movq	clear_binding_level+24(%rip), %r10
	movq	%r10, 24(%rdi)
	movq	clear_binding_level+32(%rip), %r9
	movq	%r9, 32(%rdi)
	movq	clear_binding_level+40(%rip), %r8
	movq	%r8, 40(%rdi)
	movq	clear_binding_level+48(%rip), %rsi
	movq	%rsi, 48(%rdi)
	movq	clear_binding_level+56(%rip), %r15
	movq	%r15, 56(%rdi)
	movq	clear_binding_level+64(%rip), %r11
	movq	%r11, 64(%rdi)
	je	.L22503
	movq	%rax, 56(%rdi)
	movq	$0, class_binding_level(%rip)
.L22504:
	movzbl	66(%rdi), %esi
	movl	%ecx, %r8d
	movq	%rdi, current_binding_level(%rip)
	andb	$7, %r8b
	orb	$5, 67(%rdi)
	xorl	%eax, %eax
	salb	$4, %r8b
	orb	$-128, %sil
	andb	$-113, %sil
	orb	%r8b, %sil
	movb	%sil, 66(%rdi)
	call	GNU_xref_start_scope
	movq	current_binding_level(%rip), %rcx
	movl	$0, keep_next_level_flag(%rip)
	xorl	%eax, %eax
	movzbl	66(%rcx), %edi
	andb	$-113, %dil
	orb	$32, %dil
	movb	%dil, 66(%rcx)
	call	clear_last_expr
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	expand_start_bindings
.L22499:
	testl	%r12d, %r12d
	je	.L22647
	movzbl	16(%rbx), %eax
	cmpl	$29, %eax
	je	.L22513
	cmpl	$32, %eax
	je	.L22688
	cmpq	$0, 32(%r14)
	jne	.L22508
	cmpb	$18, 16(%r14)
	je	.L22517
	movq	56(%rbx), %rax
	movl	$.LC143, %edi
.L22654:
	movq	32(%rax), %rsi
	xorl	%r12d, %r12d
	xorl	%eax, %eax
	call	error
.L22508:
	testl	%r12d, %r12d
	jne	.L22648
.L22647:
	movzbl	16(%rbx), %eax
	cmpb	$32, %al
	je	.L22521
	cmpb	$-127, %al
	je	.L22521
	movzbl	46(%r14), %eax
	testb	$64, %al
	je	.L22521
	testb	$1, 53(%rbx)
	jne	.L22521
	cmpq	$0, 32(%r14)
	je	.L22689
	shrb	$4, %al
	movl	$1, %r12d
	andl	%eax, %r12d
	.p2align 4,,7
.L22521:
	testl	%r12d, %r12d
	je	.L22524
.L22648:
	movq	global_binding_level(%rip), %r12
	cmpq	%r12, current_binding_level(%rip)
	je	.L22525
	testb	$1, 53(%rbx)
	jne	.L22690
.L22525:
	andb	$-2, 53(%rbx)
	movq	global_binding_level(%rip), %rax
	cmpq	%rax, current_binding_level(%rip)
	je	.L22691
.L22526:
	movq	error_mark_node(%rip), %rdx
	movq	%rdx, 88(%rbx)
.L22524:
	movzbl	16(%rbx), %eax
	cmpb	$34, %al
	je	.L22529
	cmpq	$0, 64(%rbx)
	jne	.L22528
.L22529:
	cmpb	$-127, %al
	je	.L22692
.L22530:
	cmpb	$24, 16(%r14)
	je	.L22528
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	pushdecl
	cmpb	$3, 16(%rax)
	movq	%rax, %rbp
	je	.L22693
.L22650:
	movzbl	16(%rbx), %eax
.L22532:
	cmpb	$29, %al
	je	.L22694
.L22558:
	cmpb	$-127, %al
	je	.L22695
.L22593:
	movl	20(%rsp), %r13d
	testl	%r13d, %r13d
	je	.L22636
	movzbl	16(%rbp), %eax
	cmpb	$34, %al
	je	.L22636
	testb	$32, 17(%rbp)
	je	.L22637
	cmpb	$33, %al
	je	.L22636
	cmpb	$36, %al
	je	.L22636
.L22637:
	movq	global_binding_level(%rip), %rbx
	cmpq	%rbx, current_binding_level(%rip)
	je	.L22696
.L22636:
	movl	flag_cadillac(%rip), %r14d
	testl	%r14d, %r14d
	jne	.L22697
	.p2align 4,,7
.L22480:
	addq	$72, %rsp
	movq	%rbp, %rax
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	ret
.L22697:
	movq	%rbp, %rdi
	xorl	%eax, %eax
	call	cadillac_start_decl
	jmp	.L22480
.L22696:
	movl	debug_temp_inits(%rip), %r11d
	testl	%r11d, %r11d
	je	.L22636
	testb	$16, 46(%r14)
	jne	.L22636
	cmpb	$15, 16(%r14)
	je	.L22636
	xorl	%eax, %eax
	call	temporary_allocation
	jmp	.L22636
	.p2align 6,,7
.L22695:
	movq	80(%rbx), %rax
	movq	64(%rax), %rdx
	testq	%rdx, %rdx
	jne	.L22698
	movzbl	16(%rax), %eax
	cmpb	$29, %al
	je	.L22699
	subb	$32, %al
	cmpb	$1, %al
	ja	.L22634
	movl	$.LC153, %edi
	xorl	%eax, %eax
	call	sorry
	.p2align 4,,7
.L22661:
	xorl	%ebp, %ebp
	jmp	.L22480
.L22634:
	movl	$14, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L22593
.L22699:
	movq	56(%rbp), %r13
	xorl	%r15d, %r15d
	movq	40(%r13), %r12
	orb	$32, 54(%rbp)
	testq	%r12, %r12
	je	.L22599
	movzbl	16(%r12), %edx
	cmpb	$3, %dl
	je	.L22600
.L22681:
	movq	152(%rbp), %rbx
	cmpb	$0, (%rbx)
	jne	.L22601
	cmpb	$29, %dl
	je	.L22700
	movl	$9, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L22601:
	testl	%r15d, %r15d
	je	.L22605
	movl	flag_traditional(%rip), %r10d
	testl	%r10d, %r10d
	jne	.L22605
	testb	$4, 17(%r12)
	jne	.L22701
.L22605:
	movzbl	16(%r12), %eax
	cmpb	$106, %al
	je	.L22702
.L22607:
	cmpb	$29, %al
	je	.L22703
.L22608:
	movl	pedantic(%rip), %edx
	testl	%edx, %edx
	je	.L22612
	cmpb	$33, 16(%r12)
	je	.L22704
.L22612:
	movq	%r13, %rdi
	movq	%r12, %rsi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rbp, %rsi
	movq	24(%rax), %rdi
	movq	%rax, %rdx
.L22658:
	xorl	%eax, %eax
	call	tree_cons
	movq	unknown_type_node(%rip), %r12
	movq	%rax, 40(%r13)
	movq	%r12, 8(%rax)
	jmp	.L22593
.L22704:
	movq	tree_code_type(%rip), %rsi
	movq	264(%rsi), %rdi
	movl	$143, %esi
	cmpb	$100, (%rdi)
	sete	%bl
	xorl	%eax, %eax
	movzbl	%bl, %edi
	call	my_friendly_assert
	xorl	%eax, %eax
	movl	$.LC151, %esi
	movq	%r12, %rdi
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC152, %esi
	movq	%rbp, %rdi
	call	error_with_decl
	jmp	.L22612
.L22703:
	movq	152(%rbp), %rax
	movq	152(%r12), %r8
	movzbl	(%rax), %r11d
	cmpb	%r11b, (%r8)
	je	.L22608
	movq	8(%r12), %rdi
	movq	8(%rbp), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L22608
	movq	current_lang_base(%rip), %rcx
	cmpq	%rcx, current_lang_stack(%rip)
	je	.L22705
	movq	%rbp, %rdi
	movl	$.LC149, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC150, %esi
	movq	%r12, %rdi
	call	error_with_decl
	jmp	.L22608
.L22705:
	movq	152(%r12), %r9
	movq	152(%rbp), %r13
	movzbl	(%r9), %ebp
	movb	%bpl, (%r13)
	movq	%r12, %rbp
	jmp	.L22593
.L22702:
	movq	32(%r12), %r12
	movzbl	16(%r12), %eax
	jmp	.L22607
.L22701:
	movq	global_binding_level(%rip), %r15
	cmpq	%r15, current_binding_level(%rip)
	je	.L22605
	movq	overloads_to_forget(%rip), %rdx
	movq	%r13, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, overloads_to_forget(%rip)
	jmp	.L22605
	.p2align 6,,7
.L22700:
	movq	152(%r12), %rsi
	cmpb	$0, (%rsi)
	jne	.L22601
	movq	%rbp, %rdi
	movl	$.LC147, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC148, %esi
	movq	%r12, %rdi
	call	error_with_decl
	jmp	.L22601
.L22600:
	cmpq	$0, 32(%r12)
	jne	.L22613
.L22659:
	movq	%rbp, 32(%r12)
	jmp	.L22593
.L22613:
	cmpb	$-127, 16(%rbp)
	je	.L22599
	movq	112(%rbp), %r10
	movq	%r12, %rbx
	movq	%r10, (%rsp)
.L22621:
	movq	32(%rbx), %rcx
	cmpb	$29, 16(%rcx)
	je	.L22706
.L22619:
	cmpb	$-127, 16(%rcx)
	je	.L22617
	movq	(%rsp), %r9
	cmpq	%r9, 112(%rcx)
	je	.L22593
.L22617:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L22621
.L22599:
	movq	152(%rbp), %rcx
	cmpb	$0, (%rcx)
	jne	.L22622
	testq	%r12, %r12
	movq	%r12, %rbx
	je	.L22622
	movq	32(%r12), %rdi
	movq	152(%rdi), %rdx
	cmpb	$1, (%rdx)
	je	.L22627
.L22624:
	testq	%rbx, %rbx
	jne	.L22707
.L22622:
	testl	%r15d, %r15d
	je	.L22629
	movl	flag_traditional(%rip), %r15d
	testl	%r15d, %r15d
	jne	.L22629
	testq	%r12, %r12
	je	.L22630
	testb	$4, 17(%r12)
	jne	.L22630
.L22629:
	movq	%r13, %rdi
	movq	%rbp, %rsi
	movq	%r12, %rdx
	jmp	.L22658
.L22630:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L22629
	testb	$32, 67(%rax)
	jne	.L22629
	movq	overloads_to_forget(%rip), %rdx
	movq	%r13, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, overloads_to_forget(%rip)
	jmp	.L22629
.L22707:
	movq	%rbp, %rdi
	movl	$.LC147, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC148, %esi
	movq	32(%rbx), %rdi
	call	error_with_decl
	jmp	.L22622
.L22627:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	je	.L22622
	movq	32(%rbx), %r10
	movq	152(%r10), %rsi
	cmpb	$1, (%rsi)
	je	.L22627
	jmp	.L22624
.L22706:
	movq	152(%rbp), %rax
	movq	152(%rcx), %r8
	movzbl	(%rax), %r11d
	cmpb	%r11b, (%r8)
	je	.L22619
	movq	8(%rcx), %rdi
	movq	8(%rbp), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	jne	.L22708
.L22653:
	movq	32(%rbx), %rcx
	jmp	.L22619
.L22708:
	movq	%rbp, %rdi
	movl	$.LC149, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC150, %esi
	movq	32(%rbx), %rdi
	call	error_with_decl
	jmp	.L22653
	.p2align 6,,7
.L22698:
	cmpb	$-124, 16(%rdx)
	movl	$145, %esi
	sete	%r14b
	xorl	%eax, %eax
	movzbl	%r14b, %edi
	call	my_friendly_assert
	jmp	.L22480
.L22694:
	testb	$32, 54(%rbx)
	je	.L22558
	movq	56(%rbp), %r13
	movl	$1, %r15d
	movq	40(%r13), %r12
	orb	$32, 54(%rbp)
	testq	%r12, %r12
	je	.L22559
	movzbl	16(%r12), %edx
	cmpb	$3, %dl
	jne	.L22681
	cmpq	$0, 32(%r12)
	je	.L22659
	cmpb	$-127, 16(%rbp)
	je	.L22559
	movq	112(%rbp), %rbx
	movq	%rbx, 8(%rsp)
	movq	%r12, %rbx
.L22581:
	movq	32(%rbx), %rcx
	cmpb	$29, 16(%rcx)
	je	.L22709
.L22579:
	cmpb	$-127, 16(%rcx)
	je	.L22577
	movq	8(%rsp), %r11
	cmpq	%r11, 112(%rcx)
	je	.L22593
.L22577:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L22581
.L22559:
	movq	152(%rbp), %rdx
	cmpb	$0, (%rdx)
	jne	.L22622
	testq	%r12, %r12
	movq	%r12, %rbx
	je	.L22622
	movq	32(%r12), %rcx
	movq	152(%rcx), %r8
	cmpb	$1, (%r8)
	jne	.L22624
.L22587:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	je	.L22622
	movq	32(%rbx), %rdi
	movq	152(%rdi), %r9
	cmpb	$1, (%r9)
	je	.L22587
	jmp	.L22624
.L22709:
	movq	152(%rbp), %rax
	movq	152(%rcx), %r10
	movzbl	(%rax), %esi
	cmpb	%sil, (%r10)
	je	.L22579
	movq	8(%rcx), %rdi
	movq	8(%rbp), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	jne	.L22710
.L22652:
	movq	32(%rbx), %rcx
	jmp	.L22579
.L22710:
	movq	%rbp, %rdi
	movl	$.LC149, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC150, %esi
	movq	32(%rbx), %rdi
	call	error_with_decl
	jmp	.L22652
	.p2align 6,,7
.L22693:
	movq	%rax, %rsi
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	value_member
	testq	%rax, %rax
	je	.L22536
	movq	32(%rax), %rbp
	jmp	.L22650
.L22536:
	testq	%rbp, %rbp
	je	.L22649
	movq	%rbx, 56(%rsp)
	movq	%rbx, %rcx
	movq	32(%rbp), %rdx
	movq	%rdx, 32(%rsp)
	cmpb	$29, 16(%rbx)
	je	.L22711
.L22540:
	movq	8(%rcx), %rdi
	cmpq	error_mark_node(%rip), %rdi
	je	.L22712
	movq	8(%rdx), %rsi
	testq	%rsi, %rsi
	jne	.L22553
	testq	%rdi, %rdi
.L22657:
	sete	%dil
	movzbl	%dil, %eax
.L22547:
	testl	%eax, %eax
	jne	.L22713
	movq	(%rbp), %rbp
	jmp	.L22536
.L22713:
	testq	%rbp, %rbp
	jne	.L22556
.L22649:
	movzbl	16(%rbx), %eax
	movq	%rbx, %rbp
	jmp	.L22532
.L22556:
	movq	32(%rbp), %rbp
	jmp	.L22650
.L22553:
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	jmp	.L22547
.L22712:
	cmpq	%rdi, 8(%rdx)
	jmp	.L22657
.L22711:
	cmpb	$29, 16(%rdx)
	jne	.L22540
	movq	8(%rbx), %rdi
	movq	%rdi, 64(%rsp)
	movq	8(%rdx), %rsi
	movq	%rsi, 40(%rsp)
	movq	%rsi, %r8
	movq	24(%rdi), %r15
	movq	%r15, 48(%rsp)
	movq	24(%rsi), %r11
	movq	%r11, 24(%rsp)
	cmpb	$16, 16(%rdi)
	je	.L22714
.L22541:
	cmpb	$16, 16(%r8)
	je	.L22715
.L22542:
	movzbl	16(%rdi), %eax
	cmpb	16(%rsi), %al
	je	.L22544
	cmpb	$14, %al
	je	.L22716
	movq	56(%rsp), %rdi
	movl	$.LC2, %esi
.L22656:
	xorl	%eax, %eax
	call	compiler_error_with_decl
.L22548:
	xorl	%eax, %eax
	jmp	.L22547
.L22716:
	movq	56(%rsp), %rdi
	movl	$.LC1, %esi
	jmp	.L22656
.L22544:
	movq	8(%rdi), %r9
	movq	8(%rsi), %rcx
	xorl	%eax, %eax
	movl	$1, %edx
	movq	112(%r9), %rdi
	movq	112(%rcx), %rsi
	call	comptypes
	testl	%eax, %eax
	je	.L22548
	movq	48(%rsp), %rdi
	movq	24(%rsp), %rsi
	movl	$1, %edx
	xorl	%eax, %eax
	call	compparms
	jmp	.L22547
.L22715:
	movq	152(%rcx), %r8
	testb	$32, 1(%r8)
	je	.L22542
	leaq	40(%rsp), %rdi
	leaq	32(%rsp), %rsi
	leaq	24(%rsp), %rdx
.L22655:
	xorl	%eax, %eax
	call	revert_static_member_fn
	movq	64(%rsp), %rdi
	movq	40(%rsp), %rsi
	jmp	.L22542
.L22714:
	movq	152(%rdx), %r13
	testb	$32, 1(%r13)
	je	.L22541
	leaq	64(%rsp), %rdi
	leaq	56(%rsp), %rsi
	leaq	48(%rsp), %rdx
	jmp	.L22655
	.p2align 6,,7
.L22528:
	movq	%rbx, %rbp
	jmp	.L22532
.L22692:
	movq	global_binding_level(%rip), %rbp
	cmpq	%rbp, current_binding_level(%rip)
	jne	.L22528
	jmp	.L22530
.L22691:
	orb	$4, 18(%rbx)
	jmp	.L22526
.L22690:
	movq	56(%rbx), %r10
	movl	$.LC146, %edi
	xorl	%eax, %eax
	movq	32(%r10), %rsi
	call	warning
	jmp	.L22525
.L22689:
	movq	56(%rbx), %r14
	movl	$.LC145, %edi
	xorl	%eax, %eax
	movq	32(%r14), %rsi
	call	error
	movq	error_mark_node(%rip), %r9
	movq	%r9, %r14
	movq	%r9, 8(%rbx)
	jmp	.L22521
.L22517:
	movq	8(%r14), %r13
	cmpq	$0, 32(%r13)
	jne	.L22508
	movq	56(%rbx), %rax
	movl	$.LC144, %edi
	jmp	.L22654
.L22688:
	movl	pedantic(%rip), %eax
	testl	%eax, %eax
	jne	.L22512
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	list_length
	decl	%eax
	jle	.L22508
.L22512:
	movq	56(%rbx), %rax
	movl	$.LC141, %edi
	jmp	.L22654
.L22513:
	movq	56(%rbx), %rax
	movl	$.LC142, %edi
	jmp	.L22654
.L22503:
	movq	current_binding_level(%rip), %r15
	movq	%r15, 56(%rdi)
	jmp	.L22504
.L22501:
	movl	$72, %edi
	xorl	%eax, %eax
	call	xmalloc
	movq	%rax, %rdi
	jmp	.L22502
.L22687:
	cmpq	$0, named_labels(%rip)
	movl	$134, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	jmp	.L22500
.L22686:
	movq	last_function_parms(%rip), %rdi
	xorl	%eax, %eax
	call	copy_to_permanent
	movq	%rax, %r15
	movq	8(%rbx), %rax
	cmpb	$16, 16(%rax)
	je	.L22717
.L22492:
	movq	%r15, 72(%rbx)
	jmp	.L22491
.L22717:
	movq	96(%rax), %rdi
	cmpb	$-124, 16(%rdi)
	je	.L22492
	xorl	%eax, %eax
	call	build_pointer_type
	movq	%rax, %rdi
	movl	flag_this_is_variable(%rip), %eax
	testl	%eax, %eax
	setle	%al
	xorl	%edx, %edx
	movzbl	%al, %esi
	xorl	%eax, %eax
	call	build_type_variant
	movq	this_identifier(%rip), %rdx
	movl	$34, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build
	movq	%r15, (%rax)
	movq	%rax, %r15
	jmp	.L22492
	.p2align 6,,7
.L22685:
	testb	$32, 53(%rbx)
	je	.L22488
	movq	152(%rbx), %rsi
	movq	16(%rsi), %rbp
	jmp	.L22489
	.p2align 6,,7
.L22684:
	movq	144(%r14), %rdx
	testb	$16, 3(%rdx)
	je	.L22487
	movq	%rbx, %rbp
	jmp	.L22480
.L22683:
	movl	$permanent_obstack, %edi
	movl	$permanent_obstack, %esi
	xorl	%eax, %eax
	call	push_obstacks
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	copy_node
	cmpb	$18, 16(%r14)
	movq	%rax, %rbx
	je	.L22718
.L22485:
	xorl	%eax, %eax
	call	pop_obstacks
	jmp	.L22484
.L22718:
	movq	24(%r14), %rax
	testq	%rax, %rax
	je	.L22485
	testb	$4, 17(%rax)
	jne	.L22485
	movq	96(%rax), %rdi
	xorl	%eax, %eax
	call	copy_to_permanent
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	build_index_type
	movq	8(%r14), %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_cplus_array_type
	movq	%rax, %r14
	movq	%rax, 8(%rbx)
	jmp	.L22485
	.p2align 6,,7
.L22682:
	movl	$.LC140, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	%r13, %rdx
	xorl	%edi, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	decl_tree_cons
	movl	$1, used_extern_spec(%rip)
	movq	%rax, %r13
	jmp	.L22481
.LFE67:
.Lfe67:
	.size	start_decl,.Lfe67-start_decl
	.section	.rodata.str1.32
	.align 32
.LC353:
	.string	"redeclaration of derivation chain of type `%s'"
	.align 32
.LC354:
	.string	"base type `%s' fails to be a struct or class type"
	.align 32
.LC356:
	.string	"duplicate base type `%s' invalid"
	.section	.rodata.str1.1
.LC355:
	.string	"recursive type `%s' undefined"
	.section	.rodata.str1.32
	.align 32
.LC352:
	.string	"type `%s' is both exception and aggregate type"
	.section	.rodata.str1.1
.LC351:
	.string	"derived union `%s' invalid"
	.text
	.align 2
	.p2align 4,,15
.globl xref_defn_tag
	.type	xref_defn_tag,@function
xref_defn_tag:
.LFB68:
	pushq	%rbp
.LCFI209:
	movq	%rsp, %rbp
.LCFI210:
	pushq	%r15
.LCFI211:
	pushq	%r14
.LCFI212:
	movq	%rsi, %r14
	pushq	%r13
.LCFI213:
	pushq	%r12
.LCFI214:
	pushq	%rbx
.LCFI215:
	movq	%rdi, %rbx
	subq	$88, %rsp
.LCFI216:
	cmpq	$0, class_binding_level(%rip)
	movl	$1, xref_next_defn(%rip)
	movq	%rdx, -112(%rbp)
	je	.L22936
	movq	current_class_name(%rip), %rsi
	movq	48(%rsi), %rdx
	movq	%rsi, %rcx
	testq	%rdx, %rdx
	je	.L22938
	movq	56(%rdx), %rcx
.L22938:
	movl	24(%r14), %eax
	movq	32(%rcx), %rdx
	movl	$.LC35, %esi
	addl	24(%rcx), %eax
	movq	32(%r14), %rcx
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	class_binding_level(%rip), %r15
	movq	%rax, -48(%rbp)
	testq	%r15, %r15
	jne	.L22939
	movq	current_binding_level(%rip), %r15
.L22939:
	movl	24(%rbx), %ebx
	cmpl	$4, %ebx
	movl	%ebx, -52(%rbp)
	ja	.L22947
	mov	%ebx, %edx
	jmp	*.L22948(,%rdx,8)
	.section	.rodata
	.align 8
	.align 4
.L22948:
	.quad	.L22943
	.quad	.L22943
	.quad	.L22944
	.quad	.L22946
	.quad	.L22943
	.text
.L22943:
	movq	-112(%rbp), %rdi
	xorl	%eax, %eax
	movl	$21, -92(%rbp)
	call	list_length
	movl	%eax, -88(%rbp)
.L22940:
	movl	xref_next_defn(%rip), %eax
	testl	%eax, %eax
	je	.L22949
	testq	%r15, %r15
	movl	$0, xref_next_defn(%rip)
	movq	%r15, %r13
	je	.L23066
.L22997:
	movq	32(%r14), %rax
	cmpb	$36, (%rax)
	je	.L23428
.L22954:
	movq	8(%r13), %rbx
	testq	%rbx, %rbx
	je	.L22962
	.p2align 4,,7
.L22970:
	cmpq	%r14, 24(%rbx)
	je	.L23429
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L22970
.L22962:
	movl	$1, %eax
	testl	%eax, %eax
	je	.L22971
	testb	$-128, 66(%r13)
	je	.L23066
.L22971:
	movq	current_class_type(%rip), %r12
	testq	%r12, %r12
	je	.L23389
	movq	56(%r13), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L22996
.L22952:
	testq	%rax, %rax
	movq	%rax, %r13
	jne	.L22997
.L23066:
	xorl	%r13d, %r13d
.L22998:
	xorl	%eax, %eax
	call	push_obstacks_nochange
	testq	%r13, %r13
	je	.L23430
	movl	-92(%rbp), %eax
	subl	$21, %eax
	cmpl	$1, %eax
	ja	.L23086
	testb	$64, 46(%r13)
	je	.L23086
	movq	144(%r13), %r9
	cmpl	$4, -52(%rbp)
	sete	%r8b
	testb	$16, 3(%r9)
	setne	%dil
	xorl	%r8d, %edi
	andl	$1, %edi
	jne	.L23431
.L23086:
	cmpq	global_binding_level(%rip), %r15
	je	.L23432
.L23088:
	cmpq	$0, -112(%rbp)
	je	.L23098
	movq	120(%r13), %rdx
	movq	-112(%rbp), %rbx
	movq	64(%rdx), %rcx
	testq	%rcx, %rcx
	je	.L23090
	xorl	%edx, %edx
	.p2align 4,,7
.L23096:
	movslq	%edx,%r10
	movq	32(%rcx,%r10,8), %r9
	movq	8(%r9), %r8
	movq	80(%r8), %rsi
	movq	56(%rsi), %rdi
	cmpq	%rdi, 32(%rbx)
	jne	.L23410
	movq	(%rbx), %rbx
	incl	%edx
	testq	%rbx, %rbx
	jne	.L23096
.L23098:
	cmpq	$0, 32(%r13)
	jne	.L23126
	cmpq	current_class_type(%rip), %r13
	je	.L23126
	movzbl	16(%r13), %edx
	subb	$21, %dl
	cmpb	$1, %dl
	ja	.L23126
	cmpl	$1, -52(%rbp)
	je	.L23433
	movl	-52(%rbp), %esi
	testl	%esi, %esi
	jne	.L23126
	movq	144(%r13), %r10
	andb	$-33, 3(%r10)
.L23126:
	xorl	%eax, %eax
	call	pop_obstacks
	xorl	%eax, %eax
	movq	%r13, %rdx
	movq	-48(%rbp), %rsi
	movl	$32, %edi
	call	build_lang_decl
	movq	global_binding_level(%rip), %rcx
	movq	current_binding_level(%rip), %rbx
	movq	%rax, %r12
	movq	%rax, %rdi
	xorl	%eax, %eax
	movq	%rcx, current_binding_level(%rip)
	call	pushdecl
	movq	class_binding_level(%rip), %r15
	movq	%rbx, current_binding_level(%rip)
	testq	%r15, %r15
	cmovne	%r15, %rbx
	cmpb	$32, 16(%r12)
	je	.L23434
.L23147:
	movl	$0, xref_next_defn(%rip)
	movq	%r13, %rax
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	leave
	ret
.L23434:
	movq	global_binding_level(%rip), %rdi
	xorl	%ecx, %ecx
	movq	56(%r12), %rsi
	cmpq	%rdi, %rbx
	je	.L23360
	.p2align 4,,7
.L23143:
	movq	32(%rbx), %rdx
	testq	%rdx, %rdx
	je	.L23362
	.p2align 4,,7
.L23142:
	cmpq	%rsi, 24(%rdx)
	leaq	32(%rdx), %r14
	movq	(%rdx), %rdx
	cmove	%r14, %rcx
	testq	%rdx, %rdx
	jne	.L23142
.L23362:
	movq	56(%rbx), %rbx
	cmpq	%rdi, %rbx
	jne	.L23143
.L23360:
	testq	%rcx, %rcx
	movq	8(%r12), %rax
	jne	.L23144
	movq	%rax, 8(%rsi)
	jmp	.L23147
.L23144:
	movq	%rax, (%rcx)
	jmp	.L23147
.L23433:
	movq	144(%r13), %r9
	orb	$32, 3(%r9)
	jmp	.L23126
.L23410:
	movq	32(%r14), %rsi
	movl	$.LC353, %edi
	xorl	%eax, %eax
	call	error
.L23090:
	testq	%rbx, %rbx
	je	.L23098
	xorl	%eax, %eax
	call	end_temporary_allocation
.L23085:
	cmpq	$0, -112(%rbp)
	je	.L23098
	movq	144(%r13), %rbx
	xorl	%eax, %eax
	orb	$1, 4(%rbx)
	movl	-88(%rbp), %edi
	movq	120(%r13), %r12
	call	make_tree_vec
	movq	%rax, -64(%rbp)
	movq	%rax, 64(%r12)
	movl	$0, -96(%rbp)
.L23115:
	xorl	%r15d, %r15d
	cmpl	$1, -52(%rbp)
	je	.L23435
	movq	-112(%rbp), %rax
	movq	24(%rax), %rdx
.L23105:
	movl	$1, %r15d
.L23104:
	xorl	%r8d, %r8d
	leaq	-4(%rdx), %rsi
	cmpq	$3, %rdx
	sete	%r8b
	movq	-112(%rbp), %rdx
	cmpq	$2, %rsi
	setbe	%dil
	xorl	%eax, %eax
	movl	%r8d, -68(%rbp)
	xorl	%r8d, %r8d
	movq	32(%rdx), %r11
	movzbl	%dil, %r12d
	movl	%r15d, %edx
	movq	32(%r14), %rdi
	movl	%r12d, %ecx
	movq	8(%r11), %rbx
	movq	32(%r11), %rsi
	call	GNU_xref_hier
	testq	%rbx, %rbx
	je	.L23108
	cmpb	$32, 16(%rbx)
	je	.L23436
.L23106:
	testq	%rbx, %rbx
	je	.L23108
	cmpb	$21, 16(%rbx)
	je	.L23107
.L23108:
	movq	-112(%rbp), %r9
	movl	$.LC354, %edi
	xorl	%eax, %eax
	movq	32(%r9), %r15
	movq	32(%r15), %rsi
	call	error
.L23102:
	movq	-112(%rbp), %rbx
	movq	(%rbx), %rax
	testq	%rax, %rax
	movq	%rax, -112(%rbp)
	jne	.L23115
	movl	-96(%rbp), %r14d
	testl	%r14d, %r14d
	je	.L23116
	movl	-96(%rbp), %edi
	movq	-64(%rbp), %r11
	movl	%edi, 24(%r11)
.L23117:
	cmpl	$1, -96(%rbp)
	jle	.L23118
	movq	144(%r13), %r8
	orb	$4, 1(%r8)
.L23119:
	movq	144(%r13), %rcx
	testb	$4, 1(%rcx)
	je	.L23121
	orb	$-128, 18(%r13)
.L23121:
	movl	-96(%rbp), %edx
	decl	%edx
	js	.L23358
.L23125:
	movq	-64(%rbp), %r8
	movslq	%edx,%rdi
	movq	32(%r8,%rdi,8), %r11
	movq	8(%r11), %r14
	movq	144(%r14), %rbx
	andb	$-2, 4(%rbx)
	decl	%edx
	jns	.L23125
	movq	144(%r13), %rcx
.L23358:
	andb	$-2, 4(%rcx)
	jmp	.L23098
.L23118:
	cmpl	$1, -96(%rbp)
	jne	.L23119
	movq	-64(%rbp), %rax
	movq	144(%r13), %r9
	movq	32(%rax), %rcx
	movzbl	1(%r9), %esi
	movq	8(%rcx), %r15
	andb	$-5, %sil
	movq	144(%r15), %r12
	movzbl	1(%r12), %r10d
	andb	$4, %r10b
	orb	%r10b, %sil
	movb	%sil, 1(%r9)
	jmp	.L23119
.L23116:
	movq	120(%r13), %rdx
	movq	$0, 64(%rdx)
	jmp	.L23117
.L23107:
	movq	144(%rbx), %r10
	testb	$1, 4(%r10)
	je	.L23110
	cmpq	%r13, %rbx
	je	.L23437
	movq	%rbx, %rdi
	movl	$.LC356, %esi
.L23421:
	xorl	%eax, %eax
	call	error_with_aggr_type
	jmp	.L23102
.L23437:
	movq	%r13, %rdi
	movl	$.LC355, %esi
	jmp	.L23421
.L23110:
	movq	120(%rbx), %r10
	movq	integer_zero_node(%rip), %rdi
	xorl	%r8d, %r8d
	movq	%rbx, %rsi
	xorl	%eax, %eax
	movq	48(%r10), %rdx
	movq	56(%r10), %rcx
	call	make_binfo
	leal	0(,%r12,4), %edx
	leal	0(,%r15,8), %r8d
	movslq	-96(%rbp),%r9
	movq	-64(%rbp), %rsi
	movq	%rax, 32(%rsi,%r9,8)
	movzbl	-68(%rbp), %edi
	movzbl	18(%rax), %r11d
	andb	$-41, %r11b
	salb	$5, %dil
	orb	%r8b, %r11b
	orb	%dil, %r11b
	andb	$-5, %r11b
	orb	%dl, %r11b
	movb	%r11b, 18(%rax)
	movq	144(%rbx), %rcx
	orb	$1, 4(%rcx)
	testl	%r12d, %r12d
	jne	.L23114
	testb	$2, 19(%rbx)
	je	.L23113
.L23114:
	orb	$2, 19(%r13)
	orb	$-128, 18(%r13)
.L23113:
	movq	144(%r13), %r9
	movq	144(%rbx), %rcx
	movzbl	(%r9), %r10d
	movzbl	(%rcx), %r12d
	movl	%r10d, %r15d
	shrb	$7, %r12b
	andb	$127, %r10b
	shrb	$7, %r15b
	orl	%r15d, %r12d
	andl	$1, %r12d
	salb	$7, %r12b
	orb	%r12b, %r10b
	movb	%r10b, (%r9)
	movq	144(%rbx), %rsi
	movq	144(%r13), %r11
	movzbl	5(%r11), %edi
	movzbl	5(%rsi), %edx
	movl	%edi, %r8d
	shrb	$2, %dl
	andb	$-5, %dil
	shrb	$2, %r8b
	orl	%r8d, %edx
	andb	$1, %dl
	salb	$2, %dl
	orb	%dl, %dil
	movb	%dil, 5(%r11)
	movq	144(%rbx), %rcx
	movq	144(%r13), %r9
	movzbl	2(%r9), %r10d
	movzbl	2(%rcx), %r12d
	movl	%r10d, %r15d
	shrb	$3, %r12b
	andb	$-9, %r10b
	shrb	$3, %r15b
	orl	%r15d, %r12d
	andb	$1, %r12b
	salb	$3, %r12b
	orb	%r12b, %r10b
	movb	%r10b, 2(%r9)
	movq	144(%rbx), %rsi
	movq	144(%r13), %r11
	movzbl	2(%r11), %edi
	movzbl	2(%rsi), %edx
	movl	%edi, %r8d
	shrb	$4, %dl
	andb	$-17, %dil
	shrb	$4, %r8b
	orl	%r8d, %edx
	andb	$1, %dl
	salb	$4, %dl
	orb	%dl, %dil
	movb	%dil, 2(%r11)
	movq	144(%rbx), %rcx
	movq	144(%r13), %r12
	movzbl	3(%rcx), %ebx
	movzbl	3(%r12), %r15d
	orb	%r15b, %bl
	andb	$-2, %r15b
	andb	$1, %bl
	orb	%bl, %r15b
	movb	%r15b, 3(%r12)
	incl	-96(%rbp)
	jmp	.L23102
.L23436:
	movq	8(%rbx), %rbx
	jmp	.L23106
.L23435:
	movq	-112(%rbp), %rcx
	movq	24(%rcx), %rdx
	cmpq	$1, %rdx
	je	.L23105
	cmpq	$5, %rdx
	jne	.L23104
	jmp	.L23105
	.p2align 6,,7
.L23432:
	cmpq	$0, class_binding_level(%rip)
	jne	.L23088
	cmpq	$0, 40(%r14)
	jne	.L23088
	movq	80(%r13), %r15
	movq	%r15, 40(%r14)
	jmp	.L23088
.L23431:
	movq	32(%r14), %rsi
	xorl	%eax, %eax
	movl	$.LC352, %edi
	call	error
	cmpl	$4, -52(%rbp)
	movq	144(%r13), %r10
	sete	%r12b
	movzbl	3(%r10), %r11d
	salb	$4, %r12b
	andb	$-17, %r11b
	orb	%r12b, %r11b
	movb	%r11b, 3(%r10)
	jmp	.L23086
.L23430:
	xorl	%eax, %eax
	call	allocation_temporary_p
	testl	%eax, %eax
	jne	.L23438
.L23069:
	cmpl	$10, -92(%rbp)
	je	.L23439
	cmpl	$4, -52(%rbp)
	je	.L23440
	movl	-92(%rbp), %edi
	xorl	%eax, %eax
	movq	class_binding_level(%rip), %rbx
	call	make_lang_type
	movq	%rax, %r13
	movl	write_virtuals(%rip), %eax
	cmpl	$2, %eax
	je	.L23079
	cmpl	$2, %eax
	jg	.L23083
	testl	%eax, %eax
	js	.L23081
	movl	$1, %edx
.L23419:
	movq	144(%r13), %rcx
.L23076:
	movzbl	2(%rcx), %esi
	movq	%r14, %rdi
	xorl	%eax, %eax
	andb	$-2, %sil
	orb	%dl, %sil
	movb	%sil, 2(%rcx)
	movq	%r13, %rsi
	call	pushtag
	movq	%rbx, class_binding_level(%rip)
.L23426:
	movl	flag_cadillac(%rip), %eax
	testl	%eax, %eax
	je	.L23085
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	cadillac_start_struct
	jmp	.L23085
.L23081:
	xorl	%edx, %edx
	jmp	.L23419
.L23083:
	cmpl	$3, %eax
	jne	.L23081
	movq	144(%r13), %rcx
	xorl	%edx, %edx
	testb	$6, 3(%rcx)
	sete	%dl
	jmp	.L23076
.L23079:
	movq	pending_vtables(%rip), %rsi
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	value_member
	xorl	%edx, %edx
	testq	%rax, %rax
	setne	%dl
	jmp	.L23419
.L23440:
	movl	-92(%rbp), %edi
	xorl	%eax, %eax
	call	make_lang_type
	movq	%r14, %rdi
	movq	144(%rax), %rcx
	movq	%rax, %r13
	movq	%rax, %rsi
	xorl	%eax, %eax
	orb	$16, 3(%rcx)
	call	pushtag
	jmp	.L23426
.L23439:
	movl	$10, %edi
	xorl	%eax, %eax
	call	make_node
	movq	unsigned_type_node(%rip), %rbx
	movq	%rax, %r13
	movq	%r13, %rsi
	movzbl	44(%rbx), %edx
	movb	%dl, 44(%rax)
	movq	unsigned_type_node(%rip), %r12
	movl	48(%r12), %eax
	orb	$64, 17(%r13)
	movq	unsigned_type_node(%rip), %r11
	movl	%eax, 48(%r13)
	xorl	%eax, %eax
	movzbl	45(%r11), %r10d
	movb	%r10b, 45(%r13)
	movq	unsigned_type_node(%rip), %r8
	movq	96(%r8), %rdi
	movq	88(%r8), %r9
	movq	%rdi, 96(%r13)
	movq	%r9, 88(%r13)
	movq	%r14, %rdi
	call	pushtag
	movl	flag_cadillac(%rip), %r15d
	testl	%r15d, %r15d
	je	.L23085
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	cadillac_start_enum
	jmp	.L23085
.L23438:
	xorl	%eax, %eax
	call	end_temporary_allocation
	jmp	.L23069
	.p2align 6,,7
.L22996:
	movzbq	16(%r12), %rdi
	salq	$3, %rdi
	addq	tree_code_type(%rip), %rdi
	movq	(%rdi), %rsi
	movsbl	(%rsi),%eax
	cmpl	$100, %eax
	je	.L23389
	cmpl	$116, %eax
	je	.L23441
.L22992:
	xorl	%eax, %eax
	movl	$10, %edi
	call	my_friendly_abort
	testq	%r12, %r12
	jne	.L22996
.L23389:
	movq	56(%r13), %rax
	jmp	.L22952
.L23441:
	movq	32(%r14), %rax
	movq	144(%r12), %r8
	cmpb	$36, (%rax)
	movq	72(%r8), %rdx
	je	.L23442
.L22978:
	testq	%rdx, %rdx
	je	.L23389
.L22990:
	cmpq	%r14, 24(%rdx)
	je	.L23443
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L22990
	jmp	.L23389
.L23443:
	movq	32(%rdx), %r12
	movzbl	16(%r12), %r11d
	cmpl	-92(%rbp), %r11d
	je	.L23406
	movq	32(%r14), %rsi
	movl	$.LC346, %edi
	xorl	%eax, %eax
	call	error
.L23406:
	movq	32(%rbx), %r13
	jmp	.L22998
.L23442:
	cmpb	$95, 1(%rax)
	jne	.L22978
	testq	%rdx, %rdx
	je	.L23389
.L22983:
	movq	32(%rdx), %r10
	movq	80(%r10), %r9
	cmpq	%r14, 56(%r9)
	je	.L23406
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L22983
	jmp	.L23389
	.p2align 6,,7
.L23429:
	movq	32(%rbx), %rax
	movzbl	16(%rax), %edx
	cmpl	-92(%rbp), %edx
	je	.L22968
	cmpl	$10, -92(%rbp)
	je	.L22969
	cmpl	$129, %edx
	je	.L22968
	cmpl	$132, %edx
	je	.L22968
.L22969:
	movq	32(%r14), %rsi
	movl	$.LC345, %edi
	xorl	%eax, %eax
	call	error
	movq	32(%rbx), %rax
.L22968:
	movq	%rax, %r13
	jmp	.L22998
.L23428:
	cmpb	$95, 1(%rax)
	jne	.L22954
	movq	8(%r13), %rbx
	testq	%rbx, %rbx
	je	.L22962
.L22961:
	movq	32(%rbx), %rdx
	movq	80(%rdx), %rcx
	cmpq	%r14, 56(%rcx)
	je	.L23404
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L22961
	jmp	.L22962
.L23404:
	movq	%rdx, %r13
	jmp	.L22998
	.p2align 6,,7
.L22949:
	testq	%r15, %r15
	movq	%r15, %r13
	je	.L23348
.L23046:
	movq	32(%r14), %rax
	cmpb	$36, (%rax)
	je	.L23444
.L23003:
	movq	8(%r13), %rbx
	testq	%rbx, %rbx
	je	.L23011
	.p2align 4,,7
.L23019:
	cmpq	%r14, 24(%rbx)
	je	.L23445
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L23019
.L23011:
	xorl	%eax, %eax
	testl	%eax, %eax
	je	.L23020
	testb	$-128, 66(%r13)
	je	.L23348
.L23020:
	movq	current_class_type(%rip), %r12
	testq	%r12, %r12
	je	.L23393
	movq	56(%r13), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L23045
.L23001:
	testq	%rax, %rax
	movq	%rax, %r13
	jne	.L23046
.L23348:
	xorl	%r13d, %r13d
.L23009:
	testq	%r13, %r13
	jne	.L22998
	movq	global_binding_level(%rip), %r11
	movl	$1, %ebx
	cmpq	%r11, current_binding_level(%rip)
	je	.L23048
	movq	48(%r14), %r12
	testq	%r12, %r12
	movq	%r12, %rcx
	jne	.L23049
.L23048:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L23050
	movq	56(%r14), %rcx
	testq	%rcx, %rcx
	jne	.L23382
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L23051
	movq	144(%rdi), %rdx
	testb	$1, 3(%rdx)
	jne	.L23446
.L23051:
	testq	%rcx, %rcx
	jne	.L23382
.L23383:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L23382
.L23050:
	movq	40(%r14), %rcx
.L23049:
	testq	%rcx, %rcx
	je	.L23066
.L23382:
	cmpb	$32, 16(%rcx)
	je	.L23053
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L23053
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L23061
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L23418
	testl	%ebx, %ebx
	jle	.L23447
.L23418:
	movq	%rax, %rcx
.L23053:
	testq	%rcx, %rcx
	je	.L23066
	cmpb	$32, 16(%rcx)
	jne	.L23066
	movq	8(%rcx), %rsi
	movzbl	16(%rsi), %ecx
	movq	%rsi, %r13
	cmpl	-92(%rbp), %ecx
	je	.L22998
	jmp	.L23066
.L23447:
	testl	%edx, %edx
	jg	.L23418
	testl	%ebx, %ebx
	je	.L23053
	movq	%rax, %rdx
	movq	%r14, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L23418
	.p2align 6,,7
.L23061:
	movq	8(%rcx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rcx
	jmp	.L23053
.L23446:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L23053
	testq	%rax, %rax
	je	.L23383
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L23051
	.p2align 6,,7
.L23045:
	movzbq	16(%r12), %rsi
	salq	$3, %rsi
	addq	tree_code_type(%rip), %rsi
	movq	(%rsi), %rdx
	movsbl	(%rdx),%eax
	cmpl	$100, %eax
	je	.L23393
	cmpl	$116, %eax
	je	.L23448
.L23041:
	xorl	%eax, %eax
	movl	$10, %edi
	call	my_friendly_abort
	testq	%r12, %r12
	jne	.L23045
.L23393:
	movq	56(%r13), %rax
	jmp	.L23001
.L23448:
	movq	32(%r14), %rax
	movq	144(%r12), %rdi
	cmpb	$36, (%rax)
	movq	72(%rdi), %rdx
	je	.L23449
.L23027:
	testq	%rdx, %rdx
	je	.L23393
.L23039:
	cmpq	%r14, 24(%rdx)
	je	.L23450
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L23039
	jmp	.L23393
.L23450:
	movq	32(%rdx), %r10
	movzbl	16(%r10), %r13d
	cmpl	-92(%rbp), %r13d
	je	.L23038
	movq	32(%r14), %rsi
	movl	$.LC346, %edi
	xorl	%eax, %eax
	call	error
.L23038:
	movq	32(%rbx), %r13
	jmp	.L23009
.L23449:
	cmpb	$95, 1(%rax)
	jne	.L23027
	testq	%rdx, %rdx
	je	.L23393
.L23032:
	movq	32(%rdx), %r9
	movq	80(%r9), %r8
	cmpq	%r14, 56(%r8)
	je	.L23038
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L23032
	jmp	.L23393
	.p2align 6,,7
.L23445:
	movq	32(%rbx), %rax
	movzbl	16(%rax), %edx
	cmpl	-92(%rbp), %edx
	je	.L23017
	cmpl	$10, -92(%rbp)
	je	.L23018
	cmpl	$129, %edx
	je	.L23017
	cmpl	$132, %edx
	je	.L23017
.L23018:
	movq	32(%r14), %rsi
	movl	$.LC345, %edi
	xorl	%eax, %eax
	call	error
	movq	32(%rbx), %rax
.L23017:
	movq	%rax, %r13
	jmp	.L23009
.L23444:
	cmpb	$95, 1(%rax)
	jne	.L23003
	movq	8(%r13), %rbx
	testq	%rbx, %rbx
	je	.L23011
.L23010:
	movq	32(%rbx), %rdx
	movq	80(%rdx), %rcx
	cmpq	%r14, 56(%rcx)
	je	.L23407
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L23010
	jmp	.L23011
.L23407:
	movq	%rdx, %r13
	jmp	.L23009
	.p2align 6,,7
.L22944:
	cmpq	$0, -112(%rbp)
	movl	$22, -92(%rbp)
	jne	.L23451
.L22945:
	movl	$0, -88(%rbp)
	jmp	.L22940
.L23451:
	movq	32(%r14), %rsi
	movl	$.LC351, %edi
	xorl	%eax, %eax
	call	error
	movq	$0, -112(%rbp)
	jmp	.L22945
.L22946:
	movl	$10, -92(%rbp)
	jmp	.L22940
.L22947:
	movl	$18, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L22940
.L22936:
	movl	24(%rdi), %ebx
	movq	current_binding_level(%rip), %r15
	cmpl	$4, %ebx
	movl	%ebx, -72(%rbp)
	ja	.L23156
	mov	%ebx, %r13d
	jmp	*.L23157(,%r13,8)
	.section	.rodata
	.align 8
	.align 4
.L23157:
	.quad	.L23152
	.quad	.L23152
	.quad	.L23153
	.quad	.L23155
	.quad	.L23152
	.text
.L23152:
	movq	-112(%rbp), %rdi
	xorl	%eax, %eax
	movl	$21, -104(%rbp)
	call	list_length
	movl	%eax, -100(%rbp)
.L23149:
	movl	xref_next_defn(%rip), %r12d
	testl	%r12d, %r12d
	je	.L23158
	testq	%r15, %r15
	movl	$0, xref_next_defn(%rip)
	movq	%r15, %r13
	je	.L23275
.L23206:
	movq	32(%r14), %rax
	cmpb	$36, (%rax)
	je	.L23452
.L23163:
	movq	8(%r13), %rbx
	testq	%rbx, %rbx
	je	.L23171
	.p2align 4,,7
.L23179:
	cmpq	%r14, 24(%rbx)
	je	.L23453
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L23179
.L23171:
	movl	$1, %eax
	testl	%eax, %eax
	je	.L23180
	testb	$-128, 66(%r13)
	je	.L23275
.L23180:
	movq	current_class_type(%rip), %r12
	testq	%r12, %r12
	je	.L23398
	movq	56(%r13), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L23205
.L23161:
	testq	%rax, %rax
	movq	%rax, %r13
	jne	.L23206
.L23275:
	xorl	%r12d, %r12d
.L23207:
	xorl	%eax, %eax
	call	push_obstacks_nochange
	testq	%r12, %r12
	je	.L23454
	movl	-104(%rbp), %eax
	subl	$21, %eax
	cmpl	$1, %eax
	ja	.L23295
	testb	$64, 46(%r12)
	je	.L23295
	movq	144(%r12), %r10
	cmpl	$4, -72(%rbp)
	sete	%sil
	testb	$16, 3(%r10)
	setne	%r9b
	xorl	%esi, %r9d
	andl	$1, %r9d
	jne	.L23455
.L23295:
	cmpq	global_binding_level(%rip), %r15
	je	.L23456
.L23297:
	cmpq	$0, -112(%rbp)
	je	.L23307
	movq	120(%r12), %rdx
	movq	-112(%rbp), %rbx
	movq	64(%rdx), %rcx
	testq	%rcx, %rcx
	je	.L23299
	xorl	%edx, %edx
	.p2align 4,,7
.L23305:
	movslq	%edx,%r10
	movq	32(%rcx,%r10,8), %rsi
	movq	8(%rsi), %r9
	movq	80(%r9), %r8
	movq	56(%r8), %rdi
	cmpq	%rdi, 32(%rbx)
	jne	.L23417
	movq	(%rbx), %rbx
	incl	%edx
	testq	%rbx, %rbx
	jne	.L23305
.L23307:
	cmpq	$0, 32(%r12)
	jne	.L23335
	cmpq	current_class_type(%rip), %r12
	je	.L23335
	movzbl	16(%r12), %edx
	subb	$21, %dl
	cmpb	$1, %dl
	ja	.L23335
	cmpl	$1, -72(%rbp)
	je	.L23457
	movl	-72(%rbp), %eax
	testl	%eax, %eax
	jne	.L23335
	movq	144(%r12), %r10
	andb	$-33, 3(%r10)
.L23335:
	xorl	%eax, %eax
	movq	%r12, %r13
	call	pop_obstacks
	jmp	.L23147
.L23457:
	movq	144(%r12), %r9
	orb	$32, 3(%r9)
	jmp	.L23335
.L23417:
	movq	32(%r14), %rsi
	movl	$.LC353, %edi
	xorl	%eax, %eax
	call	error
.L23299:
	testq	%rbx, %rbx
	je	.L23307
	xorl	%eax, %eax
	call	end_temporary_allocation
.L23294:
	cmpq	$0, -112(%rbp)
	je	.L23307
	movq	144(%r12), %rbx
	xorl	%eax, %eax
	orb	$1, 4(%rbx)
	movl	-100(%rbp), %edi
	movq	120(%r12), %r13
	call	make_tree_vec
	movq	%rax, -80(%rbp)
	movq	%rax, 64(%r13)
	movl	$0, -116(%rbp)
.L23324:
	xorl	%r15d, %r15d
	cmpl	$1, -72(%rbp)
	je	.L23458
	movq	-112(%rbp), %rax
	movq	24(%rax), %rdx
.L23314:
	movl	$1, %r15d
.L23313:
	xorl	%r9d, %r9d
	leaq	-4(%rdx), %r8
	cmpq	$3, %rdx
	sete	%r9b
	movq	-112(%rbp), %rdx
	cmpq	$2, %r8
	setbe	%dil
	xorl	%eax, %eax
	xorl	%r8d, %r8d
	movl	%r9d, -84(%rbp)
	movq	32(%rdx), %r11
	movl	%r15d, %edx
	movzbl	%dil, %r13d
	movq	32(%r14), %rdi
	movl	%r13d, %ecx
	movq	8(%r11), %rbx
	movq	32(%r11), %rsi
	call	GNU_xref_hier
	testq	%rbx, %rbx
	je	.L23317
	cmpb	$32, 16(%rbx)
	je	.L23459
.L23315:
	testq	%rbx, %rbx
	je	.L23317
	cmpb	$21, 16(%rbx)
	je	.L23316
.L23317:
	movq	-112(%rbp), %rsi
	movl	$.LC354, %edi
	xorl	%eax, %eax
	movq	32(%rsi), %r15
	movq	32(%r15), %rsi
	call	error
.L23311:
	movq	-112(%rbp), %rbx
	movq	(%rbx), %rax
	testq	%rax, %rax
	movq	%rax, -112(%rbp)
	jne	.L23324
	movl	-116(%rbp), %r14d
	testl	%r14d, %r14d
	je	.L23325
	movl	-116(%rbp), %edi
	movq	-80(%rbp), %r11
	movl	%edi, 24(%r11)
.L23326:
	cmpl	$1, -116(%rbp)
	jle	.L23327
	movq	144(%r12), %r8
	orb	$4, 1(%r8)
.L23328:
	movq	144(%r12), %rcx
	testb	$4, 1(%rcx)
	je	.L23330
	orb	$-128, 18(%r12)
.L23330:
	movl	-116(%rbp), %edx
	decl	%edx
	js	.L23381
.L23334:
	movq	-80(%rbp), %r8
	movslq	%edx,%rdi
	movq	32(%r8,%rdi,8), %r11
	movq	8(%r11), %r14
	movq	144(%r14), %rbx
	andb	$-2, 4(%rbx)
	decl	%edx
	jns	.L23334
	movq	144(%r12), %rcx
.L23381:
	andb	$-2, 4(%rcx)
	jmp	.L23307
.L23327:
	cmpl	$1, -116(%rbp)
	jne	.L23328
	movq	-80(%rbp), %rax
	movq	144(%r12), %r9
	movq	32(%rax), %rcx
	movzbl	1(%r9), %r10d
	movq	8(%rcx), %r15
	andb	$-5, %r10b
	movq	144(%r15), %r13
	movzbl	1(%r13), %esi
	andb	$4, %sil
	orb	%sil, %r10b
	movb	%r10b, 1(%r9)
	jmp	.L23328
.L23325:
	movq	120(%r12), %rdx
	movq	$0, 64(%rdx)
	jmp	.L23326
.L23316:
	movq	144(%rbx), %r10
	testb	$1, 4(%r10)
	je	.L23319
	cmpq	%r12, %rbx
	je	.L23460
	movq	%rbx, %rdi
	movl	$.LC356, %esi
.L23425:
	xorl	%eax, %eax
	call	error_with_aggr_type
	jmp	.L23311
.L23460:
	movq	%r12, %rdi
	movl	$.LC355, %esi
	jmp	.L23425
.L23319:
	movq	120(%rbx), %r10
	movq	integer_zero_node(%rip), %rdi
	xorl	%r8d, %r8d
	movq	%rbx, %rsi
	xorl	%eax, %eax
	movq	48(%r10), %rdx
	movq	56(%r10), %rcx
	call	make_binfo
	leal	0(,%r13,4), %edx
	leal	0(,%r15,8), %r8d
	movslq	-116(%rbp),%rsi
	movq	-80(%rbp), %r9
	movq	%rax, 32(%r9,%rsi,8)
	movzbl	-84(%rbp), %edi
	movzbl	18(%rax), %r11d
	andb	$-41, %r11b
	salb	$5, %dil
	orb	%r8b, %r11b
	orb	%dil, %r11b
	andb	$-5, %r11b
	orb	%dl, %r11b
	movb	%r11b, 18(%rax)
	movq	144(%rbx), %rcx
	orb	$1, 4(%rcx)
	testl	%r13d, %r13d
	jne	.L23323
	testb	$2, 19(%rbx)
	je	.L23322
.L23323:
	orb	$2, 19(%r12)
	orb	$-128, 18(%r12)
.L23322:
	movq	144(%r12), %r10
	movq	144(%rbx), %rcx
	movzbl	(%r10), %esi
	movzbl	(%rcx), %r13d
	movl	%esi, %r15d
	shrb	$7, %r13b
	andb	$127, %sil
	shrb	$7, %r15b
	orl	%r15d, %r13d
	andl	$1, %r13d
	salb	$7, %r13b
	orb	%r13b, %sil
	movb	%sil, (%r10)
	movq	144(%rbx), %r9
	movq	144(%r12), %r11
	movzbl	5(%r11), %edi
	movzbl	5(%r9), %edx
	movl	%edi, %r8d
	shrb	$2, %dl
	andb	$-5, %dil
	shrb	$2, %r8b
	orl	%r8d, %edx
	andb	$1, %dl
	salb	$2, %dl
	orb	%dl, %dil
	movb	%dil, 5(%r11)
	movq	144(%rbx), %rcx
	movq	144(%r12), %r10
	movzbl	2(%r10), %esi
	movzbl	2(%rcx), %r13d
	movl	%esi, %r15d
	shrb	$3, %r13b
	andb	$-9, %sil
	shrb	$3, %r15b
	orl	%r15d, %r13d
	andb	$1, %r13b
	salb	$3, %r13b
	orb	%r13b, %sil
	movb	%sil, 2(%r10)
	movq	144(%rbx), %r9
	movq	144(%r12), %r11
	movzbl	2(%r11), %edi
	movzbl	2(%r9), %edx
	movl	%edi, %r8d
	shrb	$4, %dl
	andb	$-17, %dil
	shrb	$4, %r8b
	orl	%r8d, %edx
	andb	$1, %dl
	salb	$4, %dl
	orb	%dl, %dil
	movb	%dil, 2(%r11)
	movq	144(%rbx), %rcx
	movq	144(%r12), %r13
	movzbl	3(%rcx), %ebx
	movzbl	3(%r13), %r15d
	orb	%r15b, %bl
	andb	$-2, %r15b
	andb	$1, %bl
	orb	%bl, %r15b
	movb	%r15b, 3(%r13)
	incl	-116(%rbp)
	jmp	.L23311
.L23459:
	movq	8(%rbx), %rbx
	jmp	.L23315
.L23458:
	movq	-112(%rbp), %rcx
	movq	24(%rcx), %rdx
	cmpq	$1, %rdx
	je	.L23314
	cmpq	$5, %rdx
	jne	.L23313
	jmp	.L23314
	.p2align 6,,7
.L23456:
	cmpq	$0, class_binding_level(%rip)
	jne	.L23297
	cmpq	$0, 40(%r14)
	jne	.L23297
	movq	80(%r12), %r15
	movq	%r15, 40(%r14)
	jmp	.L23297
.L23455:
	movq	32(%r14), %rsi
	xorl	%eax, %eax
	movl	$.LC352, %edi
	call	error
	cmpl	$4, -72(%rbp)
	movq	144(%r12), %r13
	sete	%r11b
	movzbl	3(%r13), %ecx
	salb	$4, %r11b
	andb	$-17, %cl
	orb	%r11b, %cl
	movb	%cl, 3(%r13)
	jmp	.L23295
.L23454:
	xorl	%eax, %eax
	call	allocation_temporary_p
	testl	%eax, %eax
	jne	.L23461
.L23278:
	cmpl	$10, -104(%rbp)
	je	.L23462
	cmpl	$4, -72(%rbp)
	je	.L23463
	movl	-104(%rbp), %edi
	xorl	%eax, %eax
	movq	class_binding_level(%rip), %rbx
	call	make_lang_type
	movq	%rax, %r12
	movl	write_virtuals(%rip), %eax
	cmpl	$2, %eax
	je	.L23288
	cmpl	$2, %eax
	jg	.L23292
	testl	%eax, %eax
	js	.L23290
	movl	$1, %edx
.L23423:
	movq	144(%r12), %rcx
.L23285:
	movzbl	2(%rcx), %r8d
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	andb	$-2, %r8b
	orb	%dl, %r8b
	movb	%r8b, 2(%rcx)
	call	pushtag
	movq	%rbx, class_binding_level(%rip)
.L23427:
	movl	flag_cadillac(%rip), %eax
	testl	%eax, %eax
	je	.L23294
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	cadillac_start_struct
	jmp	.L23294
.L23290:
	xorl	%edx, %edx
	jmp	.L23423
.L23292:
	cmpl	$3, %eax
	jne	.L23290
	movq	144(%r12), %rcx
	xorl	%edx, %edx
	testb	$6, 3(%rcx)
	sete	%dl
	jmp	.L23285
.L23288:
	movq	pending_vtables(%rip), %rsi
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	value_member
	xorl	%edx, %edx
	testq	%rax, %rax
	setne	%dl
	jmp	.L23423
.L23463:
	movl	-104(%rbp), %edi
	xorl	%eax, %eax
	call	make_lang_type
	movq	144(%rax), %rdi
	movq	%rax, %r12
	movq	%rax, %rsi
	xorl	%eax, %eax
	orb	$16, 3(%rdi)
	movq	%r14, %rdi
	call	pushtag
	jmp	.L23427
.L23462:
	movl	$10, %edi
	xorl	%eax, %eax
	call	make_node
	movq	%r14, %rdi
	movq	unsigned_type_node(%rip), %rbx
	movq	%rax, %r12
	movzbl	44(%rbx), %r11d
	movb	%r11b, 44(%rax)
	movq	unsigned_type_node(%rip), %rdx
	movl	48(%rdx), %eax
	orb	$64, 17(%r12)
	movq	unsigned_type_node(%rip), %rcx
	movl	%eax, 48(%r12)
	xorl	%eax, %eax
	movzbl	45(%rcx), %r13d
	movb	%r13b, 45(%r12)
	movq	unsigned_type_node(%rip), %rsi
	movq	88(%rsi), %r10
	movq	96(%rsi), %r9
	movq	%r12, %rsi
	movq	%r10, 88(%r12)
	movq	%r9, 96(%r12)
	call	pushtag
	movl	flag_cadillac(%rip), %r15d
	testl	%r15d, %r15d
	je	.L23294
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	cadillac_start_enum
	jmp	.L23294
.L23461:
	xorl	%eax, %eax
	call	end_temporary_allocation
	jmp	.L23278
	.p2align 6,,7
.L23205:
	movzbq	16(%r12), %r8
	salq	$3, %r8
	addq	tree_code_type(%rip), %r8
	movq	(%r8), %rdi
	movsbl	(%rdi),%eax
	cmpl	$100, %eax
	je	.L23398
	cmpl	$116, %eax
	je	.L23464
.L23201:
	xorl	%eax, %eax
	movl	$10, %edi
	call	my_friendly_abort
	testq	%r12, %r12
	jne	.L23205
.L23398:
	movq	56(%r13), %rax
	jmp	.L23161
.L23464:
	movq	32(%r14), %rax
	movq	144(%r12), %r9
	cmpb	$36, (%rax)
	movq	72(%r9), %rdx
	je	.L23465
.L23187:
	testq	%rdx, %rdx
	je	.L23398
.L23199:
	cmpq	%r14, 24(%rdx)
	je	.L23466
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L23199
	jmp	.L23398
.L23466:
	movq	32(%rdx), %rcx
	movzbl	16(%rcx), %edx
	cmpl	-104(%rbp), %edx
	je	.L23413
	movq	32(%r14), %rsi
	movl	$.LC346, %edi
	xorl	%eax, %eax
	call	error
.L23413:
	movq	32(%rbx), %r12
	jmp	.L23207
.L23465:
	cmpb	$95, 1(%rax)
	jne	.L23187
	testq	%rdx, %rdx
	je	.L23398
.L23192:
	movq	32(%rdx), %r10
	movq	80(%r10), %rsi
	cmpq	%r14, 56(%rsi)
	je	.L23413
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L23192
	jmp	.L23398
	.p2align 6,,7
.L23453:
	movq	32(%rbx), %rax
	movzbl	16(%rax), %edx
	cmpl	-104(%rbp), %edx
	je	.L23177
	cmpl	$10, -104(%rbp)
	je	.L23178
	cmpl	$129, %edx
	je	.L23177
	cmpl	$132, %edx
	je	.L23177
.L23178:
	movq	32(%r14), %rsi
	movl	$.LC345, %edi
	xorl	%eax, %eax
	call	error
	movq	32(%rbx), %rax
.L23177:
	movq	%rax, %r12
	jmp	.L23207
.L23452:
	cmpb	$95, 1(%rax)
	jne	.L23163
	movq	8(%r13), %rbx
	testq	%rbx, %rbx
	je	.L23171
.L23170:
	movq	32(%rbx), %rdx
	movq	80(%rdx), %r11
	cmpq	%r14, 56(%r11)
	je	.L23411
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L23170
	jmp	.L23171
.L23411:
	movq	%rdx, %r12
	jmp	.L23207
	.p2align 6,,7
.L23158:
	testq	%r15, %r15
	movq	%r15, %r13
	je	.L23371
.L23255:
	movq	32(%r14), %rax
	cmpb	$36, (%rax)
	je	.L23467
.L23212:
	movq	8(%r13), %rbx
	testq	%rbx, %rbx
	je	.L23220
	.p2align 4,,7
.L23228:
	cmpq	%r14, 24(%rbx)
	je	.L23468
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L23228
.L23220:
	xorl	%r11d, %r11d
	testl	%r11d, %r11d
	je	.L23229
	testb	$-128, 66(%r13)
	je	.L23371
.L23229:
	movq	current_class_type(%rip), %r12
	testq	%r12, %r12
	je	.L23402
	movq	56(%r13), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L23254
.L23210:
	testq	%rax, %rax
	movq	%rax, %r13
	jne	.L23255
.L23371:
	xorl	%r12d, %r12d
.L23218:
	testq	%r12, %r12
	jne	.L23207
	movq	global_binding_level(%rip), %rax
	movl	$1, %ebx
	cmpq	%rax, current_binding_level(%rip)
	je	.L23257
	movq	48(%r14), %rdx
	testq	%rdx, %rdx
	movq	%rdx, %rcx
	jne	.L23258
.L23257:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L23259
	movq	56(%r14), %rcx
	testq	%rcx, %rcx
	jne	.L23384
	movq	32(%rdi), %r12
	testq	%r12, %r12
	jne	.L23260
	movq	144(%rdi), %r11
	testb	$1, 3(%r11)
	jne	.L23469
.L23260:
	testq	%rcx, %rcx
	jne	.L23384
.L23385:
	xorl	%eax, %eax
	movq	%r14, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L23384
.L23259:
	movq	40(%r14), %rcx
.L23258:
	testq	%rcx, %rcx
	je	.L23275
.L23384:
	cmpb	$32, 16(%rcx)
	je	.L23262
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L23262
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.L23270
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L23422
	testl	%ebx, %ebx
	jle	.L23470
.L23422:
	movq	%rax, %rcx
.L23262:
	testq	%rcx, %rcx
	je	.L23275
	cmpb	$32, 16(%rcx)
	jne	.L23275
	movq	8(%rcx), %r8
	movzbl	16(%r8), %edi
	movq	%r8, %r12
	cmpl	-104(%rbp), %edi
	je	.L23207
	jmp	.L23275
.L23470:
	testl	%edx, %edx
	jg	.L23422
	testl	%ebx, %ebx
	je	.L23262
	movq	%rax, %rdx
	movq	%r14, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L23422
	.p2align 6,,7
.L23270:
	movq	8(%rcx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rcx
	jmp	.L23262
.L23469:
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L23262
	testq	%rax, %rax
	je	.L23385
	cmpb	$32, 16(%rax)
	cmovne	%r12, %rcx
	jmp	.L23260
	.p2align 6,,7
.L23254:
	movzbq	16(%r12), %r8
	salq	$3, %r8
	addq	tree_code_type(%rip), %r8
	movq	(%r8), %rdi
	movsbl	(%rdi),%eax
	cmpl	$100, %eax
	je	.L23402
	cmpl	$116, %eax
	je	.L23471
.L23250:
	xorl	%eax, %eax
	movl	$10, %edi
	call	my_friendly_abort
	testq	%r12, %r12
	jne	.L23254
.L23402:
	movq	56(%r13), %rax
	jmp	.L23210
.L23471:
	movq	32(%r14), %rax
	movq	144(%r12), %r9
	cmpb	$36, (%rax)
	movq	72(%r9), %rdx
	je	.L23472
.L23236:
	testq	%rdx, %rdx
	je	.L23402
.L23248:
	cmpq	%r14, 24(%rdx)
	je	.L23473
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L23248
	jmp	.L23402
.L23473:
	movq	32(%rdx), %rcx
	movzbl	16(%rcx), %r13d
	cmpl	-104(%rbp), %r13d
	je	.L23247
	movq	32(%r14), %rsi
	movl	$.LC346, %edi
	xorl	%eax, %eax
	call	error
.L23247:
	movq	32(%rbx), %r12
	jmp	.L23218
.L23472:
	cmpb	$95, 1(%rax)
	jne	.L23236
	testq	%rdx, %rdx
	je	.L23402
.L23241:
	movq	32(%rdx), %r10
	movq	80(%r10), %rsi
	cmpq	%r14, 56(%rsi)
	je	.L23247
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L23241
	jmp	.L23402
	.p2align 6,,7
.L23468:
	movq	32(%rbx), %rax
	movzbl	16(%rax), %edx
	cmpl	-104(%rbp), %edx
	je	.L23226
	cmpl	$10, -104(%rbp)
	je	.L23227
	cmpl	$129, %edx
	je	.L23226
	cmpl	$132, %edx
	je	.L23226
.L23227:
	movq	32(%r14), %rsi
	movl	$.LC345, %edi
	xorl	%eax, %eax
	call	error
	movq	32(%rbx), %rax
.L23226:
	movq	%rax, %r12
	jmp	.L23218
.L23467:
	cmpb	$95, 1(%rax)
	jne	.L23212
	movq	8(%r13), %rbx
	testq	%rbx, %rbx
	je	.L23220
.L23219:
	movq	32(%rbx), %rdx
	movq	80(%rdx), %r12
	cmpq	%r14, 56(%r12)
	je	.L23414
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L23219
	jmp	.L23220
.L23414:
	movq	%rdx, %r12
	jmp	.L23218
	.p2align 6,,7
.L23153:
	cmpq	$0, -112(%rbp)
	movl	$22, -104(%rbp)
	jne	.L23474
.L23154:
	movl	$0, -100(%rbp)
	jmp	.L23149
.L23474:
	movq	32(%rsi), %rsi
	movl	$.LC351, %edi
	xorl	%eax, %eax
	call	error
	movq	$0, -112(%rbp)
	jmp	.L23154
.L23155:
	movl	$10, -104(%rbp)
	jmp	.L23149
.L23156:
	movl	$18, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L23149
.LFE68:
.Lfe68:
	.size	xref_defn_tag,.Lfe68-xref_defn_tag
	.align 2
	.p2align 4,,15
.globl xref_tag
	.type	xref_tag,@function
xref_tag:
.LFB69:
	pushq	%r15
.LCFI217:
	movq	%rdx, %r15
	pushq	%r14
.LCFI218:
	pushq	%r13
.LCFI219:
	movq	%rsi, %r13
	pushq	%r12
.LCFI220:
	pushq	%rbp
.LCFI221:
	pushq	%rbx
.LCFI222:
	subq	$40, %rsp
.LCFI223:
	movq	class_binding_level(%rip), %r14
	testq	%r14, %r14
	jne	.L23476
	movq	current_binding_level(%rip), %r14
.L23476:
	movl	24(%rdi), %edi
	cmpl	$4, %edi
	movl	%edi, 36(%rsp)
	ja	.L23484
	mov	%edi, %edx
	jmp	*.L23485(,%rdx,8)
	.section	.rodata
	.align 8
	.align 4
.L23485:
	.quad	.L23480
	.quad	.L23480
	.quad	.L23481
	.quad	.L23483
	.quad	.L23480
	.text
.L23480:
	movq	%r15, %rdi
	xorl	%eax, %eax
	movl	$21, 12(%rsp)
	call	list_length
	movl	%eax, 16(%rsp)
.L23477:
	movl	xref_next_defn(%rip), %eax
	testl	%eax, %eax
	je	.L23486
	testq	%r14, %r14
	movl	$0, xref_next_defn(%rip)
	movq	%r14, %r12
	je	.L23603
.L23534:
	movq	32(%r13), %rax
	cmpb	$36, (%rax)
	je	.L23709
.L23491:
	movq	8(%r12), %rbx
	testq	%rbx, %rbx
	je	.L23499
	.p2align 4,,7
.L23507:
	cmpq	%r13, 24(%rbx)
	je	.L23710
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L23507
.L23499:
	movl	$1, %eax
	testl	%eax, %eax
	je	.L23508
	testb	$-128, 66(%r12)
	je	.L23603
.L23508:
	movq	current_class_type(%rip), %rbp
	testq	%rbp, %rbp
	je	.L23691
	movq	56(%r12), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L23533
.L23489:
	testq	%rax, %rax
	movq	%rax, %r12
	jne	.L23534
.L23603:
	xorl	%ebp, %ebp
.L23535:
	xorl	%eax, %eax
	call	push_obstacks_nochange
	testq	%rbp, %rbp
	je	.L23711
	movl	12(%rsp), %eax
	subl	$21, %eax
	cmpl	$1, %eax
	ja	.L23623
	testb	$64, 46(%rbp)
	je	.L23623
	movq	144(%rbp), %rdx
	cmpl	$4, 36(%rsp)
	sete	%dil
	testb	$16, 3(%rdx)
	setne	%cl
	xorl	%edi, %ecx
	andl	$1, %ecx
	jne	.L23712
.L23623:
	cmpq	global_binding_level(%rip), %r14
	je	.L23713
.L23625:
	testq	%r15, %r15
	je	.L23635
	movq	120(%rbp), %r10
	movq	%r15, %rbx
	movq	64(%r10), %rcx
	testq	%rcx, %rcx
	je	.L23627
	xorl	%edx, %edx
	.p2align 4,,7
.L23633:
	movslq	%edx,%r8
	movq	32(%rcx,%r8,8), %r12
	movq	8(%r12), %rdi
	movq	80(%rdi), %rsi
	movq	56(%rsi), %r11
	cmpq	%r11, 32(%rbx)
	jne	.L23703
	movq	(%rbx), %rbx
	incl	%edx
	testq	%rbx, %rbx
	jne	.L23633
.L23635:
	cmpq	$0, 32(%rbp)
	jne	.L23663
	cmpq	current_class_type(%rip), %rbp
	je	.L23663
	movzbl	16(%rbp), %ebx
	subb	$21, %bl
	cmpb	$1, %bl
	ja	.L23663
	cmpl	$1, 36(%rsp)
	je	.L23714
	movl	36(%rsp), %r14d
	testl	%r14d, %r14d
	jne	.L23663
	movq	144(%rbp), %r9
	andb	$-33, 3(%r9)
	.p2align 4,,7
.L23663:
	xorl	%eax, %eax
	call	pop_obstacks
	addq	$40, %rsp
	movq	%rbp, %rax
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	ret
.L23714:
	movq	144(%rbp), %r8
	orb	$32, 3(%r8)
	jmp	.L23663
.L23703:
	movq	32(%r13), %rsi
	movl	$.LC353, %edi
	xorl	%eax, %eax
	call	error
.L23627:
	testq	%rbx, %rbx
	je	.L23635
	xorl	%eax, %eax
	call	end_temporary_allocation
.L23622:
	testq	%r15, %r15
	je	.L23635
	movq	144(%rbp), %rbx
	xorl	%eax, %eax
	orb	$1, 4(%rbx)
	movl	16(%rsp), %edi
	movq	120(%rbp), %r14
	call	make_tree_vec
	movq	%rax, 24(%rsp)
	movq	%rax, 64(%r14)
	movl	$0, 8(%rsp)
	.p2align 4,,7
.L23652:
	xorl	%r14d, %r14d
	cmpl	$1, 36(%rsp)
	je	.L23715
	movq	24(%r15), %rdx
.L23642:
	movl	$1, %r14d
.L23641:
	xorl	%r10d, %r10d
	leaq	-4(%rdx), %r9
	cmpq	$3, %rdx
	sete	%r10b
	cmpq	$2, %r9
	setbe	%dl
	xorl	%r8d, %r8d
	xorl	%eax, %eax
	movl	%r10d, 20(%rsp)
	movzbl	%dl, %r12d
	movq	32(%r13), %rdi
	movq	32(%r15), %rcx
	movl	%r14d, %edx
	movq	8(%rcx), %rbx
	movq	32(%rcx), %rsi
	movl	%r12d, %ecx
	call	GNU_xref_hier
	testq	%rbx, %rbx
	je	.L23645
	cmpb	$32, 16(%rbx)
	je	.L23716
.L23643:
	testq	%rbx, %rbx
	je	.L23645
	cmpb	$21, 16(%rbx)
	je	.L23644
.L23645:
	movq	32(%r15), %r11
	movl	$.LC354, %edi
	xorl	%eax, %eax
	movq	32(%r11), %rsi
	call	error
.L23639:
	movq	(%r15), %r15
	testq	%r15, %r15
	jne	.L23652
	movl	8(%rsp), %r15d
	testl	%r15d, %r15d
	je	.L23653
	movl	8(%rsp), %eax
	movq	24(%rsp), %r13
	movl	%eax, 24(%r13)
.L23654:
	cmpl	$1, 8(%rsp)
	jle	.L23655
	movq	144(%rbp), %r8
	orb	$4, 1(%r8)
.L23656:
	movq	144(%rbp), %rcx
	testb	$4, 1(%rcx)
	je	.L23658
	orb	$-128, 18(%rbp)
.L23658:
	movl	8(%rsp), %edx
	decl	%edx
	js	.L23685
.L23662:
	movq	24(%rsp), %r13
	movslq	%edx,%r15
	movq	32(%r13,%r15,8), %rdi
	movq	8(%rdi), %rsi
	movq	144(%rsi), %r12
	andb	$-2, 4(%r12)
	decl	%edx
	jns	.L23662
	movq	144(%rbp), %rcx
.L23685:
	andb	$-2, 4(%rcx)
	jmp	.L23635
.L23655:
	cmpl	$1, 8(%rsp)
	jne	.L23656
	movq	24(%rsp), %rax
	movq	144(%rbp), %r14
	movq	32(%rax), %r11
	movzbl	1(%r14), %r9d
	movq	8(%r11), %r10
	andb	$-5, %r9b
	movq	144(%r10), %rdx
	movzbl	1(%rdx), %ecx
	andb	$4, %cl
	orb	%cl, %r9b
	movb	%r9b, 1(%r14)
	jmp	.L23656
.L23653:
	movq	120(%rbp), %rbx
	movq	$0, 64(%rbx)
	jmp	.L23654
.L23644:
	movq	144(%rbx), %rsi
	testb	$1, 4(%rsi)
	je	.L23647
	cmpq	%rbp, %rbx
	je	.L23717
	movq	%rbx, %rdi
	movl	$.LC356, %esi
.L23707:
	xorl	%eax, %eax
	call	error_with_aggr_type
	jmp	.L23639
.L23717:
	movq	%rbp, %rdi
	movl	$.LC355, %esi
	jmp	.L23707
.L23647:
	movq	120(%rbx), %r11
	movq	integer_zero_node(%rip), %rdi
	xorl	%r8d, %r8d
	xorl	%eax, %eax
	movq	%rbx, %rsi
	movq	48(%r11), %rdx
	movq	56(%r11), %rcx
	call	make_binfo
	leal	0(,%r14,8), %ecx
	movq	24(%rsp), %r9
	movslq	8(%rsp),%r10
	leal	0(,%r12,4), %r14d
	movq	%rax, 32(%r9,%r10,8)
	movzbl	20(%rsp), %edx
	movzbl	18(%rax), %r8d
	andb	$-41, %r8b
	salb	$5, %dl
	orb	%cl, %r8b
	orb	%dl, %r8b
	andb	$-5, %r8b
	orb	%r14b, %r8b
	movb	%r8b, 18(%rax)
	movq	144(%rbx), %rdi
	orb	$1, 4(%rdi)
	testl	%r12d, %r12d
	jne	.L23651
	testb	$2, 19(%rbx)
	je	.L23650
.L23651:
	orb	$2, 19(%rbp)
	orb	$-128, 18(%rbp)
.L23650:
	movq	144(%rbp), %r10
	movq	144(%rbx), %rdi
	movzbl	(%r10), %r11d
	movzbl	(%rdi), %r12d
	movl	%r11d, %esi
	shrb	$7, %r12b
	andb	$127, %r11b
	shrb	$7, %sil
	orl	%esi, %r12d
	andl	$1, %r12d
	salb	$7, %r12b
	orb	%r12b, %r11b
	movb	%r11b, (%r10)
	movq	144(%rbx), %rcx
	movq	144(%rbp), %r8
	movzbl	5(%r8), %r14d
	movzbl	5(%rcx), %edx
	movl	%r14d, %r9d
	shrb	$2, %dl
	andb	$-5, %r14b
	shrb	$2, %r9b
	orl	%r9d, %edx
	andb	$1, %dl
	salb	$2, %dl
	orb	%dl, %r14b
	movb	%r14b, 5(%r8)
	movq	144(%rbx), %rdi
	movq	144(%rbp), %r10
	movzbl	2(%r10), %r11d
	movzbl	2(%rdi), %r12d
	movl	%r11d, %esi
	shrb	$3, %r12b
	andb	$-9, %r11b
	shrb	$3, %sil
	orl	%esi, %r12d
	andb	$1, %r12b
	salb	$3, %r12b
	orb	%r12b, %r11b
	movb	%r11b, 2(%r10)
	movq	144(%rbx), %rcx
	movq	144(%rbp), %r8
	movzbl	2(%r8), %r14d
	movzbl	2(%rcx), %edx
	movl	%r14d, %r9d
	shrb	$4, %dl
	andb	$-17, %r14b
	shrb	$4, %r9b
	orl	%r9d, %edx
	andb	$1, %dl
	salb	$4, %dl
	orb	%dl, %r14b
	movb	%r14b, 2(%r8)
	movq	144(%rbx), %rdi
	movq	144(%rbp), %r12
	movzbl	3(%rdi), %ebx
	movzbl	3(%r12), %esi
	orb	%sil, %bl
	andb	$-2, %sil
	andb	$1, %bl
	orb	%bl, %sil
	movb	%sil, 3(%r12)
	incl	8(%rsp)
	jmp	.L23639
.L23716:
	movq	8(%rbx), %rbx
	jmp	.L23643
.L23715:
	movq	24(%r15), %rdx
	cmpq	$1, %rdx
	je	.L23642
	cmpq	$5, %rdx
	jne	.L23641
	jmp	.L23642
	.p2align 6,,7
.L23713:
	cmpq	$0, class_binding_level(%rip)
	jne	.L23625
	cmpq	$0, 40(%r13)
	jne	.L23625
	movq	80(%rbp), %r14
	movq	%r14, 40(%r13)
	jmp	.L23625
.L23712:
	movq	32(%r13), %rsi
	xorl	%eax, %eax
	movl	$.LC352, %edi
	call	error
	cmpl	$4, 36(%rsp)
	movq	144(%rbp), %r12
	sete	%r9b
	movzbl	3(%r12), %r8d
	salb	$4, %r9b
	andb	$-17, %r8b
	orb	%r9b, %r8b
	movb	%r8b, 3(%r12)
	jmp	.L23623
.L23711:
	xorl	%eax, %eax
	call	allocation_temporary_p
	testl	%eax, %eax
	jne	.L23718
.L23606:
	cmpl	$10, 12(%rsp)
	je	.L23719
	cmpl	$4, 36(%rsp)
	je	.L23720
	movl	12(%rsp), %edi
	xorl	%eax, %eax
	movq	class_binding_level(%rip), %rbx
	call	make_lang_type
	movq	%rax, %rbp
	movl	write_virtuals(%rip), %eax
	cmpl	$2, %eax
	je	.L23616
	cmpl	$2, %eax
	jg	.L23620
	testl	%eax, %eax
	js	.L23618
	movl	$1, %edx
.L23705:
	movq	144(%rbp), %rcx
.L23613:
	movzbl	2(%rcx), %esi
	movq	%r13, %rdi
	xorl	%eax, %eax
	andb	$-2, %sil
	orb	%dl, %sil
	movb	%sil, 2(%rcx)
	movq	%rbp, %rsi
	call	pushtag
	movq	%rbx, class_binding_level(%rip)
.L23708:
	movl	flag_cadillac(%rip), %eax
	testl	%eax, %eax
	je	.L23622
	movq	%rbp, %rdi
	xorl	%eax, %eax
	call	cadillac_start_struct
	jmp	.L23622
.L23618:
	xorl	%edx, %edx
	jmp	.L23705
.L23620:
	cmpl	$3, %eax
	jne	.L23618
	movq	144(%rbp), %rcx
	xorl	%edx, %edx
	testb	$6, 3(%rcx)
	sete	%dl
	jmp	.L23613
.L23616:
	movq	pending_vtables(%rip), %rsi
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	value_member
	xorl	%edx, %edx
	testq	%rax, %rax
	setne	%dl
	jmp	.L23705
.L23720:
	movl	12(%rsp), %edi
	xorl	%eax, %eax
	call	make_lang_type
	movq	%r13, %rdi
	movq	144(%rax), %rbx
	movq	%rax, %rbp
	movq	%rax, %rsi
	xorl	%eax, %eax
	orb	$16, 3(%rbx)
	call	pushtag
	jmp	.L23708
.L23719:
	movl	$10, %edi
	xorl	%eax, %eax
	call	make_node
	movq	unsigned_type_node(%rip), %r11
	movq	%rax, %rbp
	movq	%rbp, %rsi
	movzbl	44(%r11), %r10d
	movb	%r10b, 44(%rax)
	movq	unsigned_type_node(%rip), %r9
	movl	48(%r9), %eax
	orb	$64, 17(%rbp)
	movq	unsigned_type_node(%rip), %r8
	movl	%eax, 48(%rbp)
	xorl	%eax, %eax
	movzbl	45(%r8), %r12d
	movb	%r12b, 45(%rbp)
	movq	unsigned_type_node(%rip), %rdi
	movq	88(%rdi), %rdx
	movq	96(%rdi), %r14
	movq	%r13, %rdi
	movq	%rdx, 88(%rbp)
	movq	%r14, 96(%rbp)
	call	pushtag
	movl	flag_cadillac(%rip), %eax
	testl	%eax, %eax
	je	.L23622
	movq	%rbp, %rdi
	xorl	%eax, %eax
	call	cadillac_start_enum
	jmp	.L23622
.L23718:
	xorl	%eax, %eax
	call	end_temporary_allocation
	jmp	.L23606
	.p2align 6,,7
.L23533:
	movzbq	16(%rbp), %rsi
	salq	$3, %rsi
	addq	tree_code_type(%rip), %rsi
	movq	(%rsi), %rdx
	movsbl	(%rdx),%eax
	cmpl	$100, %eax
	je	.L23691
	cmpl	$116, %eax
	je	.L23721
.L23529:
	xorl	%eax, %eax
	movl	$10, %edi
	call	my_friendly_abort
	testq	%rbp, %rbp
	jne	.L23533
	.p2align 4,,7
.L23691:
	movq	56(%r12), %rax
	jmp	.L23489
.L23721:
	movq	32(%r13), %rax
	movq	144(%rbp), %rdi
	cmpb	$36, (%rax)
	movq	72(%rdi), %rdx
	je	.L23722
.L23515:
	testq	%rdx, %rdx
	je	.L23691
.L23527:
	cmpq	%r13, 24(%rdx)
	je	.L23723
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L23527
	jmp	.L23691
.L23723:
	movq	32(%rdx), %r10
	movzbl	16(%r10), %r9d
	cmpl	12(%rsp), %r9d
	je	.L23699
	movq	32(%r13), %rsi
	movl	$.LC346, %edi
	xorl	%eax, %eax
	call	error
.L23699:
	movq	32(%rbx), %rbp
	jmp	.L23535
.L23722:
	cmpb	$95, 1(%rax)
	jne	.L23515
	testq	%rdx, %rdx
	je	.L23691
.L23520:
	movq	32(%rdx), %r8
	movq	80(%r8), %rbp
	cmpq	%r13, 56(%rbp)
	je	.L23699
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L23520
	jmp	.L23691
	.p2align 6,,7
.L23710:
	movq	32(%rbx), %rax
	movzbl	16(%rax), %edx
	cmpl	12(%rsp), %edx
	je	.L23505
	cmpl	$10, 12(%rsp)
	je	.L23506
	cmpl	$129, %edx
	je	.L23505
	cmpl	$132, %edx
	je	.L23505
.L23506:
	movq	32(%r13), %rsi
	movl	$.LC345, %edi
	xorl	%eax, %eax
	call	error
	movq	32(%rbx), %rax
.L23505:
	movq	%rax, %rbp
	jmp	.L23535
.L23709:
	cmpb	$95, 1(%rax)
	jne	.L23491
	movq	8(%r12), %rbx
	testq	%rbx, %rbx
	je	.L23499
.L23498:
	movq	32(%rbx), %rdx
	movq	80(%rdx), %rcx
	cmpq	%r13, 56(%rcx)
	je	.L23697
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L23498
	jmp	.L23499
.L23697:
	movq	%rdx, %rbp
	jmp	.L23535
	.p2align 6,,7
.L23486:
	testq	%r14, %r14
	movq	%r14, %r12
	je	.L23675
.L23583:
	movq	32(%r13), %rax
	cmpb	$36, (%rax)
	je	.L23724
.L23540:
	movq	8(%r12), %rbx
	testq	%rbx, %rbx
	je	.L23548
	.p2align 4,,7
.L23556:
	cmpq	%r13, 24(%rbx)
	je	.L23725
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L23556
.L23548:
	xorl	%eax, %eax
	testl	%eax, %eax
	je	.L23557
	testb	$-128, 66(%r12)
	je	.L23675
.L23557:
	movq	current_class_type(%rip), %rbp
	testq	%rbp, %rbp
	je	.L23695
	movq	56(%r12), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L23582
.L23538:
	testq	%rax, %rax
	movq	%rax, %r12
	jne	.L23583
.L23675:
	xorl	%ebp, %ebp
.L23546:
	testq	%rbp, %rbp
	jne	.L23535
	movq	global_binding_level(%rip), %r9
	movl	$1, %ebx
	cmpq	%r9, current_binding_level(%rip)
	je	.L23585
	movq	48(%r13), %r10
	testq	%r10, %r10
	movq	%r10, %rdx
	jne	.L23586
.L23585:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L23587
	movq	56(%r13), %rdx
	testq	%rdx, %rdx
	jne	.L23686
	movq	32(%rdi), %rbp
	testq	%rbp, %rbp
	jne	.L23588
	movq	144(%rdi), %r11
	testb	$1, 3(%r11)
	jne	.L23726
.L23588:
	testq	%rdx, %rdx
	jne	.L23686
.L23687:
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rdx
	jne	.L23686
.L23587:
	movq	40(%r13), %rdx
.L23586:
	testq	%rdx, %rdx
	je	.L23603
.L23686:
	cmpb	$32, 16(%rdx)
	je	.L23590
	movl	looking_for_typename(%rip), %ecx
	testl	%ecx, %ecx
	js	.L23590
	movq	8(%r13), %rax
	testq	%rax, %rax
	je	.L23598
	movq	80(%rax), %rax
	cmpq	%rax, %rdx
	je	.L23704
	testl	%ebx, %ebx
	jle	.L23727
.L23704:
	movq	%rax, %rdx
.L23590:
	testq	%rdx, %rdx
	je	.L23603
	cmpb	$32, 16(%rdx)
	jne	.L23603
	movq	8(%rdx), %rsi
	movzbl	16(%rsi), %ecx
	movq	%rsi, %rbp
	cmpl	12(%rsp), %ecx
	je	.L23535
	jmp	.L23603
.L23727:
	testl	%ecx, %ecx
	jg	.L23704
	testl	%ebx, %ebx
	je	.L23590
	movq	%rdx, %rsi
	movq	%r13, %rdi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L23704
	.p2align 6,,7
.L23598:
	movq	8(%rdx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rdx
	jmp	.L23590
.L23726:
	xorl	%ecx, %ecx
	movq	%r13, %rsi
	cmpl	$-1, %ebx
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rdx
	je	.L23590
	testq	%rax, %rax
	je	.L23687
	cmpb	$32, 16(%rax)
	cmovne	%rbp, %rdx
	jmp	.L23588
	.p2align 6,,7
.L23582:
	movzbq	16(%rbp), %rdx
	salq	$3, %rdx
	addq	tree_code_type(%rip), %rdx
	movq	(%rdx), %rcx
	movsbl	(%rcx),%eax
	cmpl	$100, %eax
	je	.L23695
	cmpl	$116, %eax
	je	.L23728
.L23578:
	xorl	%eax, %eax
	movl	$10, %edi
	call	my_friendly_abort
	testq	%rbp, %rbp
	jne	.L23582
	.p2align 4,,7
.L23695:
	movq	56(%r12), %rax
	jmp	.L23538
.L23728:
	movq	32(%r13), %rax
	movq	144(%rbp), %rsi
	cmpb	$36, (%rax)
	movq	72(%rsi), %rdx
	je	.L23729
.L23564:
	testq	%rdx, %rdx
	je	.L23695
.L23576:
	cmpq	%r13, 24(%rdx)
	je	.L23730
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L23576
	jmp	.L23695
.L23730:
	movq	32(%rdx), %r8
	movzbl	16(%r8), %r12d
	cmpl	12(%rsp), %r12d
	je	.L23575
	movq	32(%r13), %rsi
	movl	$.LC346, %edi
	xorl	%eax, %eax
	call	error
.L23575:
	movq	32(%rbx), %rbp
	jmp	.L23546
.L23729:
	cmpb	$95, 1(%rax)
	jne	.L23564
	testq	%rdx, %rdx
	je	.L23695
.L23569:
	movq	32(%rdx), %rbp
	movq	80(%rbp), %rdi
	cmpq	%r13, 56(%rdi)
	je	.L23575
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L23569
	jmp	.L23695
	.p2align 6,,7
.L23725:
	movq	32(%rbx), %rax
	movzbl	16(%rax), %edx
	cmpl	12(%rsp), %edx
	je	.L23554
	cmpl	$10, 12(%rsp)
	je	.L23555
	cmpl	$129, %edx
	je	.L23554
	cmpl	$132, %edx
	je	.L23554
.L23555:
	movq	32(%r13), %rsi
	movl	$.LC345, %edi
	xorl	%eax, %eax
	call	error
	movq	32(%rbx), %rax
.L23554:
	movq	%rax, %rbp
	jmp	.L23546
.L23724:
	cmpb	$95, 1(%rax)
	jne	.L23540
	movq	8(%r12), %rbx
	testq	%rbx, %rbx
	je	.L23548
.L23547:
	movq	32(%rbx), %rdx
	movq	80(%rdx), %r11
	cmpq	%r13, 56(%r11)
	je	.L23700
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L23547
	jmp	.L23548
.L23700:
	movq	%rdx, %rbp
	jmp	.L23546
	.p2align 6,,7
.L23481:
	testq	%r15, %r15
	movl	$22, 12(%rsp)
	jne	.L23731
.L23482:
	movl	$0, 16(%rsp)
	jmp	.L23477
.L23731:
	movq	32(%r13), %rsi
	movl	$.LC351, %edi
	xorl	%eax, %eax
	xorl	%r15d, %r15d
	call	error
	jmp	.L23482
.L23483:
	movl	$10, 12(%rsp)
	jmp	.L23477
.L23484:
	movl	$18, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L23477
.LFE69:
.Lfe69:
	.size	xref_tag,.Lfe69-xref_tag
	.section	.rodata.str1.1
.LC357:
	.string	"redeclaration of `enum %s'"
	.text
	.align 2
	.p2align 4,,15
.globl start_enum
	.type	start_enum,@function
start_enum:
.LFB70:
	pushq	%r14
.LCFI224:
	pushq	%r13
.LCFI225:
	movq	%rdi, %r13
	pushq	%r12
.LCFI226:
	movq	class_binding_level(%rip), %r12
	pushq	%rbp
.LCFI227:
	pushq	%rbx
.LCFI228:
	xorl	%ebx, %ebx
	testq	%r12, %r12
	jne	.L23733
	movq	current_binding_level(%rip), %r12
.L23733:
	testq	%r13, %r13
	je	.L23734
	testq	%r12, %r12
	movl	$1, %r14d
	je	.L23787
.L23782:
	movq	32(%r13), %rax
	cmpb	$36, (%rax)
	je	.L23797
.L23739:
	movq	8(%r12), %rbx
	testq	%rbx, %rbx
	je	.L23747
	.p2align 4,,7
.L23755:
	cmpq	%r13, 24(%rbx)
	je	.L23798
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L23755
.L23747:
	testl	%r14d, %r14d
	je	.L23756
	testb	$-128, 66(%r12)
	je	.L23787
.L23756:
	movq	current_class_type(%rip), %rbp
	testq	%rbp, %rbp
	je	.L23796
	movq	56(%r12), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L23781
.L23737:
	testq	%rax, %rax
	movq	%rax, %r12
	jne	.L23782
.L23787:
	xorl	%eax, %eax
.L23745:
	movq	%rax, %rbx
.L23734:
	testq	%rbx, %rbx
	je	.L23784
	cmpb	$10, 16(%rbx)
	je	.L23783
.L23784:
	movl	$10, %edi
	xorl	%eax, %eax
	call	make_node
	movq	%r13, %rdi
	movq	%rax, %rbx
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	pushtag
.L23783:
	cmpq	$0, 24(%rbx)
	jne	.L23799
.L23785:
	movq	integer_type_node(%rip), %r10
	movq	%rbx, %rdi
	xorl	%eax, %eax
	movq	$0, 32(%rbx)
	movzbl	45(%r10), %r9d
	movb	%r9b, 45(%rbx)
	call	fixup_unsigned_type
	movq	integer_zero_node(%rip), %rdi
	xorl	%eax, %eax
	call	copy_node
	movq	%rbx, %rsi
	movq	current_function_decl(%rip), %rdi
	movq	%rax, enum_next_value(%rip)
	xorl	%eax, %eax
	call	GNU_xref_decl
	movq	%rbx, %rax
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	ret
.L23799:
	movq	32(%r13), %rsi
	movl	$.LC357, %edi
	xorl	%eax, %eax
	call	error
	movq	$0, 24(%rbx)
	jmp	.L23785
	.p2align 6,,7
.L23781:
	movzbq	16(%rbp), %rcx
	salq	$3, %rcx
	addq	tree_code_type(%rip), %rcx
	movq	(%rcx), %rdx
	movsbl	(%rdx),%eax
	cmpl	$100, %eax
	je	.L23796
	cmpl	$116, %eax
	je	.L23800
.L23777:
	xorl	%eax, %eax
	movl	$10, %edi
	call	my_friendly_abort
	testq	%rbp, %rbp
	jne	.L23781
	.p2align 4,,7
.L23796:
	movq	56(%r12), %rax
	jmp	.L23737
.L23800:
	movq	32(%r13), %rax
	movq	144(%rbp), %rsi
	cmpb	$36, (%rax)
	movq	72(%rsi), %rdx
	je	.L23801
.L23763:
	testq	%rdx, %rdx
	je	.L23796
.L23775:
	cmpq	%r13, 24(%rdx)
	je	.L23802
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L23775
	jmp	.L23796
.L23802:
	movq	32(%rdx), %r8
	cmpb	$10, 16(%r8)
	je	.L23774
	movq	32(%r13), %rsi
	movl	$.LC346, %edi
	xorl	%eax, %eax
	call	error
.L23774:
	movq	32(%rbx), %rax
	jmp	.L23745
.L23801:
	cmpb	$95, 1(%rax)
	jne	.L23763
	testq	%rdx, %rdx
	je	.L23796
.L23768:
	movq	32(%rdx), %rbp
	movq	80(%rbp), %rdi
	cmpq	%r13, 56(%rdi)
	je	.L23774
	movq	(%rdx), %rdx
	testq	%rdx, %rdx
	jne	.L23768
	jmp	.L23796
	.p2align 6,,7
.L23798:
	movq	32(%rbx), %rcx
	movzbl	16(%rcx), %edx
	cmpl	$10, %edx
	je	.L23753
	movl	$10, %eax
	cmpl	$10, %eax
	je	.L23754
	cmpl	$129, %edx
	je	.L23753
	cmpl	$132, %edx
	je	.L23753
.L23754:
	movq	32(%r13), %rsi
	movl	$.LC345, %edi
	xorl	%eax, %eax
	call	error
	movq	32(%rbx), %rcx
.L23753:
	movq	%rcx, %rax
	jmp	.L23745
.L23797:
	cmpb	$95, 1(%rax)
	jne	.L23739
	movq	8(%r12), %rbx
	testq	%rbx, %rbx
	je	.L23747
.L23746:
	movq	32(%rbx), %rdx
	movq	80(%rdx), %rcx
	cmpq	%r13, 56(%rcx)
	je	.L23803
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L23746
	jmp	.L23747
.L23803:
	movq	%rdx, %rax
	jmp	.L23745
.LFE70:
.Lfe70:
	.size	start_enum,.Lfe70-start_enum
	.align 2
	.p2align 4,,15
.globl finish_enum
	.type	finish_enum,@function
finish_enum:
.LFB71:
	pushq	%r12
.LCFI229:
	xorl	%r12d, %r12d
	pushq	%rbp
.LCFI230:
	xorl	%ebp, %ebp
	testq	%rsi, %rsi
	pushq	%rbx
.LCFI231:
	movq	%rsi, 24(%rdi)
	movq	%rdi, %rbx
	je	.L23805
	movq	32(%rsi), %rdx
	movl	24(%rdx), %ebp
	movq	%rdi, 8(%rdx)
	movq	(%rsi), %rdx
	testq	%rdx, %rdx
	movl	%ebp, %r12d
	je	.L23805
	.p2align 4,,7
.L23813:
	movq	32(%rdx), %rcx
	movl	24(%rcx), %eax
	cmpl	%r12d, %eax
	jle	.L23810
	movl	%eax, %r12d
.L23811:
	movq	(%rdx), %rdx
	movq	%rbx, 8(%rcx)
	testq	%rdx, %rdx
	jne	.L23813
.L23805:
	movl	flag_short_enums(%rip), %eax
	testl	%eax, %eax
	je	.L23814
	testl	%r12d, %r12d
	movl	%r12d, %eax
	je	.L23826
	movzbl	45(%rbx), %edx
	.p2align 4,,7
.L23819:
	incb	%dl
	sarl	$1, %eax
	jne	.L23819
	movb	%dl, 45(%rbx)
.L23826:
	cmpb	$0, 45(%rbx)
	jne	.L23820
	movb	$1, 45(%rbx)
.L23820:
	movq	$0, 32(%rbx)
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	fixup_unsigned_type
.L23814:
	movq	96(%rbx), %rdx
	testl	%ebp, %ebp
	movl	%r12d, 24(%rdx)
	js	.L23828
.L23821:
	movl	flag_cadillac(%rip), %eax
	testl	%eax, %eax
	jne	.L23829
.L23822:
	movq	global_binding_level(%rip), %rdi
	cmpq	%rdi, current_binding_level(%rip)
	movq	%rbx, %rdi
	sete	%al
	movzbl	%al, %esi
	xorl	%eax, %eax
	call	rest_of_type_compilation
	movq	%rbx, %rax
	popq	%rbx
	popq	%rbp
	popq	%r12
	ret
.L23829:
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	cadillac_finish_enum
	jmp	.L23822
.L23828:
	movq	88(%rbx), %rsi
	movl	%ebp, 24(%rsi)
	movq	88(%rbx), %rcx
	movl	$-1, 28(%rcx)
	andb	$-65, 17(%rbx)
	jmp	.L23821
	.p2align 6,,7
.L23810:
	cmpl	%ebp, %eax
	cmovl	%eax, %ebp
	jmp	.L23811
.LFE71:
.Lfe71:
	.size	finish_enum,.Lfe71-finish_enum
	.section	.rodata.str1.32
	.align 32
.LC358:
	.string	"enumerator value for `%s' not integer constant"
	.text
	.align 2
	.p2align 4,,15
.globl build_enumerator
	.type	build_enumerator,@function
build_enumerator:
.LFB72:
	pushq	%r12
.LCFI232:
	testq	%rsi, %rsi
	movl	$1, %r12d
	pushq	%rbp
.LCFI233:
	movq	%rsi, %rbp
	pushq	%rbx
.LCFI234:
	movq	%rdi, %rbx
	je	.L23851
	testb	$32, 17(%rsi)
	je	.L23853
	movzbl	16(%rsi), %edx
	movzbl	%dl, %esi 
	salq	$3, %rsi
	addq	tree_code_type(%rip), %rsi
	movq	(%rsi), %rcx
	cmpb	$100, (%rcx)
	je	.L23855
.L23832:
	cmpb	$25, %dl
	je	.L23831
	movq	32(%rbx), %rsi
	movl	$.LC358, %edi
	xorl	%eax, %eax
	xorl	%ebp, %ebp
	call	error
.L23831:
	testq	%rbp, %rbp
	jne	.L23852
.L23851:
	movq	enum_next_value(%rip), %rbp
	testq	%rbp, %rbp
	je	.L23835
.L23852:
	movzbl	16(%rbp), %edx
	subb	$101, %dl
	cmpb	$2, %dl
	ja	.L23835
	movq	32(%rbp), %rsi
	movq	8(%rsi), %rcx
	cmpq	%rcx, 8(%rbp)
	je	.L23840
.L23835:
	cmpq	integer_zero_node(%rip), %rbp
	je	.L23856
	cmpq	integer_one_node(%rip), %rbp
	je	.L23857
	cmpb	$25, 16(%rbp)
	je	.L23858
.L23842:
	xorl	%edx, %edx
	xorl	%eax, %eax
	movq	%rbx, %rdi
	movq	%rbp, %rsi
	call	saveable_tree_cons
	cmpq	$0, current_class_type(%rip)
	movq	%rax, %r12
	je	.L23848
	cmpq	$0, current_function_decl(%rip)
	je	.L23847
.L23848:
	movq	integer_type_node(%rip), %rdx
	movq	%rbx, %rsi
	movl	$31, %edi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	movq	%rax, %rbx
	movq	%rbp, 88(%rax)
	xorl	%eax, %eax
	call	pushdecl
	xorl	%eax, %eax
	movq	%rbx, %rsi
	movq	current_function_decl(%rip), %rdi
	call	GNU_xref_decl
.L23847:
	movq	integer_one_node(%rip), %rdx
	xorl	%eax, %eax
	movl	$53, %edi
	movq	%rbp, %rsi
	movl	$53, %ecx
	call	build_binary_op_nodefault
	cmpq	integer_one_node(%rip), %rax
	movq	%rax, enum_next_value(%rip)
	je	.L23859
.L23849:
	popq	%rbx
	popq	%rbp
	movq	%r12, %rax
	popq	%r12
	ret
	.p2align 6,,7
.L23859:
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	copy_node
	movq	%rax, enum_next_value(%rip)
	jmp	.L23849
	.p2align 6,,7
.L23858:
	testl	%r12d, %r12d
	je	.L23846
	movq	8(%rbp), %r9
	cmpb	$10, 16(%r9)
	jne	.L23842
.L23846:
	movq	%rbp, %rdi
	xorl	%eax, %eax
	call	copy_node
	movq	integer_type_node(%rip), %r10
	movq	%rax, %rbp
	movq	%r10, 8(%rax)
	jmp	.L23842
	.p2align 6,,7
.L23857:
	movl	$1, %edi
.L23854:
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_int_2_wide
	movq	%rax, %rbp
	jmp	.L23842
	.p2align 6,,7
.L23856:
	xorl	%edi, %edi
	jmp	.L23854
	.p2align 6,,7
.L23840:
	movzbl	16(%rsi), %edi
	movq	%rsi, %rbp
	subb	$101, %dil
	cmpb	$2, %dil
	ja	.L23835
	movq	32(%rsi), %rsi
	movq	8(%rsi), %r8
	cmpq	%r8, 8(%rbp)
	je	.L23840
	jmp	.L23835
.L23855:
	movq	%rbp, %rdi
	xorl	%eax, %eax
	xorl	%r12d, %r12d
	call	decl_constant_value
	movq	%rax, %rbp
	.p2align 4,,7
.L23853:
	movzbl	16(%rbp), %edx
	jmp	.L23832
.LFE72:
.Lfe72:
	.size	build_enumerator,.Lfe72-build_enumerator
	.align 2
	.p2align 4,,15
.globl grok_enum_decls
	.type	grok_enum_decls,@function
grok_enum_decls:
.LFB73:
	pushq	%rbp
.LCFI235:
	movq	%rsp, %rbp
.LCFI236:
	pushq	%r15
.LCFI237:
	pushq	%r14
.LCFI238:
	pushq	%r13
.LCFI239:
	movq	%rsi, %r13
	pushq	%r12
.LCFI240:
	movq	%rdi, %r12
	pushq	%rbx
.LCFI241:
	subq	$8, %rsp
.LCFI242:
	movq	class_binding_level(%rip), %rbx
	testq	%rbx, %rbx
	jne	.L23865
.L23860:
	leaq	-40(%rbp), %rsp
	movq	%r13, %rax
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	leave
	ret
	.p2align 6,,7
.L23865:
	movq	8(%rbx), %rsi
	xorl	%eax, %eax
	movq	%r12, %rdi
	call	value_member
	testq	%rax, %rax
	jne	.L23862
	movq	56(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L23865
	jmp	.L23860
.L23862:
	testq	%rbx, %rbx
	je	.L23860
	cmpq	class_binding_level(%rip), %rbx
	jne	.L23860
	movzbl	17(%rax), %edx
	testb	$8, %dl
	jne	.L23860
	orb	$8, %dl
	movb	%dl, 17(%rax)
	movq	24(%r12), %r15
	testq	%r15, %r15
	je	.L23860
.L23881:
	movq	24(%r15), %rsi
	xorl	%eax, %eax
	movl	$31, %edi
	movq	%r12, %rdx
	call	build_lang_field_decl
	orb	$32, 17(%rax)
	movq	56(%rax), %r14
	movq	32(%r15), %rcx
	movq	%r13, (%rax)
	movq	%rax, %r13
	testq	%r14, %r14
	movq	%rcx, 88(%rax)
	je	.L23872
	movq	56(%r14), %rsi
	testq	%rsi, %rsi
	je	.L23873
	movq	class_binding_level(%rip), %rbx
	movq	%r14, %rdi
	xorl	%eax, %eax
	movq	24(%rbx), %rdx
	call	tree_cons
	movq	%rax, 24(%rbx)
.L23873:
	movq	decl_obstack+24(%rip), %rdx
	movq	%r13, 56(%r14)
	leaq	8(%rdx), %rbx
	cmpq	decl_obstack+32(%rip), %rbx
	ja	.L23885
.L23875:
	movq	%rdx, %rsi
	addq	$8, %rdx
	movq	%rdx, decl_obstack+24(%rip)
	movq	%r13, (%rsi)
	cmpb	$32, 16(%r13)
	je	.L23886
.L23872:
	movq	(%r15), %r15
	testq	%r15, %r15
	jne	.L23881
	jmp	.L23860
.L23886:
	cmpq	$0, 72(%r13)
	jne	.L23872
	movq	current_class_name(%rip), %rbx
	movq	8(%r13), %rdx
	xorl	%eax, %eax
	movl	$1, %edi
	movl	$136, %esi
	movq	%rdx, -48(%rbp)
	call	my_friendly_assert
	testq	%rbx, %rbx
	je	.L23877
	cmpb	$1, 16(%rbx)
	movl	$137, %esi
	sete	%r8b
	xorl	%eax, %eax
	movzbl	%r8b, %edi
	call	my_friendly_assert
	movl	$138, %esi
	cmpb	$1, 16(%r14)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	32(%r14), %rcx
	movq	32(%rbx), %rdx
	movl	24(%r14), %eax
	movl	$.LC35, %esi
	addl	24(%rbx), %eax
	cltq
	addq	$19, %rax
	andq	$-16, %rax
	subq	%rax, %rsp
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	sprintf
	xorl	%eax, %eax
	movq	%rsp, %rdi
	call	get_identifier
	movq	%rax, 72(%r13)
	movq	-48(%rbp), %rdi
	movq	%rdi, 8(%rax)
	jmp	.L23872
.L23877:
	movq	%r14, 72(%r13)
	jmp	.L23872
	.p2align 6,,7
.L23885:
	movl	$decl_obstack, %edi
	movl	$8, %esi
	xorl	%eax, %eax
	call	_obstack_newchunk
	movq	decl_obstack+24(%rip), %rdx
	jmp	.L23875
.LFE73:
.Lfe73:
	.size	grok_enum_decls,.Lfe73-grok_enum_decls
	.section	.rodata.str1.32
	.align 32
.LC362:
	.string	"return-type `%s' is an incomplete type"
	.section	.rodata.str1.1
.LC364:
	.string	"return-type defaults to `int'"
	.section	.rodata.str1.32
	.align 32
.LC363:
	.string	"return-type is an incomplete type"
	.align 32
.LC361:
	.string	"`%s' implicitly declared before its definition"
	.align 32
.LC360:
	.string	"return type for `main' changed to integer type"
	.align 32
.LC359:
	.string	"semicolon missing after declaration of `%s'"
	.text
	.align 2
	.p2align 4,,15
.globl start_function
	.type	start_function,@function
start_function:
.LFB74:
	pushq	%r15
.LCFI243:
	xorl	%r15d, %r15d
	pushq	%r14
.LCFI244:
	movl	%ecx, %r14d
	pushq	%r13
.LCFI245:
	pushq	%r12
.LCFI246:
	movq	%rdx, %r12
	pushq	%rbp
.LCFI247:
	movq	%rsi, %rbp
	pushq	%rbx
.LCFI248:
	movq	%rdi, %rbx
	subq	$72, %rsp
.LCFI249:
	movl	flag_handle_exceptions(%rip), %eax
	movl	$0, 12(%rsp)
	testl	%eax, %eax
	je	.L23888
	cmpq	$0, EHS_decl(%rip)
	je	.L24063
.L23888:
	movq	void_list_node(%rip), %rdi
	movq	void_type_node(%rip), %rsi
	cmpq	%rsi, 32(%rdi)
	movl	$160, %esi
	sete	%cl
	xorl	%eax, %eax
	movzbl	%cl, %edi
	call	my_friendly_assert
	movl	$161, %esi
	movq	void_list_node(%rip), %rdx
	cmpq	$0, (%rdx)
	sete	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	xorl	%eax, %eax
	movl	$0, current_function_obstack_usage(%rip)
	movl	$0, current_function_returns_value(%rip)
	movl	$0, current_function_returns_null(%rip)
	movl	$0, warn_about_return_type(%rip)
	movl	$0, current_extern_inline(%rip)
	movl	$0, current_function_assigns_this(%rip)
	movl	$0, current_function_just_assigned_this(%rip)
	movl	$0, current_function_parms_stored(%rip)
	movq	$0, original_result_rtx(%rip)
	movl	$0, current_function_obstack_index(%rip)
	call	clear_temp_name
	movl	have_extern_spec(%rip), %eax
	testl	%eax, %eax
	je	.L23889
	movl	used_extern_spec(%rip), %r8d
	testl	%r8d, %r8d
	je	.L24064
.L23889:
	testl	%r14d, %r14d
	je	.L23890
	movq	8(%rbp), %r13
	movq	72(%rbp), %rbx
	movq	$0, last_function_parm_tags(%rip)
	cmpb	$16, 16(%r13)
	movq	%rbx, last_function_parms(%rip)
	je	.L24065
.L23891:
	testq	%r15, %r15
	jne	.L23892
	movq	152(%rbp), %r9
	testb	$16, 1(%r9)
	je	.L23892
	movq	(%rbp), %r10
	movq	8(%r10), %r15
	cmpb	$21, 16(%r15)
	je	.L23893
	xorl	%r15d, %r15d
.L23892:
	cmpq	$0, 144(%rbp)
	je	.L23896
	cmpl	$1, write_virtuals(%rip)
	jle	.L23896
	movq	144(%r15), %r11
	testb	$1, 2(%r11)
	jne	.L23895
	.p2align 4,,7
.L23896:
	xorl	%edx, %edx
	testb	$8, 18(%rbp)
	je	.L23897
	testb	$8, 53(%rbp)
	movl	$1, %eax
	cmovne	%eax, %edx
.L23897:
	movl	%edx, current_extern_inline(%rip)
.L23895:
	movq	last_function_parms(%rip), %rbx
	testq	%rbx, %rbx
	je	.L23906
	.p2align 4,,7
.L23904:
	movq	8(%rbx), %r12
	cmpq	$0, 32(%r12)
	jne	.L23901
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L23902
	movq	32(%rax), %rsi
	movl	$.LC298, %edi
	xorl	%eax, %eax
	call	error
.L23903:
	movq	error_mark_node(%rip), %rdx
	movq	%rdx, 8(%rbx)
.L23901:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L23904
.L23906:
	movl	warn_implicit(%rip), %eax
	testl	%eax, %eax
	jne	.L23916
	movq	56(%rbp), %r9
	movq	72(%r9), %rax
	testq	%rax, %rax
	je	.L23916
	movq	8(%rax), %rdi
	testq	%rdi, %rdi
	jne	.L24066
.L23916:
	movl	flag_cadillac(%rip), %r10d
	movq	%rbp, current_function_decl(%rip)
	testl	%r10d, %r10d
	je	.L23923
	movq	%rbp, %rdi
	xorl	%eax, %eax
	call	cadillac_start_function
.L23924:
	movq	8(%r13), %rdi
	cmpq	$0, 32(%rdi)
	jne	.L23925
	testb	$64, 46(%rdi)
	je	.L23926
	movl	$.LC362, %esi
	xorl	%eax, %eax
	call	error_with_aggr_type
.L23927:
	testq	%r15, %r15
	je	.L23928
	movzbl	17(%rbp), %edx
	movq	%r15, %rdi
	xorl	%eax, %eax
	movl	%edx, %ecx
	andl	$1, %edx
	shrb	$5, %cl
	movl	%ecx, %esi
	andl	$1, %esi
	call	build_type_variant
	movq	void_type_node(%rip), %rsi
	movq	8(%rbp), %r12
	movq	%rax, %rdi
	xorl	%eax, %eax
	movq	24(%r12), %r11
	movq	(%r11), %rdx
	call	build_cplus_method_type
.L24057:
	movq	%rax, 8(%rbp)
	movl	$35, %edi
	xorl	%esi, %esi
	movq	8(%r13), %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, 80(%rbp)
.L23925:
	movl	warn_about_return_type(%rip), %esi
	testl	%esi, %esi
	jne	.L24067
.L23930:
	movzbl	18(%rbp), %edx
	movq	error_mark_node(%rip), %rbx
	movq	%rbx, 88(%rbp)
	xorl	%ebx, %ebx
	movl	%edx, %edi
	orb	$4, %dil
	movb	%dil, 18(%rbp)
	movl	interface_unknown(%rip), %r8d
	testl	%r8d, %r8d
	jne	.L23931
	orb	$12, %dl
	movb	%dl, 18(%rbp)
	movzbl	interface_only(%rip), %edx
.L24058:
	movzbl	53(%rbp), %r9d
	andb	$1, %dl
	andb	$-2, %r9b
	orb	%dl, %r9b
	testq	%r15, %r15
	movb	%r9b, 53(%rbp)
	jne	.L23933
	movq	lang_name_cplusplus(%rip), %rax
	cmpq	%rax, current_lang_name(%rip)
	je	.L24068
.L23933:
	testq	%rbx, %rbx
	je	.L23976
	movq	%rbx, current_function_decl(%rip)
.L23977:
	movzbl	54(%rbp), %eax
	testb	$32, %al
	je	.L23982
	movq	56(%rbp), %r14
	orb	$32, %al
	movq	40(%r14), %r12
	movb	%al, 54(%rbp)
	testq	%r12, %r12
	je	.L23983
	movzbl	16(%r12), %edx
	cmpb	$3, %dl
	je	.L23984
	movq	152(%rbp), %rbx
	cmpb	$0, (%rbx)
	jne	.L23985
	cmpb	$29, %dl
	je	.L24069
	movl	$9, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L23985:
	movl	$1, %eax
	testl	%eax, %eax
	je	.L23989
	movl	flag_traditional(%rip), %ecx
	testl	%ecx, %ecx
	jne	.L23989
	testb	$4, 17(%r12)
	jne	.L24070
.L23989:
	movzbl	16(%r12), %eax
	cmpb	$106, %al
	je	.L24071
.L23991:
	cmpb	$29, %al
	je	.L24072
.L23992:
	movl	pedantic(%rip), %ebx
	testl	%ebx, %ebx
	je	.L23996
	cmpb	$33, 16(%r12)
	je	.L24073
.L23996:
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rbp, %rsi
	movq	24(%rax), %rdi
	movq	%rax, %rdx
.L24062:
	xorl	%eax, %eax
	call	tree_cons
	movq	unknown_type_node(%rip), %r12
	movq	%rax, 40(%r14)
	movq	%r12, 8(%rax)
.L23982:
	testq	%r15, %r15
	je	.L24017
	movq	152(%rbp), %r14
	testb	$32, 1(%r14)
	je	.L24017
	cmpb	$16, 16(%r13)
	je	.L24074
.L24018:
	movq	last_function_parms(%rip), %r8
	xorl	%r15d, %r15d
	movq	(%r8), %rdi
	movq	%rdi, last_function_parms(%rip)
	movq	%rdi, 72(%rbp)
.L24017:
	movq	8(%r13), %rbx
	movq	global_binding_level(%rip), %r13
	cmpq	%r13, current_binding_level(%rip)
	je	.L24075
.L24019:
	movq	free_binding_level(%rip), %rdi
	testq	%rdi, %rdi
	je	.L24020
	movq	56(%rdi), %rsi
	movq	%rsi, free_binding_level(%rip)
.L24021:
	movq	clear_binding_level(%rip), %rsi
	movq	class_binding_level(%rip), %rax
	movl	keep_next_level_flag(%rip), %ecx
	movq	%rsi, (%rdi)
	testq	%rax, %rax
	movq	clear_binding_level+8(%rip), %rdx
	movq	%rdx, 8(%rdi)
	movq	clear_binding_level+16(%rip), %r13
	movq	%r13, 16(%rdi)
	movq	clear_binding_level+24(%rip), %r8
	movq	%r8, 24(%rdi)
	movq	clear_binding_level+32(%rip), %r14
	movq	%r14, 32(%rdi)
	movq	clear_binding_level+40(%rip), %r12
	movq	%r12, 40(%rdi)
	movq	clear_binding_level+48(%rip), %r11
	movq	%r11, 48(%rdi)
	movq	clear_binding_level+56(%rip), %r10
	movq	%r10, 56(%rdi)
	movq	clear_binding_level+64(%rip), %r9
	movq	%r9, 64(%rdi)
	je	.L24022
	movq	%rax, 56(%rdi)
	movq	$0, class_binding_level(%rip)
.L24023:
	movzbl	66(%rdi), %r11d
	movl	%ecx, %r12d
	movq	%rdi, current_binding_level(%rip)
	andb	$7, %r12b
	orb	$5, 67(%rdi)
	xorl	%eax, %eax
	salb	$4, %r12b
	andb	$15, %r11b
	orb	%r12b, %r11b
	movb	%r11b, 66(%rdi)
	call	GNU_xref_start_scope
	movq	current_binding_level(%rip), %rdi
	movl	$0, keep_next_level_flag(%rip)
	xorl	%eax, %eax
	movzbl	66(%rdi), %r10d
	andb	$-16, %r10b
	orb	$1, %r10b
	movb	%r10b, 66(%rdi)
	movq	%rbp, %rdi
	movq	last_function_parm_tags(%rip), %rcx
	movq	last_function_parms(%rip), %rsi
	movq	%rcx, current_function_parm_tags(%rip)
	movq	%rsi, current_function_parms(%rip)
	call	GNU_xref_function
	xorl	%eax, %eax
	movq	%rbp, %rdi
	call	make_function_rtl
	testq	%r15, %r15
	jne	.L24076
	movq	152(%rbp), %rdx
	testb	$32, 1(%rdx)
	je	.L24035
	movq	64(%rbp), %rdi
	movl	$2, %esi
	xorl	%eax, %eax
	call	pushclass
.L24034:
	xorl	%eax, %eax
	call	temporary_allocation
	cmpb	$7, 16(%rbx)
	je	.L24077
.L24037:
	cmpq	$0, 80(%rbp)
	je	.L24078
.L24042:
	movq	112(%rbp), %r14
	movq	32(%r14), %rbx
	cmpb	$36, 1(%rbx)
	je	.L24079
	movq	152(%rbp), %r8
	movq	$0, dtor_label(%rip)
	testb	$2, 1(%r8)
	jne	.L24080
.L24044:
	movq	112(%rbp), %r15
	testb	$8, 17(%r15)
	je	.L24046
	orb	$8, 17(%rbp)
.L24046:
	movl	$1, %eax
.L23887:
	addq	$72, %rsp
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	ret
.L24080:
	movl	$30, %edi
	xorl	%esi, %esi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, ctor_label(%rip)
	jmp	.L24044
.L24079:
	movl	$30, %edi
	xorl	%esi, %esi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	build_decl
	movq	$0, ctor_label(%rip)
	movq	%rax, dtor_label(%rip)
	jmp	.L24044
.L24078:
	movl	$35, %edi
	xorl	%esi, %esi
	movq	%rbx, %rdx
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, 80(%rbp)
	jmp	.L24042
.L24077:
	movq	112(%rbx), %rax
	cmpq	char_type_node(%rip), %rax
	je	.L24038
	cmpq	signed_char_type_node(%rip), %rax
	je	.L24038
	cmpq	unsigned_char_type_node(%rip), %rax
	je	.L24038
	cmpq	short_integer_type_node(%rip), %rax
	je	.L24038
	cmpq	short_unsigned_type_node(%rip), %rax
	jne	.L24037
.L24038:
	testb	$64, 17(%rbx)
	je	.L24055
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	jne	.L24040
	movq	integer_type_node(%rip), %rdx
	movzbl	45(%rdx), %r12d
	cmpb	%r12b, 45(%rbx)
	je	.L24040
.L24039:
	movq	%rdx, %rbx
	jmp	.L24037
.L24040:
	movq	unsigned_type_node(%rip), %rbx
	jmp	.L24037
.L24055:
	movq	integer_type_node(%rip), %rdx
	jmp	.L24039
.L24035:
	xorl	%edi, %edi
	movl	$1, %esi
	xorl	%eax, %eax
	call	push_memoized_context
	jmp	.L24034
.L24076:
	xorl	%eax, %eax
	movq	%r15, %rdi
	movl	$1, %esi
	call	pushclass
	movl	12(%rsp), %eax
	testl	%eax, %eax
	jne	.L24034
	movq	last_function_parms(%rip), %rax
	xorl	%edi, %edi
	testq	%rax, %rax
	movq	%rax, current_class_decl(%rip)
	je	.L24029
	cmpb	$34, 16(%rax)
	movl	$1, %eax
	cmove	%eax, %edi
.L24029:
	xorl	%eax, %eax
	movl	$162, %esi
	call	my_friendly_assert
	movq	current_class_decl(%rip), %rdx
	movq	8(%rdx), %rax
	cmpb	$13, 16(%rax)
	je	.L24081
	movq	%rdx, C_C_D(%rip)
	jmp	.L24034
.L24081:
	movq	144(%r15), %r14
	movq	8(%rax), %r12
	movq	168(%r14), %rax
	testq	%rax, %rax
	je	.L24082
	movq	%rax, C_C_D(%rip)
	movq	%rdx, 32(%rax)
.L24032:
	movq	C_C_D(%rip), %rdi
	movzbl	17(%r12), %r11d
	movzbl	17(%rdi), %r10d
	andb	$32, %r11b
	andb	$-33, %r10b
	orb	%r11b, %r10b
	movb	%r10b, 17(%rdi)
	movzbl	17(%r12), %ecx
	movq	C_C_D(%rip), %rsi
	movzbl	17(%rsi), %r9d
	shrb	$4, %cl
	andb	$1, %cl
	andb	$-2, %r9b
	orb	%cl, %r9b
	movb	%r9b, 17(%rsi)
	movzbl	17(%r12), %eax
	movq	C_C_D(%rip), %r15
	movzbl	17(%r15), %r13d
	andb	$16, %al
	andb	$-17, %r13b
	orb	%al, %r13b
	movb	%r13b, 17(%r15)
	jmp	.L24034
.L24082:
	movq	current_class_type(%rip), %rsi
	movl	$39, %edi
	xorl	%eax, %eax
	call	build1
	movq	144(%r15), %r8
	movq	%rax, C_C_D(%rip)
	movq	%rax, 168(%r8)
	jmp	.L24032
	.p2align 6,,7
.L24022:
	movq	current_binding_level(%rip), %r9
	movq	%r9, 56(%rdi)
	jmp	.L24023
.L24020:
	movl	$72, %edi
	xorl	%eax, %eax
	call	xmalloc
	movq	%rax, %rdi
	jmp	.L24021
.L24075:
	cmpq	$0, named_labels(%rip)
	movl	$134, %esi
	sete	%dl
	xorl	%eax, %eax
	movzbl	%dl, %edi
	call	my_friendly_assert
	jmp	.L24019
.L24074:
	movq	24(%r13), %r15
	movq	8(%r13), %rdi
	xorl	%eax, %eax
	movq	(%r15), %rsi
	call	build_function_type
	movq	%rax, %r13
	movq	%rax, 8(%rbp)
	jmp	.L24018
.L24073:
	movq	tree_code_type(%rip), %r9
	movq	264(%r9), %rcx
	cmpb	$100, (%rcx)
	sete	%sil
	xorl	%eax, %eax
	movzbl	%sil, %edi
	movl	$143, %esi
	call	my_friendly_assert
	xorl	%eax, %eax
	movl	$.LC151, %esi
	movq	%r12, %rdi
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC152, %esi
	movq	%rbp, %rdi
	call	error_with_decl
	jmp	.L23996
.L24072:
	movq	152(%rbp), %rdi
	movq	152(%r12), %r11
	movzbl	(%rdi), %r10d
	cmpb	%r10b, (%r11)
	je	.L23992
	movq	8(%r12), %rdi
	movq	8(%rbp), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L23992
	movq	current_lang_base(%rip), %rdx
	cmpq	%rdx, current_lang_stack(%rip)
	je	.L24083
	movq	%rbp, %rdi
	movl	$.LC149, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC150, %esi
	movq	%r12, %rdi
	call	error_with_decl
	jmp	.L23992
.L24083:
	movq	152(%r12), %rax
	movq	152(%rbp), %r8
	movzbl	(%rax), %ebp
	movb	%bpl, (%r8)
	movq	%r12, %rbp
	jmp	.L23982
.L24071:
	movq	32(%r12), %r12
	movzbl	16(%r12), %eax
	jmp	.L23991
.L24070:
	movq	global_binding_level(%rip), %r9
	cmpq	%r9, current_binding_level(%rip)
	je	.L23989
	movq	overloads_to_forget(%rip), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, overloads_to_forget(%rip)
	jmp	.L23989
	.p2align 6,,7
.L24069:
	movq	152(%r12), %rsi
	cmpb	$0, (%rsi)
	jne	.L23985
	movq	%rbp, %rdi
	movl	$.LC147, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC148, %esi
	movq	%r12, %rdi
	call	error_with_decl
	jmp	.L23985
.L23984:
	cmpq	$0, 32(%r12)
	jne	.L23997
	movq	%rbp, 32(%r12)
	jmp	.L23982
.L23997:
	cmpb	$-127, 16(%rbp)
	je	.L23983
	movq	112(%rbp), %r10
	movq	%r12, %rbx
	movq	%r10, 16(%rsp)
.L24005:
	movq	32(%rbx), %rcx
	cmpb	$29, 16(%rcx)
	je	.L24084
.L24003:
	cmpb	$-127, 16(%rcx)
	je	.L24001
	movq	16(%rsp), %rdx
	cmpq	%rdx, 112(%rcx)
	je	.L23982
.L24001:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L24005
.L23983:
	movq	152(%rbp), %rbx
	cmpb	$0, (%rbx)
	jne	.L24006
	testq	%r12, %r12
	movq	%r12, %rbx
	je	.L24006
	movq	32(%r12), %rcx
	movq	152(%rcx), %rsi
	cmpb	$1, (%rsi)
	je	.L24011
.L24008:
	testq	%rbx, %rbx
	jne	.L24085
.L24006:
	movl	$1, %eax
	testl	%eax, %eax
	je	.L24013
	movl	flag_traditional(%rip), %r11d
	testl	%r11d, %r11d
	jne	.L24013
	testq	%r12, %r12
	je	.L24014
	testb	$4, 17(%r12)
	jne	.L24014
.L24013:
	movq	%r14, %rdi
	movq	%rbp, %rsi
	movq	%r12, %rdx
	jmp	.L24062
.L24014:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L24013
	testb	$32, 67(%rax)
	jne	.L24013
	movq	overloads_to_forget(%rip), %rdx
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, overloads_to_forget(%rip)
	jmp	.L24013
.L24085:
	movq	%rbp, %rdi
	movl	$.LC147, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC148, %esi
	movq	32(%rbx), %rdi
	call	error_with_decl
	jmp	.L24006
	.p2align 6,,7
.L24011:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	je	.L24006
	movq	32(%rbx), %r10
	movq	152(%r10), %r9
	cmpb	$1, (%r9)
	je	.L24011
	jmp	.L24008
.L24084:
	movq	152(%rbp), %r8
	movq	152(%rcx), %rdi
	movzbl	(%r8), %r11d
	cmpb	%r11b, (%rdi)
	je	.L24003
	movq	8(%rcx), %rdi
	movq	8(%rbp), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	jne	.L24086
.L24054:
	movq	32(%rbx), %rcx
	jmp	.L24003
.L24086:
	movq	%rbp, %rdi
	movl	$.LC149, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC150, %esi
	movq	32(%rbx), %rdi
	call	error_with_decl
	jmp	.L24054
	.p2align 6,,7
.L23976:
	testl	%r14d, %r14d
	je	.L24087
	movq	%rbp, current_function_decl(%rip)
	jmp	.L23977
.L24087:
	xorl	%eax, %eax
	movq	%rbp, %rdi
	call	pushdecl
	cmpb	$3, 16(%rax)
	movq	%rax, current_function_decl(%rip)
	je	.L24088
	movq	152(%rax), %r14
	movq	%rax, %rbp
	movq	%rax, 32(%r14)
.L23980:
	movq	8(%rbp), %r13
	jmp	.L23977
.L24088:
	movq	152(%rbp), %r13
	movq	32(%r13), %rbp
	movq	%rbp, current_function_decl(%rip)
	jmp	.L23980
.L24068:
	movq	current_binding_level(%rip), %rax
	movq	global_binding_level(%rip), %rsi
	movq	56(%rbp), %rdx
	cmpq	%rsi, %rax
	movq	%rax, %rdi
	je	.L24089
	cmpq	$0, 48(%rdx)
	jne	.L23936
	xorl	%ebx, %ebx
.L23935:
	testq	%rbx, %rbx
	je	.L23976
	cmpb	$29, 16(%rbx)
	movl	$0, %r10d
	cmovne	%r10, %rbx
	testq	%rbx, %rbx
	je	.L23976
	cmpq	56(%rbx), %rdx
	je	.L23944
	cmpq	%rsi, %rdi
	movq	112(%rbp), %rcx
	je	.L24090
	cmpq	$0, 48(%rcx)
	jne	.L23947
	xorl	%ebx, %ebx
.L23946:
	testq	%rbx, %rbx
	jne	.L24052
	movq	%rbp, %rbx
.L23944:
	testq	%rbx, %rbx
	je	.L23976
.L24052:
	cmpq	%rbp, %rbx
	je	.L23933
	cmpq	56(%rbx), %rdx
	jne	.L23933
	cmpb	$29, 16(%rbx)
	je	.L24091
.L23956:
	xorl	%ebx, %ebx
	jmp	.L23933
.L24091:
	movq	%rbp, 56(%rsp)
	movq	%rbx, 32(%rsp)
	movq	%rbp, %rdi
	cmpb	$29, 16(%rbp)
	je	.L24092
	movq	8(%rbp), %rdi
	cmpq	error_mark_node(%rip), %rdi
	je	.L24093
	movq	8(%rbx), %rsi
	testq	%rsi, %rsi
	jne	.L23971
	testq	%rdi, %rdi
.L24061:
	sete	%dl
	movzbl	%dl, %eax
.L23965:
	testl	%eax, %eax
	je	.L24094
.L23957:
	movq	152(%rbx), %r8
	movzbl	54(%rbp), %edi
	movq	32(%r8), %rbx
	andb	$-33, %dil
	movq	112(%rbx), %r12
	movq	%r12, 112(%rbp)
	movzbl	54(%rbx), %eax
	andb	$32, %al
	orb	%al, %dil
	movb	%dil, 54(%rbp)
	cmpq	$0, 88(%rbx)
	jne	.L24095
.L23973:
	xorl	%eax, %eax
	movq	%rbp, %rdi
	movq	%rbx, %rsi
	call	duplicate_decls
	testl	%eax, %eax
	je	.L24096
.L23974:
	movq	%rbx, %rbp
	jmp	.L23933
.L24096:
	movl	$19, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
	jmp	.L23974
.L24095:
	movq	%rbp, %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	redeclaration_error_message
	jmp	.L23973
	.p2align 6,,7
.L24094:
	movq	8(%rbp), %r11
	movq	8(%rbx), %r10
	xorl	%eax, %eax
	movl	$1, %edx
	movq	24(%r11), %rdi
	movq	24(%r10), %rsi
	call	comp_target_parms
	testl	%eax, %eax
	je	.L23956
	jmp	.L23957
.L23971:
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	jmp	.L23965
.L24093:
	cmpq	%rdi, 8(%rbx)
	jmp	.L24061
	.p2align 6,,7
.L24092:
	movq	8(%rbp), %rcx
	movq	%rcx, 64(%rsp)
	movq	8(%rbx), %rdx
	movq	%rdx, 40(%rsp)
	movq	%rdx, %rsi
	movq	24(%rcx), %r12
	movq	%r12, 48(%rsp)
	movq	24(%rdx), %r11
	movq	%r11, 24(%rsp)
	cmpb	$16, 16(%rcx)
	je	.L24097
.L23959:
	cmpb	$16, 16(%rsi)
	je	.L24098
.L23960:
	movzbl	16(%rcx), %eax
	cmpb	16(%rdx), %al
	je	.L23962
	cmpb	$14, %al
	je	.L24099
	movq	56(%rsp), %rdi
	movl	$.LC2, %esi
.L24060:
	xorl	%eax, %eax
	call	compiler_error_with_decl
.L23966:
	xorl	%eax, %eax
	jmp	.L23965
.L24099:
	movq	56(%rsp), %rdi
	movl	$.LC1, %esi
	jmp	.L24060
.L23962:
	movq	8(%rcx), %r9
	xorl	%eax, %eax
	movq	8(%rdx), %rcx
	movl	$1, %edx
	movq	112(%r9), %rdi
	movq	112(%rcx), %rsi
	call	comptypes
	testl	%eax, %eax
	je	.L23966
	movq	48(%rsp), %rdi
	movq	24(%rsp), %rsi
	movl	$1, %edx
	xorl	%eax, %eax
	call	compparms
	jmp	.L23965
.L24098:
	movq	152(%rdi), %rsi
	testb	$32, 1(%rsi)
	je	.L23960
	leaq	40(%rsp), %rdi
	leaq	32(%rsp), %rsi
	leaq	24(%rsp), %rdx
.L24059:
	xorl	%eax, %eax
	call	revert_static_member_fn
	movq	64(%rsp), %rcx
	movq	40(%rsp), %rdx
	jmp	.L23960
.L24097:
	movq	152(%rbx), %r8
	testb	$32, 1(%r8)
	je	.L23959
	leaq	64(%rsp), %rdi
	leaq	56(%rsp), %rsi
	leaq	48(%rsp), %rdx
	jmp	.L24059
	.p2align 6,,7
.L23947:
	movq	(%rdi), %rax
	testq	%rax, %rax
	je	.L23949
.L23953:
	cmpq	%rcx, 56(%rax)
	je	.L23949
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L23953
.L23949:
	movq	%rax, %rbx
	jmp	.L23946
.L24090:
	movq	40(%rcx), %rbx
	jmp	.L23946
.L23936:
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L23938
.L23942:
	cmpq	%rdx, 56(%rax)
	je	.L23938
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L23942
.L23938:
	movq	%rax, %rbx
	jmp	.L23935
.L24089:
	movq	40(%rdx), %rbx
	jmp	.L23935
	.p2align 6,,7
.L23931:
	movzbl	current_extern_inline(%rip), %edx
	jmp	.L24058
.L24067:
	movl	$.LC364, %edi
	xorl	%eax, %eax
	call	warning
	jmp	.L23930
.L23928:
	movq	8(%rbp), %rdx
	movq	void_type_node(%rip), %rdi
	xorl	%eax, %eax
	movq	24(%rdx), %rsi
	call	build_function_type
	jmp	.L24057
.L23926:
	movl	$.LC363, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L23927
.L23923:
	movq	%rbp, %rdi
	xorl	%eax, %eax
	call	announce_function
	jmp	.L23924
.L24066:
	movl	$.LC361, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	jmp	.L23916
	.p2align 6,,7
.L23902:
	movl	$.LC299, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L23903
.L23893:
	movl	$1, 12(%rsp)
	jmp	.L23892
.L24065:
	movq	96(%r13), %r15
	jmp	.L23891
.L23890:
	movq	%rbp, %rdi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	movl	$1, %edx
	movl	$1, %ecx
	movq	%r12, %r8
	call	grokdeclarator
	testq	%rax, %rax
	movq	%rax, %rbp
	je	.L23908
	cmpb	$29, 16(%rax)
	je	.L23907
.L23908:
	xorl	%eax, %eax
	jmp	.L23887
.L23907:
	movq	8(%rax), %r13
	movq	8(%r13), %rbx
	testb	$64, 46(%rbx)
	je	.L23909
	movq	144(%rbx), %rcx
	testb	$32, 5(%rcx)
	je	.L24100
.L23909:
	cmpb	$16, 16(%r13)
	je	.L24101
	movq	56(%rbp), %rax
	cmpl	$4, 24(%rax)
	jne	.L23906
	movq	32(%rax), %rsi
	movl	$.LC274, %edi
	movl	$5, %ecx
	cld
	repz
	cmpsb
	jne	.L23906
	cmpq	$0, 64(%rbp)
	jne	.L23906
	movq	8(%rbp), %rbx
	movq	integer_type_node(%rip), %r8
	cmpq	%r8, 8(%rbx)
	je	.L23915
	movl	$.LC360, %edi
	xorl	%eax, %eax
	call	warning
	movq	default_function_type(%rip), %r13
	movq	%r13, 8(%rbp)
.L23915:
	movl	$0, warn_about_return_type(%rip)
	jmp	.L23906
.L24101:
	movq	96(%r13), %r15
	jmp	.L23906
.L24100:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	movl	$.LC359, %esi
	call	error_with_aggr_type
	xorl	%edi, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	build_tree_list
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	shadow_tag
	movq	144(%rbx), %rsi
	orb	$32, 5(%rsi)
	cmpb	$23, 16(%r13)
	je	.L24102
	movzbl	17(%rbp), %edx
	xorl	%eax, %eax
	movl	%edx, %edi
	andl	$1, %edx
	shrb	$5, %dil
	movl	%edi, %esi
	movq	96(%r13), %rdi
	andl	$1, %esi
	call	build_type_variant
	movq	24(%r13), %rdx
	movq	integer_type_node(%rip), %rsi
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	build_cplus_method_type
.L24056:
	movq	%rax, %r13
	movq	%rax, 8(%rbp)
	jmp	.L23909
.L24102:
	movq	integer_type_node(%rip), %rdi
	movq	24(%r13), %rsi
	xorl	%eax, %eax
	call	build_function_type
	jmp	.L24056
	.p2align 6,,7
.L24064:
	movl	$.LC140, %edi
	xorl	%eax, %eax
	call	get_identifier
	movq	%rbx, %rdx
	xorl	%edi, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	decl_tree_cons
	movl	$1, used_extern_spec(%rip)
	movq	%rax, %rbx
	jmp	.L23889
.L24063:
	xorl	%eax, %eax
	call	init_exception_processing_1
	jmp	.L23888
.LFE74:
.Lfe74:
	.size	start_function,.Lfe74-start_function
	.align 2
	.p2align 4,,15
.globl store_parm_decls
	.type	store_parm_decls,@function
store_parm_decls:
.LFB75:
	pushq	%r15
.LCFI250:
	xorl	%r15d, %r15d
	pushq	%r14
.LCFI251:
	xorl	%r14d, %r14d
	pushq	%r13
.LCFI252:
	pushq	%r12
.LCFI253:
	pushq	%rbp
.LCFI254:
	pushq	%rbx
.LCFI255:
	subq	$24, %rsp
.LCFI256:
	movq	global_binding_level(%rip), %rax
	movq	current_function_parm_tags(%rip), %rdx
	cmpq	%rax, current_binding_level(%rip)
	movq	current_function_decl(%rip), %r12
	movq	current_function_parms(%rip), %rbx
	movq	%rdx, 16(%rsp)
	je	.L24172
.L24104:
	movq	input_filename(%rip), %rsi
	movl	lineno(%rip), %edx
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	init_function_start
	xorl	%eax, %eax
	call	declare_function_name
	xorl	%eax, %eax
	xorl	%edi, %edi
	call	expand_start_bindings
	movl	flag_handle_exceptions(%rip), %eax
	testl	%eax, %eax
	jne	.L24173
.L24106:
	testq	%rbx, %rbx
	je	.L24107
	movq	current_binding_level(%rip), %rcx
	movq	%rbx, %rdi
	xorl	%eax, %eax
	movq	$0, (%rcx)
	call	nreverse
	testq	%rax, %rax
	movq	%rax, %rbx
	je	.L24165
	.p2align 4,,7
.L24121:
	cmpb	$34, 16(%rbx)
	movq	(%rbx), %rbp
	je	.L24174
	movq	%r14, %rdi
	movq	$0, (%rbx)
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	chainon
	movq	%rax, %r14
.L24111:
	testq	%rbp, %rbp
	je	.L24165
	movq	%rbp, %rbx
	jmp	.L24121
	.p2align 6,,7
.L24165:
	movq	current_binding_level(%rip), %r10
	xorl	%eax, %eax
	movq	(%r10), %r11
	movq	%r11, 72(%r12)
	movq	16(%rsp), %rdi
	movq	8(%r10), %rsi
	call	chainon
	movq	current_binding_level(%rip), %rbx
	movq	%rax, 8(%rbx)
.L24125:
	movq	72(%r12), %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	call	chainon
	movl	%r15d, %esi
	movq	%r12, %rdi
	movq	current_binding_level(%rip), %r13
	movq	%rax, (%r13)
	xorl	%eax, %eax
	movq	$0, 136(%r12)
	call	expand_function_start
	movl	flag_handle_exceptions(%rip), %eax
	testl	%eax, %eax
	jne	.L24175
.L24127:
	testl	%r15d, %r15d
	je	.L24128
	movq	global_binding_level(%rip), %r14
	cmpq	%r14, current_binding_level(%rip)
	je	.L24176
.L24129:
	movq	free_binding_level(%rip), %rdi
	testq	%rdi, %rdi
	je	.L24130
	movq	56(%rdi), %rdx
	movq	%rdx, free_binding_level(%rip)
.L24131:
	movq	clear_binding_level(%rip), %r14
	movq	class_binding_level(%rip), %rax
	movl	keep_next_level_flag(%rip), %ecx
	movq	%r14, (%rdi)
	testq	%rax, %rax
	movq	clear_binding_level+8(%rip), %r13
	movq	%r13, 8(%rdi)
	movq	clear_binding_level+16(%rip), %r11
	movq	%r11, 16(%rdi)
	movq	clear_binding_level+24(%rip), %r10
	movq	%r10, 24(%rdi)
	movq	clear_binding_level+32(%rip), %rbx
	movq	%rbx, 32(%rdi)
	movq	clear_binding_level+40(%rip), %r9
	movq	%r9, 40(%rdi)
	movq	clear_binding_level+48(%rip), %r8
	movq	%r8, 48(%rdi)
	movq	clear_binding_level+56(%rip), %rbp
	movq	%rbp, 56(%rdi)
	movq	clear_binding_level+64(%rip), %rsi
	movq	%rsi, 64(%rdi)
	je	.L24132
	movq	%rax, 56(%rdi)
	movq	$0, class_binding_level(%rip)
.L24133:
	movzbl	66(%rdi), %esi
	movl	%ecx, %edx
	movq	%rdi, current_binding_level(%rip)
	andb	$7, %dl
	orb	$5, 67(%rdi)
	xorl	%eax, %eax
	salb	$4, %dl
	andb	$15, %sil
	orb	%dl, %sil
	movb	%sil, 66(%rdi)
	call	GNU_xref_start_scope
	xorl	%edi, %edi
	xorl	%eax, %eax
	movl	$0, keep_next_level_flag(%rip)
	call	expand_start_bindings
.L24128:
	movl	flag_gc(%rip), %eax
	movl	$1, current_function_parms_stored(%rip)
	testl	%eax, %eax
	jne	.L24177
.L24136:
	movq	56(%r12), %rax
	testq	%rax, %rax
	je	.L24103
	cmpl	$4, 24(%rax)
	je	.L24178
.L24103:
	addq	$24, %rsp
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	ret
.L24178:
	movq	32(%rax), %rsi
	movl	$.LC274, %edi
	movl	$5, %ecx
	cld
	repz
	cmpsb
	jne	.L24103
	cmpq	$0, 64(%r12)
	jne	.L24103
	xorl	%eax, %eax
	call	expand_main_function
	movl	flag_gc(%rip), %eax
	testl	%eax, %eax
	jne	.L24179
.L24138:
	movl	flag_dossier(%rip), %eax
	testl	%eax, %eax
	je	.L24103
	cmpq	$0, builtin_type_tdescs_arr(%rip)
	je	.L24103
	xorl	%eax, %eax
	movl	$permanent_obstack, %edi
	movl	$permanent_obstack, %esi
	call	push_obstacks
	movl	builtin_type_tdescs_len(%rip), %eax
	testl	%eax, %eax
	jle	.L24167
.L24163:
	decl	%eax
	xorl	%esi, %esi
	movl	%eax, builtin_type_tdescs_len(%rip)
	cltq
	salq	$3, %rax
	addq	builtin_type_tdescs_arr(%rip), %rax
	movq	(%rax), %r13
	xorl	%eax, %eax
	movq	%r13, %rdi
	call	build_t_desc
	movl	$2, %esi
	movq	%r13, %rdi
	andb	$127, 17(%rax)
	xorl	%eax, %eax
	call	build_t_desc
	movl	builtin_type_tdescs_len(%rip), %eax
	testl	%eax, %eax
	jg	.L24163
.L24167:
	movq	builtin_type_tdescs_arr(%rip), %rdi
	xorl	%eax, %eax
	call	free
	movq	$0, builtin_type_tdescs_arr(%rip)
	xorl	%eax, %eax
	addq	$24, %rsp
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	jmp	pop_obstacks
.L24179:
	movl	$.LC84, %edi
	xorl	%eax, %eax
	xorl	%r12d, %r12d
	call	get_identifier
	movq	global_binding_level(%rip), %rdi
	cmpq	%rdi, current_binding_level(%rip)
	movq	%rax, %rbx
	je	.L24139
	movq	48(%rax), %rbp
	testq	%rbp, %rbp
	movq	%rbp, %rcx
	jne	.L24140
.L24139:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L24141
	movq	56(%rbx), %rcx
	testq	%rcx, %rcx
	jne	.L24169
	movq	32(%rdi), %rbp
	testq	%rbp, %rbp
	jne	.L24142
	movq	144(%rdi), %r8
	testb	$1, 3(%r8)
	jne	.L24180
.L24142:
	testq	%rcx, %rcx
	jne	.L24169
.L24170:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rcx
	jne	.L24169
.L24141:
	movq	40(%rbx), %rcx
.L24140:
	testq	%rcx, %rcx
	je	.L24144
.L24169:
	cmpb	$32, 16(%rcx)
	je	.L24144
	movl	looking_for_typename(%rip), %edx
	testl	%edx, %edx
	js	.L24144
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L24152
	movq	80(%rax), %rax
	cmpq	%rax, %rcx
	je	.L24171
	testl	%r12d, %r12d
	jle	.L24181
.L24171:
	movq	%rax, %rcx
.L24144:
	movq	%rcx, %rdi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	build_function_call
	xorl	%ecx, %ecx
	xorl	%edx, %edx
	movq	%rax, %rdi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	expand_expr
	jmp	.L24138
.L24181:
	testl	%edx, %edx
	jg	.L24171
	testl	%r12d, %r12d
	je	.L24144
	movq	%rax, %rdx
	movq	%rbx, %rdi
	movq	%rcx, %rsi
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L24171
	.p2align 6,,7
.L24152:
	movq	8(%rcx), %r12
	cmpq	error_mark_node(%rip), %r12
	cmove	%r12, %rcx
	jmp	.L24144
.L24180:
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %r12d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rcx
	je	.L24144
	testq	%rax, %rax
	je	.L24170
	cmpb	$32, 16(%rax)
	cmovne	%rbp, %rcx
	jmp	.L24142
	.p2align 6,,7
.L24177:
	movq	error_mark_node(%rip), %rsi
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	build_tree_list
	xorl	%edi, %edi
	movq	%rax, %rsi
	movq	%rax, maybe_gc_cleanup(%rip)
	xorl	%eax, %eax
	call	expand_decl_cleanup
	jmp	.L24136
.L24132:
	movq	current_binding_level(%rip), %r15
	movq	%r15, 56(%rdi)
	jmp	.L24133
.L24130:
	movl	$72, %edi
	xorl	%eax, %eax
	call	xmalloc
	movq	%rax, %rdi
	jmp	.L24131
.L24176:
	cmpq	$0, named_labels(%rip)
	movl	$134, %esi
	sete	%r15b
	xorl	%eax, %eax
	movzbl	%r15b, %edi
	call	my_friendly_assert
	jmp	.L24129
.L24175:
	movq	8(%rsp), %rdi
	xorl	%eax, %eax
	call	pushdecl
	xorl	%eax, %eax
	movq	8(%rsp), %rdi
	call	expand_decl_init
	jmp	.L24127
	.p2align 6,,7
.L24174:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	maybe_build_cleanup
	cmpq	$0, 56(%rbx)
	movq	%rax, %r13
	je	.L24118
	movq	8(%rbx), %rax
	movq	void_type_node(%rip), %r8
	cmpq	%r8, 112(%rax)
	je	.L24182
	cmpb	$15, 16(%rax)
	je	.L24183
.L24118:
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	pushdecl
.L24115:
	testq	%r13, %r13
	je	.L24111
	movq	%rbx, %rdi
	xorl	%eax, %eax
	movl	$1, %r15d
	call	expand_decl
	xorl	%eax, %eax
	movq	%r13, %rsi
	movq	%rbx, %rdi
	call	expand_decl_cleanup
	jmp	.L24111
.L24183:
	movq	8(%rax), %r9
	cmpq	$0, 32(%r9)
	je	.L24118
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	convert_from_reference
	movq	%rax, 72(%rbx)
	jmp	.L24118
.L24182:
	movq	%rbx, %rdi
	movl	$.LC305, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L24115
.L24107:
	movq	$0, 72(%r12)
	jmp	.L24125
.L24173:
	xorl	%eax, %eax
	call	setup_exception_throw_decl
	movl	flag_handle_exceptions(%rip), %eax
	movq	current_binding_level(%rip), %rsi
	movq	(%rsi), %rbp
	testl	%eax, %eax
	movq	%rbp, 8(%rsp)
	movq	(%rbp), %rdi
	movq	%rdi, (%rsi)
	je	.L24106
	movq	integer_one_node(%rip), %rdi
	xorl	%esi, %esi
	movl	$1, %edx
	xorl	%eax, %eax
	call	expand_start_try
	jmp	.L24106
.L24172:
	movl	$.LC32, %edi
	xorl	%eax, %eax
	call	fatal
	jmp	.L24104
.LFE75:
.Lfe75:
	.size	store_parm_decls,.Lfe75-store_parm_decls
	.section	.rodata.str1.32
	.align 32
.LC367:
	.string	"can't redefine default return value for constructors"
	.align 32
.LC366:
	.string	"return identifier `%s' already in place"
	.align 32
.LC365:
	.string	"ANSI C++ does not permit named return values"
	.text
	.align 2
	.p2align 4,,15
.globl store_return_init
	.type	store_return_init,@function
store_return_init:
.LFB76:
	subq	$24, %rsp
.LCFI257:
	movl	pedantic(%rip), %eax
	movq	current_function_decl(%rip), %rdx
	movq	%rbp, 8(%rsp)
.LCFI258:
	movq	%r12, 16(%rsp)
.LCFI259:
	movq	%rbx, (%rsp)
.LCFI260:
	movq	%rdi, %rbp
	movq	%rsi, %r12
	testl	%eax, %eax
	movq	80(%rdx), %rbx
	jne	.L24192
.L24185:
	testq	%rbp, %rbp
	je	.L24186
	movq	56(%rbx), %rax
	testq	%rax, %rax
	jne	.L24187
	movq	%rbp, 56(%rbx)
	movq	%rbp, 112(%rbx)
.L24186:
	movq	current_function_decl(%rip), %rsi
	movq	152(%rsi), %rcx
	testb	$2, 1(%rcx)
	jne	.L24193
	cmpq	$0, 56(%rbx)
	je	.L24184
	testb	$4, 53(%rbx)
	jne	.L24194
.L24191:
	movq	%r12, 88(%rbx)
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	8(%rsp), %rbp
	xorl	%eax, %eax
	movq	%rbx, %rdi
	movq	%r12, %rsi
	xorl	%edx, %edx
	movq	(%rsp), %rbx
	movq	16(%rsp), %r12
	xorl	%ecx, %ecx
	addq	$24, %rsp
	jmp	finish_decl
	.p2align 6,,7
.L24194:
	movq	120(%rbx), %rdi
	xorl	%eax, %eax
	movq	%rdi, original_result_rtx(%rip)
	movzbl	52(%rbx), %edi
	call	gen_reg_rtx
	movq	%rax, 120(%rbx)
	jmp	.L24191
	.p2align 6,,7
.L24184:
	movq	(%rsp), %rbx
	movq	8(%rsp), %rbp
	movq	16(%rsp), %r12
	addq	$24, %rsp
	ret
	.p2align 6,,7
.L24193:
	movq	(%rsp), %rbx
	movq	8(%rsp), %rbp
	movl	$.LC367, %edi
	movq	16(%rsp), %r12
	xorl	%eax, %eax
	addq	$24, %rsp
	jmp	error
	.p2align 6,,7
.L24187:
	movq	32(%rax), %rsi
	movl	$.LC366, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L24186
	.p2align 6,,7
.L24192:
	movl	$.LC365, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L24185
.LFE76:
.Lfe76:
	.size	store_return_init,.Lfe76-store_return_init
	.section	.rodata.str1.32
	.align 32
.LC368:
	.string	"`%s' is already defined in class %s"
	.text
	.align 2
	.p2align 4,,15
.globl start_method
	.type	start_method,@function
start_method:
.LFB77:
	movq	%rdi, %rcx
	pushq	%rbx
.LCFI261:
	movq	%rdx, %r8
	movq	%rsi, %rdi
	xorl	%eax, %eax
	movl	$6, %edx
	movq	%rcx, %rsi
	xorl	%ecx, %ecx
	call	grokdeclarator
	testq	%rax, %rax
	movq	%rax, %rbx
	je	.L24218
	movq	112(%rax), %rdx
	movq	void_type_node(%rip), %rax
	cmpq	%rax, %rdx
	je	.L24218
	cmpb	$29, 16(%rbx)
	je	.L24221
	xorl	%ebx, %ebx
.L24218:
	movq	%rbx, %rax
	popq	%rbx
	ret
	.p2align 6,,7
.L24221:
	testb	$16, 54(%rbx)
	je	.L24222
	movq	72(%rdx), %rdx
	testq	%rdx, %rdx
	je	.L24224
	movq	current_class_type(%rip), %rsi
	cmpq	%rsi, 32(%rdx)
.L24239:
	je	.L24223
	movq	64(%rbx), %rdi
	movl	$.LC368, %esi
	xorl	%eax, %eax
	movq	80(%rdi), %rdx
	movq	%rbx, %rdi
	movq	56(%rdx), %rcx
	movq	32(%rcx), %rdx
	call	error_with_decl
	movq	void_type_node(%rip), %rax
.L24223:
	movq	%rax, %rbx
	jmp	.L24218
.L24224:
	cmpq	$0, current_class_type(%rip)
	jmp	.L24239
.L24222:
	movl	flag_default_inline(%rip), %eax
	testl	%eax, %eax
	je	.L24226
	movl	processing_template_defn(%rip), %r8d
	testl	%r8d, %r8d
	jne	.L24226
	orb	$8, 53(%rbx)
.L24226:
	xorl	%eax, %eax
	call	preserve_data
	movq	152(%rbx), %rax
	testb	$16, 1(%rax)
	jne	.L24227
	cmpq	$0, 56(%rax)
	jne	.L24240
.L24228:
	testb	$2, 1(%rax)
	jne	.L24241
	movq	56(%rbx), %r9
	testb	$1, 19(%r9)
	jne	.L24242
.L24227:
	xorl	%esi, %esi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	finish_decl
	movq	global_binding_level(%rip), %r10
	cmpq	%r10, current_binding_level(%rip)
	je	.L24243
.L24232:
	movq	free_binding_level(%rip), %rdi
	testq	%rdi, %rdi
	je	.L24233
	movq	56(%rdi), %rsi
	movq	%rsi, free_binding_level(%rip)
.L24234:
	movq	clear_binding_level(%rip), %r9
	movq	class_binding_level(%rip), %rax
	movl	keep_next_level_flag(%rip), %ecx
	movq	%r9, (%rdi)
	testq	%rax, %rax
	movq	clear_binding_level+8(%rip), %r8
	movq	%r8, 8(%rdi)
	movq	clear_binding_level+16(%rip), %rdx
	movq	%rdx, 16(%rdi)
	movq	clear_binding_level+24(%rip), %rsi
	movq	%rsi, 24(%rdi)
	movq	clear_binding_level+32(%rip), %r11
	movq	%r11, 32(%rdi)
	movq	clear_binding_level+40(%rip), %r10
	movq	%r10, 40(%rdi)
	movq	clear_binding_level+48(%rip), %r9
	movq	%r9, 48(%rdi)
	movq	clear_binding_level+56(%rip), %r8
	movq	%r8, 56(%rdi)
	movq	clear_binding_level+64(%rip), %rdx
	movq	%rdx, 64(%rdi)
	je	.L24235
	movq	%rax, 56(%rdi)
	movq	$0, class_binding_level(%rip)
.L24236:
	movzbl	66(%rdi), %r11d
	movl	%ecx, %esi
	movq	%rdi, current_binding_level(%rip)
	andb	$7, %sil
	orb	$5, 67(%rdi)
	xorl	%eax, %eax
	salb	$4, %sil
	andb	$15, %r11b
	orb	%sil, %r11b
	movb	%r11b, 66(%rdi)
	call	GNU_xref_start_scope
	movq	current_binding_level(%rip), %rcx
	movl	$0, keep_next_level_flag(%rip)
	movzbl	66(%rcx), %edi
	andb	$-16, %dil
	orb	$1, %dil
	movb	%dil, 66(%rcx)
	orb	$16, 54(%rbx)
	jmp	.L24218
.L24235:
	movq	current_binding_level(%rip), %r10
	movq	%r10, 56(%rdi)
	jmp	.L24236
.L24233:
	movl	$72, %edi
	xorl	%eax, %eax
	call	xmalloc
	movq	%rax, %rdi
	jmp	.L24234
.L24243:
	cmpq	$0, named_labels(%rip)
	movl	$134, %esi
	sete	%r11b
	xorl	%eax, %eax
	movzbl	%r11b, %edi
	call	my_friendly_assert
	jmp	.L24232
.L24242:
	movzbl	53(%rbx), %esi
	movq	%rbx, %rdi
	xorl	%eax, %eax
	shrb	$5, %sil
	andl	$1, %esi
	call	grok_op_properties
	jmp	.L24227
.L24241:
	movq	current_class_type(%rip), %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	call	grok_ctor_properties
	jmp	.L24227
.L24240:
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	copy_node
	movq	%rax, %rbx
	movq	152(%rax), %rax
	jmp	.L24228
.LFE77:
.Lfe77:
	.size	start_method,.Lfe77-start_method
	.align 2
	.p2align 4,,15
.globl finish_method
	.type	finish_method,@function
finish_method:
.LFB78:
	pushq	%r12
.LCFI262:
	movq	void_type_node(%rip), %rdx
	pushq	%rbp
.LCFI263:
	movq	%rdi, %rbp
	pushq	%rbx
.LCFI264:
	cmpq	%rdx, 112(%rdi)
	je	.L24244
	movq	current_binding_level(%rip), %rsi
	movq	88(%rdi), %r12
	movq	(%rsi), %rbx
	testq	%rbx, %rbx
	je	.L24277
	.p2align 4,,7
.L24251:
	movq	56(%rbx), %rax
	testq	%rax, %rax
	je	.L24250
	movq	$0, 48(%rax)
.L24250:
	cmpb	$29, 16(%rbx)
	movl	$163, %esi
	setne	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	$0, 64(%rbx)
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L24251
	movq	current_binding_level(%rip), %rsi
.L24277:
	movq	16(%rsi), %rcx
	testq	%rcx, %rcx
	je	.L24279
	.p2align 4,,7
.L24256:
	movq	24(%rcx), %rbx
	movq	32(%rcx), %rdx
	movq	%rdx, 48(%rbx)
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.L24256
.L24279:
	movq	24(%rsi), %rcx
	testq	%rcx, %rcx
	je	.L24281
	.p2align 4,,7
.L24261:
	movq	24(%rcx), %rdi
	movq	32(%rcx), %r8
	movq	%r8, 56(%rdi)
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.L24261
.L24281:
	movq	32(%rsi), %rcx
	testq	%rcx, %rcx
	je	.L24283
	.p2align 4,,7
.L24266:
	movq	24(%rcx), %rsi
	movq	32(%rcx), %r9
	movq	(%rcx), %rcx
	movq	%r9, 8(%rsi)
	testq	%rcx, %rcx
	jne	.L24266
	movq	current_binding_level(%rip), %rsi
.L24283:
	movzbl	66(%rsi), %r10d
	movq	%rsi, %rdi
	xorl	%eax, %eax
	movq	56(%rsi), %rsi
	movl	%r10d, %edx
	shrb	$4, %r10b
	movl	%r10d, %ecx
	andl	$15, %edx
	shrb	$3, %r10b
	andl	$7, %ecx
	movzbl	%r10b, %r8d
	call	GNU_xref_end_scope
	movq	global_binding_level(%rip), %rax
	testq	%rax, %rax
	je	.L24284
	movq	current_binding_level(%rip), %rsi
	cmpq	%rax, %rsi
	je	.L24286
.L24267:
	movq	%rsi, %r11
	movq	free_binding_level(%rip), %rbx
	movq	56(%rsi), %rsi
	movq	%rsi, current_binding_level(%rip)
	movq	%rbx, 56(%r11)
	movzbl	66(%rsi), %ecx
	movq	%r11, free_binding_level(%rip)
	andl	$15, %ecx
	cmpl	$2, %ecx
	je	.L24287
.L24274:
	movq	%r12, 88(%rbp)
	movq	152(%rbp), %r12
	testb	$16, 1(%r12)
	jne	.L24288
.L24244:
	popq	%rbx
	movq	%rbp, %rax
	popq	%rbp
	popq	%r12
	ret
.L24288:
	movq	current_class_type(%rip), %r12
	movq	%rbp, %rsi
	xorl	%edi, %edi
	xorl	%eax, %eax
	movq	128(%r12), %rdx
	call	tree_cons
	movq	void_type_node(%rip), %rbp
	movq	%rax, 128(%r12)
	jmp	.L24244
.L24287:
	movq	%rsi, class_binding_level(%rip)
	movq	%rsi, %rdx
	.p2align 4,,7
.L24270:
	movq	56(%rdx), %rdx
	movzbl	66(%rdx), %edi
	andl	$15, %edi
	cmpl	$2, %edi
	je	.L24270
	movq	%rdx, current_binding_level(%rip)
	jmp	.L24274
.L24286:
	movl	$123, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L24284:
	movq	current_binding_level(%rip), %rsi
	jmp	.L24267
.LFE78:
.Lfe78:
	.size	finish_method,.Lfe78-finish_method
	.align 2
	.p2align 4,,15
.globl hack_incomplete_structures
	.type	hack_incomplete_structures,@function
hack_incomplete_structures:
.LFB79:
	movq	current_binding_level(%rip), %rax
	pushq	%r12
.LCFI265:
	pushq	%rbp
.LCFI266:
	movq	%rdi, %rbp
	pushq	%rbx
.LCFI267:
	cmpw	$0, 64(%rax)
	je	.L24289
	testq	%rdi, %rdi
	je	.L24289
	movq	(%rax), %rbx
	testq	%rbx, %rbx
	je	.L24289
	.p2align 4,,7
.L24302:
	movq	8(%rbx), %rdi
	cmpq	%rbp, %rdi
	je	.L24297
	testq	%rdi, %rdi
	je	.L24294
	cmpb	$18, 16(%rdi)
	je	.L24304
.L24294:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L24302
.L24289:
	popq	%rbx
	popq	%rbp
	popq	%r12
	ret
	.p2align 6,,7
.L24304:
	cmpq	%rbp, 8(%rdi)
	jne	.L24294
	.p2align 4,,7
.L24297:
	cmpb	$32, 16(%rbx)
	je	.L24305
	cmpq	%rax, global_binding_level(%rip)
	sete	%dl
	cmpb	$18, 16(%rdi)
	movzbl	%dl, %r12d
	je	.L24306
.L24300:
	xorl	%esi, %esi
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	layout_decl
	xorl	%esi, %esi
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	movq	%rbx, %rdi
	movl	%r12d, %edx
	call	rest_of_decl_compilation
	testl	%r12d, %r12d
	je	.L24307
.L24299:
	movq	current_binding_level(%rip), %rdx
	movl	$164, %esi
	cmpw	$0, 64(%rdx)
	setne	%al
	movzbl	%al, %edi
	xorl	%eax, %eax
	call	my_friendly_assert
	movq	current_binding_level(%rip), %rax
	decw	64(%rax)
	jmp	.L24294
.L24307:
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	expand_decl
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	maybe_build_cleanup
	movq	%rbx, %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	expand_decl_cleanup
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	expand_decl_init
	jmp	.L24299
.L24306:
	cmpq	%rbp, 8(%rdi)
	jne	.L24300
	xorl	%eax, %eax
	call	layout_type
	jmp	.L24300
.L24305:
	xorl	%eax, %eax
	call	layout_type
	jmp	.L24299
.LFE79:
.Lfe79:
	.size	hack_incomplete_structures,.Lfe79-hack_incomplete_structures
	.section	.rodata.str1.32
	.align 32
.LC371:
	.string	"reference, not call, to function `%s'"
	.section	.rodata.str1.1
.LC372:
	.string	"at this point in file"
	.section	.rodata.str1.32
	.align 32
.LC370:
	.string	"useless reference to a member function name, did you forget the ()?"
	.align 32
.LC369:
	.string	"address of overloaded function with no contextual type information"
	.text
	.align 2
	.p2align 4,,15
.globl cplus_expand_expr_stmt
	.type	cplus_expand_expr_stmt,@function
cplus_expand_expr_stmt:
.LFB80:
	subq	$24, %rsp
.LCFI268:
	movq	unknown_type_node(%rip), %rdx
	movq	%rbx, 8(%rsp)
.LCFI269:
	movq	%rbp, 16(%rsp)
.LCFI270:
	movq	%rdi, %rbx
	cmpq	%rdx, 8(%rdi)
	je	.L24320
	xorl	%ebp, %ebp
	cmpb	$29, 16(%rdi)
	je	.L24321
.L24315:
	testb	$2, 18(%rbx)
	jne	.L24322
.L24316:
	movq	%rbx, %rdi
	xorl	%eax, %eax
	call	break_out_cleanups
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	expand_expr_stmt
	testl	%ebp, %ebp
	jne	.L24323
.L24314:
	movq	8(%rsp), %rbx
	movq	16(%rsp), %rbp
	xorl	%edi, %edi
	xorl	%eax, %eax
	addq	$24, %rsp
	jmp	expand_cleanups_to
	.p2align 6,,7
.L24323:
	xorl	%edi, %edi
	xorl	%eax, %eax
	call	pop_implicit_try_blocks
	jmp	.L24314
	.p2align 6,,7
.L24322:
	movl	flag_handle_exceptions(%rip), %edi
	xorl	%eax, %eax
	movl	$165, %esi
	call	my_friendly_assert
	cmpl	$2, flag_handle_exceptions(%rip)
	jne	.L24316
	movq	current_binding_level(%rip), %rax
	testb	$4, 67(%rax)
	je	.L24324
.L24318:
	orb	$8, 67(%rax)
	jmp	.L24316
.L24324:
	movq	block_stack(%rip), %rcx
	movl	$1, %edi
	cmpq	%rcx, nesting_stack(%rip)
	setne	%dl
	xorl	%eax, %eax
	movzbl	%dl, %ebp
	call	cplus_expand_start_try
	movq	current_binding_level(%rip), %rax
	jmp	.L24318
	.p2align 6,,7
.L24321:
	movl	$.LC371, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC372, %edi
	call	warning
	jmp	.L24315
	.p2align 6,,7
.L24320:
	movzbl	16(%rdi), %eax
	cmpb	$106, %al
	je	.L24311
	cmpb	$3, %al
	je	.L24311
	cmpb	$37, %al
	jne	.L24314
	movl	$.LC370, %edi
	xorl	%eax, %eax
	call	warning
	jmp	.L24314
	.p2align 6,,7
.L24311:
	movl	$.LC369, %edi
	xorl	%eax, %eax
	call	error
	jmp	.L24314
.LFE80:
.Lfe80:
	.size	cplus_expand_expr_stmt,.Lfe80-cplus_expand_expr_stmt
	.align 2
	.p2align 4,,15
.globl finish_stmt
	.type	finish_stmt,@function
finish_stmt:
.LFB81:
	subq	$8, %rsp
.LCFI271:
	movl	current_function_assigns_this(%rip), %eax
	testl	%eax, %eax
	jne	.L24325
	movl	current_function_just_assigned_this(%rip), %eax
	testl	%eax, %eax
	je	.L24325
	movq	current_function_decl(%rip), %rcx
	movq	152(%rcx), %rdx
	testb	$2, 1(%rdx)
	je	.L24328
	cmpq	$0, cond_stack(%rip)
	jne	.L24325
	cmpq	$0, loop_stack(%rip)
	jne	.L24325
	cmpq	$0, case_stack(%rip)
	je	.L24332
	.p2align 4,,7
.L24325:
	addq	$8, %rsp
	ret
.L24332:
	movq	base_init_insns(%rip), %rdi
	xorl	%eax, %eax
	call	emit_insns
	xorl	%eax, %eax
	movq	current_class_type(%rip), %rdi
	call	check_base_init
	.p2align 4,,7
.L24328:
	movl	flag_cadillac(%rip), %esi
	movl	$1, current_function_assigns_this(%rip)
	testl	%esi, %esi
	je	.L24325
	xorl	%eax, %eax
	addq	$8, %rsp
	jmp	cadillac_finish_stmt
.LFE81:
.Lfe81:
	.size	finish_stmt,.Lfe81-finish_stmt
	.align 2
	.p2align 4,,15
.globl push_exception_cleanup
	.type	push_exception_cleanup,@function
push_exception_cleanup:
.LFB82:
	pushq	%r14
.LCFI272:
	xorl	%eax, %eax
	pushq	%r13
.LCFI273:
	xorl	%r13d, %r13d
	pushq	%r12
.LCFI274:
	movq	%rdi, %r12
	movl	$.LC311, %edi
	pushq	%rbp
.LCFI275:
	pushq	%rbx
.LCFI276:
	call	get_identifier
	movq	ptr_type_node(%rip), %rdx
	movl	$33, %edi
	movq	%rax, %rsi
	xorl	%eax, %eax
	call	build_decl
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	pushdecl
	movq	%r12, %rsi
	orb	$4, 53(%rax)
	movq	%rax, %rbp
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	store_init_value
	xorl	%eax, %eax
	movq	%rbp, %rdi
	call	expand_decl
	xorl	%eax, %eax
	movq	%rbp, %rdi
	call	expand_decl_init
	movq	global_binding_level(%rip), %rdx
	movq	in_charge_identifier(%rip), %rbx
	cmpq	%rdx, current_binding_level(%rip)
	je	.L24334
	movq	48(%rbx), %rdx
	testq	%rdx, %rdx
	jne	.L24335
.L24334:
	movq	current_class_type(%rip), %rdi
	testq	%rdi, %rdi
	je	.L24336
	movq	56(%rbx), %rdx
	testq	%rdx, %rdx
	jne	.L24352
	movq	32(%rdi), %r14
	testq	%r14, %r14
	jne	.L24337
	movq	144(%rdi), %rcx
	testb	$1, 3(%rcx)
	jne	.L24355
.L24337:
	testq	%rdx, %rdx
	jne	.L24352
.L24353:
	xorl	%eax, %eax
	movq	%rbx, %rdi
	call	lookup_nested_field
	testq	%rax, %rax
	movq	%rax, %rdx
	jne	.L24352
	.p2align 4,,7
.L24336:
	movq	40(%rbx), %rdx
.L24335:
	testq	%rdx, %rdx
	je	.L24339
.L24352:
	cmpb	$32, 16(%rdx)
	je	.L24339
	movl	looking_for_typename(%rip), %ecx
	testl	%ecx, %ecx
	js	.L24339
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.L24347
	movq	80(%rax), %rax
	cmpq	%rax, %rdx
	je	.L24354
	testl	%r13d, %r13d
	jle	.L24356
.L24354:
	movq	%rax, %rdx
.L24339:
	movq	8(%r12), %rdi
	movq	%rbp, %rsi
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movl	$515, %ecx
	xorl	%eax, %eax
	call	build_delete
	movq	integer_zero_node(%rip), %rcx
	movq	%rbp, %rdx
	movq	integer_type_node(%rip), %rsi
	movq	%rax, %r12
	movl	$96, %edi
	xorl	%eax, %eax
	call	build
	movq	integer_zero_node(%rip), %r8
	movq	%r12, %rcx
	movq	integer_type_node(%rip), %rsi
	movl	$48, %edi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	build
	movq	%rbp, %rdi
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	movq	%rax, %rsi
	xorl	%eax, %eax
	jmp	expand_decl_cleanup
.L24356:
	testl	%ecx, %ecx
	jg	.L24354
	testl	%r13d, %r13d
	je	.L24339
	movq	%rdx, %rsi
	movq	%rbx, %rdi
	movq	%rax, %rdx
	xorl	%eax, %eax
	call	arbitrate_lookup
	jmp	.L24354
	.p2align 6,,7
.L24347:
	movq	8(%rdx), %rbx
	cmpq	error_mark_node(%rip), %rbx
	cmove	%rbx, %rdx
	jmp	.L24339
.L24355:
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	cmpl	$-1, %r13d
	sete	%cl
	xorl	%eax, %eax
	xorl	%edx, %edx
	call	lookup_field
	cmpq	error_mark_node(%rip), %rax
	movq	%rax, %rdx
	je	.L24339
	testq	%rax, %rax
	je	.L24353
	cmpb	$32, 16(%rax)
	cmovne	%r14, %rdx
	jmp	.L24337
.LFE82:
.Lfe82:
	.size	push_exception_cleanup,.Lfe82-push_exception_cleanup
	.comm	integer_zero_node,8,8
	.comm	integer_one_node,8,8
	.comm	null_pointer_node,8,8
	.comm	error_mark_node,8,8
	.comm	void_type_node,8,8
	.comm	integer_type_node,8,8
	.comm	unsigned_type_node,8,8
	.comm	char_type_node,8,8
	.comm	current_function_decl,8,8
	.comm	double_type_node,8,8
	.comm	long_double_type_node,8,8
	.comm	float_type_node,8,8
	.comm	unsigned_char_type_node,8,8
	.comm	signed_char_type_node,8,8
	.comm	ptrdiff_type_node,8,8
	.comm	short_integer_type_node,8,8
	.comm	short_unsigned_type_node,8,8
	.comm	long_integer_type_node,8,8
	.comm	long_unsigned_type_node,8,8
	.comm	long_long_integer_type_node,8,8
	.comm	long_long_unsigned_type_node,8,8
	.comm	string_type_node,8,8
	.comm	char_array_type_node,8,8
	.comm	int_array_type_node,8,8
	.comm	wchar_array_type_node,8,8
	.comm	wchar_type_node,8,8
	.comm	signed_wchar_type_node,8,8
	.comm	unsigned_wchar_type_node,8,8
	.comm	intQI_type_node,8,8
	.comm	unsigned_intQI_type_node,8,8
	.comm	intHI_type_node,8,8
	.comm	unsigned_intHI_type_node,8,8
	.comm	intSI_type_node,8,8
	.comm	unsigned_intSI_type_node,8,8
	.comm	intDI_type_node,8,8
	.comm	unsigned_intDI_type_node,8,8
	.comm	current_function_returns_value,4,4
	.comm	current_function_returns_null,4,4
	.comm	current_function_return_value,8,8
	.comm	void_list_node,8,8
	.comm	void_zero_node,8,8
	.comm	default_function_type,8,8
	.comm	vtable_entry_type,8,8
	.comm	__t_desc_type_node,8,8
	.comm	__i_desc_type_node,8,8
	.comm	__m_desc_type_node,8,8
	.comm	class_star_type_node,8,8
	.comm	error_mark_list,8,8
	.comm	ptr_type_node,8,8
	.comm	class_type_node,8,8
	.comm	record_type_node,8,8
	.comm	union_type_node,8,8
	.comm	enum_type_node,8,8
	.comm	exception_type_node,8,8
	.comm	unknown_type_node,8,8
	.comm	vtbl_mask,8,8
	.comm	vtbl_type_node,8,8
	.comm	integer_two_node,8,8
	.comm	integer_three_node,8,8
	.comm	current_function_assigns_this,4,4
	.comm	current_function_just_assigned_this,4,4
	.comm	current_function_parms_stored,4,4
	.comm	current_function_obstack_index,4,4
	.comm	current_function_obstack_usage,4,4
	.local	decl_obstack
	.comm	decl_obstack,88,32
	.local	decl_stack
	.comm	decl_stack,8,8
	.comm	this_identifier,8,8
	.comm	in_charge_identifier,8,8
	.comm	last_function_parms,8,8
	.comm	static_aggregates,8,8
	.comm	pending_addressable_inlines,8,8
	.comm	const_ptr_type_node,8,8
	.comm	const_string_type_node,8,8
	.comm	double_ftype_double,8,8
	.comm	double_ftype_double_double,8,8
	.comm	int_ftype_int,8,8
	.comm	long_ftype_long,8,8
	.comm	void_ftype_ptr_ptr_int,8,8
	.comm	int_ftype_ptr_ptr_int,8,8
	.comm	void_ftype_ptr_int_int,8,8
	.comm	string_ftype_ptr_ptr,8,8
	.comm	int_ftype_string_string,8,8
	.comm	sizet_ftype_string,8,8
	.comm	int_ftype_cptr_cptr_sizet,8,8
	.comm	__t_desc_array_type,8,8
	.comm	__i_desc_array_type,8,8
	.comm	__m_desc_array_type,8,8
	.comm	maybe_gc_cleanup,8,8
	.comm	empty_init_node,8,8
	.comm	dtor_label,8,8
	.comm	ctor_label,8,8
	.comm	unhandled_exception_fndecl,8,8
	.comm	abort_fndecl,8,8
	.comm	original_result_rtx,8,8
	.comm	base_init_insns,8,8
	.local	named_label_uses
	.comm	named_label_uses,8,8
	.local	overloads_to_forget
	.comm	overloads_to_forget,8,8
	.comm	pending_invalid_xref,8,8
	.comm	pending_invalid_xref_file,8,8
	.comm	pending_invalid_xref_line,4,4
	.local	enum_next_value
	.comm	enum_next_value,8,8
	.local	last_function_parm_tags
	.comm	last_function_parm_tags,8,8
	.local	current_function_parms
	.comm	current_function_parms,8,8
	.local	current_function_parm_tags
	.comm	current_function_parm_tags,8,8
	.local	named_labels
	.comm	named_labels,8,8
	.local	shadowed_labels
	.comm	shadowed_labels,8,8
	.local	warn_about_return_type
	.comm	warn_about_return_type,4,4
	.local	current_extern_inline
	.comm	current_extern_inline,4,4
	.local	current_binding_level
	.comm	current_binding_level,8,8
	.local	class_binding_level
	.comm	class_binding_level,8,8
	.local	free_binding_level
	.comm	free_binding_level,8,8
	.local	global_binding_level
	.comm	global_binding_level,8,8
	.local	clear_binding_level
	.comm	clear_binding_level,72,32
	.local	keep_next_level_flag
	.comm	keep_next_level_flag,4,4
	.local	current_saved_scope
	.comm	current_saved_scope,8,8
	.section	.rodata.str1.32
	.align 32
.LC5:
	.string	"`%s' redeclared as different kind of symbol"
	.section	.rodata.str1.1
.LC9:
	.string	"conflicting types for `%s'"
	.section	.rodata.str1.32
	.align 32
.LC20:
	.string	"redundant redeclaration of `%s' in same scope"
	.align 32
.LC21:
	.string	"declaration of `%s' raises different exceptions..."
	.align 32
.LC22:
	.string	"...from previous declaration here"
	.align 32
.LC14:
	.string	"constructor cannot take as argument the type being constructed"
	.align 32
.LC12:
	.string	"An argument type that has a default promotion"
	.align 32
.LC13:
	.string	"can't match an empty parameter name list declaration."
	.align 32
.LC10:
	.string	"A parameter list with an ellipsis can't match"
	.align 32
.LC11:
	.string	"an empty parameter name list declaration."
	.section	.rodata.str1.1
.LC16:
	.string	"`%s' previously declared here"
	.section	.rodata.str1.32
	.align 32
.LC19:
	.string	"type qualifiers for `%s' conflict with previous decl"
	.section	.rodata.str1.1
.LC15:
	.string	"`%s' previously defined here"
.LC17:
	.string	"prototype for `%s'"
	.section	.rodata.str1.32
	.align 32
.LC18:
	.string	"follows non-prototype definition here"
	.section	.rodata.str1.1
.LC7:
	.string	"declaration of `%s'"
	.section	.rodata.str1.32
	.align 32
.LC8:
	.string	"conflicts with built-in declaration `%s'"
	.align 32
.LC3:
	.string	"declaration of `%s' with different language linkage"
	.section	.rodata.str1.1
.LC4:
	.string	"previous declaration here"
	.text
	.align 2
	.p2align 4,,15
	.type	duplicate_decls,@function
duplicate_decls:
.LFB83:
	pushq	%r15
.LCFI277:
	pushq	%r14
.LCFI278:
	pushq	%r13
.LCFI279:
	pushq	%r12
.LCFI280:
	movq	%rdi, %r12
	pushq	%rbp
.LCFI281:
	movq	%rsi, %rbp
	pushq	%rbx
.LCFI282:
	subq	$120, %rsp
.LCFI283:
	movl	48(%rsi), %eax
	movl	$0, 4(%rsp)
	movl	%eax, 20(%rsp)
	movzbl	16(%rsi), %ecx
	cmpb	$3, %cl
	je	.L24381
.L24371:
	movl	$0, 4(%rsp)
	movq	152(%rbp), %rax
	testq	%rax, %rax
	je	.L30
	testb	$16, 1(%rax)
	movl	$1, %eax
	cmove	4(%rsp), %eax
	movl	%eax, 4(%rsp)
.L30:
	movq	%r12, 56(%rsp)
	movq	%rbp, 32(%rsp)
	movq	%r12, %rdx
	cmpb	$29, 16(%r12)
	je	.L24382
	movq	%rbp, %rax
.L32:
	movq	8(%rdx), %rdi
	cmpq	error_mark_node(%rip), %rdi
	je	.L24383
	movq	8(%rax), %rsi
	testq	%rsi, %rsi
	jne	.L45
	testq	%rdi, %rdi
.L24377:
	sete	%r11b
	movzbl	%r11b, %eax
.L39:
	movl	%eax, %r15d
.L29:
	movq	8(%r12), %rax
	testq	%rax, %rax
	je	.L49
	cmpb	$0, 16(%rax)
	je	.L48
.L49:
	movq	8(%rbp), %rax
	testq	%rax, %rax
	je	.L47
	cmpb	$0, 16(%rax)
	jne	.L47
.L48:
	xorl	%r15d, %r15d
.L47:
	movzbl	16(%rbp), %edx
	cmpb	16(%r12), %dl
	je	.L50
	xorl	%eax, %eax
	movq	%r12, %rdi
	movl	$.LC5, %esi
	call	error_with_decl
	cmpb	$3, 16(%rbp)
	je	.L24384
.L51:
	movq	%rbp, %rdi
	movl	$.LC6, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
.L1:
	addq	$120, %rsp
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	ret
	.p2align 6,,7
.L24384:
	movq	32(%rbp), %rbp
	jmp	.L51
	.p2align 6,,7
.L50:
	cmpb	$29, %dl
	je	.L24385
.L52:
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	je	.L58
	cmpb	$29, 16(%r12)
	je	.L24386
.L58:
	cmpb	$29, %dl
	je	.L24387
.L62:
	testl	%r15d, %r15d
	jne	.L65
	movq	current_class_type(%rip), %rcx
	xorl	%r13d, %r13d
	movq	8(%rbp), %rbx
	movq	8(%r12), %r14
	testq	%rcx, %rcx
	je	.L67
	movq	112(%r12), %rdi
	movq	72(%rdi), %rax
	testq	%rax, %rax
	je	.L67
	cmpq	%rcx, 32(%rax)
	je	.L66
.L67:
	movq	%r12, %rdi
	movl	$.LC9, %esi
	xorl	%eax, %eax
	call	error_with_decl
	movl	$1, %r13d
	movzbl	16(%rbp), %edx
.L66:
	cmpb	$29, %dl
	je	.L24389
.L70:
	testl	%r13d, %r13d
	jne	.L24390
.L82:
	cmpb	$29, 16(%r12)
	je	.L24391
.L24367:
	movzbl	16(%rbp), %edx
.L61:
	cmpb	$32, %dl
	je	.L24392
.L97:
	movl	$0, (%rsp)
	cmpb	$29, 16(%r12)
	je	.L24393
.L99:
	movl	warn_redundant_decls(%rip), %eax
	testl	%eax, %eax
	je	.L100
	movl	32(%rbp), %eax
	testl	%eax, %eax
	je	.L100
	movl	(%rsp), %r8d
	testl	%r8d, %r8d
	je	.L101
	cmpq	$0, 88(%rbp)
	je	.L100
.L101:
	movq	%r12, %rdi
	movl	$.LC20, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC6, %esi
	movq	%rbp, %rdi
	call	warning_with_decl
	.p2align 4,,7
.L100:
	testl	%r15d, %r15d
	je	.L102
	movq	8(%rbp), %r14
	movq	8(%r12), %rdi
	xorl	%eax, %eax
	movq	%r14, %rsi
	call	common_type
	movq	%rax, %r13
	movzbl	16(%r12), %eax
	cmpb	$33, %al
	je	.L24394
	cmpb	$29, %al
	je	.L24395
.L104:
	cmpq	%r13, %r14
	movq	%r13, 8(%rbp)
	movq	%r13, 8(%r12)
	je	.L107
	cmpq	error_mark_node(%rip), %r13
	je	.L108
	movq	%r13, %rdi
	xorl	%eax, %eax
	call	layout_type
.L108:
	movzbl	16(%r12), %eax
	cmpb	$29, %al
	je	.L110
	cmpb	$32, %al
	je	.L110
	cmpb	$31, %al
	je	.L110
	movq	%r12, %rdi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	layout_decl
.L110:
	movzbl	17(%r12), %eax
	testb	$32, %al
	je	.L111
	orb	$32, 17(%rbp)
	movzbl	17(%r12), %eax
.L111:
	testb	$16, %al
	je	.L112
	orb	$16, 17(%rbp)
.L112:
	cmpq	$0, 88(%r12)
	jne	.L113
	movq	88(%rbp), %rdx
	movq	%rdx, 88(%r12)
.L113:
	movq	152(%rbp), %rax
	testq	%rax, %rax
	je	.L116
	testb	$1, 2(%rax)
	je	.L24368
.L116:
	movq	abort_fndecl(%rip), %r13
	movq	120(%rbp), %rdx
	cmpq	120(%r13), %rdx
	je	.L117
.L115:
	movq	%rdx, 120(%r12)
.L117:
	movzbl	53(%r12), %edx
	testb	$1, %dl
	je	.L119
	movzbl	18(%rbp), %r11d
	movzbl	18(%r12), %ecx
	andb	$-2, %dl
	andb	$4, %r11b
	andb	$-5, %cl
	orb	%r11b, %cl
	movb	%cl, 18(%r12)
	movzbl	53(%rbp), %r10d
	andb	$1, %r10b
	orb	%r10b, %dl
	cmpb	$29, 16(%r12)
	movb	%dl, 53(%r12)
	je	.L24396
	movzbl	18(%rbp), %edx
	andb	$-9, %cl
	andb	$8, %dl
	orb	%dl, %cl
	movb	%cl, 18(%r12)
.L123:
	testb	$8, 53(%r12)
	je	.L125
	cmpq	$0, 88(%rbp)
	jne	.L125
	orb	$8, 53(%rbp)
.L125:
	movzbl	53(%rbp), %r9d
	movzbl	53(%r12), %edx
	movzbl	16(%r12), %ecx
	andb	$8, %r9b
	andb	$-9, %dl
	orb	%r9b, %dl
	cmpb	$29, %cl
	movb	%dl, 53(%r12)
	je	.L24397
.L126:
	movzbl	17(%rbp), %edi
	movzbl	17(%r12), %ebx
	andb	$8, %dil
	andb	$-9, %bl
	orb	%dil, %bl
	movb	%bl, 17(%r12)
	andb	$127, %bl
	movzbl	17(%rbp), %r9d
	shrb	$7, %r9b
	movzbl	%r9b, %r8d
	salb	$7, %r8b
	orb	%r8b, %bl
	movb	%bl, 17(%r12)
	movq	152(%rbp), %rbx
	testq	%rbx, %rbx
	je	.L133
	movzbl	54(%rbp), %eax
	movzbl	54(%r12), %r10d
	andb	$16, %al
	andb	$-17, %r10b
	orb	%al, %r10b
	movb	%r10b, 54(%r12)
	movq	152(%rbp), %rbx
.L133:
	testq	%rbx, %rbx
	movl	48(%rbp), %r13d
	je	.L134
	movzbl	1(%rbx), %r11d
	movl	$1, %r14d
	shrb	$4, %r11b
	andl	%r11d, %r14d
.L135:
	cmpb	$29, %cl
	je	.L24398
	movzbl	%cl, %r11d 
	leaq	24(%r12), %rdi
	leaq	24(%rbp), %rsi
	salq	$2, %r11
	xorl	%eax, %eax
	addq	tree_code_length(%rip), %r11
	movslq	(%r11),%r10
	leaq	136(,%r10,8), %rdx
	call	bcopy
.L24369:
	movq	152(%rbp), %rbx
.L144:
	movl	20(%rsp), %eax
	movl	%eax, 48(%rbp)
	movl	4(%rsp), %eax
	testl	%eax, %eax
	je	.L145
	orb	$16, 1(%rbx)
	movq	152(%rbp), %rbx
.L145:
	testq	%rbx, %rbx
	movl	%r13d, 48(%rbp)
	je	.L146
	movzbl	1(%rbx), %ebp
	movl	%ebp, %r13d
	andb	$-17, %bpl
	shrb	$4, %r13b
	andl	$1, %r13d
	orb	%r14b, %r13b
	salb	$4, %r13b
	orb	%r13b, %bpl
	movb	%bpl, 1(%rbx)
.L146:
	movl	$1, %eax
	jmp	.L1
	.p2align 6,,7
.L24398:
	leaq	24(%rbp), %rsi
	xorl	%eax, %eax
	leaq	24(%r12), %rdi
	movl	$136, %edx
	movq	%rbx, 8(%rsp)
	movq	152(%r12), %r15
	call	bcopy
	movl	permanent_obstack+48(%rip), %r9d
	movslq	%r9d,%rsi
	notl	%r9d
	addq	$224, %rsi
	movslq	%r9d,%r8
	andq	%r8, %rsi
	leaq	(%rsi,%r12), %rcx
	cmpq	permanent_obstack+24(%rip), %rcx
	je	.L24399
	testb	$2, 2(%rbx)
	je	.L24369
	movq	152(%rbp), %rbx
	cmpq	%rbp, 32(%rbx)
	jne	.L144
	movq	free_lang_decl_chain(%rip), %rdi
	movq	8(%rsp), %rbx
	movq	%rdi, (%rbx)
	movq	%rbx, free_lang_decl_chain(%rip)
	jmp	.L24369
.L24399:
	movq	152(%r12), %rdx
	movq	%rbx, %rsi
	xorl	%eax, %eax
	movq	%r15, %rdi
	movq	%rbp, 32(%rdx)
	movl	$64, %edx
	movq	%rbx, 152(%rbp)
	call	bcopy
	movq	%r12, %rdx
	movq	permanent_obstack+8(%rip), %rsi
	subq	%rsi, %rdx
	testq	%rdx, %rdx
	movq	%rdx, permanent_obstack+40(%rip)
	jle	.L138
	movq	permanent_obstack+32(%rip), %r12
	subq	%rsi, %r12
	cmpq	%r12, %rdx
	jge	.L138
	leaq	(%rdx,%rsi), %r15
	movq	%r15, permanent_obstack+16(%rip)
	movq	%r15, permanent_obstack+24(%rip)
	jmp	.L24369
.L138:
	addq	permanent_obstack+40(%rip), %rsi
	movl	$permanent_obstack, %edi
	xorl	%eax, %eax
	call	_obstack_free
	jmp	.L24369
	.p2align 6,,7
.L134:
	xorl	%r14d, %r14d
	jmp	.L135
	.p2align 6,,7
.L24397:
	movl	(%rsp), %edi
	testl	%edi, %edi
	je	.L127
	movq	152(%rbp), %r15
	movq	152(%r12), %r10
	movzbl	(%r15), %r11d
	movb	%r11b, (%r10)
	movzbl	16(%r12), %ecx
	jmp	.L126
.L127:
	testb	$16, 53(%rbp)
	je	.L129
	orb	$16, %dl
	movb	%dl, 53(%r12)
	movq	120(%rbp), %rsi
	movl	128(%rbp), %eax
	movq	%rsi, 120(%r12)
	movl	%eax, 128(%r12)
.L130:
	movq	136(%rbp), %r13
	movq	80(%rbp), %rdx
	testq	%r13, %r13
	movq	%r13, 136(%r12)
	movq	%rdx, 80(%r12)
	je	.L131
	movq	88(%rbp), %r14
	movq	%r14, 88(%r12)
.L131:
	movq	72(%rbp), %rax
	testq	%rax, %rax
	je	.L126
	movq	%rax, 72(%r12)
	jmp	.L126
.L129:
	movl	128(%rbp), %eax
	movl	%eax, 128(%r12)
	jmp	.L130
.L24396:
	movzbl	18(%rbp), %esi
	movl	%ecx, %r13d
	movl	%ecx, %r15d
	shrb	$3, %r13b
	andb	$-9, %r15b
	shrb	$3, %sil
	andl	%r13d, %esi
	andb	$1, %sil
	salb	$3, %sil
	orb	%sil, %r15b
	movb	%r15b, 18(%r12)
	movzbl	18(%rbp), %eax
	andb	$8, %r15b
	andb	$-9, %al
	orb	%r15b, %al
	testb	$8, %al
	movb	%al, 18(%rbp)
	jne	.L123
	movq	112(%rbp), %rcx
	andb	$-9, 18(%rcx)
	jmp	.L123
	.p2align 6,,7
.L119:
	movzbl	18(%r12), %ebx
	movzbl	18(%rbp), %r14d
	andb	$4, %bl
	andb	$-5, %r14b
	orb	%bl, %r14b
	movb	%r14b, 18(%rbp)
	movl	16(%r12), %eax
	andl	$270591, %eax
	cmpl	$270369, %eax
	je	.L24400
.L124:
	movzbl	18(%r12), %eax
	movzbl	18(%rbp), %r8d
	andb	$8, %al
	andb	$-9, %r8b
	orb	%al, %r8b
	movb	%r8b, 18(%rbp)
	jmp	.L123
.L24400:
	testb	$8, 54(%r12)
	jne	.L124
	andb	$-9, 18(%r12)
	jmp	.L124
.L24368:
	movq	120(%rbp), %rdx
	jmp	.L115
.L107:
	movq	40(%rbp), %rcx
	movq	%rcx, 40(%r12)
	jmp	.L110
.L24395:
	movq	8(%r12), %r11
	movq	8(%rbp), %r10
	movq	128(%r11), %rcx
	cmpq	128(%r10), %rcx
	je	.L104
	movq	152(%r12), %rsi
	movq	%rcx, %rdx
	xorl	%eax, %eax
	movq	16(%rsi), %r15
	movq	%r13, %rsi
	movq	%r15, %rdi
	call	build_exception_variant
	movq	%r13, %rsi
	movq	%r15, %rdi
	movq	%rax, 8(%r12)
	xorl	%eax, %eax
	movq	128(%r14), %rdx
	call	build_exception_variant
	movq	%rax, 8(%rbp)
	movq	%rax, %rsi
	movq	8(%r12), %rdi
	xorl	%eax, %eax
	call	compexcepttypes
	testl	%eax, %eax
	jne	.L104
	movq	%r12, %rdi
	movl	$.LC21, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC22, %esi
	movq	%rbp, %rdi
	call	error_with_decl
	jmp	.L104
.L24394:
	movzbl	54(%r12), %r15d
	movzbl	54(%rbp), %r9d
	movl	%r15d, %edi
	shrb	$3, %r9b
	andb	$-9, %r15b
	shrb	$3, %dil
	orl	%edi, %r9d
	andb	$1, %r9b
	salb	$3, %r9b
	orb	%r9b, %r15b
	movb	%r15b, 54(%r12)
	jmp	.L104
	.p2align 6,,7
.L102:
	movq	static_aggregates(%rip), %rsi
	xorl	%eax, %eax
	movq	%rbp, %rdi
	call	value_member
	testq	%rax, %rax
	je	.L118
	movq	error_mark_node(%rip), %r14
	movq	%r14, 32(%rax)
.L118:
	movq	8(%r12), %rdi
	movzbl	17(%rbp), %ebx
	movq	%rdi, 8(%rbp)
	movzbl	17(%r12), %r9d
	andb	$-33, %bl
	andb	$32, %r9b
	orb	%r9b, %bl
	movb	%bl, 17(%rbp)
	andb	$-17, %bl
	movzbl	17(%r12), %r8d
	andb	$16, %r8b
	orb	%r8b, %bl
	movb	%bl, 17(%rbp)
	andb	$-2, %bl
	movzbl	17(%r12), %eax
	andb	$1, %al
	orb	%al, %bl
	movb	%bl, 17(%rbp)
	jmp	.L117
	.p2align 6,,7
.L24393:
	cmpq	$0, 88(%r12)
	movl	$1, %eax
	cmove	(%rsp), %eax
	movl	%eax, (%rsp)
	jmp	.L99
	.p2align 6,,7
.L24392:
	movq	8(%r12), %r11
	movq	144(%r11), %rdx
	testq	%rdx, %rdx
	je	.L97
	movq	8(%rbp), %rcx
	movq	144(%rcx), %rax
	testq	%rax, %rax
	je	.L97
	movl	16(%rax), %eax
	movl	%eax, 16(%rdx)
	movq	8(%rbp), %r14
	movq	8(%r12), %rbx
	movq	144(%r14), %r13
	movq	144(%rbx), %rsi
	movq	176(%r13), %rdx
	movq	%rdx, 176(%rsi)
	jmp	.L97
.L24391:
	movq	152(%r12), %r10
	testb	$2, 1(%r10)
	je	.L24367
	movq	24(%r14), %rdx
	movq	(%rdx), %r13
	testq	%r13, %r13
	je	.L24367
	movq	32(%r13), %rdi
	movq	96(%r14), %rax
	cmpq	%rax, 112(%rdi)
	jne	.L24367
	movq	72(%r12), %rsi
	xorl	%eax, %eax
	movq	(%rsi), %rbx
	call	build_reference_type
	movq	(%r13), %rsi
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	hash_tree_chain
	movq	32(%r13), %rcx
	movq	%rax, %rdx
	xorl	%eax, %eax
	movq	64(%rcx), %r11
	movq	%r11, 8(%rbx)
	movq	%r11, 88(%rbx)
	movq	8(%r14), %rsi
	movq	96(%r14), %rdi
	call	build_cplus_method_type
	movl	$.LC14, %edi
	movq	%rax, 8(%r12)
	xorl	%eax, %eax
	call	error
	movq	112(%r12), %rbx
	cmpq	$0, 72(%rbx)
	je	.L24401
.L86:
	movq	72(%rbx), %r13
	movq	current_class_type(%rip), %r14
	movq	%r14, 32(%r13)
	jmp	.L24367
.L24401:
	movl	$1, %edi
	movl	$40, %esi
	xorl	%eax, %eax
	call	perm_calloc
	movq	%rax, 72(%rbx)
	movq	112(%r12), %rbx
	jmp	.L86
	.p2align 6,,7
.L24390:
	movq	%rbp, %rdi
	movl	$.LC6, %esi
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L82
.L24389:
	movq	8(%rbx), %rdi
	movq	8(%r14), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L70
	movq	24(%rbx), %rax
	testq	%rax, %rax
	jne	.L72
	cmpq	$0, 88(%rbp)
	je	.L71
.L72:
	cmpq	$0, 24(%r14)
	jne	.L70
	cmpq	$0, 88(%r12)
	jne	.L70
.L71:
	testq	%rax, %rax
	jne	.L81
	movq	24(%r14), %rax
	testq	%rax, %rax
	je	.L70
.L81:
	movq	(%rax), %rcx
	movq	32(%rax), %rdx
	testq	%rcx, %rcx
	jne	.L78
	cmpq	void_type_node(%rip), %rdx
	jne	.L24370
.L78:
	movq	112(%rdx), %rax
	cmpq	float_type_node(%rip), %rax
	je	.L80
	cmpb	$7, 16(%rdx)
	je	.L24402
.L76:
	testq	%rcx, %rcx
	movq	%rcx, %rax
	jne	.L81
	jmp	.L70
.L24402:
	cmpq	char_type_node(%rip), %rax
	je	.L80
	cmpq	signed_char_type_node(%rip), %rax
	je	.L80
	cmpq	unsigned_char_type_node(%rip), %rax
	je	.L80
	cmpq	short_integer_type_node(%rip), %rax
	je	.L80
	cmpq	short_unsigned_type_node(%rip), %rax
	jne	.L76
.L80:
	movl	$.LC12, %edi
	xorl	%eax, %eax
	call	error
	movl	$.LC13, %edi
.L24379:
	xorl	%eax, %eax
	call	error
	jmp	.L70
.L24370:
	movl	$.LC10, %edi
	xorl	%eax, %eax
	call	error
	movl	$.LC11, %edi
	jmp	.L24379
	.p2align 6,,7
.L65:
	xorl	%eax, %eax
	movq	%r12, %rdi
	movq	%rbp, %rsi
	call	redeclaration_error_message
	testq	%rax, %rax
	je	.L88
	movq	%rax, %rsi
	movq	%r12, %rdi
	xorl	%eax, %eax
	call	error_with_decl
	cmpq	$0, 56(%rbp)
	je	.L94
	cmpq	$0, 88(%rbp)
	je	.L92
	movq	global_binding_level(%rip), %rbx
	cmpq	%rbx, current_binding_level(%rip)
	je	.L24403
.L92:
	movl	$.LC16, %esi
.L93:
	movq	%rbp, %rdi
	xorl	%eax, %eax
	call	error_with_decl
.L94:
	movl	pedantic(%rip), %eax
	testl	%eax, %eax
	je	.L24367
	movzbl	17(%r12), %r10d
	movzbl	17(%rbp), %edi
	andb	$48, %r10b
	andb	$48, %dil
	cmpb	%dil, %r10b
	je	.L24367
	movq	%r12, %rdi
	movl	$.LC19, %esi
.L24380:
	xorl	%eax, %eax
	call	error_with_decl
	jmp	.L24367
.L24403:
	movl	$.LC15, %esi
	jmp	.L93
.L88:
	cmpb	$29, 16(%rbp)
	jne	.L94
	cmpq	$0, 88(%rbp)
	je	.L94
	movq	8(%rbp), %r8
	cmpq	$0, 24(%r8)
	jne	.L94
	movq	8(%r12), %r9
	cmpq	$0, 24(%r9)
	je	.L94
	movq	%r12, %rdi
	movl	$.LC17, %esi
	xorl	%eax, %eax
	call	warning_with_decl
	xorl	%eax, %eax
	movl	$.LC18, %esi
	movq	%rbp, %rdi
	call	warning_with_decl
	jmp	.L94
	.p2align 6,,7
.L24387:
	testb	$16, 53(%rbp)
	je	.L62
	testl	%r15d, %r15d
	jne	.L61
	movq	%r12, %rdi
	movl	$.LC7, %esi
	xorl	%eax, %eax
	call	error_with_decl
	movl	$.LC8, %esi
	movq	%rbp, %rdi
	jmp	.L24380
.L24386:
	movq	112(%r12), %r9
	movq	72(%r9), %rax
	testq	%rax, %rax
	je	.L59
	cmpq	%rbp, 8(%rax)
.L24378:
	jne	.L58
	jmp	.L61
.L59:
	testq	%rbp, %rbp
	jmp	.L24378
	.p2align 6,,7
.L24385:
	movq	144(%rbp), %rax
	testq	%rax, %rax
	je	.L53
	movq	%rax, 144(%r12)
.L53:
	movq	64(%rbp), %rax
	testq	%rax, %rax
	je	.L54
	movq	%rax, 64(%r12)
.L54:
	movq	152(%rbp), %rcx
	movq	16(%rcx), %rdx
	testq	%rdx, %rdx
	je	.L55
	movq	152(%r12), %rsi
	movq	%rdx, 16(%rsi)
.L55:
	movq	152(%r12), %rdx
	cmpq	$0, 56(%rdx)
	jne	.L56
	movq	152(%rbp), %r14
	movq	56(%r14), %r13
	movq	%r13, 56(%rdx)
	movq	152(%r12), %rdx
.L56:
	cmpq	$0, 40(%rdx)
	jne	.L24361
	movq	152(%rbp), %r8
	movq	40(%r8), %rbx
	movq	%rbx, 40(%rdx)
.L24361:
	movzbl	16(%rbp), %edx
	jmp	.L52
	.p2align 6,,7
.L45:
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	jmp	.L39
	.p2align 6,,7
.L24383:
	cmpq	%rdi, 8(%rax)
	jmp	.L24377
	.p2align 6,,7
.L24382:
	cmpb	$29, 16(%rbp)
	movq	%rbp, %rax
	jne	.L32
	movq	8(%r12), %rsi
	movq	%rsi, 64(%rsp)
	movq	8(%rbp), %rcx
	movq	%rcx, 40(%rsp)
	movq	%rcx, %rdi
	movq	24(%rsi), %r8
	movq	%r8, 48(%rsp)
	movq	24(%rcx), %rbx
	movq	%rbx, 24(%rsp)
	cmpb	$16, 16(%rsi)
	je	.L24404
.L33:
	cmpb	$16, 16(%rdi)
	je	.L24405
.L34:
	movzbl	16(%rsi), %eax
	cmpb	16(%rcx), %al
	je	.L36
	cmpb	$14, %al
	je	.L24406
	movq	56(%rsp), %rdi
	movl	$.LC2, %esi
.L24376:
	xorl	%eax, %eax
	call	compiler_error_with_decl
.L40:
	xorl	%eax, %eax
	jmp	.L39
.L24406:
	movq	56(%rsp), %rdi
	movl	$.LC1, %esi
	jmp	.L24376
.L36:
	movq	8(%rsi), %rdx
	movq	8(%rcx), %r10
	xorl	%eax, %eax
	movq	112(%rdx), %rdi
	movq	112(%r10), %rsi
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L40
	movq	48(%rsp), %rdi
	movq	24(%rsp), %rsi
	movl	$1, %edx
	xorl	%eax, %eax
	call	compparms
	jmp	.L39
.L24405:
	movq	152(%rdx), %rdi
	testb	$32, 1(%rdi)
	je	.L34
	leaq	40(%rsp), %rdi
	leaq	32(%rsp), %rsi
	leaq	24(%rsp), %rdx
.L24375:
	xorl	%eax, %eax
	call	revert_static_member_fn
	movq	64(%rsp), %rsi
	movq	40(%rsp), %rcx
	jmp	.L34
.L24404:
	movq	152(%rbp), %r9
	testb	$32, 1(%r9)
	je	.L33
	leaq	64(%rsp), %rdi
	leaq	56(%rsp), %rsi
	leaq	48(%rsp), %rdx
	jmp	.L24375
	.p2align 6,,7
.L24381:
	cmpb	$29, 16(%rdi)
	je	.L24407
	cmpb	$3, %cl
	jne	.L24371
	jmp	.L30
.L24407:
	cmpq	$0, 32(%rsi)
	movq	%rsi, %rbx
	jne	.L3
	movq	%rdi, 32(%rbp)
	jmp	.L146
.L3:
	testq	%rsi, %rsi
	je	.L146
	movq	%rdi, %r13
	.p2align 4,,7
.L26:
	movq	%r12, 104(%rsp)
	movq	32(%rbx), %rdx
	movq	%rdx, 80(%rsp)
	cmpb	$29, 16(%r12)
	je	.L24408
.L8:
	movq	8(%r13), %rdi
	cmpq	error_mark_node(%rip), %rdi
	je	.L24409
	movq	8(%rdx), %rsi
	testq	%rsi, %rsi
	jne	.L21
	testq	%rdi, %rdi
.L24374:
	sete	%cl
	movzbl	%cl, %eax
.L15:
	testl	%eax, %eax
	jne	.L24410
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L26
	jmp	.L146
.L24410:
	cmpb	$33, 16(%r12)
	je	.L24
	movq	32(%rbx), %r15
	movq	152(%r12), %r13
	movq	152(%r15), %r14
	movzbl	(%r14), %esi
	cmpb	%sil, (%r13)
	je	.L24
	movq	%r12, %rdi
	movl	$.LC3, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC4, %esi
	movq	32(%rbx), %rdi
	call	error_with_decl
.L24:
	testq	%rbx, %rbx
	movl	$1, %r15d
	je	.L146
	movq	32(%rbp), %rbp
	jmp	.L29
.L21:
	movl	$1, %edx
	xorl	%eax, %eax
	call	comptypes
	jmp	.L15
.L24409:
	cmpq	%rdi, 8(%rdx)
	jmp	.L24374
.L24408:
	cmpb	$29, 16(%rdx)
	jne	.L8
	movq	8(%r12), %rsi
	movq	%rsi, 112(%rsp)
	movq	8(%rdx), %rcx
	movq	%rcx, 88(%rsp)
	movq	24(%rsi), %rdi
	movq	%rdi, 96(%rsp)
	movq	24(%rcx), %r8
	movq	%rcx, %rdi
	movq	%r8, 72(%rsp)
	cmpb	$16, 16(%rsi)
	je	.L24411
.L9:
	cmpb	$16, 16(%rdi)
	je	.L24412
.L10:
	movzbl	16(%rsi), %eax
	cmpb	16(%rcx), %al
	je	.L12
	cmpb	$14, %al
	je	.L24413
	movq	104(%rsp), %rdi
	movl	$.LC2, %esi
.L24373:
	xorl	%eax, %eax
	call	compiler_error_with_decl
.L16:
	xorl	%eax, %eax
	jmp	.L15
.L24413:
	movq	104(%rsp), %rdi
	movl	$.LC1, %esi
	jmp	.L24373
.L12:
	movq	8(%rsi), %r11
	movq	8(%rcx), %r10
	xorl	%eax, %eax
	movl	$1, %edx
	movq	112(%r11), %rdi
	movq	112(%r10), %rsi
	call	comptypes
	testl	%eax, %eax
	je	.L16
	movq	96(%rsp), %rdi
	movq	72(%rsp), %rsi
	movl	$1, %edx
	xorl	%eax, %eax
	call	compparms
	jmp	.L15
.L24412:
	movq	152(%r13), %rdx
	testb	$32, 1(%rdx)
	je	.L10
	leaq	88(%rsp), %rdi
	leaq	80(%rsp), %rsi
	leaq	72(%rsp), %rdx
.L24372:
	xorl	%eax, %eax
	call	revert_static_member_fn
	movq	112(%rsp), %rsi
	movq	88(%rsp), %rcx
	jmp	.L10
.L24411:
	movq	152(%rdx), %r9
	testb	$32, 1(%r9)
	je	.L9
	leaq	112(%rsp), %rdi
	leaq	104(%rsp), %rsi
	leaq	96(%rsp), %rdx
	jmp	.L24372
.LFE83:
.Lfe83:
	.size	duplicate_decls,.Lfe83-duplicate_decls
	.align 2
	.p2align 4,,15
	.type	sigsegv,@function
sigsegv:
.LFB84:
	subq	$8, %rsp
.LCFI284:
	movl	$11, %edi
	xorl	%esi, %esi
	xorl	%eax, %eax
	call	signal
	addq	$8, %rsp
	xorl	%eax, %eax
	xorl	%edi, %edi
	jmp	my_friendly_abort
.LFE84:
.Lfe84:
	.size	sigsegv,.Lfe84-sigsegv
	.local	builtin_type_tdescs_arr
	.comm	builtin_type_tdescs_arr,8,8
	.local	builtin_type_tdescs_len
	.comm	builtin_type_tdescs_len,4,4
	.local	builtin_type_tdescs_max
	.comm	builtin_type_tdescs_max,4,4
	.align 2
	.p2align 4,,15
	.type	push_overloaded_decl_1,@function
push_overloaded_decl_1:
.LFB85:
	pushq	%r15
.LCFI285:
	pushq	%r14
.LCFI286:
	xorl	%r14d, %r14d
	pushq	%r13
.LCFI287:
	pushq	%r12
.LCFI288:
	pushq	%rbp
.LCFI289:
	movq	%rdi, %rbp
	pushq	%rbx
.LCFI290:
	subq	$8, %rsp
.LCFI291:
	movq	56(%rdi), %r13
	movq	40(%r13), %r12
	orb	$32, 54(%rdi)
	testq	%r12, %r12
	je	.L22244
	movzbl	16(%r12), %edx
	cmpb	$3, %dl
	je	.L22245
	movq	152(%rdi), %rcx
	cmpb	$0, (%rcx)
	jne	.L22246
	cmpb	$29, %dl
	je	.L24418
	movl	$9, %edi
	xorl	%eax, %eax
	call	my_friendly_abort
.L22246:
	testl	%r14d, %r14d
	je	.L22250
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	jne	.L22250
	testb	$4, 17(%r12)
	jne	.L24419
.L22250:
	movzbl	16(%r12), %eax
	cmpb	$106, %al
	je	.L24420
.L22252:
	cmpb	$29, %al
	je	.L24421
.L22253:
	movl	pedantic(%rip), %eax
	testl	%eax, %eax
	je	.L22257
	cmpb	$33, 16(%r12)
	je	.L24422
.L22257:
	movq	%r13, %rdi
	movq	%r12, %rsi
	xorl	%edx, %edx
	xorl	%eax, %eax
	call	tree_cons
	movq	%rbp, %rsi
	movq	24(%rax), %rdi
	movq	%rax, %rdx
.L24417:
	xorl	%eax, %eax
	call	tree_cons
	movq	unknown_type_node(%rip), %r12
	movq	%rax, 40(%r13)
	movq	%r12, 8(%rax)
.L22243:
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	ret
.L24422:
	movq	tree_code_type(%rip), %r14
	movl	$143, %esi
	movq	264(%r14), %r11
	cmpb	$100, (%r11)
	sete	%r10b
	xorl	%eax, %eax
	movzbl	%r10b, %edi
	call	my_friendly_assert
	xorl	%eax, %eax
	movl	$.LC151, %esi
	movq	%r12, %rdi
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC152, %esi
	movq	%rbp, %rdi
	call	error_with_decl
	jmp	.L22257
	.p2align 6,,7
.L24421:
	movq	152(%rbp), %rax
	movq	152(%r12), %rsi
	movzbl	(%rax), %ebx
	cmpb	%bl, (%rsi)
	je	.L22253
	movq	8(%r12), %rdi
	movq	8(%rbp), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	je	.L22253
	movq	current_lang_base(%rip), %rdi
	cmpq	%rdi, current_lang_stack(%rip)
	je	.L24423
	movq	%rbp, %rdi
	movl	$.LC149, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC150, %esi
	movq	%r12, %rdi
	call	error_with_decl
	jmp	.L22253
.L24423:
	movq	152(%r12), %r9
	movq	152(%rbp), %r8
	movzbl	(%r9), %ebp
	movb	%bpl, (%r8)
	jmp	.L22243
	.p2align 6,,7
.L24420:
	movq	32(%r12), %r12
	movzbl	16(%r12), %eax
	jmp	.L22252
.L24419:
	movq	global_binding_level(%rip), %rcx
	cmpq	%rcx, current_binding_level(%rip)
	je	.L22250
	movq	overloads_to_forget(%rip), %rdx
	movq	%r13, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, overloads_to_forget(%rip)
	jmp	.L22250
	.p2align 6,,7
.L24418:
	movq	152(%r12), %rdx
	cmpb	$0, (%rdx)
	jne	.L22246
	movl	$.LC147, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC148, %esi
	movq	%r12, %rdi
	call	error_with_decl
	jmp	.L22246
	.p2align 6,,7
.L22245:
	cmpq	$0, 32(%r12)
	jne	.L22258
	movq	%rdi, 32(%r12)
	jmp	.L22243
.L22258:
	cmpb	$-127, 16(%rdi)
	je	.L22244
	movq	112(%rdi), %r15
	movq	%r12, %rbx
	.p2align 4,,7
.L22266:
	movq	32(%rbx), %rcx
	cmpb	$29, 16(%rcx)
	je	.L24424
.L22264:
	cmpb	$-127, 16(%rcx)
	je	.L22262
	cmpq	%r15, 112(%rcx)
	je	.L22243
.L22262:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	jne	.L22266
	.p2align 4,,7
.L22244:
	movq	152(%rbp), %r15
	cmpb	$0, (%r15)
	jne	.L22267
	testq	%r12, %r12
	movq	%r12, %rbx
	je	.L22267
	movq	32(%r12), %rcx
	movq	152(%rcx), %rdx
	cmpb	$1, (%rdx)
	je	.L22272
.L22269:
	testq	%rbx, %rbx
	jne	.L24425
.L22267:
	testl	%r14d, %r14d
	je	.L22274
	movl	flag_traditional(%rip), %eax
	testl	%eax, %eax
	jne	.L22274
	testq	%r12, %r12
	je	.L22275
	testb	$4, 17(%r12)
	jne	.L22275
	.p2align 4,,7
.L22274:
	movq	%r13, %rdi
	movq	%rbp, %rsi
	movq	%r12, %rdx
	jmp	.L24417
.L22275:
	movq	current_binding_level(%rip), %rax
	cmpq	global_binding_level(%rip), %rax
	je	.L22274
	testb	$32, 67(%rax)
	jne	.L22274
	movq	overloads_to_forget(%rip), %rdx
	movq	%r13, %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	call	tree_cons
	movq	%rax, overloads_to_forget(%rip)
	jmp	.L22274
.L24425:
	movq	%rbp, %rdi
	movl	$.LC147, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC148, %esi
	movq	32(%rbx), %rdi
	call	error_with_decl
	jmp	.L22267
	.p2align 6,,7
.L22272:
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	je	.L22267
	movq	32(%rbx), %r9
	movq	152(%r9), %r8
	cmpb	$1, (%r8)
	je	.L22272
	jmp	.L22269
	.p2align 6,,7
.L24424:
	movq	152(%rbp), %rax
	movq	152(%rcx), %rdi
	movzbl	(%rax), %esi
	cmpb	%sil, (%rdi)
	je	.L22264
	movq	8(%rcx), %rdi
	movq	8(%rbp), %rsi
	xorl	%eax, %eax
	movl	$1, %edx
	call	comptypes
	testl	%eax, %eax
	jne	.L24426
.L24416:
	movq	32(%rbx), %rcx
	jmp	.L22264
.L24426:
	movq	%rbp, %rdi
	movl	$.LC149, %esi
	xorl	%eax, %eax
	call	error_with_decl
	xorl	%eax, %eax
	movl	$.LC150, %esi
	movq	32(%rbx), %rdi
	call	error_with_decl
	jmp	.L24416
.LFE85:
.Lfe85:
	.size	push_overloaded_decl_1,.Lfe85-push_overloaded_decl_1
	.comm	building_cleanup,4,4
	.section	.eh_frame,"aw",@progbits
.Lframe1:
	.long	.LECIE1-.LSCIE1
.LSCIE1:
	.long	0x0
	.byte	0x1
	.string	""
	.uleb128 0x1
	.sleb128 -8
	.byte	0x10
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x1
	.align 8
.LECIE1:
.LSFDE1:
	.long	.LEFDE1-.LASFDE1
.LASFDE1:
	.long	.LASFDE1-.Lframe1
	.quad	.LFB1
	.quad	.LFE1-.LFB1
	.align 8
.LEFDE1:
.LSFDE3:
	.long	.LEFDE3-.LASFDE3
.LASFDE3:
	.long	.LASFDE3-.Lframe1
	.quad	.LFB2
	.quad	.LFE2-.LFB2
	.byte	0x4
	.long	.LCFI0-.LFB2
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1-.LCFI0
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI7-.LCFI1
	.byte	0x83
	.uleb128 0x7
	.byte	0x8c
	.uleb128 0x6
	.byte	0x8d
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x4
	.byte	0x8f
	.uleb128 0x3
	.align 8
.LEFDE3:
.LSFDE5:
	.long	.LEFDE5-.LASFDE5
.LASFDE5:
	.long	.LASFDE5-.Lframe1
	.quad	.LFB3
	.quad	.LFE3-.LFB3
	.byte	0x4
	.long	.LCFI8-.LFB3
	.byte	0xe
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI11-.LCFI8
	.byte	0x8c
	.uleb128 0x3
	.byte	0x86
	.uleb128 0x4
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI12-.LCFI11
	.byte	0x8d
	.uleb128 0x2
	.align 8
.LEFDE5:
.LSFDE7:
	.long	.LEFDE7-.LASFDE7
.LASFDE7:
	.long	.LASFDE7-.Lframe1
	.quad	.LFB4
	.quad	.LFE4-.LFB4
	.byte	0x4
	.long	.LCFI13-.LFB4
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI14-.LCFI13
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI16-.LCFI14
	.byte	0x8e
	.uleb128 0x4
	.byte	0x8f
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI17-.LCFI16
	.byte	0x8d
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI19-.LCFI17
	.byte	0x83
	.uleb128 0x7
	.byte	0x8c
	.uleb128 0x6
	.align 8
.LEFDE7:
.LSFDE9:
	.long	.LEFDE9-.LASFDE9
.LASFDE9:
	.long	.LASFDE9-.Lframe1
	.quad	.LFB5
	.quad	.LFE5-.LFB5
	.byte	0x4
	.long	.LCFI21-.LFB5
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI24-.LCFI21
	.byte	0x8c
	.uleb128 0x2
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 8
.LEFDE9:
.LSFDE11:
	.long	.LEFDE11-.LASFDE11
.LASFDE11:
	.long	.LASFDE11-.Lframe1
	.quad	.LFB6
	.quad	.LFE6-.LFB6
	.byte	0x4
	.long	.LCFI25-.LFB6
	.byte	0xe
	.uleb128 0x10
	.byte	0x8d
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI26-.LCFI25
	.byte	0xe
	.uleb128 0x18
	.byte	0x8c
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI27-.LCFI26
	.byte	0xe
	.uleb128 0x20
	.byte	0x86
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI28-.LCFI27
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI29-.LCFI28
	.byte	0xe
	.uleb128 0x30
	.align 8
.LEFDE11:
.LSFDE13:
	.long	.LEFDE13-.LASFDE13
.LASFDE13:
	.long	.LASFDE13-.Lframe1
	.quad	.LFB7
	.quad	.LFE7-.LFB7
	.byte	0x4
	.long	.LCFI30-.LFB7
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI31-.LCFI30
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI32-.LCFI31
	.byte	0x8f
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI37-.LCFI32
	.byte	0x83
	.uleb128 0x7
	.byte	0x8c
	.uleb128 0x6
	.byte	0x8d
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x4
	.align 8
.LEFDE13:
.LSFDE15:
	.long	.LEFDE15-.LASFDE15
.LASFDE15:
	.long	.LASFDE15-.Lframe1
	.quad	.LFB8
	.quad	.LFE8-.LFB8
	.align 8
.LEFDE15:
.LSFDE17:
	.long	.LEFDE17-.LASFDE17
.LASFDE17:
	.long	.LASFDE17-.Lframe1
	.quad	.LFB9
	.quad	.LFE9-.LFB9
	.align 8
.LEFDE17:
.LSFDE19:
	.long	.LEFDE19-.LASFDE19
.LASFDE19:
	.long	.LASFDE19-.Lframe1
	.quad	.LFB10
	.quad	.LFE10-.LFB10
	.byte	0x4
	.long	.LCFI38-.LFB10
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.long	.LCFI39-.LCFI38
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.long	.LCFI40-.LCFI39
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI41-.LCFI40
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.long	.LCFI42-.LCFI41
	.byte	0xe
	.uleb128 0x30
	.byte	0x86
	.uleb128 0x6
	.byte	0x8c
	.uleb128 0x5
	.byte	0x8d
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x3
	.byte	0x8f
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI43-.LCFI42
	.byte	0xe
	.uleb128 0x38
	.byte	0x4
	.long	.LCFI44-.LCFI43
	.byte	0xe
	.uleb128 0x60
	.byte	0x83
	.uleb128 0x7
	.align 8
.LEFDE19:
.LSFDE21:
	.long	.LEFDE21-.LASFDE21
.LASFDE21:
	.long	.LASFDE21-.Lframe1
	.quad	.LFB11
	.quad	.LFE11-.LFB11
	.byte	0x4
	.long	.LCFI45-.LFB11
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI48-.LCFI45
	.byte	0x86
	.uleb128 0x3
	.byte	0x8c
	.uleb128 0x2
	.byte	0x83
	.uleb128 0x4
	.align 8
.LEFDE21:
.LSFDE23:
	.long	.LEFDE23-.LASFDE23
.LASFDE23:
	.long	.LASFDE23-.Lframe1
	.quad	.LFB12
	.quad	.LFE12-.LFB12
	.byte	0x4
	.long	.LCFI49-.LFB12
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI51-.LCFI49
	.byte	0x86
	.uleb128 0x2
	.byte	0x83
	.uleb128 0x3
	.align 8
.LEFDE23:
.LSFDE25:
	.long	.LEFDE25-.LASFDE25
.LASFDE25:
	.long	.LASFDE25-.Lframe1
	.quad	.LFB13
	.quad	.LFE13-.LFB13
	.byte	0x4
	.long	.LCFI52-.LFB13
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI53-.LCFI52
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI59-.LCFI53
	.byte	0x83
	.uleb128 0x7
	.byte	0x8c
	.uleb128 0x6
	.byte	0x8d
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x4
	.byte	0x8f
	.uleb128 0x3
	.align 8
.LEFDE25:
.LSFDE27:
	.long	.LEFDE27-.LASFDE27
.LASFDE27:
	.long	.LASFDE27-.Lframe1
	.quad	.LFB14
	.quad	.LFE14-.LFB14
	.byte	0x4
	.long	.LCFI60-.LFB14
	.byte	0xe
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI65-.LCFI60
	.byte	0x8e
	.uleb128 0x2
	.byte	0x8d
	.uleb128 0x3
	.byte	0x8c
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x5
	.byte	0x83
	.uleb128 0x6
	.align 8
.LEFDE27:
.LSFDE29:
	.long	.LEFDE29-.LASFDE29
.LASFDE29:
	.long	.LASFDE29-.Lframe1
	.quad	.LFB15
	.quad	.LFE15-.LFB15
	.byte	0x4
	.long	.LCFI66-.LFB15
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.long	.LCFI67-.LCFI66
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.long	.LCFI68-.LCFI67
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI69-.LCFI68
	.byte	0xe
	.uleb128 0x28
	.byte	0x86
	.uleb128 0x5
	.byte	0x8c
	.uleb128 0x4
	.byte	0x8d
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI70-.LCFI69
	.byte	0xe
	.uleb128 0x30
	.byte	0x83
	.uleb128 0x6
	.align 8
.LEFDE29:
.LSFDE31:
	.long	.LEFDE31-.LASFDE31
.LASFDE31:
	.long	.LASFDE31-.Lframe1
	.quad	.LFB16
	.quad	.LFE16-.LFB16
	.byte	0x4
	.long	.LCFI71-.LFB16
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.long	.LCFI72-.LCFI71
	.byte	0xe
	.uleb128 0x18
	.byte	0x86
	.uleb128 0x3
	.byte	0x8c
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI73-.LCFI72
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.align 8
.LEFDE31:
.LSFDE33:
	.long	.LEFDE33-.LASFDE33
.LASFDE33:
	.long	.LASFDE33-.Lframe1
	.quad	.LFB17
	.quad	.LFE17-.LFB17
	.byte	0x4
	.long	.LCFI74-.LFB17
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI77-.LCFI74
	.byte	0x83
	.uleb128 0x4
	.byte	0x8d
	.uleb128 0x2
	.byte	0x8c
	.uleb128 0x3
	.align 8
.LEFDE33:
.LSFDE35:
	.long	.LEFDE35-.LASFDE35
.LASFDE35:
	.long	.LASFDE35-.Lframe1
	.quad	.LFB18
	.quad	.LFE18-.LFB18
	.byte	0x4
	.long	.LCFI78-.LFB18
	.byte	0xe
	.uleb128 0x30
	.align 8
.LEFDE35:
.LSFDE37:
	.long	.LEFDE37-.LASFDE37
.LASFDE37:
	.long	.LASFDE37-.Lframe1
	.quad	.LFB19
	.quad	.LFE19-.LFB19
	.align 8
.LEFDE37:
.LSFDE39:
	.long	.LEFDE39-.LASFDE39
.LASFDE39:
	.long	.LASFDE39-.Lframe1
	.quad	.LFB20
	.quad	.LFE20-.LFB20
	.align 8
.LEFDE39:
.LSFDE41:
	.long	.LEFDE41-.LASFDE41
.LASFDE41:
	.long	.LASFDE41-.Lframe1
	.quad	.LFB21
	.quad	.LFE21-.LFB21
	.align 8
.LEFDE41:
.LSFDE43:
	.long	.LEFDE43-.LASFDE43
.LASFDE43:
	.long	.LASFDE43-.Lframe1
	.quad	.LFB22
	.quad	.LFE22-.LFB22
	.align 8
.LEFDE43:
.LSFDE45:
	.long	.LEFDE45-.LASFDE45
.LASFDE45:
	.long	.LASFDE45-.Lframe1
	.quad	.LFB23
	.quad	.LFE23-.LFB23
	.align 8
.LEFDE45:
.LSFDE47:
	.long	.LEFDE47-.LASFDE47
.LASFDE47:
	.long	.LASFDE47-.Lframe1
	.quad	.LFB24
	.quad	.LFE24-.LFB24
	.align 8
.LEFDE47:
.LSFDE49:
	.long	.LEFDE49-.LASFDE49
.LASFDE49:
	.long	.LASFDE49-.Lframe1
	.quad	.LFB25
	.quad	.LFE25-.LFB25
	.align 8
.LEFDE49:
.LSFDE51:
	.long	.LEFDE51-.LASFDE51
.LASFDE51:
	.long	.LASFDE51-.Lframe1
	.quad	.LFB26
	.quad	.LFE26-.LFB26
	.align 8
.LEFDE51:
.LSFDE53:
	.long	.LEFDE53-.LASFDE53
.LASFDE53:
	.long	.LASFDE53-.Lframe1
	.quad	.LFB27
	.quad	.LFE27-.LFB27
	.align 8
.LEFDE53:
.LSFDE55:
	.long	.LEFDE55-.LASFDE55
.LASFDE55:
	.long	.LASFDE55-.Lframe1
	.quad	.LFB28
	.quad	.LFE28-.LFB28
	.align 8
.LEFDE55:
.LSFDE57:
	.long	.LEFDE57-.LASFDE57
.LASFDE57:
	.long	.LASFDE57-.Lframe1
	.quad	.LFB29
	.quad	.LFE29-.LFB29
	.byte	0x4
	.long	.LCFI79-.LFB29
	.byte	0xe
	.uleb128 0x10
	.byte	0x83
	.uleb128 0x2
	.align 8
.LEFDE57:
.LSFDE59:
	.long	.LEFDE59-.LASFDE59
.LASFDE59:
	.long	.LASFDE59-.Lframe1
	.quad	.LFB30
	.quad	.LFE30-.LFB30
	.byte	0x4
	.long	.LCFI80-.LFB30
	.byte	0xe
	.uleb128 0x10
	.byte	0x83
	.uleb128 0x2
	.align 8
.LEFDE59:
.LSFDE61:
	.long	.LEFDE61-.LASFDE61
.LASFDE61:
	.long	.LASFDE61-.Lframe1
	.quad	.LFB31
	.quad	.LFE31-.LFB31
	.byte	0x4
	.long	.LCFI81-.LFB31
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.long	.LCFI82-.LCFI81
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.long	.LCFI83-.LCFI82
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI84-.LCFI83
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.long	.LCFI85-.LCFI84
	.byte	0xe
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI86-.LCFI85
	.byte	0xe
	.uleb128 0x38
	.byte	0x4
	.long	.LCFI87-.LCFI86
	.byte	0xe
	.uleb128 0x80
	.byte	0x83
	.uleb128 0x7
	.byte	0x86
	.uleb128 0x6
	.byte	0x8c
	.uleb128 0x5
	.byte	0x8d
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x3
	.byte	0x8f
	.uleb128 0x2
	.align 8
.LEFDE61:
.LSFDE63:
	.long	.LEFDE63-.LASFDE63
.LASFDE63:
	.long	.LASFDE63-.Lframe1
	.quad	.LFB32
	.quad	.LFE32-.LFB32
	.align 8
.LEFDE63:
.LSFDE65:
	.long	.LEFDE65-.LASFDE65
.LASFDE65:
	.long	.LASFDE65-.Lframe1
	.quad	.LFB33
	.quad	.LFE33-.LFB33
	.byte	0x4
	.long	.LCFI88-.LFB33
	.byte	0xe
	.uleb128 0x10
	.byte	0x83
	.uleb128 0x2
	.align 8
.LEFDE65:
.LSFDE67:
	.long	.LEFDE67-.LASFDE67
.LASFDE67:
	.long	.LASFDE67-.Lframe1
	.quad	.LFB34
	.quad	.LFE34-.LFB34
	.byte	0x4
	.long	.LCFI89-.LFB34
	.byte	0xe
	.uleb128 0x10
	.byte	0x83
	.uleb128 0x2
	.align 8
.LEFDE67:
.LSFDE69:
	.long	.LEFDE69-.LASFDE69
.LASFDE69:
	.long	.LASFDE69-.Lframe1
	.quad	.LFB35
	.quad	.LFE35-.LFB35
	.align 8
.LEFDE69:
.LSFDE71:
	.long	.LEFDE71-.LASFDE71
.LASFDE71:
	.long	.LASFDE71-.Lframe1
	.quad	.LFB36
	.quad	.LFE36-.LFB36
	.byte	0x4
	.long	.LCFI90-.LFB36
	.byte	0xe
	.uleb128 0x30
	.align 8
.LEFDE71:
.LSFDE73:
	.long	.LEFDE73-.LASFDE73
.LASFDE73:
	.long	.LASFDE73-.Lframe1
	.quad	.LFB37
	.quad	.LFE37-.LFB37
	.byte	0x4
	.long	.LCFI91-.LFB37
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI92-.LCFI91
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.long	.LCFI93-.LCFI92
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x3
	.align 8
.LEFDE73:
.LSFDE75:
	.long	.LEFDE75-.LASFDE75
.LASFDE75:
	.long	.LASFDE75-.Lframe1
	.quad	.LFB38
	.quad	.LFE38-.LFB38
	.byte	0x4
	.long	.LCFI94-.LFB38
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.long	.LCFI95-.LCFI94
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.long	.LCFI96-.LCFI95
	.byte	0xe
	.uleb128 0x20
	.byte	0x8d
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x3
	.byte	0x8f
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI97-.LCFI96
	.byte	0xe
	.uleb128 0x28
	.byte	0x8c
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI98-.LCFI97
	.byte	0xe
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI99-.LCFI98
	.byte	0xe
	.uleb128 0x38
	.byte	0x83
	.uleb128 0x7
	.byte	0x86
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI100-.LCFI99
	.byte	0xe
	.uleb128 0x40
	.align 8
.LEFDE75:
.LSFDE77:
	.long	.LEFDE77-.LASFDE77
.LASFDE77:
	.long	.LASFDE77-.Lframe1
	.quad	.LFB39
	.quad	.LFE39-.LFB39
	.byte	0x4
	.long	.LCFI101-.LFB39
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.long	.LCFI102-.LCFI101
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.long	.LCFI103-.LCFI102
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI104-.LCFI103
	.byte	0xe
	.uleb128 0x28
	.byte	0x8c
	.uleb128 0x5
	.byte	0x8d
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x3
	.byte	0x8f
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI105-.LCFI104
	.byte	0xe
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI106-.LCFI105
	.byte	0xe
	.uleb128 0x38
	.byte	0x4
	.long	.LCFI107-.LCFI106
	.byte	0xe
	.uleb128 0x40
	.byte	0x83
	.uleb128 0x7
	.byte	0x86
	.uleb128 0x6
	.align 8
.LEFDE77:
.LSFDE79:
	.long	.LEFDE79-.LASFDE79
.LASFDE79:
	.long	.LASFDE79-.Lframe1
	.quad	.LFB40
	.quad	.LFE40-.LFB40
	.byte	0x4
	.long	.LCFI108-.LFB40
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.long	.LCFI109-.LCFI108
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.long	.LCFI110-.LCFI109
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI111-.LCFI110
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.long	.LCFI112-.LCFI111
	.byte	0xe
	.uleb128 0x30
	.byte	0x86
	.uleb128 0x6
	.byte	0x8c
	.uleb128 0x5
	.byte	0x8d
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x3
	.byte	0x8f
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI113-.LCFI112
	.byte	0xe
	.uleb128 0x38
	.byte	0x4
	.long	.LCFI114-.LCFI113
	.byte	0xe
	.uleb128 0x40
	.byte	0x83
	.uleb128 0x7
	.align 8
.LEFDE79:
.LSFDE81:
	.long	.LEFDE81-.LASFDE81
.LASFDE81:
	.long	.LASFDE81-.Lframe1
	.quad	.LFB41
	.quad	.LFE41-.LFB41
	.byte	0x4
	.long	.LCFI115-.LFB41
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.long	.LCFI116-.LCFI115
	.byte	0xe
	.uleb128 0x18
	.byte	0x8e
	.uleb128 0x3
	.byte	0x8f
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI117-.LCFI116
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI118-.LCFI117
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.long	.LCFI119-.LCFI118
	.byte	0xe
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI120-.LCFI119
	.byte	0xe
	.uleb128 0x38
	.byte	0x4
	.long	.LCFI121-.LCFI120
	.byte	0xe
	.uleb128 0x40
	.byte	0x83
	.uleb128 0x7
	.byte	0x86
	.uleb128 0x6
	.byte	0x8c
	.uleb128 0x5
	.byte	0x8d
	.uleb128 0x4
	.align 8
.LEFDE81:
.LSFDE83:
	.long	.LEFDE83-.LASFDE83
.LASFDE83:
	.long	.LASFDE83-.Lframe1
	.quad	.LFB42
	.quad	.LFE42-.LFB42
	.align 8
.LEFDE83:
.LSFDE85:
	.long	.LEFDE85-.LASFDE85
.LASFDE85:
	.long	.LASFDE85-.Lframe1
	.quad	.LFB43
	.quad	.LFE43-.LFB43
	.byte	0x4
	.long	.LCFI122-.LFB43
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI125-.LCFI122
	.byte	0x8c
	.uleb128 0x2
	.byte	0x86
	.uleb128 0x3
	.byte	0x83
	.uleb128 0x4
	.align 8
.LEFDE85:
.LSFDE87:
	.long	.LEFDE87-.LASFDE87
.LASFDE87:
	.long	.LASFDE87-.Lframe1
	.quad	.LFB44
	.quad	.LFE44-.LFB44
	.byte	0x4
	.long	.LCFI126-.LFB44
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI129-.LCFI126
	.byte	0x8c
	.uleb128 0x2
	.byte	0x86
	.uleb128 0x3
	.byte	0x83
	.uleb128 0x4
	.align 8
.LEFDE87:
.LSFDE89:
	.long	.LEFDE89-.LASFDE89
.LASFDE89:
	.long	.LASFDE89-.Lframe1
	.quad	.LFB45
	.quad	.LFE45-.LFB45
	.byte	0x4
	.long	.LCFI130-.LFB45
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI131-.LCFI130
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI133-.LCFI131
	.byte	0x8e
	.uleb128 0x4
	.byte	0x8f
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI137-.LCFI133
	.byte	0x83
	.uleb128 0x7
	.byte	0x8c
	.uleb128 0x6
	.byte	0x8d
	.uleb128 0x5
	.align 8
.LEFDE89:
.LSFDE91:
	.long	.LEFDE91-.LASFDE91
.LASFDE91:
	.long	.LASFDE91-.Lframe1
	.quad	.LFB46
	.quad	.LFE46-.LFB46
	.byte	0x4
	.long	.LCFI138-.LFB46
	.byte	0xe
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI139-.LCFI138
	.byte	0x83
	.uleb128 0x2
	.align 8
.LEFDE91:
.LSFDE93:
	.long	.LEFDE93-.LASFDE93
.LASFDE93:
	.long	.LASFDE93-.Lframe1
	.quad	.LFB47
	.quad	.LFE47-.LFB47
	.align 8
.LEFDE93:
.LSFDE95:
	.long	.LEFDE95-.LASFDE95
.LASFDE95:
	.long	.LASFDE95-.Lframe1
	.quad	.LFB48
	.quad	.LFE48-.LFB48
	.byte	0x4
	.long	.LCFI140-.LFB48
	.byte	0xe
	.uleb128 0x10
	.byte	0x83
	.uleb128 0x2
	.align 8
.LEFDE95:
.LSFDE97:
	.long	.LEFDE97-.LASFDE97
.LASFDE97:
	.long	.LASFDE97-.Lframe1
	.quad	.LFB49
	.quad	.LFE49-.LFB49
	.byte	0x4
	.long	.LCFI141-.LFB49
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI142-.LCFI141
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI145-.LCFI142
	.byte	0x8d
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x4
	.byte	0x8f
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI148-.LCFI145
	.byte	0x83
	.uleb128 0x7
	.byte	0x8c
	.uleb128 0x6
	.align 8
.LEFDE97:
.LSFDE99:
	.long	.LEFDE99-.LASFDE99
.LASFDE99:
	.long	.LASFDE99-.Lframe1
	.quad	.LFB50
	.quad	.LFE50-.LFB50
	.byte	0x4
	.long	.LCFI149-.LFB50
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI150-.LCFI149
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.long	.LCFI151-.LCFI150
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x3
	.align 8
.LEFDE99:
.LSFDE101:
	.long	.LEFDE101-.LASFDE101
.LASFDE101:
	.long	.LASFDE101-.Lframe1
	.quad	.LFB51
	.quad	.LFE51-.LFB51
	.byte	0x4
	.long	.LCFI152-.LFB51
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.long	.LCFI153-.LCFI152
	.byte	0xe
	.uleb128 0x18
	.byte	0x8e
	.uleb128 0x3
	.byte	0x8f
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI154-.LCFI153
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI155-.LCFI154
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.long	.LCFI156-.LCFI155
	.byte	0xe
	.uleb128 0x30
	.byte	0x86
	.uleb128 0x6
	.byte	0x8c
	.uleb128 0x5
	.byte	0x8d
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI157-.LCFI156
	.byte	0xe
	.uleb128 0x38
	.byte	0x4
	.long	.LCFI158-.LCFI157
	.byte	0xe
	.uleb128 0x40
	.byte	0x83
	.uleb128 0x7
	.align 8
.LEFDE101:
.LSFDE103:
	.long	.LEFDE103-.LASFDE103
.LASFDE103:
	.long	.LASFDE103-.Lframe1
	.quad	.LFB52
	.quad	.LFE52-.LFB52
	.byte	0x4
	.long	.LCFI159-.LFB52
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI160-.LCFI159
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI165-.LCFI160
	.byte	0x8e
	.uleb128 0x3
	.byte	0x8d
	.uleb128 0x4
	.byte	0x83
	.uleb128 0x6
	.byte	0x8c
	.uleb128 0x5
	.align 8
.LEFDE103:
.LSFDE105:
	.long	.LEFDE105-.LASFDE105
.LASFDE105:
	.long	.LASFDE105-.Lframe1
	.quad	.LFB53
	.quad	.LFE53-.LFB53
	.byte	0x4
	.long	.LCFI166-.LFB53
	.byte	0xe
	.uleb128 0x10
	.byte	0x83
	.uleb128 0x2
	.align 8
.LEFDE105:
.LSFDE107:
	.long	.LEFDE107-.LASFDE107
.LASFDE107:
	.long	.LASFDE107-.Lframe1
	.quad	.LFB54
	.quad	.LFE54-.LFB54
	.byte	0x4
	.long	.LCFI167-.LFB54
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.long	.LCFI168-.LCFI167
	.byte	0xe
	.uleb128 0x18
	.byte	0x8e
	.uleb128 0x3
	.byte	0x8f
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI169-.LCFI168
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI170-.LCFI169
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.long	.LCFI171-.LCFI170
	.byte	0xe
	.uleb128 0x30
	.byte	0x86
	.uleb128 0x6
	.byte	0x8c
	.uleb128 0x5
	.byte	0x8d
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI172-.LCFI171
	.byte	0xe
	.uleb128 0x38
	.byte	0x4
	.long	.LCFI173-.LCFI172
	.byte	0xe
	.uleb128 0x40
	.byte	0x83
	.uleb128 0x7
	.align 8
.LEFDE107:
.LSFDE109:
	.long	.LEFDE109-.LASFDE109
.LASFDE109:
	.long	.LASFDE109-.Lframe1
	.quad	.LFB55
	.quad	.LFE55-.LFB55
	.byte	0x4
	.long	.LCFI174-.LFB55
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI175-.LCFI174
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.long	.LCFI176-.LCFI175
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x3
	.align 8
.LEFDE109:
.LSFDE111:
	.long	.LEFDE111-.LASFDE111
.LASFDE111:
	.long	.LASFDE111-.Lframe1
	.quad	.LFB56
	.quad	.LFE56-.LFB56
	.byte	0x4
	.long	.LCFI177-.LFB56
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI178-.LCFI177
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.long	.LCFI179-.LCFI178
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x3
	.align 8
.LEFDE111:
.LSFDE113:
	.long	.LEFDE113-.LASFDE113
.LASFDE113:
	.long	.LASFDE113-.Lframe1
	.quad	.LFB57
	.quad	.LFE57-.LFB57
	.byte	0x4
	.long	.LCFI180-.LFB57
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI182-.LCFI180
	.byte	0x86
	.uleb128 0x2
	.byte	0x83
	.uleb128 0x3
	.align 8
.LEFDE113:
.LSFDE115:
	.long	.LEFDE115-.LASFDE115
.LASFDE115:
	.long	.LASFDE115-.Lframe1
	.quad	.LFB58
	.quad	.LFE58-.LFB58
	.byte	0x4
	.long	.LCFI183-.LFB58
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.long	.LCFI184-.LCFI183
	.byte	0xe
	.uleb128 0x18
	.byte	0x8e
	.uleb128 0x3
	.byte	0x8f
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI185-.LCFI184
	.byte	0xe
	.uleb128 0x20
	.byte	0x8d
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI186-.LCFI185
	.byte	0xe
	.uleb128 0x28
	.byte	0x8c
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI187-.LCFI186
	.byte	0xe
	.uleb128 0x30
	.byte	0x86
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI188-.LCFI187
	.byte	0xe
	.uleb128 0x38
	.byte	0x4
	.long	.LCFI189-.LCFI188
	.byte	0xe
	.uleb128 0x40
	.byte	0x83
	.uleb128 0x7
	.align 8
.LEFDE115:
.LSFDE117:
	.long	.LEFDE117-.LASFDE117
.LASFDE117:
	.long	.LASFDE117-.Lframe1
	.quad	.LFB59
	.quad	.LFE59-.LFB59
	.byte	0x4
	.long	.LCFI190-.LFB59
	.byte	0xe
	.uleb128 0x10
	.align 8
.LEFDE117:
.LSFDE119:
	.long	.LEFDE119-.LASFDE119
.LASFDE119:
	.long	.LASFDE119-.Lframe1
	.quad	.LFB60
	.quad	.LFE60-.LFB60
	.align 8
.LEFDE119:
.LSFDE121:
	.long	.LEFDE121-.LASFDE121
.LASFDE121:
	.long	.LASFDE121-.Lframe1
	.quad	.LFB61
	.quad	.LFE61-.LFB61
	.align 8
.LEFDE121:
.LSFDE123:
	.long	.LEFDE123-.LASFDE123
.LASFDE123:
	.long	.LASFDE123-.Lframe1
	.quad	.LFB62
	.quad	.LFE62-.LFB62
	.align 8
.LEFDE123:
.LSFDE125:
	.long	.LEFDE125-.LASFDE125
.LASFDE125:
	.long	.LASFDE125-.Lframe1
	.quad	.LFB63
	.quad	.LFE63-.LFB63
	.align 8
.LEFDE125:
.LSFDE127:
	.long	.LEFDE127-.LASFDE127
.LASFDE127:
	.long	.LASFDE127-.Lframe1
	.quad	.LFB64
	.quad	.LFE64-.LFB64
	.byte	0x4
	.long	.LCFI191-.LFB64
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI194-.LCFI191
	.byte	0x8c
	.uleb128 0x2
	.byte	0x86
	.uleb128 0x3
	.byte	0x83
	.uleb128 0x4
	.align 8
.LEFDE127:
.LSFDE129:
	.long	.LEFDE129-.LASFDE129
.LASFDE129:
	.long	.LASFDE129-.Lframe1
	.quad	.LFB65
	.quad	.LFE65-.LFB65
	.byte	0x4
	.long	.LCFI195-.LFB65
	.byte	0xe
	.uleb128 0x10
	.byte	0x8f
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI196-.LCFI195
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.long	.LCFI197-.LCFI196
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI198-.LCFI197
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.long	.LCFI199-.LCFI198
	.byte	0xe
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI200-.LCFI199
	.byte	0xe
	.uleb128 0x38
	.byte	0x83
	.uleb128 0x7
	.byte	0x86
	.uleb128 0x6
	.byte	0x8c
	.uleb128 0x5
	.byte	0x8d
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI201-.LCFI200
	.byte	0xe
	.uleb128 0x50
	.align 8
.LEFDE129:
.LSFDE131:
	.long	.LEFDE131-.LASFDE131
.LASFDE131:
	.long	.LASFDE131-.Lframe1
	.quad	.LFB66
	.quad	.LFE66-.LFB66
	.align 8
.LEFDE131:
.LSFDE133:
	.long	.LEFDE133-.LASFDE133
.LASFDE133:
	.long	.LASFDE133-.Lframe1
	.quad	.LFB67
	.quad	.LFE67-.LFB67
	.byte	0x4
	.long	.LCFI202-.LFB67
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.long	.LCFI203-.LCFI202
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.long	.LCFI204-.LCFI203
	.byte	0xe
	.uleb128 0x20
	.byte	0x8d
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x3
	.byte	0x8f
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI205-.LCFI204
	.byte	0xe
	.uleb128 0x28
	.byte	0x8c
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI206-.LCFI205
	.byte	0xe
	.uleb128 0x30
	.byte	0x86
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI207-.LCFI206
	.byte	0xe
	.uleb128 0x38
	.byte	0x83
	.uleb128 0x7
	.byte	0x4
	.long	.LCFI208-.LCFI207
	.byte	0xe
	.uleb128 0x80
	.align 8
.LEFDE133:
.LSFDE135:
	.long	.LEFDE135-.LASFDE135
.LASFDE135:
	.long	.LASFDE135-.Lframe1
	.quad	.LFB68
	.quad	.LFE68-.LFB68
	.byte	0x4
	.long	.LCFI209-.LFB68
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI210-.LCFI209
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI212-.LCFI210
	.byte	0x8e
	.uleb128 0x4
	.byte	0x8f
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI215-.LCFI212
	.byte	0x83
	.uleb128 0x7
	.byte	0x8c
	.uleb128 0x6
	.byte	0x8d
	.uleb128 0x5
	.align 8
.LEFDE135:
.LSFDE137:
	.long	.LEFDE137-.LASFDE137
.LASFDE137:
	.long	.LASFDE137-.Lframe1
	.quad	.LFB69
	.quad	.LFE69-.LFB69
	.byte	0x4
	.long	.LCFI217-.LFB69
	.byte	0xe
	.uleb128 0x10
	.byte	0x8f
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI218-.LCFI217
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.long	.LCFI219-.LCFI218
	.byte	0xe
	.uleb128 0x20
	.byte	0x8d
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI220-.LCFI219
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.long	.LCFI221-.LCFI220
	.byte	0xe
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI222-.LCFI221
	.byte	0xe
	.uleb128 0x38
	.byte	0x4
	.long	.LCFI223-.LCFI222
	.byte	0xe
	.uleb128 0x60
	.byte	0x83
	.uleb128 0x7
	.byte	0x86
	.uleb128 0x6
	.byte	0x8c
	.uleb128 0x5
	.align 8
.LEFDE137:
.LSFDE139:
	.long	.LEFDE139-.LASFDE139
.LASFDE139:
	.long	.LASFDE139-.Lframe1
	.quad	.LFB70
	.quad	.LFE70-.LFB70
	.byte	0x4
	.long	.LCFI224-.LFB70
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.long	.LCFI225-.LCFI224
	.byte	0xe
	.uleb128 0x18
	.byte	0x8d
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI226-.LCFI225
	.byte	0xe
	.uleb128 0x20
	.byte	0x8c
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI227-.LCFI226
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.long	.LCFI228-.LCFI227
	.byte	0xe
	.uleb128 0x30
	.byte	0x83
	.uleb128 0x6
	.byte	0x86
	.uleb128 0x5
	.align 8
.LEFDE139:
.LSFDE141:
	.long	.LEFDE141-.LASFDE141
.LASFDE141:
	.long	.LASFDE141-.Lframe1
	.quad	.LFB71
	.quad	.LFE71-.LFB71
	.byte	0x4
	.long	.LCFI229-.LFB71
	.byte	0xe
	.uleb128 0x10
	.byte	0x8c
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI230-.LCFI229
	.byte	0xe
	.uleb128 0x18
	.byte	0x86
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI231-.LCFI230
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.align 8
.LEFDE141:
.LSFDE143:
	.long	.LEFDE143-.LASFDE143
.LASFDE143:
	.long	.LASFDE143-.Lframe1
	.quad	.LFB72
	.quad	.LFE72-.LFB72
	.byte	0x4
	.long	.LCFI232-.LFB72
	.byte	0xe
	.uleb128 0x10
	.byte	0x8c
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI233-.LCFI232
	.byte	0xe
	.uleb128 0x18
	.byte	0x86
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI234-.LCFI233
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.align 8
.LEFDE143:
.LSFDE145:
	.long	.LEFDE145-.LASFDE145
.LASFDE145:
	.long	.LASFDE145-.Lframe1
	.quad	.LFB73
	.quad	.LFE73-.LFB73
	.byte	0x4
	.long	.LCFI235-.LFB73
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI236-.LCFI235
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI239-.LCFI236
	.byte	0x8d
	.uleb128 0x5
	.byte	0x8e
	.uleb128 0x4
	.byte	0x8f
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI240-.LCFI239
	.byte	0x8c
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI242-.LCFI240
	.byte	0x83
	.uleb128 0x7
	.align 8
.LEFDE145:
.LSFDE147:
	.long	.LEFDE147-.LASFDE147
.LASFDE147:
	.long	.LASFDE147-.Lframe1
	.quad	.LFB74
	.quad	.LFE74-.LFB74
	.byte	0x4
	.long	.LCFI243-.LFB74
	.byte	0xe
	.uleb128 0x10
	.byte	0x8f
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI244-.LCFI243
	.byte	0xe
	.uleb128 0x18
	.byte	0x8e
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI245-.LCFI244
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI246-.LCFI245
	.byte	0xe
	.uleb128 0x28
	.byte	0x8c
	.uleb128 0x5
	.byte	0x8d
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI247-.LCFI246
	.byte	0xe
	.uleb128 0x30
	.byte	0x86
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI248-.LCFI247
	.byte	0xe
	.uleb128 0x38
	.byte	0x83
	.uleb128 0x7
	.byte	0x4
	.long	.LCFI249-.LCFI248
	.byte	0xe
	.uleb128 0x80
	.align 8
.LEFDE147:
.LSFDE149:
	.long	.LEFDE149-.LASFDE149
.LASFDE149:
	.long	.LASFDE149-.Lframe1
	.quad	.LFB75
	.quad	.LFE75-.LFB75
	.byte	0x4
	.long	.LCFI250-.LFB75
	.byte	0xe
	.uleb128 0x10
	.byte	0x8f
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI251-.LCFI250
	.byte	0xe
	.uleb128 0x18
	.byte	0x8e
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI252-.LCFI251
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI253-.LCFI252
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.long	.LCFI254-.LCFI253
	.byte	0xe
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI255-.LCFI254
	.byte	0xe
	.uleb128 0x38
	.byte	0x4
	.long	.LCFI256-.LCFI255
	.byte	0xe
	.uleb128 0x50
	.byte	0x83
	.uleb128 0x7
	.byte	0x86
	.uleb128 0x6
	.byte	0x8c
	.uleb128 0x5
	.byte	0x8d
	.uleb128 0x4
	.align 8
.LEFDE149:
.LSFDE151:
	.long	.LEFDE151-.LASFDE151
.LASFDE151:
	.long	.LASFDE151-.Lframe1
	.quad	.LFB76
	.quad	.LFE76-.LFB76
	.byte	0x4
	.long	.LCFI257-.LFB76
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI260-.LCFI257
	.byte	0x83
	.uleb128 0x4
	.byte	0x8c
	.uleb128 0x2
	.byte	0x86
	.uleb128 0x3
	.align 8
.LEFDE151:
.LSFDE153:
	.long	.LEFDE153-.LASFDE153
.LASFDE153:
	.long	.LASFDE153-.Lframe1
	.quad	.LFB77
	.quad	.LFE77-.LFB77
	.byte	0x4
	.long	.LCFI261-.LFB77
	.byte	0xe
	.uleb128 0x10
	.byte	0x83
	.uleb128 0x2
	.align 8
.LEFDE153:
.LSFDE155:
	.long	.LEFDE155-.LASFDE155
.LASFDE155:
	.long	.LASFDE155-.Lframe1
	.quad	.LFB78
	.quad	.LFE78-.LFB78
	.byte	0x4
	.long	.LCFI262-.LFB78
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.long	.LCFI263-.LCFI262
	.byte	0xe
	.uleb128 0x18
	.byte	0x86
	.uleb128 0x3
	.byte	0x8c
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI264-.LCFI263
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.align 8
.LEFDE155:
.LSFDE157:
	.long	.LEFDE157-.LASFDE157
.LASFDE157:
	.long	.LASFDE157-.Lframe1
	.quad	.LFB79
	.quad	.LFE79-.LFB79
	.byte	0x4
	.long	.LCFI265-.LFB79
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.long	.LCFI266-.LCFI265
	.byte	0xe
	.uleb128 0x18
	.byte	0x86
	.uleb128 0x3
	.byte	0x8c
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI267-.LCFI266
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.align 8
.LEFDE157:
.LSFDE159:
	.long	.LEFDE159-.LASFDE159
.LASFDE159:
	.long	.LASFDE159-.Lframe1
	.quad	.LFB80
	.quad	.LFE80-.LFB80
	.byte	0x4
	.long	.LCFI268-.LFB80
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI270-.LCFI268
	.byte	0x86
	.uleb128 0x2
	.byte	0x83
	.uleb128 0x3
	.align 8
.LEFDE159:
.LSFDE161:
	.long	.LEFDE161-.LASFDE161
.LASFDE161:
	.long	.LASFDE161-.Lframe1
	.quad	.LFB81
	.quad	.LFE81-.LFB81
	.byte	0x4
	.long	.LCFI271-.LFB81
	.byte	0xe
	.uleb128 0x10
	.align 8
.LEFDE161:
.LSFDE163:
	.long	.LEFDE163-.LASFDE163
.LASFDE163:
	.long	.LASFDE163-.Lframe1
	.quad	.LFB82
	.quad	.LFE82-.LFB82
	.byte	0x4
	.long	.LCFI272-.LFB82
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.long	.LCFI273-.LCFI272
	.byte	0xe
	.uleb128 0x18
	.byte	0x8d
	.uleb128 0x3
	.byte	0x8e
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI274-.LCFI273
	.byte	0xe
	.uleb128 0x20
	.byte	0x8c
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI275-.LCFI274
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.long	.LCFI276-.LCFI275
	.byte	0xe
	.uleb128 0x30
	.byte	0x83
	.uleb128 0x6
	.byte	0x86
	.uleb128 0x5
	.align 8
.LEFDE163:
.LSFDE165:
	.long	.LEFDE165-.LASFDE165
.LASFDE165:
	.long	.LASFDE165-.Lframe1
	.quad	.LFB83
	.quad	.LFE83-.LFB83
	.byte	0x4
	.long	.LCFI277-.LFB83
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.long	.LCFI278-.LCFI277
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.long	.LCFI279-.LCFI278
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI280-.LCFI279
	.byte	0xe
	.uleb128 0x28
	.byte	0x8c
	.uleb128 0x5
	.byte	0x8d
	.uleb128 0x4
	.byte	0x8e
	.uleb128 0x3
	.byte	0x8f
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI281-.LCFI280
	.byte	0xe
	.uleb128 0x30
	.byte	0x86
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI282-.LCFI281
	.byte	0xe
	.uleb128 0x38
	.byte	0x4
	.long	.LCFI283-.LCFI282
	.byte	0xe
	.uleb128 0xb0
	.byte	0x83
	.uleb128 0x7
	.align 8
.LEFDE165:
.LSFDE167:
	.long	.LEFDE167-.LASFDE167
.LASFDE167:
	.long	.LASFDE167-.Lframe1
	.quad	.LFB84
	.quad	.LFE84-.LFB84
	.byte	0x4
	.long	.LCFI284-.LFB84
	.byte	0xe
	.uleb128 0x10
	.align 8
.LEFDE167:
.LSFDE169:
	.long	.LEFDE169-.LASFDE169
.LASFDE169:
	.long	.LASFDE169-.Lframe1
	.quad	.LFB85
	.quad	.LFE85-.LFB85
	.byte	0x4
	.long	.LCFI285-.LFB85
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.long	.LCFI286-.LCFI285
	.byte	0xe
	.uleb128 0x18
	.byte	0x8e
	.uleb128 0x3
	.byte	0x8f
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI287-.LCFI286
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI288-.LCFI287
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.long	.LCFI289-.LCFI288
	.byte	0xe
	.uleb128 0x30
	.byte	0x86
	.uleb128 0x6
	.byte	0x8c
	.uleb128 0x5
	.byte	0x8d
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI290-.LCFI289
	.byte	0xe
	.uleb128 0x38
	.byte	0x4
	.long	.LCFI291-.LCFI290
	.byte	0xe
	.uleb128 0x40
	.byte	0x83
	.uleb128 0x7
	.align 8
.LEFDE169:
	.ident	"GCC: (GNU) 3.2"
