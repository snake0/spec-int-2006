   private

   public    compress_to_triangle_
   interface compress_to_triangle_
      module procedure compress_to_triangle
   end interface

   public    beta_beta_
   interface beta_beta_
      module procedure beta_beta
   end interface

   public    to_inverse_of_
   interface to_inverse_of_
      module procedure to_inverse_of
   end interface

   public    set_to_
   interface set_to_
      module procedure set_to
   end interface

   public    to_power_series_inverse_of_
   interface to_power_series_inverse_of_
      module procedure to_power_series_inverse_of
   end interface

   public    solve_linear_equations_
   interface solve_linear_equations_
      module procedure solve_linear_equations
   end interface

   public    same_as_
   interface same_as_
      module procedure same_as
   end interface

   public    rotate_
   interface rotate_
      module procedure rotate
   end interface

   public    convert_to_
   interface convert_to_
      module procedure convert_to
   end interface

   public    alpha_alpha_
   interface alpha_alpha_
      module procedure alpha_alpha
   end interface

   public    is_zero_
   interface is_zero_
      module procedure is_zero
   end interface

   public    zero_small_values_
   interface zero_small_values_
      module procedure zero_small_values
   end interface

   public    solve_symmetric_eigenproblem_
   interface solve_symmetric_eigenproblem_
      module procedure solve_symmetric_eigenproblem
   end interface

   public    plus_
   interface plus_
      module procedure plus
   end interface

   public    swap_columns_
   interface swap_columns_
      module procedure swap_columns
      module procedure swap_columns_1
   end interface

   public    sum_column_vectors_
   interface sum_column_vectors_
      module procedure sum_column_vectors
   end interface

   public    gaussian_g_xyz_matrix_
   interface gaussian_g_xyz_matrix_
      module procedure gaussian_g_xyz_matrix
   end interface

   public    alpha_beta_set_to_
   interface alpha_beta_set_to_
      module procedure alpha_beta_set_to
   end interface

   public    has_unit_diagonal_
   interface has_unit_diagonal_
      module procedure has_unit_diagonal
   end interface

   private    solve_linear_equations_ESSL_
   interface solve_linear_equations_ESSL_
      module procedure solve_linear_equations_ESSL
   end interface

   public    is_diagonal_
   interface is_diagonal_
      module procedure is_diagonal
   end interface

   private    solve_linear_equation_ESSL_
   interface solve_linear_equation_ESSL_
      module procedure solve_linear_equation_ESSL
   end interface

   public    to_inverse_sqrt_
   interface to_inverse_sqrt_
      module procedure to_inverse_sqrt
   end interface

   public    to_product_with_diagonal_
   interface to_product_with_diagonal_
      module procedure to_product_with_diagonal
      module procedure to_product_with_diagonal_1
   end interface

   public    shrink_columns_
   interface shrink_columns_
      module procedure shrink_columns
   end interface

   public    alpha_alpha_set_to_
   interface alpha_alpha_set_to_
      module procedure alpha_alpha_set_to
   end interface

   public    in_range_
   interface in_range_
      module procedure in_range
   end interface

   public    to_power_series_inv_sqrt_of_
   interface to_power_series_inv_sqrt_of_
      module procedure to_power_series_inv_sqrt_of
   end interface

   public    beta_alpha_put_to_
   interface beta_alpha_put_to_
      module procedure beta_alpha_put_to
   end interface

   private    solve_symm_eigenproblem_ESSL_
   interface solve_symm_eigenproblem_ESSL_
      module procedure solve_symm_eigenproblem_ESSL
   end interface

   public    to_scaled_product_of_
   interface to_scaled_product_of_
      module procedure to_scaled_product_of
   end interface

   public    determinant_
   interface determinant_
      module procedure determinant
   end interface

   public    beta_beta_set_to_
   interface beta_beta_set_to_
      module procedure beta_beta_set_to
   end interface

   public    to_inverse_of_ESSL_
   interface to_inverse_of_ESSL_
      module procedure to_inverse_of_ESSL
   end interface

   public    add_to_diagonal_
   interface add_to_diagonal_
      module procedure add_to_diagonal
   end interface

   public    all_in_range_
   interface all_in_range_
      module procedure all_in_range
   end interface

   public    symmetrically_orthonormalise_
   interface symmetrically_orthonormalise_
      module procedure symmetrically_orthonormalise
   end interface

   public    append_column_
   interface append_column_
      module procedure append_column
   end interface

   public    equals_
   interface equals_
      module procedure equals
   end interface

   public    to_transpose_
   interface to_transpose_
      module procedure to_transpose
      module procedure to_transpose_1
   end interface

   public    from_diagonal_
   interface from_diagonal_
      module procedure from_diagonal
   end interface

   public    trace_
   interface trace_
      module procedure trace
   end interface

   public    max_abs_column_difference_
   interface max_abs_column_difference_
      module procedure max_abs_column_difference
   end interface

   public    range_
   interface range_
      module procedure range
   end interface

   public    get_diagonal_
   interface get_diagonal_
      module procedure get_diagonal
   end interface

   public    gaussian_d_xyz_matrix_
   interface gaussian_d_xyz_matrix_
      module procedure gaussian_d_xyz_matrix
   end interface

   public    destroy_
   interface destroy_
      module procedure destroy
   end interface

   private    solve_linear_equations_LAPACK_
   interface solve_linear_equations_LAPACK_
      module procedure solve_linear_equations_LAPACK
   end interface

   public    to_exponential_of_
   interface to_exponential_of_
      module procedure to_exponential_of
   end interface

   public    plus_scaled_
   interface plus_scaled_
      module procedure plus_scaled
   end interface

   public    alpha_beta_put_to_
   interface alpha_beta_put_to_
      module procedure alpha_beta_put_to
   end interface

   public    mean_column_vector_
   interface mean_column_vector_
      module procedure mean_column_vector
   end interface

   public    expand_columns_
   interface expand_columns_
      module procedure expand_columns
   end interface

   public    reverse_schmidt_orthonormalise_
   interface reverse_schmidt_orthonormalise_
      module procedure reverse_schmidt_orthonormalise
   end interface

   public    alpha_alpha_put_to_
   interface alpha_alpha_put_to_
      module procedure alpha_alpha_put_to
   end interface

   public    is_unit_matrix_
   interface is_unit_matrix_
      module procedure is_unit_matrix
   end interface

   public    is_same_shape_as_
   interface is_same_shape_as_
      module procedure is_same_shape_as
   end interface

   public    cofactor_
   interface cofactor_
      module procedure cofactor
   end interface

   public    antisymmetric_exponential_
   interface antisymmetric_exponential_
      module procedure antisymmetric_exponential
   end interface

   public    set_diagonal_
   interface set_diagonal_
      module procedure set_diagonal
   end interface

   public    index_of_minimum_column_norm_
   interface index_of_minimum_column_norm_
      module procedure index_of_minimum_column_norm
   end interface

   public    to_unit_matrix_
   interface to_unit_matrix_
      module procedure to_unit_matrix
   end interface

   public    antisymmetric_fold_
   interface antisymmetric_fold_
      module procedure antisymmetric_fold
   end interface

   public    append_columns_
   interface append_columns_
      module procedure append_columns
   end interface

   public    solve_eigenproblem_
   interface solve_eigenproblem_
      module procedure solve_eigenproblem
   end interface

   public    beta_beta_put_to_
   interface beta_beta_put_to_
      module procedure beta_beta_put_to
   end interface

   public    symmetrize_
   interface symmetrize_
      module procedure symmetrize
   end interface

   public    plus_scaled_product_of_
   interface plus_scaled_product_of_
      module procedure plus_scaled_product_of
   end interface

   public    gaussian_f_xyz_matrix_
   interface gaussian_f_xyz_matrix_
      module procedure gaussian_f_xyz_matrix
   end interface

   public    is_square_
   interface is_square_
      module procedure is_square
   end interface

   public    plus_product_of_
   interface plus_product_of_
      module procedure plus_product_of
   end interface

   public    tri_size_
   interface tri_size_
      module procedure tri_size
   end interface

   private    to_inverse_of_LAPACK_
   interface to_inverse_of_LAPACK_
      module procedure to_inverse_of_LAPACK
   end interface

   public    is_symmetric_
   interface is_symmetric_
      module procedure is_symmetric
   end interface

   public    change_basis_
   interface change_basis_
      module procedure change_basis
      module procedure change_basis_1
      module procedure change_basis_2
      module procedure change_basis_3
      module procedure change_basis_4
   end interface

   public    exponentiate_to_
   interface exponentiate_to_
      module procedure exponentiate_to
   end interface

   public    weight_diagonal_
   interface weight_diagonal_
      module procedure weight_diagonal
   end interface

   public    to_product_of_
   interface to_product_of_
      module procedure to_product_of
      module procedure to_product_of_1
   end interface

   public    alpha_beta_
   interface alpha_beta_
      module procedure alpha_beta
   end interface

   public    sum_row_vectors_
   interface sum_row_vectors_
      module procedure sum_row_vectors
   end interface

   public    reverse_schmidt_orthogonalise_
   interface reverse_schmidt_orthogonalise_
      module procedure reverse_schmidt_orthogonalise
   end interface

   public    antisymmetric_reflect_
   interface antisymmetric_reflect_
      module procedure antisymmetric_reflect
   end interface

   public    convert_from_
   interface convert_from_
      module procedure convert_from
   end interface

   public    beta_alpha_
   interface beta_alpha_
      module procedure beta_alpha
   end interface

   public    shrink_
   interface shrink_
      module procedure shrink
   end interface

   public    zero_off_diagonal_
   interface zero_off_diagonal_
      module procedure zero_off_diagonal
   end interface

   public    max_abs_diagonal_element_
   interface max_abs_diagonal_element_
      module procedure max_abs_diagonal_element
   end interface

   public    max_diagonal_element_
   interface max_diagonal_element_
      module procedure max_diagonal_element
   end interface

   public    symmetric_reflect_
   interface symmetric_reflect_
      module procedure symmetric_reflect
   end interface

   public    column_index_
   interface column_index_
      module procedure column_index
   end interface

   public    is_inversion_matrix_
   interface is_inversion_matrix_
      module procedure is_inversion_matrix
   end interface

   public    minus_
   interface minus_
      module procedure minus
   end interface

   public    reverse_column_order_
   interface reverse_column_order_
      module procedure reverse_column_order
   end interface

   public    has_column_
   interface has_column_
      module procedure has_column
   end interface

   public    get_column_dot_products_
   interface get_column_dot_products_
      module procedure get_column_dot_products
   end interface

   public    get_column_norms_
   interface get_column_norms_
      module procedure get_column_norms
   end interface

   public    create_
   interface create_
      module procedure create
      module procedure create_1
      module procedure create_2
      module procedure create_3
   end interface

   public    trace_product_with_
   interface trace_product_with_
      module procedure trace_product_with
      module procedure trace_product_with_1
      module procedure trace_product_with_2
   end interface

   public    create_copy_
   interface create_copy_
      module procedure create_copy
   end interface

   public    make_corresponding_orbitals_
   interface make_corresponding_orbitals_
      module procedure make_corresponding_orbitals
   end interface

   public    antisymmetrize_
   interface antisymmetrize_
      module procedure antisymmetrize
   end interface

   public    zero_diagonal_
   interface zero_diagonal_
      module procedure zero_diagonal
   end interface

   public    dot_
   interface dot_
      module procedure dot
      module procedure dot_1
   end interface

   public    solve_linear_equation_
   interface solve_linear_equation_
      module procedure solve_linear_equation
   end interface

   public    symmetric_fold_to_tri_
   interface symmetric_fold_to_tri_
      module procedure symmetric_fold_to_tri
   end interface

   public    to_unit_mat_
   interface to_unit_mat_
      module procedure to_unit_mat
   end interface

   private    solve_linear_equation_LAPACK_
   interface solve_linear_equation_LAPACK_
      module procedure solve_linear_equation_LAPACK
   end interface

   public    symmetric_fold_
   interface symmetric_fold_
      module procedure symmetric_fold
   end interface

   private    solve_symm_eigenproblem_LAPACK_
   interface solve_symm_eigenproblem_LAPACK_
      module procedure solve_symm_eigenproblem_LAPACK
   end interface

   public    expand_
   interface expand_
      module procedure expand
   end interface

   public    column_norms_
   interface column_norms_
      module procedure column_norms
   end interface

   public    to_sqrt_
   interface to_sqrt_
      module procedure to_sqrt
   end interface

   public    schmidt_orthonormalise_
   interface schmidt_orthonormalise_
      module procedure schmidt_orthonormalise
      module procedure schmidt_orthonormalise_1
      module procedure schmidt_orthonormalise_2
   end interface

   public    is_transposed_shape_of_
   interface is_transposed_shape_of_
      module procedure is_transposed_shape_of
   end interface

   public    plus_scaled_mat_
   interface plus_scaled_mat_
      module procedure plus_scaled_mat
   end interface

   public    make_enclosing_sphere_
   interface make_enclosing_sphere_
      module procedure make_enclosing_sphere
   end interface

   public    minus_scaled_
   interface minus_scaled_
      module procedure minus_scaled
   end interface

   public    to_scaled_mat_
   interface to_scaled_mat_
      module procedure to_scaled_mat
   end interface

   public    make_diagonally_dominant_
   interface make_diagonally_dominant_
      module procedure make_diagonally_dominant
   end interface

   public    uncompress_from_triangle_
   interface uncompress_from_triangle_
      module procedure uncompress_from_triangle
   end interface

   public    similarity_transform_
   interface similarity_transform_
      module procedure similarity_transform
   end interface

   public    beta_alpha_set_to_
   interface beta_alpha_set_to_
      module procedure beta_alpha_set_to
   end interface

   public    back_transform_
   interface back_transform_
      module procedure back_transform
      module procedure back_transform_1
      module procedure back_transform_2
   end interface

