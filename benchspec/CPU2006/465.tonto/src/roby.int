   private

   private    population_
   interface population_
      module procedure population
   end interface

   private    overlap_transform_
   interface overlap_transform_
      module procedure overlap_transform
   end interface

   public    put_theta_bond_info_
   interface put_theta_bond_info_
      module procedure put_theta_bond_info
   end interface

   public    nullify_ptr_data_
   interface nullify_ptr_data_
      module procedure nullify_ptr_data
   end interface

   public    nullify_ptr_part_
   interface nullify_ptr_part_
      module procedure nullify_ptr_part
   end interface

   public    read_zero_cutoff_
   interface read_zero_cutoff_
      module procedure read_zero_cutoff
   end interface

   public    read_atom_groups_
   interface read_atom_groups_
      module procedure read_atom_groups
   end interface

   public    atom_shared_population_
   interface atom_shared_population_
      module procedure atom_shared_population
   end interface

   public    read_kind_
   interface read_kind_
      module procedure read_kind
   end interface

   private    make_summed_pair_pops_
   interface make_summed_pair_pops_
      module procedure make_summed_pair_pops
   end interface

   public    read_keywords_
   interface read_keywords_
      module procedure read_keywords
   end interface

   public    group_bond_analysis_
   interface group_bond_analysis_
      module procedure group_bond_analysis
   end interface

   public    read_covalent_cutoff_
   interface read_covalent_cutoff_
      module procedure read_covalent_cutoff
   end interface

   public    group_pair_populations_
   interface group_pair_populations_
      module procedure group_pair_populations
   end interface

   public    is_homoleptic_
   interface is_homoleptic_
      module procedure is_homoleptic
   end interface

   public    put_shared_population_
   interface put_shared_population_
      module procedure put_shared_population
   end interface

   private    charge_analysis_
   interface charge_analysis_
      module procedure charge_analysis
   end interface

   private    diagonalise_V_AB_operator_
   interface diagonalise_V_AB_operator_
      module procedure diagonalise_V_AB_operator
   end interface

   public    group_populations_
   interface group_populations_
      module procedure group_populations
   end interface

   private    make_theta_populations_
   interface make_theta_populations_
      module procedure make_theta_populations
   end interface

   public    atom_populations_
   interface atom_populations_
      module procedure atom_populations
   end interface

   private    destroy_theta_info_
   interface destroy_theta_info_
      module procedure destroy_theta_info
   end interface

   private    n_group_
   interface n_group_
      module procedure n_group
   end interface

   public    finalize_
   interface finalize_
      module procedure finalize
   end interface

   private    make_single_atom_groups_
   interface make_single_atom_groups_
      module procedure make_single_atom_groups
   end interface

   public    group_shared_population_
   interface group_shared_population_
      module procedure group_shared_population
   end interface

   private    make_pair_populations_
   interface make_pair_populations_
      module procedure make_pair_populations
   end interface

   private    expectation_
   interface expectation_
      module procedure expectation
   end interface

   private    make_gould_covalent_orbitals_
   interface make_gould_covalent_orbitals_
      module procedure make_gould_covalent_orbitals
   end interface

   public    destroy_
   interface destroy_
      module procedure destroy
   end interface

   private    make_summed_triple_pops_
   interface make_summed_triple_pops_
      module procedure make_summed_triple_pops
   end interface

   public    read_pi_on_2_cutoff_
   interface read_pi_on_2_cutoff_
      module procedure read_pi_on_2_cutoff
   end interface

   private    n_bf_ab_
   interface n_bf_ab_
      module procedure n_bf_ab
   end interface

   public    put_all_info_
   interface put_all_info_
      module procedure put_all_info
   end interface

   public    read_units_
   interface read_units_
      module procedure read_units
   end interface

   private    make_projected_density_
   interface make_projected_density_
      module procedure make_projected_density
   end interface

   public    read_atom_list_
   interface read_atom_list_
      module procedure read_atom_list
   end interface

   private    make_shared_operator_
   interface make_shared_operator_
      module procedure make_shared_operator
   end interface

   private    make_populations_
   interface make_populations_
      module procedure make_populations
   end interface

   private    gould_bond_index_
   interface gould_bond_index_
      module procedure gould_bond_index
   end interface

   public    atom_pair_populations_
   interface atom_pair_populations_
      module procedure atom_pair_populations
   end interface

   public    destroy_ptr_part_
   interface destroy_ptr_part_
      module procedure destroy_ptr_part
   end interface

   public    read_output_theta_info_
   interface read_output_theta_info_
      module procedure read_output_theta_info
   end interface

   private    shared_population_
   interface shared_population_
      module procedure shared_population
   end interface

   private    project_
   interface project_
      module procedure project
   end interface

   public    put_pair_populations_
   interface put_pair_populations_
      module procedure put_pair_populations
   end interface

   public    put_theta_info_
   interface put_theta_info_
      module procedure put_theta_info
   end interface

   private    AO_subspace_set_
   interface AO_subspace_set_
      module procedure AO_subspace_set
   end interface

   private    match_pair_
   interface match_pair_
      module procedure match_pair
   end interface

   private    make_overlap_matrix_
   interface make_overlap_matrix_
      module procedure make_overlap_matrix
   end interface

   private    subpopulation_
   interface subpopulation_
      module procedure subpopulation
   end interface

   public    numbered_chemical_symbols_
   interface numbered_chemical_symbols_
      module procedure numbered_chemical_symbols
   end interface

   private    make_atom_proportions_
   interface make_atom_proportions_
      module procedure make_atom_proportions
   end interface

   public    put_charges_
   interface put_charges_
      module procedure put_charges
   end interface

   public    read_bond_scale_factor_
   interface read_bond_scale_factor_
      module procedure read_bond_scale_factor
   end interface

   private    make_shared_population_
   interface make_shared_population_
      module procedure make_shared_population
   end interface

   public    process_keyword_
   interface process_keyword_
      module procedure process_keyword
   end interface

   public    put_
   interface put_
      module procedure put
   end interface

   public    atom_bond_analysis_
   interface atom_bond_analysis_
      module procedure atom_bond_analysis
   end interface

   public    read_analyse_all_atom_pairs_
   interface read_analyse_all_atom_pairs_
      module procedure read_analyse_all_atom_pairs
   end interface

   public    put_numbered_chemical_symbols_
   interface put_numbered_chemical_symbols_
      module procedure put_numbered_chemical_symbols
   end interface

   private    bond_analysis_
   interface bond_analysis_
      module procedure bond_analysis
   end interface

   public    set_defaults_
   interface set_defaults_
      module procedure set_defaults
   end interface

   private    skip_pair_
   interface skip_pair_
      module procedure skip_pair
   end interface

   public    create_
   interface create_
      module procedure create
   end interface

   private    no_of_occupied_ANOs_
   interface no_of_occupied_ANOs_
      module procedure no_of_occupied_ANOs
   end interface

   private    n_bf_
   interface n_bf_
      module procedure n_bf
   end interface

   public    read_junk_
   interface read_junk_
      module procedure read_junk
   end interface

   private    make_theta_info_
   interface make_theta_info_
      module procedure make_theta_info
   end interface

   private    make_theta_atom_populations_
   interface make_theta_atom_populations_
      module procedure make_theta_atom_populations
   end interface

   public    put_dipole_moments_
   interface put_dipole_moments_
      module procedure put_dipole_moments
   end interface

   public    put_bond_indices_
   interface put_bond_indices_
      module procedure put_bond_indices
   end interface

   private    make_projection_matrix_
   interface make_projection_matrix_
      module procedure make_projection_matrix
   end interface

   private    make_gould_ionic_orbitals_
   interface make_gould_ionic_orbitals_
      module procedure make_gould_ionic_orbitals
   end interface

   private    make_ionic_operator_
   interface make_ionic_operator_
      module procedure make_ionic_operator
   end interface

   public    put_theta_atom_pops_
   interface put_theta_atom_pops_
      module procedure put_theta_atom_pops
   end interface

   private    right_overlap_transform_
   interface right_overlap_transform_
      module procedure right_overlap_transform
   end interface

   private    n_bf_a_
   interface n_bf_a_
      module procedure n_bf_a
   end interface

   private    make_theta_angles_
   interface make_theta_angles_
      module procedure make_theta_angles
   end interface

   private    n_bf_b_
   interface n_bf_b_
      module procedure n_bf_b
   end interface

   private    make_ANO_matrix_
   interface make_ANO_matrix_
      module procedure make_ANO_matrix
   end interface

   public    read_ionic_cutoff_
   interface read_ionic_cutoff_
      module procedure read_ionic_cutoff
   end interface

   public    put_populations_
   interface put_populations_
      module procedure put_populations
   end interface

