   private

   public    solve_eigenproblem_
   interface solve_eigenproblem_
      module procedure solve_eigenproblem
   end interface

   public    beta_beta_put_to_
   interface beta_beta_put_to_
      module procedure beta_beta_put_to
      module procedure beta_beta_put_to_1
      module procedure beta_beta_put_to_2
      module procedure beta_beta_put_to_3
   end interface

   public    compress_to_triangle_
   interface compress_to_triangle_
      module procedure compress_to_triangle
   end interface

   public    beta_beta_plus_
   interface beta_beta_plus_
      module procedure beta_beta_plus
      module procedure beta_beta_plus_1
      module procedure beta_beta_plus_2
      module procedure beta_beta_plus_3
   end interface

   public    beta_beta_
   interface beta_beta_
      module procedure beta_beta
   end interface

   public    set_to_
   interface set_to_
      module procedure set_to
   end interface

   public    plus_scaled_product_of_
   interface plus_scaled_product_of_
      module procedure plus_scaled_product_of
      module procedure plus_scaled_product_of_1
      module procedure plus_scaled_product_of_2
   end interface

   public    antihermitian_reflect_
   interface antihermitian_reflect_
      module procedure antihermitian_reflect
   end interface

   public    antihermitian_fold_
   interface antihermitian_fold_
      module procedure antihermitian_fold
   end interface

   public    is_square_
   interface is_square_
      module procedure is_square
   end interface

   public    same_as_
   interface same_as_
      module procedure same_as
   end interface

   public    plus_product_of_
   interface plus_product_of_
      module procedure plus_product_of
      module procedure plus_product_of_1
      module procedure plus_product_of_2
   end interface

   public    beta_alpha_plus_
   interface beta_alpha_plus_
      module procedure beta_alpha_plus
      module procedure beta_alpha_plus_1
      module procedure beta_alpha_plus_2
      module procedure beta_alpha_plus_3
   end interface

   public    tri_size_
   interface tri_size_
      module procedure tri_size
   end interface

   public    change_basis_
   interface change_basis_
      module procedure change_basis
      module procedure change_basis_1
      module procedure change_basis_2
      module procedure change_basis_3
   end interface

   public    is_symmetric_
   interface is_symmetric_
      module procedure is_symmetric
   end interface

   public    weight_diagonal_
   interface weight_diagonal_
      module procedure weight_diagonal
      module procedure weight_diagonal_1
   end interface

   public    to_product_of_
   interface to_product_of_
      module procedure to_product_of
      module procedure to_product_of_1
      module procedure to_product_of_2
   end interface

   public    alpha_alpha_
   interface alpha_alpha_
      module procedure alpha_alpha
   end interface

   public    is_zero_
   interface is_zero_
      module procedure is_zero
   end interface

   public    alpha_beta_
   interface alpha_beta_
      module procedure alpha_beta
   end interface

   public    hermitian_reflect_
   interface hermitian_reflect_
      module procedure hermitian_reflect
   end interface

   public    plus_
   interface plus_
      module procedure plus
   end interface

   public    swap_columns_
   interface swap_columns_
      module procedure swap_columns
   end interface

   public    is_antisymmetric_
   interface is_antisymmetric_
      module procedure is_antisymmetric
   end interface

   public    alpha_alpha_plus_
   interface alpha_alpha_plus_
      module procedure alpha_alpha_plus
      module procedure alpha_alpha_plus_1
      module procedure alpha_alpha_plus_2
      module procedure alpha_alpha_plus_3
   end interface

   private    solve_eigenproblem_LAPACK_
   interface solve_eigenproblem_LAPACK_
      module procedure solve_eigenproblem_LAPACK
   end interface

   public    alpha_beta_set_to_
   interface alpha_beta_set_to_
      module procedure alpha_beta_set_to
      module procedure alpha_beta_set_to_1
      module procedure alpha_beta_set_to_2
      module procedure alpha_beta_set_to_3
   end interface

   public    to_inverse_sqrt_
   interface to_inverse_sqrt_
      module procedure to_inverse_sqrt
   end interface

   public    beta_alpha_
   interface beta_alpha_
      module procedure beta_alpha
   end interface

   public    to_product_with_diagonal_
   interface to_product_with_diagonal_
      module procedure to_product_with_diagonal
      module procedure to_product_with_diagonal_1
   end interface

   public    alpha_alpha_set_to_
   interface alpha_alpha_set_to_
      module procedure alpha_alpha_set_to
      module procedure alpha_alpha_set_to_1
      module procedure alpha_alpha_set_to_2
      module procedure alpha_alpha_set_to_3
   end interface

   public    beta_alpha_put_to_
   interface beta_alpha_put_to_
      module procedure beta_alpha_put_to
      module procedure beta_alpha_put_to_1
      module procedure beta_alpha_put_to_2
      module procedure beta_alpha_put_to_3
   end interface

   public    minus_
   interface minus_
      module procedure minus
   end interface

   public    trace_of_product_
   interface trace_of_product_
      module procedure trace_of_product
      module procedure trace_of_product_1
   end interface

   public    is_hermitian_
   interface is_hermitian_
      module procedure is_hermitian
   end interface

   public    alpha_beta_plus_
   interface alpha_beta_plus_
      module procedure alpha_beta_plus
      module procedure alpha_beta_plus_1
      module procedure alpha_beta_plus_2
      module procedure alpha_beta_plus_3
   end interface

   public    to_scaled_product_of_
   interface to_scaled_product_of_
      module procedure to_scaled_product_of
      module procedure to_scaled_product_of_1
      module procedure to_scaled_product_of_2
   end interface

   public    create_
   interface create_
      module procedure create
      module procedure create_1
   end interface

   public    is_antihermitian_
   interface is_antihermitian_
      module procedure is_antihermitian
   end interface

   public    beta_beta_set_to_
   interface beta_beta_set_to_
      module procedure beta_beta_set_to
      module procedure beta_beta_set_to_1
      module procedure beta_beta_set_to_2
      module procedure beta_beta_set_to_3
   end interface

   public    symmetrically_orthonormalise_
   interface symmetrically_orthonormalise_
      module procedure symmetrically_orthonormalise
   end interface

   public    make_hermitian_
   interface make_hermitian_
      module procedure make_hermitian
   end interface

   public    compress_to_square_
   interface compress_to_square_
      module procedure compress_to_square
   end interface

   public    dot_
   interface dot_
      module procedure dot
   end interface

   public    equals_
   interface equals_
      module procedure equals
   end interface

   public    from_diagonal_
   interface from_diagonal_
      module procedure from_diagonal
   end interface

   public    trace_
   interface trace_
      module procedure trace
   end interface

   public    to_unit_mat_
   interface to_unit_mat_
      module procedure to_unit_mat
   end interface

   private    solve_eigenproblem_ESSL_
   interface solve_eigenproblem_ESSL_
      module procedure solve_eigenproblem_ESSL
   end interface

   public    get_diagonal_
   interface get_diagonal_
      module procedure get_diagonal
   end interface

   public    destroy_
   interface destroy_
      module procedure destroy
   end interface

   public    to_sqrt_
   interface to_sqrt_
      module procedure to_sqrt
   end interface

   public    schmidt_orthonormalise_
   interface schmidt_orthonormalise_
      module procedure schmidt_orthonormalise
   end interface

   public    is_transposed_shape_of_
   interface is_transposed_shape_of_
      module procedure is_transposed_shape_of
      module procedure is_transposed_shape_of_1
   end interface

   public    make_antihermitian_
   interface make_antihermitian_
      module procedure make_antihermitian
   end interface

   public    alpha_beta_put_to_
   interface alpha_beta_put_to_
      module procedure alpha_beta_put_to
      module procedure alpha_beta_put_to_1
      module procedure alpha_beta_put_to_2
      module procedure alpha_beta_put_to_3
   end interface

   public    hermitian_fold_
   interface hermitian_fold_
      module procedure hermitian_fold
   end interface

   public    plus_scaled_mat_
   interface plus_scaled_mat_
      module procedure plus_scaled_mat
      module procedure plus_scaled_mat_1
   end interface

   public    uncompress_from_square_
   interface uncompress_from_square_
      module procedure uncompress_from_square
   end interface

   public    to_scaled_mat_
   interface to_scaled_mat_
      module procedure to_scaled_mat
      module procedure to_scaled_mat_1
   end interface

   public    alpha_alpha_put_to_
   interface alpha_alpha_put_to_
      module procedure alpha_alpha_put_to
      module procedure alpha_alpha_put_to_1
      module procedure alpha_alpha_put_to_2
      module procedure alpha_alpha_put_to_3
   end interface

   public    uncompress_from_triangle_
   interface uncompress_from_triangle_
      module procedure uncompress_from_triangle
   end interface

   public    is_same_shape_as_
   interface is_same_shape_as_
      module procedure is_same_shape_as
      module procedure is_same_shape_as_1
   end interface

   public    beta_alpha_set_to_
   interface beta_alpha_set_to_
      module procedure beta_alpha_set_to
      module procedure beta_alpha_set_to_1
      module procedure beta_alpha_set_to_2
      module procedure beta_alpha_set_to_3
   end interface

   public    trace_of_product_with_
   interface trace_of_product_with_
      module procedure trace_of_product_with
      module procedure trace_of_product_with_1
   end interface

   public    back_transform_
   interface back_transform_
      module procedure back_transform
   end interface

