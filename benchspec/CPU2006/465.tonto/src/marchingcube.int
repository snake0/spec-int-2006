   private

   public    no_of_edges_
   interface no_of_edges_
      module procedure no_of_edges
   end interface

   public    is_nearly_on_surface_
   interface is_nearly_on_surface_
      module procedure is_nearly_on_surface
   end interface

   public    has_right_face_on_surface_
   interface has_right_face_on_surface_
      module procedure has_right_face_on_surface
   end interface

   private    set_triangle_vertex_info_
   interface set_triangle_vertex_info_
      module procedure set_triangle_vertex_info
   end interface

   public    set_left_info_
   interface set_left_info_
      module procedure set_left_info
   end interface

   public    set_vertex_info_
   interface set_vertex_info_
      module procedure set_vertex_info
      module procedure set_vertex_info_1
   end interface

   public    read_iso_value_
   interface read_iso_value_
      module procedure read_iso_value
   end interface

   public    read_keywords_
   interface read_keywords_
      module procedure read_keywords
   end interface

   public    get_triangle_vertex_indices_
   interface get_triangle_vertex_indices_
      module procedure get_triangle_vertex_indices
   end interface

   public    get_edge_vertex_gradients_
   interface get_edge_vertex_gradients_
      module procedure get_edge_vertex_gradients
   end interface

   public    set_edge_vertex_info_
   interface set_edge_vertex_info_
      module procedure set_edge_vertex_info
   end interface

   public    put_vertex_index_info_
   interface put_vertex_index_info_
      module procedure put_vertex_index_info
   end interface

   public    interpolate_faces_
   interface interpolate_faces_
      module procedure interpolate_faces
   end interface

   public    set_case_info_
   interface set_case_info_
      module procedure set_case_info
   end interface

   public    read_interior_is_big_
   interface read_interior_is_big_
      module procedure read_interior_is_big
   end interface

   public    no_of_active_edges_
   interface no_of_active_edges_
      module procedure no_of_active_edges
   end interface

   public    is_nearly_on_surface_old_
   interface is_nearly_on_surface_old_
      module procedure is_nearly_on_surface_old
   end interface

   public    copy_
   interface copy_
      module procedure copy
   end interface

   public    set_iso_value_
   interface set_iso_value_
      module procedure set_iso_value
   end interface

   public    set_big_interior_
   interface set_big_interior_
      module procedure set_big_interior
   end interface

   public    get_edge_vertex_positions_
   interface get_edge_vertex_positions_
      module procedure get_edge_vertex_positions
   end interface

   public    has_upper_face_on_surface_
   interface has_upper_face_on_surface_
      module procedure has_upper_face_on_surface
   end interface

   public    put_bitmask_info_
   interface put_bitmask_info_
      module procedure put_bitmask_info
   end interface

   public    no_back_face_indices_in_
   interface no_back_face_indices_in_
      module procedure no_back_face_indices_in
   end interface

   public    is_on_surface_
   interface is_on_surface_
      module procedure is_on_surface
   end interface

   public    set_left_skip_bit_string_
   interface set_left_skip_bit_string_
      module procedure set_left_skip_bit_string
   end interface

   public    case_number_
   interface case_number_
      module procedure case_number
      module procedure case_number_1
   end interface

   public    destroy_
   interface destroy_
      module procedure destroy
   end interface

   public    set_n_pt_
   interface set_n_pt_
      module procedure set_n_pt
   end interface

   public    read_units_
   interface read_units_
      module procedure read_units
   end interface

   public    read_accuracy_
   interface read_accuracy_
      module procedure read_accuracy
   end interface

   public    set_cube_bit_string_
   interface set_cube_bit_string_
      module procedure set_cube_bit_string
   end interface

   public    has_left_face_on_surface_
   interface has_left_face_on_surface_
      module procedure has_left_face_on_surface
   end interface

   public    no_of_triangles_
   interface no_of_triangles_
      module procedure no_of_triangles
   end interface

   public    set_skip_bit_string_
   interface set_skip_bit_string_
      module procedure set_skip_bit_string
   end interface

   public    set_hessian_info_
   interface set_hessian_info_
      module procedure set_hessian_info
   end interface

   public    has_front_face_on_surface_
   interface has_front_face_on_surface_
      module procedure has_front_face_on_surface
   end interface

   public    get_edge_mean_curvatures_
   interface get_edge_mean_curvatures_
      module procedure get_edge_mean_curvatures
   end interface

   public    set_edge_bit_string_
   interface set_edge_bit_string_
      module procedure set_edge_bit_string
   end interface

   public    set_vertex_and_gradient_info_
   interface set_vertex_and_gradient_info_
      module procedure set_vertex_and_gradient_info
   end interface

   public    set_triangulation_info_
   interface set_triangulation_info_
      module procedure set_triangulation_info
   end interface

   public    no_upper_face_indices_in_
   interface no_upper_face_indices_in_
      module procedure no_upper_face_indices_in
   end interface

   public    set_front_info_
   interface set_front_info_
      module procedure set_front_info
   end interface

   public    is_outside_surface_
   interface is_outside_surface_
      module procedure is_outside_surface
   end interface

   public    process_keyword_
   interface process_keyword_
      module procedure process_keyword
   end interface

   public    put_
   interface put_
      module procedure put
   end interface

   public    set_side_length_
   interface set_side_length_
      module procedure set_side_length
   end interface

   public    set_defaults_
   interface set_defaults_
      module procedure set_defaults
   end interface

   public    get_edge_gaussian_curvatures_
   interface get_edge_gaussian_curvatures_
      module procedure get_edge_gaussian_curvatures
   end interface

   public    set_accuracy_
   interface set_accuracy_
      module procedure set_accuracy
   end interface

   public    read_side_length_
   interface read_side_length_
      module procedure read_side_length
   end interface

   public    create_
   interface create_
      module procedure create
   end interface

   public    triangulate_
   interface triangulate_
      module procedure triangulate
   end interface

   public    create_copy_
   interface create_copy_
      module procedure create_copy
   end interface

   public    set_gradient_info_
   interface set_gradient_info_
      module procedure set_gradient_info
   end interface

   public    set_below_skip_bit_string_
   interface set_below_skip_bit_string_
      module procedure set_below_skip_bit_string
   end interface

   public    read_junk_
   interface read_junk_
      module procedure read_junk
   end interface

   public    put_positional_info_
   interface put_positional_info_
      module procedure put_positional_info
   end interface

   private    interpolate_edge_info_
   interface interpolate_edge_info_
      module procedure interpolate_edge_info
   end interface

   public    set_below_info_
   interface set_below_info_
      module procedure set_below_info
   end interface

   public    set_hessian_eval_array_
   interface set_hessian_eval_array_
      module procedure set_hessian_eval_array
   end interface

   public    reset_
   interface reset_
      module procedure reset
   end interface

   public    has_lower_face_on_surface_
   interface has_lower_face_on_surface_
      module procedure has_lower_face_on_surface
   end interface

   public    set_front_skip_bit_string_
   interface set_front_skip_bit_string_
      module procedure set_front_skip_bit_string
   end interface

   public    has_back_face_on_surface_
   interface has_back_face_on_surface_
      module procedure has_back_face_on_surface
   end interface

   public    is_inside_surface_
   interface is_inside_surface_
      module procedure is_inside_surface
   end interface

